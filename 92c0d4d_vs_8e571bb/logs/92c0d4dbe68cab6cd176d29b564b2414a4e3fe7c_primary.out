cset: moving following pidspec: 2157
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.35530844 seconds)
loading group "string"... done (took 0.553626129 seconds)
loading group "linalg"... done (took 7.622541396 seconds)
loading group "parallel"... done (took 0.173320908 seconds)
loading group "find"... done (took 1.183569129 seconds)
loading group "tuple"... done (took 1.871729838 seconds)
loading group "dates"... done (took 1.277077249 seconds)
loading group "micro"... done (took 0.237400564 seconds)
loading group "io"... done (took 1.156454843 seconds)
loading group "scalar"... done (took 42.53444942 seconds)
loading group "sparse"... done (took 14.149125324 seconds)
loading group "broadcast"... done (took 1.133021362 seconds)
loading group "union"... done (took 15.10981361 seconds)
loading group "simd"... done (took 5.178540127 seconds)
loading group "random"... done (took 10.444564006 seconds)
loading group "problem"... done (took 2.085594599 seconds)
loading group "array"... done (took 24.954228302 seconds)
loading group "misc"... done (took 2.232527151 seconds)
loading group "sort"... done (took 3.860800157 seconds)
loading group "collection"... done (took 21.686827731 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.591840468 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.161695968 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.156332255 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.152156694 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.203548556 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.146809386 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.163973925 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.09957973 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.045321474 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.18140961 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.15713803 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.539585958 seconds)
done (took 5.373778052 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.26470369 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.097111585 seconds)
    (2/2) benchmarking "String"...
    done (took 0.10766323 seconds)
  done (took 0.927584246 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.079028291 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.149507003 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.097242021 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.079957847 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.097591466 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.079357206 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.097057277 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.079153957 seconds)
  done (took 1.404889217 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.089168688 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.100638614 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.083848002 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.100153964 seconds)
  done (took 1.097628586 seconds)
done (took 4.503920099 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.747060888 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.292753032 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.205434036 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.478237895 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.203076881 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.223067235 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.759708918 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.40346958 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.263621918 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.102914278 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.138896512 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.406676166 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.140926344 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.747208663 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.090676058 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.128947396 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.193449837 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.499892557 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082803122 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.111858284 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.119440797 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.14460358 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.130044504 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093848881 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.18939357 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081805444 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.201096599 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.112087547 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.081514256 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.283922541 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.203537143 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.755574329 seconds)
  done (took 11.383929393 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.114544083 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.138831444 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.100510668 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140260188 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.137695795 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.1028089 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085866856 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.099667398 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.126596132 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.180164579 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.133013586 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.125614574 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.098619486 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.084384389 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.11817922 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.249567542 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.123297678 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.10173895 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.102976999 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.090123027 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.141400577 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.116119618 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.11309745 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095534787 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169752005 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.227262378 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113830427 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.128361735 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.099970884 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.11649406 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145999183 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146550341 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.097481822 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082647347 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.176927951 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.127214218 seconds)
  done (took 5.29031137 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.142518788 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.196387924 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.125299557 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.176575651 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.161873635 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.082442268 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.148982547 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.099172355 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119000738 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.269534829 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.124612904 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.505555409 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.146416489 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.100771866 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102169814 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.084823933 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.10135464 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.710036062 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.160813205 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.121201329 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.118547988 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105150826 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.087394097 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.731998443 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098954144 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.08704924 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.1006699 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.06810412 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.166791874 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100871898 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.186532419 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.125715428 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085362331 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.138465167 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.212807124 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.110763107 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.138949702 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098649202 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.081649752 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.18412005 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.098938502 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.089754477 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.098535039 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.081981252 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.125626517 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13753849 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.138595225 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099811444 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.083941737 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.203068885 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.100129437 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.098291799 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.988532074 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.182407171 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.090357931 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.09906847 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.296544404 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.127530135 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100789136 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.079748755 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.300271616 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.195865931 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.102317151 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.081736801 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100868767 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.08263485 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.756680228 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081461267 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.152306211 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085128286 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.110637076 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085009546 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100454186 seconds)
    (73/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.077499947 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.111766814 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.107190813 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.101443321 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.100534595 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.083395147 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.100759372 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.08044301 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.102928766 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.109661546 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.225207198 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.083203869 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.100471287 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.079817281 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.122256012 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130535008 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.086587013 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.100326061 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133248934 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085405264 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.102069069 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.138744687 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083464969 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112922086 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103780716 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.145283369 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.083641579 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.167392858 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082074741 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.128492022 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.103189148 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117162846 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.116588692 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102108017 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.174575108 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.080321649 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.099654219 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.08255698 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.100330706 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082939096 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.10415626 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.112946287 seconds)
  done (took 24.560922125 seconds)
done (took 43.10088195 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.341761639 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.109173448 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.10899578 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.108765268 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.106081885 seconds)
  done (took 1.573729601 seconds)
done (took 2.342251228 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.303241724 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.183335723 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.099461274 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.175531832 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.097835001 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.172650018 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.16901901 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.097599829 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.231909682 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.098317385 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.169775819 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078778392 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.099076332 seconds)
  done (took 2.776459845 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097737466 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.122455623 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085666246 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114984029 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079746531 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.115183096 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.096497511 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.121437948 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.114034997 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088718712 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.097423077 seconds)
  done (took 1.900335829 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098410059 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117624512 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08513943 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114950669 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080115471 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.115676882 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.096132244 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.122836941 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.11456222 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089385964 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.098356051 seconds)
  done (took 1.899303832 seconds)
done (took 7.335836479 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.095014842 seconds)
  done (took 0.855641695 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.977414124 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.973526201 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.117475374 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.153892943 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.329792024 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.176900861 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.48464339 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.129524655 seconds)
  done (took 11.32657947 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.149235136 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.085712964 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.107051273 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.086195889 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.107560638 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.08856758 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.105062331 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.105905178 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.086981861 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.104849238 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.088012145 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.107299655 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.102683833 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.086697992 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.102969246 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.086947343 seconds)
  done (took 2.435143014 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.122885751 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.122133193 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.111696804 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.111940588 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.089180685 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.110049401 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.110356762 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.092080522 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.107902954 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.107238427 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092394157 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.109544855 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.107196454 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.082302321 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.110285564 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.110886995 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.08880584 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.110620122 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.110672297 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.092940969 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.110484538 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098497293 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.089827601 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.110138699 seconds)
  done (took 3.399360511 seconds)
done (took 18.784125988 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.166970188 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.11371926 seconds)
  done (took 1.051697455 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.100038604 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.116747138 seconds)
  done (took 0.990466945 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.101447736 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.099830536 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.125984434 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.113830562 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08347909 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.100630046 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.123595977 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.082897314 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.101057908 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.083121912 seconds)
  done (took 1.792430564 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.086780293 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.114128357 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.104742746 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.098137871 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.110237936 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.098329086 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.091995697 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.102569463 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.113780802 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079506076 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.105420812 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.118428472 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.089290013 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.120327677 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.109807575 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085482022 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.107473243 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.102808621 seconds)
  done (took 2.617397806 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.083614751 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.101076145 seconds)
  done (took 0.9568731 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.085135498 seconds)
    (2/7) benchmarking "second"...
    done (took 0.097757921 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083300406 seconds)
    (4/7) benchmarking "year"...
    done (took 0.100803602 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.096853191 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.079637578 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.097412195 seconds)
  done (took 1.413278183 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.46184313 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.140857335 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.271465265 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.086681861 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.125093844 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.312617324 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.10271586 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.086764431 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.108049966 seconds)
  done (took 2.533626326 seconds)
done (took 12.132863822 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.097703739 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.119803299 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.116387449 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.479970315 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.111510641 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.103757457 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.150754108 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.258484551 seconds)
done (took 2.222418815 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.148302774 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.620270167 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.445994408 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.242582888 seconds)
  done (took 2.094675754 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.421094738 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.103721598 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.087065917 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.085116379 seconds)
  done (took 1.484066006 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.083845871 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102989563 seconds)
  done (took 0.977330564 seconds)
done (took 5.49478403 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.118704981 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10319857 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.080094325 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.103509624 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.080503678 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.104382648 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.079582517 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.099456156 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.082147048 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.102300129 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.09935277 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.083949659 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.099939848 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08370175 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097208142 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081856804 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100985137 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.081145458 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098158294 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.081342013 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09791005 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083879628 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.098817558 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.081267926 seconds)
  done (took 3.053328154 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.105055651 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.102966651 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.107026343 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089445422 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.105964761 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.089126986 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.107909033 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.101906779 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.089635133 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.103882695 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103495308 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.088834276 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.10319993 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.087624733 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104232214 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.105295572 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.090516666 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102198318 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085882343 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.107275668 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.107081851 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083959609 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.105431324 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089354366 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.106923622 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105319085 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.086547732 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.102774915 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107097233 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.08828511 seconds)
  done (took 3.758182461 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.089161034 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.097708408 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081823814 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.106662279 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.081126963 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.101040671 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.081333138 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.099079154 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.081810794 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.099918649 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082384121 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.099469076 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.081485388 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.101203122 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.081670607 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.104302909 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.116955495 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.081550185 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.098453262 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.082118332 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.103024329 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.081226859 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.099007224 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.080938334 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.09942925 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.080163905 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.099480764 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.081109414 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.100058148 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.080439593 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.103022458 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083867335 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.099084716 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.086410493 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.104225531 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.080108601 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.103402096 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.080352807 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.101133529 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.097803948 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.081796126 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.098451667 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.081489776 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.105428088 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.081920071 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.101369447 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.082019805 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.101115271 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.082439753 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.10329449 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.080881495 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.100036116 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.082720053 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.100808565 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.084602012 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.100396733 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.099382095 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.081344367 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.099523478 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.081160855 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.09801099 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.081305894 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.101127591 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.081849699 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.115765301 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.088733283 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.099734324 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.082546715 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.101532782 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083233211 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.102702135 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.112539045 seconds)
  done (took 7.470177246 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.137415921 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.130879387 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083775855 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.102479161 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079856545 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.099829607 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.085385187 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100650044 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101150577 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088773213 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100145198 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.083227171 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102197392 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09671888 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101649163 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101300775 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.089413531 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098013501 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.081141775 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103306894 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081765067 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.104515034 seconds)
  done (took 2.949381803 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.217564502 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.111180873 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.149819384 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.112009023 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.086312658 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.111689697 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.105671205 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09036059 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106605993 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086088553 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106590554 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106370073 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086211369 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105427326 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.219807993 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089698398 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106914495 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087975751 seconds)
  done (took 2.88245618 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.097664385 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.102946898 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.10092637 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.104367064 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.103319263 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.087469636 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109410231 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11129471 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.088211876 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.103448446 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.093592072 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106710471 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.104537053 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085453174 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105634752 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084812753 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.10546621 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083808636 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113478463 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109075216 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089971787 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113188991 seconds)
  done (took 3.004521053 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101894857 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105957238 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.123808433 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088831164 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.099900287 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.083018653 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.110709457 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.084305727 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.112481191 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.104532613 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085174322 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.103688079 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.092584062 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103701087 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.109598771 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084918191 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.106081084 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.084751712 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105893702 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080211986 seconds)
  done (took 2.773586131 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106658338 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10588999 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.104582676 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095429106 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.104952214 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.085299214 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115135974 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.10525 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.085666108 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.131005963 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105953506 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085563544 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115718158 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110683241 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.103381021 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095404946 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114392666 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113742819 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.085676677 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106113048 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.130758367 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085447119 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.115173182 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.105241969 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.086170612 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.105660065 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104849418 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.092414546 seconds)
  done (took 3.706592421 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085446262 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102495858 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.083049423 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.100999693 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.082839191 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.100969058 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.082593229 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.102889818 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085134887 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.101008603 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.085102843 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.103218583 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.084257375 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.104033207 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084090273 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.103320549 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08414901 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.101633392 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082034037 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101719396 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.084478993 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104331275 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.084288762 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.102285847 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08147837 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.104423413 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081504304 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102066775 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083926696 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102097758 seconds)
  done (took 3.597988848 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.095136037 seconds)
    (2/2) benchmarking "in"...
    done (took 0.112172695 seconds)
  done (took 1.011999999 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.083723766 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119732589 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082241702 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.108760782 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08923521 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.106434474 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113316369 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08976641 seconds)
  done (took 1.599617588 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.100991272 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.116533497 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086816323 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.119886754 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.115729039 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.101874492 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.179481643 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.107145036 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.110065824 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084031901 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.119294983 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084779734 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.111415269 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085005973 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.110946413 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091828484 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.103167671 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.110801929 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.088650304 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.103503333 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086364985 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119599105 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087481041 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.10217362 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.106483458 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.095961267 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.118549595 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.086256422 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110073388 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.111970421 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.092068597 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.099066351 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.085377647 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.105725348 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.08275085 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.115462805 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122846857 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088523859 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.115745015 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10538185 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099026222 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.100827686 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.090292311 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.111962907 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115906255 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.087083379 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.104984643 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.080328261 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.102303379 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087628375 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.100967804 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085549915 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.100408913 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092625963 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.110680659 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116603428 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.08487478 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.107581006 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088301728 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.109097433 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091991974 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.108785458 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106857902 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.085289814 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.116128036 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.090139435 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.117767387 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.0996722 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.080421962 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.102789278 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.097072924 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.130731522 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.111766351 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.087493848 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106806781 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.083282114 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109802679 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086507702 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112424574 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.111148021 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.08694575 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.112962346 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093933084 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106596753 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.107029285 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.094730302 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.104786395 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.087775434 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.103257619 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.123269945 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.084828562 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.103411635 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.083401563 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.117710022 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089697609 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.105601184 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082823327 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.114451426 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.099133325 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.087521894 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10740871 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08689139 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.119179968 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.111366791 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.092369702 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.116530893 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.112222861 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086457306 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.109211268 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.082958692 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107339045 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.089104599 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.113546466 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.07983446 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10934306 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085493059 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.108348199 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.115260957 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.083657014 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.106925711 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093806553 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.11305001 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.104151135 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.083920352 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.108611934 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.086712504 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.1100062 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094078263 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.104879068 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.080186289 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.102530135 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.109212152 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.086518736 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.109803612 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.092156764 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110401671 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.079381468 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.105746953 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.110778278 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.096643251 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.107285894 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.086193069 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.11335283 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.106810146 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.086001647 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.113445411 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088818703 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.105451634 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.091501411 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.107969825 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.080585736 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110456131 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.108473244 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.085318918 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.110380525 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.09079841 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.109445716 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.106569473 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085407706 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.112777143 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087734358 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.105351322 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085822131 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.105313054 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.11745662 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.089994507 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.101545796 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.083418533 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.114717161 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.083450177 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.107039045 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084874768 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.109102218 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.106993884 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.084962546 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.106275982 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.088686514 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.118897903 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.110175367 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088443793 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.112425123 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.098105334 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.107001838 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.088553617 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.107808764 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107514776 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.088131947 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.116436769 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.09176954 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.112721969 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.109289217 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.084198423 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113281031 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094411309 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.105930313 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.083889077 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.106609435 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.109263618 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.093060882 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.110650109 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.088204267 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105346421 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085955185 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.111369145 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.10891783 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.0858968 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.105777687 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.091821375 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.106012759 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.112685389 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089106868 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.117865021 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08993441 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.101922856 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090016666 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105778121 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.112811356 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.082657074 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.104290523 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.086039205 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.107324164 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.085431828 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.110156942 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.080117538 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.115412257 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.114417146 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.08773699 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.106131658 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.087140187 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113241417 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.08825737 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111852743 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089286154 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.114396974 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11843869 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.085670418 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.110895674 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.098416535 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.107831619 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.100149516 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.092979923 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.105102797 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.087065836 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.106038192 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.08428744 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110605601 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.116598525 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.095948299 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.101119554 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.090009648 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.106260251 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.085905329 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.103954091 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.090744792 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.110922354 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.107358369 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094873729 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108852689 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.08736156 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111578931 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.085941155 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.108491234 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.107951422 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093114687 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.107990799 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.089765123 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.108182288 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.090026984 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.107023296 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.084341379 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.109873206 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.107359759 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.087666477 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113055496 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.086485712 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107929205 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.088782547 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.109286783 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107159429 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.088309078 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.10585321 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090635938 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107611818 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.087796247 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.11019667 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.081426562 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115679677 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.085508265 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.117101371 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.107840251 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.084327545 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.11447052 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.089563237 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.113581534 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.107829436 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.088550355 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.109322583 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.08686119 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.111359383 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093153925 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.106187309 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.118962054 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.096515995 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108198951 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.090082226 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.108562513 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.088171508 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.106994752 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.107780681 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.089273421 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.107425989 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.08777369 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.112432639 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.090337893 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.108977183 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088826713 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.109331444 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.107189788 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.089985521 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.100979918 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.087049069 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.106560996 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.087395695 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.119942506 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.107049761 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.091025351 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.105675269 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089657543 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.107931282 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.083957858 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.117063068 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.118340568 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.088071561 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115979228 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.086133449 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.110500792 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119671988 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.081318091 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.106390729 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.085975243 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.106079022 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095368337 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.109471565 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.097444102 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.109551827 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.116235146 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.085067951 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.108262013 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.086432409 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.1022815 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.085155932 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112829 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.090506661 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107272114 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.086922343 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.112979861 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108733324 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098372977 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.107560883 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.087486648 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.10935129 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.083695987 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.109044537 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.105950958 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.091060675 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.109421983 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.085863247 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.105290321 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.087374798 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.108896353 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.088413108 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.108553582 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.088573066 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.11585969 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106647463 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.090951947 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112172404 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.081574031 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.111936726 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.086725115 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.108687492 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.106211192 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.091279405 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111957868 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088589713 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.117803421 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.086399851 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.110003686 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108561751 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.085726388 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.107943625 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.087773171 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.108676816 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.086762736 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.109945104 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095747058 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.107475243 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.111384565 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08816322 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.108394502 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.096047957 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.110184484 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.09020393 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.11806475 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.111797153 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.089474277 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.117548637 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.090844346 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112148151 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108967096 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.089588778 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114519783 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.086654694 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.116242831 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.087014869 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.110759547 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.108772564 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.086246443 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108241393 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.087704954 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10747184 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.094089654 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.11061474 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.086242256 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.108936226 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.084798396 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.110831908 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112290863 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095997383 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.111625898 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090288589 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.104581306 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.084485507 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111003728 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.106131721 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.090204458 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.111733843 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094763336 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.111598095 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.088242306 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.108195347 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.118165629 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094900295 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.113332487 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.085383045 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.112677203 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.08930888 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.112834068 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.108542037 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.088595424 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109760042 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.092596507 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.111021207 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.087019499 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117423996 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.09019742 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.111656667 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.11021436 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.08981919 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.108577675 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.083695977 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.110093602 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.090164314 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115471967 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.089328578 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.109871478 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120549108 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.087974475 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.109208159 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09115079 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10949281 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.112468386 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.08424648 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.109561131 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089961227 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110311323 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.083980952 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.109009835 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.085731683 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.112273811 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.086180997 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.104862081 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120823233 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.098605718 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.112705348 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086923264 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.108686474 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.082313287 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.104713541 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.107332882 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090177458 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.111265797 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.100132361 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.108755026 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.08728731 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.104946324 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087811221 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113368627 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.112016641 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.085286623 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.1046691 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.087099607 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.113448925 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.093774022 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.108588356 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.087202891 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113627238 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.110394503 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.087054801 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.113612477 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.084864111 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.113234688 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122452542 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.091417997 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.11012012 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.095284396 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.118840663 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.089743841 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.105362686 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.109210213 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.092074538 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.108702073 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.089993628 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.110823022 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.126057205 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092130845 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.108629768 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.087191591 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.112120091 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.086964227 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.119311004 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088412953 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.11129682 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.113801153 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.091093758 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.119778728 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090342956 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.119995294 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.113017751 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.091515004 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.109546849 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08910377 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.108157876 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.087007783 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.112075571 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.110919728 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094926478 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.118863693 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.087597216 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122587413 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.119331951 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.093837906 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.106122473 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.087988354 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.109703146 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.082756509 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.111845459 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.086210801 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.108944415 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.106890827 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.090691403 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.10932871 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095363032 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.110143529 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.08978891 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.110475609 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.08177162 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.112413922 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.090415569 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.112804781 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.105197995 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.089574178 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.111195021 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.092938842 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.114603509 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.088658823 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.112244884 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.090054092 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.111419557 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.104987826 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.096449098 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108769002 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.091883415 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.109159119 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088925527 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.112764478 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091790485 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.117329389 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.110751099 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.09169239 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.123814574 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.091280506 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.108079834 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.105997148 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.094916564 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.107963638 seconds)
  done (took 61.130942292 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.154523621 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085644462 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105026985 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.084252678 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120637809 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105770186 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.085032635 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105813787 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085273787 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109439029 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.083879722 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105760908 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115983351 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.130729762 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098971771 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111357157 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082776341 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107743902 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.104404766 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086341635 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115787084 seconds)
  done (took 3.046109447 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.109961591 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.128533794 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.122214206 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.125493434 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094409694 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.123167474 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.121577851 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122088702 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.104491885 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11921075 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.125561098 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122128153 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.096752966 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.119072593 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.118320544 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098267631 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.126802555 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.116785349 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.122605024 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.100481171 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.121302116 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.121782253 seconds)
  done (took 3.421320183 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.089781294 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.109440813 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.090673329 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.10467653 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.088794006 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.105626289 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.092879546 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.109434183 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.091515116 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.109701578 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.086007374 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.110359467 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.111354744 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.083880664 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.109565864 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.086412014 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.161254418 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.11447852 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.087709572 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.112511719 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.081931216 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.113606491 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.105045728 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.084284128 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.108231409 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.093713239 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.111589819 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.086509413 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.110140515 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.086220575 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.110743544 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.085147243 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.113985534 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.109221749 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.088996448 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.1084059 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.088887867 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.109339897 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.084744495 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.107970476 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.08918728 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.106684758 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.088533904 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.112231268 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.08648877 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.108449613 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.089481894 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.111440465 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.103737117 seconds)
  done (took 5.804431122 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.109722968 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.17012871 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.091292957 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.151509406 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.129271825 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.119283784 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.092713211 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.150344174 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.110071701 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.086988275 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.129799022 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.12856414 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.110539095 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.093555886 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.118469886 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.110483287 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.091648026 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.110740318 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.114395018 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089616447 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.116613184 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.094322974 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.128482808 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.126407481 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.114795676 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.087610695 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.110998156 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.115322421 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.103218544 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.117305079 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.116438512 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.093914094 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.127960873 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.117450283 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08647895 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.114936354 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.130214102 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.110369101 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092774965 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.108358958 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.090802477 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.11650045 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.117171018 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.106325939 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.113262853 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.116287466 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.089249991 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.108821833 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.124690216 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.091475828 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.120421338 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.127370571 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.115791156 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.090541363 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.117026959 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.126933251 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.090788472 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.109938285 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.092212089 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.124831382 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.109092671 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.093264248 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.126471421 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.114280031 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.119817037 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.104978106 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.117977101 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.114471908 seconds)
  done (took 8.637364205 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100453348 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.118515797 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127589832 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.127927981 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.095549209 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.119119957 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.118318669 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.094921399 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.118367335 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.124304469 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.117662129 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.141792031 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.090954558 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.121757528 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.117719545 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096497123 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.118474187 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118436939 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096223692 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118900458 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.118434194 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.127247768 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.095979602 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.128141738 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.149211243 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.11284808 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.095143959 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.118855114 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.1289002 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.118186277 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.13058485 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.09680031 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.119114555 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.127814455 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.13097692 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.095646417 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.111184897 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117372733 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.096633299 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.119233756 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.113208973 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104837321 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.119625298 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.113552094 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.095843744 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.118448346 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.127191686 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.13120421 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.122107811 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.101241985 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.118366862 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.127783395 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117293475 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.096289131 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.128611869 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.155302907 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128526101 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127685112 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117696667 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.104761801 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.12900294 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.136702836 seconds)
  done (took 8.132262324 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.112906813 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.122744531 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.125340965 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.106137595 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088451359 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.11656891 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08786173 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.110295571 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.121082991 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.1006612 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.124828352 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.11714584 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096695293 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.1257172 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.116768277 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.119359023 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093607089 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.116855722 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.121461946 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09256057 seconds)
  done (took 3.094839867 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.099551213 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.131530776 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.089769688 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.120071435 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.115141794 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.096073976 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.115697757 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11446685 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092051606 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115610125 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100582549 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.124162459 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112936351 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096895937 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.124172718 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.119389634 seconds)
  done (took 2.651859152 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.103938313 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.125234066 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.129137185 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.09177384 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.111755857 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.084931987 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.114972519 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.108479206 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.086781459 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.129362343 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.08958875 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.116911582 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.112106896 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.088799873 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.108956221 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.092527323 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.10988046 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.08726947 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.1130727 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.127549426 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.10126146 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.112745539 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.112557907 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.092849598 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.113249449 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.095728648 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.114588916 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.109999857 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.088989925 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.112119308 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.091140155 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.120781492 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.108540583 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.089414572 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.110771128 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.087594099 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.112620219 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.090197038 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.116182561 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.11169596 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.089241732 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.112243317 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.090014027 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.114090472 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.085289055 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.114458721 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.107970757 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.098706386 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.110305559 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.091298664 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.113443565 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.091428793 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.115569171 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.123110035 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.093508573 seconds)
  done (took 6.660177176 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105430479 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.117223639 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085715343 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.111280435 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.093053282 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.115228497 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.116010363 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.094007766 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.114310637 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087579204 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.115332364 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.094488684 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.115013457 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115715856 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093292968 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116549583 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.086061714 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11580582 seconds)
  done (took 2.781781227 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.097400765 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.112716748 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.097634636 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.113165174 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.089268769 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.116746458 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08555374 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.112572608 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11021411 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.091358593 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112537622 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.092986635 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11184814 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.092236052 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.113886548 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089816583 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.116272943 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110873124 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.091531097 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10788418 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.093424749 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111377128 seconds)
  done (took 3.158840526 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.125036187 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.133672706 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.097805486 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.24881002 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.109135859 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.141793586 seconds)
  done (took 1.745940967 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116205761 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128449264 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.113182805 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113330817 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122796193 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092053357 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115949276 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115603163 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125215619 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107844976 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116840985 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125161817 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124820445 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10218785 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122165608 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122806727 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115620298 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093373134 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114077821 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136382376 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092335359 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126031326 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115215876 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091950036 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116792269 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124433686 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126210239 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128039801 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093236122 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125296764 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122430644 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092813703 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126756822 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128988435 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115488849 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102857264 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11652838 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13516128 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121597019 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103016907 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.117361875 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121245666 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102582713 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12158984 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125412381 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115371772 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099104249 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116980542 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115004184 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142853549 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09976951 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124533397 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122792651 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125733964 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101882429 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143984287 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129723488 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125585835 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122709116 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130840161 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124745066 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099383128 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126415178 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13018823 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122799297 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101352025 seconds)
  done (took 8.631760891 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108381873 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.134686125 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115946805 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129692537 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103347782 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116221518 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11542515 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093339941 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117234406 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114404137 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.16141207 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093663805 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125019098 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124678538 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092173366 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117911353 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116008992 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124411599 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093356692 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143709439 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11591982 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124943433 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123729223 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103065493 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130152606 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123317164 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11540017 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093241704 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116473603 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114489629 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099621488 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116078314 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125707773 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091578763 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126144345 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11606024 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092417874 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121934414 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116411422 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121253294 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102470815 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137041104 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116328299 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115363999 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107768578 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116205094 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115857923 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092200587 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117030962 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114186695 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107674607 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130078866 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130930129 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126250271 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116783919 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093273883 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116782955 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115705746 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093481177 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123793584 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124580861 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092332376 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143120031 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117148273 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116382998 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126194682 seconds)
  done (took 8.53891671 seconds)
done (took 164.033201697 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.235691313 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.217847752 seconds)
  done (took 1.344295969 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.093540312 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.145359974 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.101544592 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.178846725 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085548448 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.147986649 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.139770812 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.099100567 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.115096713 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.091466454 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.115167283 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.092223475 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.180792013 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.086551668 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.113242713 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.114536142 seconds)
  done (took 2.803543978 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.121461372 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.26999701 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.131735517 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.112047559 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.095656469 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.118388059 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.089476192 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.120143387 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.095101141 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.113465826 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.093700233 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.11565706 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.089010349 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.115671226 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.093811638 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.117932983 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.111744641 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.095512795 seconds)
  done (took 3.002493132 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.120520821 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.167384472 seconds)
  done (took 1.192631947 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.260571286 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.165571466 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.236473538 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.488517547 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.291503518 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.371086522 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.217167209 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.228106597 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.17871024 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.215883331 seconds)
  done (took 3.550956442 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.125632453 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.190979954 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.333652301 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.165719947 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.113490513 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.135423987 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.167087866 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.139544923 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.135083807 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.106849257 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.132069715 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.127565102 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.147501349 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.100219368 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.124820461 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.125518292 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.127860256 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.123189716 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.122792828 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101873122 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.149044581 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.090442427 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.125289133 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.121868862 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.103372099 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.129064207 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.113379983 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.090967742 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.125599591 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.099883135 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.122558664 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.134130487 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.127298254 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.163845034 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.131671389 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.167384365 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.126787427 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.097257408 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.124659604 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.095373774 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.128162991 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.127666051 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.133801006 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.104858443 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.11434598 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.103163421 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.115507889 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.08990826 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.124331699 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.127607631 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.100415531 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.123160903 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.163711355 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.129113076 seconds)
  done (took 7.87809212 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.821788738 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.166102686 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095657216 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.918871923 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.144173908 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110495099 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.80405806 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118215337 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.269832371 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.781428359 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.141404066 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.102111576 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.241637034 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.272606009 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.97553409 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.297027844 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.660569476 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.135095473 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.161610125 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.161884805 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.125318848 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121190282 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.140535402 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.432129089 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.125648351 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096184562 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.127209255 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.126664962 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.169439527 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.133089176 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.098896611 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.210064855 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.260210871 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.206186795 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.095423765 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.12061412 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094302744 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.202678527 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.28263215 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.204863904 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.187190662 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11715435 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.095268237 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.131333797 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.141515588 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091686691 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.194789835 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.184785302 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.178544506 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.123087765 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.126133561 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.104253874 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.129595839 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.173446761 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.130741861 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.333425341 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.327778964 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096365602 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130679926 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.133649468 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.254445408 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.131109208 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.237928039 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.148283234 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.198719697 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.121087798 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.833874246 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.179225532 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.120055636 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.101989771 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.128969984 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122854516 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.104860166 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.173177813 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.400214039 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132997578 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.121943086 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09588858 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.251909247 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.1081416 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120587177 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.170473744 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.124531991 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.128480733 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.109073707 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.131530777 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.177707979 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.268016752 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.107519909 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.128914347 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.12360184 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.108642529 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.124985148 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.225969548 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.231353765 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.171107459 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.244149988 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100697903 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.189024423 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.177554973 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12699201 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.181664141 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.127448326 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108506469 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130557046 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.228106476 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.154824972 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.130408318 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.100228036 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.126950409 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.156127133 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.134828851 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.104348339 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.202123933 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.464299423 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.17742599 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.118114356 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.136491575 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104240724 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.194259167 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103073845 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.277323999 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129636727 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.179350834 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.127108705 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.09339704 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.128985225 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.173677698 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130214248 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.105007256 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130559253 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.128062171 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.245307838 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.229762669 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129541207 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230418263 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.191416141 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.126503914 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.1803661 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130737102 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.177636785 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.128506818 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105338497 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125716823 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.845057946 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124898644 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.101156202 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.125029219 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.195836839 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092204614 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.133681683 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.133773927 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092426266 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.832946296 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.137033541 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.129600895 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.110128194 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.1264018 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.128274523 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.102579436 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.124805655 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.169972735 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.241669808 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.128408868 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.103404303 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.133835889 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.169659511 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.126980644 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.133384377 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.132822014 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.110746282 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.130603788 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.123212013 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.109260727 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191270916 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.166442406 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.23024384 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.576960716 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.121980385 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.133589556 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.214674966 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121446584 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.302163047 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126970837 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.214383756 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.197564853 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.105798958 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.326840108 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.174382043 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.19708314 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.136906758 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.183485945 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.118318189 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.126155962 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.175800557 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.119670385 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.102883703 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.171295117 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.13514493 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.132217312 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.993789381 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091231824 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.252397087 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.08873929 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.174830764 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122830198 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127981236 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.308379438 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098426261 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138634691 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.173304781 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.123773941 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.131854202 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.703359529 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.131381128 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.106598527 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.128145422 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.23524779 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.173020739 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.129038209 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126832114 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.10421862 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.195490142 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.22232326 seconds)
  done (took 46.086289315 seconds)
done (took 66.757537661 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.297963565 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.231725946 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.300215312 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.178320697 seconds)
  done (took 2.023111054 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.183917756 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.161411528 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.129517415 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.11720552 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.16129429 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.090873133 seconds)
  done (took 1.77557754 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.388627717 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.29746942 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.262224198 seconds)
  done (took 1.883556389 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.306556644 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.261184383 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.497927946 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.344833414 seconds)
  done (took 2.477266774 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.22115695 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.144096362 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.122400021 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.110520607 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.212063576 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.261030448 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.153073591 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.21605769 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.104714136 seconds)
  done (took 2.528729482 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.21147587 seconds)
done (took 11.836529237 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.310613398 seconds)
    (2/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.272449927 seconds)
    (3/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.238762617 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.209271616 seconds)
    (5/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.134513797 seconds)
    (6/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.238438556 seconds)
    (7/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.126285906 seconds)
    (8/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.127587757 seconds)
    (9/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.181596214 seconds)
    (10/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.10053015 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.137918052 seconds)
    (12/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.271005803 seconds)
    (13/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.206145004 seconds)
    (14/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.220900525 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.215446484 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.130986818 seconds)
    (17/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.184094122 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.130546607 seconds)
    (19/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.21588445 seconds)
    (20/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.109657809 seconds)
    (21/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.187827641 seconds)
    (22/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.082972093 seconds)
    (23/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.129545954 seconds)
    (24/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.217285935 seconds)
    (25/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.173970907 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.148283128 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.181906634 seconds)
    (28/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.135336057 seconds)
    (29/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.231981824 seconds)
    (30/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.100742355 seconds)
    (31/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.191559917 seconds)
    (32/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.113991758 seconds)
    (33/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.072145336 seconds)
    (34/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.165068896 seconds)
    (35/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.228210067 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.09922617 seconds)
    (37/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.151516333 seconds)
    (38/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.185191369 seconds)
    (39/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.197755756 seconds)
    (40/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.119208256 seconds)
    (41/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.119531558 seconds)
    (42/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.181011526 seconds)
    (43/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.102766426 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.147699485 seconds)
    (45/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.219247962 seconds)
    (46/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.218729956 seconds)
    (47/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.134410179 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.125287657 seconds)
    (49/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.095883225 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.143339531 seconds)
    (51/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.157190033 seconds)
    (52/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.09883928 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.091500851 seconds)
    (54/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.126435006 seconds)
    (55/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.072406338 seconds)
    (56/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.126036262 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.11875167 seconds)
    (58/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.149297661 seconds)
    (59/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.257842391 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.12033906 seconds)
    (61/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.100769299 seconds)
    (62/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.221026599 seconds)
    (63/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.099105082 seconds)
    (64/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.131585953 seconds)
    (65/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.073905625 seconds)
    (66/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.132013442 seconds)
    (67/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.206545094 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.147897366 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.122144956 seconds)
    (70/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.195818888 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.143250412 seconds)
    (72/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.117749244 seconds)
    (73/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.099772363 seconds)
    (74/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.187900495 seconds)
    (75/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.096642062 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.149121291 seconds)
    (77/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.230063878 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.150064241 seconds)
    (79/309) benchmarking ("sort", BigInt, false)...
    done (took 0.232292194 seconds)
    (80/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.102563813 seconds)
    (81/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.187825829 seconds)
    (82/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.093138241 seconds)
    (83/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.12441923 seconds)
    (84/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.207525665 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 0.09391302 seconds)
    (86/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.119702271 seconds)
    (87/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.104553078 seconds)
    (88/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.07093607 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.162082968 seconds)
    (90/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.137250211 seconds)
    (91/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.130237522 seconds)
    (92/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.190372943 seconds)
    (93/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.091046524 seconds)
    (94/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.12803895 seconds)
    (95/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.072492785 seconds)
    (96/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.2006498 seconds)
    (97/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.073851869 seconds)
    (98/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.19052157 seconds)
    (99/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.120590352 seconds)
    (100/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.132233853 seconds)
    (101/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.101465387 seconds)
    (102/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.131888877 seconds)
    (103/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.129183945 seconds)
    (104/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.087584742 seconds)
    (105/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.196046772 seconds)
    (106/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.077862891 seconds)
    (107/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.196818872 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.145690892 seconds)
    (109/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.132228394 seconds)
    (110/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.137319252 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.130138674 seconds)
    (112/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.11803732 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.15008627 seconds)
    (114/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.23562022 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.204859357 seconds)
    (116/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.150749386 seconds)
    (117/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.106130389 seconds)
    (118/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.101515915 seconds)
    (119/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.332869799 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.207497532 seconds)
    (121/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.126789242 seconds)
    (122/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.192923028 seconds)
    (123/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.099012719 seconds)
    (124/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.102852188 seconds)
    (125/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.127816747 seconds)
    (126/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.117786141 seconds)
    (127/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.203804848 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 0.220360591 seconds)
    (129/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.12354192 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.127811322 seconds)
    (131/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.09934386 seconds)
    (132/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.12790304 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.101092639 seconds)
    (134/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.129624352 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.098706319 seconds)
    (136/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.155448372 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.099168514 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.130163538 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.116451771 seconds)
    (140/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.108760576 seconds)
    (141/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.128398433 seconds)
    (142/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.108978774 seconds)
    (143/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.135535586 seconds)
    (144/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.140051385 seconds)
    (145/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.105305241 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.126563484 seconds)
    (147/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.07866721 seconds)
    (148/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.191561983 seconds)
    (149/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.100799161 seconds)
    (150/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.123579363 seconds)
    (151/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.170406059 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.092423349 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.126272064 seconds)
    (154/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.124265221 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.117781326 seconds)
    (156/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.073871251 seconds)
    (157/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.07339698 seconds)
    (158/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.11847256 seconds)
    (159/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.092783754 seconds)
    (160/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.127748802 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.196117632 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.177921473 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.102789257 seconds)
    (164/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.220013073 seconds)
    (165/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.073121075 seconds)
    (166/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.121950228 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.137841244 seconds)
    (168/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.111959138 seconds)
    (169/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.11908189 seconds)
    (170/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.122958493 seconds)
    (171/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.093442605 seconds)
    (172/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.10215826 seconds)
    (173/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.093490507 seconds)
    (174/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.099064938 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.166559228 seconds)
    (176/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.145880068 seconds)
    (177/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.212364357 seconds)
    (178/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.082095073 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.120614674 seconds)
    (180/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.097632414 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.121042469 seconds)
    (182/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.098025499 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.150452245 seconds)
    (184/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.131408578 seconds)
    (185/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.092892148 seconds)
    (186/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.111037452 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.092939538 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.125900387 seconds)
    (189/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.084595505 seconds)
    (190/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.120526217 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.103434149 seconds)
    (192/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.126598373 seconds)
    (193/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.072814487 seconds)
    (194/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.071959518 seconds)
    (195/309) benchmarking ("sort", Float32, false)...
    done (took 0.184527665 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.188220248 seconds)
    (197/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.145713328 seconds)
    (198/309) benchmarking ("sort", Float64, false)...
    done (took 0.155500014 seconds)
    (199/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.149372115 seconds)
    (200/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.098493768 seconds)
    (201/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.084568357 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.144712368 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.092914233 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.142899393 seconds)
    (205/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.072898355 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.147695051 seconds)
    (207/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.225369771 seconds)
    (208/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.074831526 seconds)
    (209/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.100477028 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.130438446 seconds)
    (211/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.07892006 seconds)
    (212/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.122300005 seconds)
    (213/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.107649374 seconds)
    (214/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.100275218 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.122838026 seconds)
    (216/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.10924185 seconds)
    (217/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.072860397 seconds)
    (218/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.09850995 seconds)
    (219/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.095605137 seconds)
    (220/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.124456208 seconds)
    (221/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.10005253 seconds)
    (222/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.126582345 seconds)
    (223/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.092493988 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.202518113 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.189212431 seconds)
    (226/309) benchmarking ("sort", Int8, false)...
    done (took 0.200222111 seconds)
    (227/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.097876596 seconds)
    (228/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.099952535 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.115738739 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.19824739 seconds)
    (231/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.201033393 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.146782415 seconds)
    (233/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.09392058 seconds)
    (234/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.228253559 seconds)
    (235/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.071980368 seconds)
    (236/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.189353824 seconds)
    (237/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.126061238 seconds)
    (238/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.07504432 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.1479851 seconds)
    (240/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.100207151 seconds)
    (241/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.126453582 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.119328156 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.12035208 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.093958961 seconds)
    (245/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.120610082 seconds)
    (246/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.099986265 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.14414445 seconds)
    (248/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.072368325 seconds)
    (249/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.110916655 seconds)
    (250/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.094493158 seconds)
    (251/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.100940639 seconds)
    (252/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.148504649 seconds)
    (253/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.228017944 seconds)
    (254/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.120656139 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.093431768 seconds)
    (256/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.072401382 seconds)
    (257/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.118749494 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.128228582 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.143418887 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.172542307 seconds)
    (261/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.132518712 seconds)
    (262/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.102153299 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.099949653 seconds)
    (264/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.12620387 seconds)
    (265/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.074686839 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.127892694 seconds)
    (267/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.07503567 seconds)
    (268/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.191782174 seconds)
    (269/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.096195878 seconds)
    (270/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.120793443 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.093663381 seconds)
    (272/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.124038752 seconds)
    (273/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.076546538 seconds)
    (274/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.097997402 seconds)
    (275/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.0968076 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.118409434 seconds)
    (277/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.074337717 seconds)
    (278/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.073544012 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.127743383 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.168887839 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.092115315 seconds)
    (282/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.120898964 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.093286957 seconds)
    (284/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.139380401 seconds)
    (285/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.101294563 seconds)
    (286/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.099646166 seconds)
    (287/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.073396397 seconds)
    (288/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.117185928 seconds)
    (289/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.076373812 seconds)
    (290/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.073602124 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.148504022 seconds)
    (292/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.098313772 seconds)
    (293/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.100156903 seconds)
    (294/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.073961471 seconds)
    (295/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.083317542 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.120399731 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.092826467 seconds)
    (298/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.12700138 seconds)
    (299/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.074111965 seconds)
    (300/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.119692578 seconds)
    (301/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.073756561 seconds)
    (302/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.136313126 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.09907978 seconds)
    (304/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.236573251 seconds)
    (305/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.12524983 seconds)
    (306/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.230829881 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.120985306 seconds)
    (308/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.111590436 seconds)
    (309/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.094791312 seconds)
  done (took 42.809816482 seconds)
done (took 43.749148585 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.108047 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.160243715 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.101667225 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.147449053 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.133699313 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.099171604 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.128958917 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.104077445 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.135056238 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.135944364 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.105469628 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.102947473 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.104019278 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.130643324 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.103284592 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.152396524 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.13285077 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.101066648 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.130477183 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.09305018 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.130168958 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.092900343 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.122744676 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.076197345 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.133585716 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.100591435 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.128288817 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.129803398 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.094159296 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.119650403 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.098378609 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.127347435 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.093850203 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.134298883 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.100184469 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.130333922 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.103529915 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.131962866 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.093942632 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.121752725 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.127420724 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.094998216 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.126889324 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.10268678 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.126499296 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.100050301 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.128769563 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.105935131 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.152529388 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.128183148 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.102407503 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.134110641 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.103198967 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.131061577 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.096918492 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.130715063 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.098282942 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.152431099 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.130150258 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100343774 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.128817804 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.101676167 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.12744888 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.101533835 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.129834644 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.131184773 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.106038579 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.127021101 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.104156485 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.126568241 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.093466918 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.130981765 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.096071046 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.121549755 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.102889331 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.134228937 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.118161019 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.100886364 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.127126615 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.100190607 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.119826663 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098258736 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.121777238 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.100513903 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.123868405 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.076778685 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.123693362 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.101496004 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.119650859 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.103447407 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.127103256 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.101400558 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.122424567 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.106547565 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.121786541 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.099033953 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.122355248 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.093274523 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.124121131 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.0970289 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.121838728 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096498581 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.130530584 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.094227775 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.128152482 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.133270422 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.095185887 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.126922121 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.093613711 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.121014108 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.108936995 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.131767515 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.093085201 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128290079 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.091988167 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.129548334 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.092709852 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.12243555 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.093005954 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.12214554 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.099289574 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.12192395 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.123280496 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.103019178 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.135022712 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.093925473 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.12454103 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097692872 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.121141939 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.10044456 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.121659653 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.094544979 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.123933985 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.085023925 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.124339096 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.095064376 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.128792542 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.097982841 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.129661152 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.09543794 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.131104188 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.098256516 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.128711952 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.099012469 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.121750955 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.080902005 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128366632 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096766466 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.123582235 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.093619615 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.123343559 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.09397838 seconds)
done (took 18.356710927 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.095553257 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.199518486 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.163249403 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.153747401 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.115244861 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.122771257 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.133086652 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.127829354 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.124800615 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.15469634 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.117992546 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.145185907 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.160751364 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.094133079 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.122128964 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.099192195 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.123487911 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.110049794 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.157858866 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.143900919 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.17712422 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.092807145 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.158316198 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.148130654 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.131797185 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.111941501 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.122464394 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.098584196 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.125023492 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.120030871 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.145813188 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.124558027 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.097019358 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.144768818 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.112772541 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.131673276 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.093503751 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.131105368 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.093176082 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.123435989 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.153165942 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.143889754 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.101922069 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.127925025 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.098490834 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.124251629 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.096188264 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.132646055 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.105575139 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.128488113 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.137696665 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.167874343 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.09877058 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.13341762 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.093112527 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.134821058 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.131528313 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.098113527 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.122063844 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.097903371 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.121678685 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.099473242 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.139811307 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.152372162 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.099907343 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.133732867 seconds)
  done (took 9.314138515 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.11323605 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.151191777 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.112672512 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.143170164 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.12214493 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.095509755 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.143995324 seconds)
  done (took 1.88643951 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.096456769 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.144996351 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.119764423 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.148919115 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.142862018 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.117718949 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.134334837 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.095038993 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.143388957 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.095208566 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.147913444 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.164473063 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.096758582 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.132072841 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.149413253 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.096146969 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.149504481 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.095513189 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.128719367 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.12001292 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.12824341 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.146332865 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.098319582 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.123625261 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110998999 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.125007123 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.173731496 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.102414393 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.12520725 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.099324429 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.122264421 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.178601558 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.109831166 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.139082595 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.121743221 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.112474406 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.138764167 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093944006 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.14062586 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.101207356 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.14027085 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.096315794 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.126348754 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.093158848 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.130256825 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.133858319 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.097777269 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.124563475 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.099267956 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.145436665 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.09710889 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.138552937 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.095143546 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.12968729 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.096342857 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.132092817 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.133680792 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.098430609 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.14744239 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.098249082 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.142232257 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.112509533 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.1402102 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.141922572 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.098772788 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.139332877 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.110026706 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.128511177 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096719713 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.129128305 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.141667807 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.096088807 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.125311043 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.107963632 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.126187256 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.120576096 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.149569319 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.124262032 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.109269552 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.123802964 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.09699219 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.12379987 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.121085438 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.129638236 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.096001992 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.129711779 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.098348628 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.123243736 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.095119873 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.128660498 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.094050633 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.127347863 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.1260444 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.099369161 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126286186 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.114618027 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.126284786 seconds)
  done (took 12.794012319 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.098330676 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.12446375 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.099719692 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.12483522 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.097878066 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.125420072 seconds)
  done (took 1.690975664 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.123570932 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.128897478 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.111199409 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.133149338 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.170097092 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.139304962 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.113682528 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.134972177 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.115315116 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.139704476 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.141043245 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.112592792 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.148656583 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.131673663 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.112092442 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.132692207 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.140366079 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.109237657 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.138201214 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.103902295 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.150728891 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.132379986 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.104343675 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.144905385 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.128450941 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.104400632 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.135879701 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.11074166 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.14048242 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.133528584 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.104599517 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.129596383 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.103988483 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.134559577 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.141572314 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.103687484 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.132995597 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.129533221 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.109024599 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.130011058 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.112585351 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.133919962 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.137561522 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.101642402 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.134895125 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.131617804 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.103021892 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.136893605 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.139101431 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.102778 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.13044382 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.103377688 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.13035854 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.101845808 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.133316972 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.134792864 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.101759959 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.141603717 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.131069081 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.105327183 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.128890766 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.100548772 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.135383499 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.128864282 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.113932363 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.130285089 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.103931895 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.133623194 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.13230125 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.103801243 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.131576355 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.100063266 seconds)
  done (took 9.997391233 seconds)
done (took 36.686126335 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.722764593 seconds)
  done (took 1.736012961 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.757823508 seconds)
  done (took 1.773188086 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.52841812 seconds)
  done (took 19.546907818 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.54374577 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.613632248 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.833188683 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.184975489 seconds)
  done (took 3.193016698 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.009723404 seconds)
  done (took 2.050441202 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.314370989 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.276202895 seconds)
  done (took 1.612177726 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.81273593 seconds)
  done (took 1.842091409 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.422452449 seconds)
  done (took 2.448018607 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.352443791 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.195682596 seconds)
  done (took 1.581969139 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.575531998 seconds)
  done (took 1.60909532 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.586918766 seconds)
  done (took 8.625419146 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.274047119 seconds)
  done (took 1.318474528 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.316272108 seconds)
  done (took 1.350124374 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.7879508 seconds)
  done (took 4.825805299 seconds)
done (took 54.542516166 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.106968672 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.137471416 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.103625472 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.126868905 seconds)
  done (took 1.501956657 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.109675661 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.13179397 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.108106328 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.131690817 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.136321438 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.104887959 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.134013567 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.108513112 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.130863127 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.104167937 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.132650895 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.130906003 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.107323895 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.133775592 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.100954856 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.13542559 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.107766049 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.13257746 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.132857335 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.103133876 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.129202182 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.1060598 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.136256643 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.101376425 seconds)
  done (took 3.931006988 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.10886513 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.129953676 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.105159577 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.12894926 seconds)
  done (took 1.52156672 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.108588693 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.153850655 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.148240039 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.104434298 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.152145217 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.14068104 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.093624544 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.121568267 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.095151474 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.131363021 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.092049751 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.158864076 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.146969375 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.103082637 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.135582171 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.088113358 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.11931745 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.139125211 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.100686618 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.133961526 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.098631911 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.13798409 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.097154232 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.153143417 seconds)
  done (took 3.996893539 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.168526345 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.162862264 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.149186971 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.102785405 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.167747728 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.153041033 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.095317633 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.153410831 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.095009496 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.143587327 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.129927624 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.142973718 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.140363526 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.095143196 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.126588859 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.094934069 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.140830262 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.139572553 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.098116051 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.157230954 seconds)
  done (took 3.707373896 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.106392983 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.128795716 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.096705546 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.127632063 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.107520009 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.131110777 seconds)
  done (took 1.747591773 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.099576047 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.124863625 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.098771711 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.124885343 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.102606137 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.125886698 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.097308556 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.125719993 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.097566756 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.126691954 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.097327657 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.12464065 seconds)
  done (took 2.394800338 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.493862093 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.102484996 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.132187326 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.125178714 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.104603866 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.125616764 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.111137901 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.130638411 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.152891919 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.097673635 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.125070539 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.100188483 seconds)
  done (took 2.849061521 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253107108 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138118991 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312329689 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205683684 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173682719 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184222795 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165149615 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178654359 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.241726317 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170554187 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22325544 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237988701 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136160003 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235686822 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121304292 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.158242118 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24261148 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23553606 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167599291 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.250763162 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215643808 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179734312 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193617634 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166146942 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151621761 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183370194 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.133412879 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112736848 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25413873 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193347009 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2342762 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177571102 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159674605 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230865512 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267759839 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242592903 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203848 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148214369 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.157144885 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.181159147 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.288939067 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152060053 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.255762723 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173917817 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114944919 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24000415 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182777409 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.189569238 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.163637437 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15051109 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214459296 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25883828 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.207904326 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151792621 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176230265 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174639577 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.18138675 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165403805 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272560266 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215633692 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19353434 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.132608439 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159176806 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205434784 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19627906 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.181079793 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.225665164 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157988854 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207120772 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.202344564 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182383192 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235897102 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.199972307 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152314364 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184099667 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189637866 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184646034 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274221437 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191448117 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.134273879 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182084295 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162785466 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142316622 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.178024572 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137558957 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229307085 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16419523 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.14708911 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176155915 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175136016 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173601564 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214898231 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235220506 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130139305 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.122911975 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169238166 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.168151931 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204688159 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152180386 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173726749 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173503298 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.141370678 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19135377 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.105807078 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218531619 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.100599717 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190508973 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19841514 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.139285246 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170896763 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166639012 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.160850406 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192672838 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213349933 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153785085 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145018093 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222227719 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188609083 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.162616784 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193263798 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.244769266 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.124143822 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162086444 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24384614 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231309499 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153351372 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247283154 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167385545 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117705451 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.145906857 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191816302 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170086998 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.175383763 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145197052 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.195635132 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254853365 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.108456629 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150805502 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202804269 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145231789 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143219624 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174611482 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16052199 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.121549173 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.159229999 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.16352249 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195031892 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190468613 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16595626 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178939157 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162822667 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268325636 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153177424 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.161616519 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161639291 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.102014072 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.237439735 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21155168 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142094804 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219125527 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.186441482 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168854873 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183884036 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147528045 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191491991 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141697873 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.102437467 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236423684 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179065731 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175349446 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.210870351 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167958765 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.195822218 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.193733396 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215566971 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189828598 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.17627237 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172375719 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.120551936 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173187418 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180606494 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.135385438 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.154228011 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.115382289 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168833909 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156413014 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14629653 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212066562 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214315975 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131400505 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172781896 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1628253 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194598192 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.140956452 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191465502 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.190493615 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160120792 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.240812689 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207353184 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200794892 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155334185 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249355927 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.102475067 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136039525 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.153492682 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18686 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117111175 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148227863 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180803775 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194134738 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229113497 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190238844 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175496835 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192425205 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206260764 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.102973821 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.182369716 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22679879 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188700018 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.175263096 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152276743 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.164835034 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189457074 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169645799 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274267892 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180002941 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190189568 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256383467 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.16103661 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114706489 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164623624 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199203453 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166482922 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.220799307 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131304752 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152994551 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17469747 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.145385857 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173600881 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197805549 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177398555 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237344114 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.162836195 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203034482 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139413127 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17927539 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170957123 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17788257 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.090743455 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190770988 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249456804 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160663831 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183306901 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207086818 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143994428 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.191200697 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227608509 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24185887 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149396797 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170855677 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141625323 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177739811 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215292871 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191369833 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173680044 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203721314 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17033426 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.118595825 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152570412 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164408258 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165923315 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.115175642 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.161507979 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.219686398 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.121541011 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235045543 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173155653 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171237057 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185201497 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.129978504 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.157975422 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163533312 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262938887 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189637047 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228993741 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.163622819 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.19278591 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251544422 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106444555 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145327663 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.145640684 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192486355 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147518611 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205594955 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.15930277 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169009323 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194258861 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207919917 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153209576 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.100793353 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170473457 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187030835 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178157757 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165522953 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.172481788 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.253150756 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.12512244 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146177414 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185355138 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171368354 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160720953 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21081529 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.088191294 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162261494 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140642717 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114817064 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179505819 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255222753 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.14849603 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.172282596 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205602451 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173527425 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174184297 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156109233 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123807836 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168703081 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236086413 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196453742 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.143513161 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16455433 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179676878 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198882333 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162861251 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.146518839 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216962448 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237129084 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.211961636 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.154302209 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181796769 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181505261 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16967666 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200781316 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148468467 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219159827 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148155023 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243019873 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16588719 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155403766 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190678569 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.128965544 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15750035 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233066457 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188177448 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117698408 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146436513 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18083573 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1890654 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167994779 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.136797222 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185937437 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.132940069 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203546857 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.279471117 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145896861 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165437895 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13032865 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146932773 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164919134 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162286391 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150287567 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.149082802 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246658259 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.148567046 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204778502 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248148186 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186546097 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188648331 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157478771 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.706856048 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.141982029 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209490627 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169097321 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221116896 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164991046 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185122315 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172685747 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182648245 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238697939 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173544652 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.243595773 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208801026 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.190633743 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145816788 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171523647 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175708912 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.158817794 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165890844 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180821814 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172927148 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.165462977 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.19052581 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183076573 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.146244136 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122370267 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244039346 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167354557 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201553645 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192930488 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151721445 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186346308 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201337875 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1470927 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.195232466 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255535973 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153747161 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13284025 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.147518831 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.169342431 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.279464539 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.105426655 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247196368 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189263126 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172327539 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180648457 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.161390128 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202545316 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170861615 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220925859 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127099155 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.195987038 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131645896 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142352957 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.134783718 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155570402 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170326864 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.152440955 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170778329 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.14837846 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195115309 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.126326275 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151117756 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165327184 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206165438 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228191222 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.152572643 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147443343 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175435744 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164379484 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.189834401 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192023764 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.148605581 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116472866 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.149748656 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.17579225 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.122190531 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16475477 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159523967 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174706014 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251824191 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.118703193 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.293261294 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153207937 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166855093 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.099319672 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.144972456 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163468872 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128543815 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171374312 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164024629 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.279031733 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.159711706 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.114324196 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161161616 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.138605539 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145895751 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143093006 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19736293 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180755689 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147448433 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.082650014 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161453127 seconds)
  done (took 87.157034752 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.185394103 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.151318269 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.171699042 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.2212624 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.202924097 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.290669186 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.238900072 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.281249657 seconds)
  done (took 2.874386405 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.10297302 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.150747278 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.16515446 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.144770141 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092383697 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.121562576 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.343755292 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.144411206 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.092539043 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.143759711 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.151012458 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.121229021 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.52905256 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.132283006 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.130242954 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.089376977 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.120345867 seconds)
  done (took 3.902431068 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.482870004 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.759674825 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.492448488 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.129447471 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.345731821 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.139043067 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.04653237 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.220892887 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.096623704 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.508826394 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.775328996 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.187730172 seconds)
  done (took 19.317929919 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.106078155 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.131652676 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.11760562 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.148619832 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.105118236 seconds)
  done (took 1.743966166 seconds)
done (took 137.676053354 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.112172869 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.436699927 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.08010682 seconds)
  done (took 1.689423681 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.117796237 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.149768198 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.118884483 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.15003814 seconds)
  done (took 1.686308427 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.107503952 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.136725187 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.11055621 seconds)
  done (took 1.496599 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.327839075 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.193785214 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.14681802 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.113669203 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.131276598 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.104133824 seconds)
  done (took 1.487066878 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.105716021 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.13590814 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098609068 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.132637105 seconds)
  done (took 1.616226057 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.102972574 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.079187994 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.113006411 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.083617139 seconds)
  done (took 1.516442728 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.121967519 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.136782872 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104890147 seconds)
  done (took 1.508203757 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.13979023 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.147544917 seconds)
  done (took 1.433309498 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.115047482 seconds)
  done (took 1.254621258 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.128579368 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.17592275 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.201148441 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.17739658 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.245596084 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.171699926 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.143230041 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.115975765 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.135152412 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.1461401 seconds)
  done (took 2.787047627 seconds)
done (took 18.400249402 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.110770737 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.427411343 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.415399079 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118450815 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.726338214 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380953156 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.037041786 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.155884359 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.172699406 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093617562 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.142358669 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.675743466 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.027536166 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.392478929 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.984423765 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.470517264 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.706890242 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095316372 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12190185 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095001166 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.019778542 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09272339 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12463013 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092604724 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.707166314 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.428215442 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096337986 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.471650352 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093611021 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.130545199 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383424067 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125771553 seconds)
  done (took 17.24759171 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.105924941 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.180127937 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.099529488 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.141213227 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.126064615 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096376116 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.127833527 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094802366 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183026134 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12547722 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112507765 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.125038441 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127817223 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.097064026 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.144742871 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.098100184 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.134642508 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093250625 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.124203405 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123021161 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113973236 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.123687845 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096051222 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.123496995 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094894887 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.138631181 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124293467 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.094800908 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.123320162 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100632295 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.130606763 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095555666 seconds)
  done (took 4.969427121 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.151242988 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.193368524 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.138073555 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127988597 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.174335259 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.127546148 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.202577558 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119610741 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.187728279 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.131014577 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.144103338 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.095340974 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.161137118 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.131279118 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116599196 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.123777976 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097755155 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12467704 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093130054 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.126007409 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141738587 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094278691 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.126788389 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093901599 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.125323061 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108477837 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.126372057 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122688955 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.0949218 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.129231836 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.101832945 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.127038826 seconds)
  done (took 5.313152541 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.10470397 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.135446763 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.11406139 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.150083348 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.104572208 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.138645847 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.105864682 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.134875263 seconds)
  done (took 2.137460771 seconds)
done (took 30.809384018 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.122254158 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.139513386 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.11691282 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.14686745 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.111785513 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.145643572 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.100051261 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.146720582 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.147040911 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.112778887 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.149676505 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.101192521 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.133365753 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.094885078 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.13762662 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.100895592 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.140718393 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.109912449 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.143997056 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.142122366 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.096351098 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.138355207 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103715645 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.138670084 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.107860948 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.143726734 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.142686499 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100687095 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.128481262 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.098542686 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.135136068 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.114413434 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.136188879 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.11520439 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.139257861 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.10716369 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.13331331 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.098425879 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.140049743 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.134506885 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.101963626 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.138012536 seconds)
  done (took 6.375901022 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.118438314 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.154042446 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.115084696 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.089600434 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.1311176 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.087610165 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.145421158 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.086668224 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.116363516 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.110182233 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.082365842 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.116578192 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.0818031 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102995505 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078972477 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076168381 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.110347037 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077568878 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077130981 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.108181328 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.083583422 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.077268033 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.114222949 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.082274196 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.080850469 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.11582638 seconds)
  done (took 3.77714355 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.110921372 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.14788611 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.123221596 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.198879606 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.175283481 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.109404672 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.146293567 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.150669582 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.110319695 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.122120505 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097758889 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.152036767 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111297765 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.131563472 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092678932 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.140913095 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.137747483 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.096022988 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.13111753 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.114470796 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.142057319 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103401758 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.146538519 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.134901412 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.094272653 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125695513 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.098651289 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.138088931 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.102503385 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.14070138 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096979494 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.128180185 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.124471233 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.106796208 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.131713606 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094744365 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.145329038 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102392056 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.13415758 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092683198 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.128651182 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.123888421 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.116243655 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.170674043 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.092316506 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.132288162 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.100301653 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.144216805 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.123529074 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112235223 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.134363466 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092430616 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.128406932 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091842394 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.125170289 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107205462 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.127354423 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.125264268 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.104980624 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.127365201 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.107545591 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.128422654 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.111549639 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.131213432 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099951836 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.123803028 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093397211 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.124483157 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.146392761 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.09655293 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.166850601 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.102001996 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.134531304 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.132732005 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.102931379 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.12969487 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.09454215 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.140126735 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.103779214 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.131678907 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101822538 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.12936264 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.094989253 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.144181044 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.125448866 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.096337761 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.12424607 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.101123404 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.126375832 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095635203 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.139264624 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.093272441 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.129078025 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.11052743 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.124707652 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.12440554 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.102063601 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.129411145 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.094107019 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138428305 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098571836 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.126410624 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.102972127 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.125487102 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.126028581 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.104270532 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.128787751 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.093229646 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.129106833 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.100810118 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.125954374 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094451715 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.128608444 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.095253297 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.135144495 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.099417593 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.129764037 seconds)
  done (took 15.231805365 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.246741921 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.221810013 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.241931751 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.265336026 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.138597156 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115721746 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.220148295 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.158480275 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.125906417 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.162278695 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.164061853 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.184005901 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.144128336 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.190166698 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.145454653 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.130682174 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.113246216 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.167526123 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.219462324 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.297192623 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.114207896 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.134723659 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.16476082 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.16314678 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.106974142 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.136510523 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.142348549 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.106708338 seconds)
  done (took 5.897786633 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.118289372 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.170395566 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.108194667 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.160442431 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.163964536 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.102248954 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.14235853 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.103729491 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.148149526 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.149098416 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.102600887 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.143273317 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.109696287 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.145786883 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.134654991 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.110663271 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.140914652 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.097494329 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.135327685 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.103555321 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.139640225 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.107220719 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.136697127 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.127138065 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.105422485 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.126685152 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087536519 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.149083738 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.126382707 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.117059696 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.122678237 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.100701789 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.136323757 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094251791 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.125515541 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.09630861 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.128129223 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095763442 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.127602107 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.09262084 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.12510939 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078241094 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.124863935 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.13786437 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.101541155 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080068716 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.132522241 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.129912322 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.096851298 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.12303409 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.098023633 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.126753965 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097442744 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.132028007 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.099646984 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.126700585 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097818807 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.118350574 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.103816933 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.127574515 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.086475433 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.125129445 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.10041596 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.119499498 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.108977269 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.134908258 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.095272195 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.129976096 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098435996 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.132658892 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.096189711 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.129496246 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.092250566 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.128396107 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096851779 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.130514874 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.096010097 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.125561312 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.124134169 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.09600532 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075775565 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.130390752 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.076623602 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.135464633 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092294501 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.124423776 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095671489 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.13252522 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.140495464 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.097055088 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.134558464 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.095404304 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.124654062 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097473557 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.115847605 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.100718829 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.144504103 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.142769157 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.095010651 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.123869564 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.109096931 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.128128965 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093142594 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.107914126 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102475343 seconds)
  done (took 13.440317654 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.139194811 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.167112638 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.10453978 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.150385747 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.164976365 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.159951556 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102415999 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.133343748 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.097027704 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.144946315 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.101241638 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.141613505 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.101129296 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.146505249 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.162051465 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.109683915 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.137020511 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.117928762 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.144881177 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.181232828 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.122451281 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.153049712 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.113433815 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.134775696 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.132857515 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.111928671 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.164326545 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.114924854 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.144904946 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.146849873 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.110230262 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.167321534 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.145111476 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.100235492 seconds)
  done (took 5.758192756 seconds)
done (took 51.632309529 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.299790689 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.497671184 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.254802893 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.298508592 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.286394785 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.2774725 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.267470054 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.265715026 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.604791148 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.255680639 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.502573467 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.015755356 seconds)
done (took 60.005843083 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.33904598 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.390940317 seconds)
    (2/2) benchmarking "String"...
    done (took 1.523342183 seconds)
  done (took 4.100991044 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.625049367 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.25628767 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.523032271 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.25695595 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.25193611 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.545276078 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.110601173 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.688848092 seconds)
  done (took 28.80899821 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.257370065 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.68011879 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.352905668 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.363106569 seconds)
  done (took 19.832845455 seconds)
done (took 62.885386634 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.274828329 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.342857962 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.300438045 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.233070452 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.369103225 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.286136035 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.334819793 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.332230881 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.271183885 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.250795131 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.272123561 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.270864992 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.275025757 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.334737952 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.252816513 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.27289479 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.349431411 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.845464718 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.691162052 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.256754248 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.283009111 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.288499979 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.254873068 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.275720937 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.323982333 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.254027783 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.274278813 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.257595243 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 5.268165285 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.259076461 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.286752432 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.511365463 seconds)
  done (took 192.532157757 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.25935778 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.331924292 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.431726718 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.284382173 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.736112942 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.460939353 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.397270185 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.826487629 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.28328377 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.26152833 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.603437738 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.256463416 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.677966216 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.28384444 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.268926958 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.261839944 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.571696391 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.651850522 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.277813234 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.497317839 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.274995188 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.519351299 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.457713399 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.540840836 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.299731497 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.25502412 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.281012501 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.272283281 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.464000308 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.511228042 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.272295311 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.301543512 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.939801368 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.118594695 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.28061163 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.272865366 seconds)
  done (took 152.871084899 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.563493664 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.263342728 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.261449578 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.264733625 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.261793573 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.299020402 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.262794214 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.913526643 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.912902157 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.812447012 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.47244381 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.325416105 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.572512329 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.257694098 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.361909507 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.272258688 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.259242235 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.279877842 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.309444859 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.263330977 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.263969826 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.914244837 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.281036468 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.240185813 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.266427784 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.263764061 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.303295793 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.656363319 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.257662064 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.3026706 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.59898747 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.314794602 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.258360426 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.649085273 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.804921483 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.371832875 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.260885793 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.300072181 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.266356017 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.543473951 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.260197322 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.266322919 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.264052012 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.265055537 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.270546039 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.926812888 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.257724245 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.916517239 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.266408854 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.25209106 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.258135328 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.267826058 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.780823027 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.877455814 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.279102337 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.265739941 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.267749952 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.266672817 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.266229931 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.305076881 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.777672628 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.369281394 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.280816345 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.271466838 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.300550869 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.266104576 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.617156582 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.260947092 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.869736382 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.326455239 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.37119229 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.921717621 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.267188385 seconds)
    (73/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.267312413 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.366731668 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.384664786 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.260665621 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.268446326 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.267066029 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.268010483 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.380733614 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.262886886 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.729045239 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.268178268 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.270767138 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.329457195 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.368491697 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.261935357 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.667925362 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.262942328 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.267629519 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.050172405 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.36101752 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.261553692 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.268589969 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.269626496 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.731281506 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.915356282 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.553704028 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.264799411 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.748325971 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.270222986 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.751030147 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.872942574 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.944940454 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.263630517 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.382023 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.269038082 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.272570326 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.269597185 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.298922033 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.291604336 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.330271369 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.264727251 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.671881223 seconds)
  done (took 355.346486924 seconds)
done (took 703.491392282 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.966171137 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.904304724 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.059574416 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.921012178 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.902427664 seconds)
  done (took 10.941816902 seconds)
done (took 12.128796068 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.488297822 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.482151903 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.335562812 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.487612817 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.301775879 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.50524155 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.463248918 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.288334597 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.385161395 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.365378125 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.386421141 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.331636558 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.302252207 seconds)
  done (took 19.310297546 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.621875382 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.610956457 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.33416946 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.621327657 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.309605737 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.608697625 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.473030295 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.493331022 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.502818268 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.309328786 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.282734815 seconds)
  done (took 17.357912643 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.618362548 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.599500858 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.338905098 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.629913517 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.312098826 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.64060546 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.483614632 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.500581455 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.501086662 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.307007657 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.283048998 seconds)
  done (took 17.404994054 seconds)
done (took 55.262655995 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.281373753 seconds)
  done (took 2.470301546 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.31759783 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.487050373 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.300290083 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.283435853 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.282862564 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.281956282 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.286625866 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.282559726 seconds)
  done (took 11.714073093 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.281234463 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.277766181 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.281419757 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.276611488 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.28098444 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.280989884 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.279188151 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.281145822 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.279845382 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.280318984 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.281689213 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.281970375 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.279696085 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.278435524 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.278282763 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.278111202 seconds)
  done (took 21.668484162 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.281020477 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.279666262 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.280335784 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.280691355 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.278714265 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.279808257 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.280502218 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.281072398 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.280483685 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.280521749 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.27991652 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.280744113 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.281023744 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.280028225 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.280583603 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.282450844 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.280225056 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.279835127 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.284699803 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.280047765 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.282162459 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.281192149 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.280462874 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.280648155 seconds)
  done (took 31.932815304 seconds)
done (took 68.9750641 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.670732727 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.240338903 seconds)
  done (took 10.103455125 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.283337869 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.283328665 seconds)
  done (took 3.763380639 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.283372999 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.284573709 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.282186808 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.28267874 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.282190518 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.281480713 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.283948515 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.284296239 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.282322155 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.283207126 seconds)
  done (took 14.024384827 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.285756691 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.283724664 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.280769893 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.283608846 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.285125385 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.281339535 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.283616811 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.284189891 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.28412309 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.282868016 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.283685415 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.282906423 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.285858918 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.282847816 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.284031249 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.282577044 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.28321804 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.28087756 seconds)
  done (took 24.296541867 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.286263996 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.283864358 seconds)
  done (took 3.766323562 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.283997564 seconds)
    (2/7) benchmarking "second"...
    done (took 1.282604017 seconds)
    (3/7) benchmarking "month"...
    done (took 1.281034903 seconds)
    (4/7) benchmarking "year"...
    done (took 1.281553537 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.282186862 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.284170991 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.282812159 seconds)
  done (took 10.174510345 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.287427207 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.475435279 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.562355057 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.867986517 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.287164485 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.291707175 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.13463924 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.289308651 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.292571301 seconds)
  done (took 14.684870527 seconds)
done (took 82.008167539 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.337330862 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.291962916 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.583992083 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.2985434 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.295819217 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.57919374 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.303326611 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.403158642 seconds)
done (took 38.292519101 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.286357143 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.073991986 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.070120934 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.290381402 seconds)
  done (took 11.632330504 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.26039216 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.340486708 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.263325307 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.390109804 seconds)
  done (took 18.452929044 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.417971262 seconds)
    (2/2) benchmarking "read"...
    done (took 1.621912769 seconds)
  done (took 5.238760586 seconds)
done (took 42.807105673 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.28777406 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.286684258 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.284218765 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.287130952 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.284470068 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.287147887 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.285379829 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.285710585 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.287732643 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.287731962 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.286090038 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.287933716 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.286758327 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.287390665 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.285435233 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.285904476 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.286393479 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.286445312 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.285732484 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.286043955 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.285698097 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.289625573 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.285928699 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.285550854 seconds)
  done (took 32.074320114 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.288705046 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.286395832 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.287264123 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.288743266 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.286455691 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.286992523 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.288370851 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.286090887 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.289146942 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.287297342 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.285658506 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.288473858 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.28960148 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.286793435 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.290060165 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.28666648 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.288850742 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288165129 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.288086435 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.285952604 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.289887576 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.287767033 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.287969605 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.288800734 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.286943006 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.287040739 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.290731923 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.289457935 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.288771766 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.288810723 seconds)
  done (took 39.840538977 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.296011523 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.29887763 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.292839318 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.289406292 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.290948725 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.288812648 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.288734934 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.291418249 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.292439563 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.290429178 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.292587024 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.292299309 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.291121989 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.290833611 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.292321865 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.292834044 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.293178689 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.292021672 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.290236428 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.291518435 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.29170537 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.292068397 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.292543767 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.294701218 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.292358632 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.292242534 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.29264857 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.290947359 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.293566222 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.292013336 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.291185768 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.291784111 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.293528875 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.293332698 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.292309252 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.291143419 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.297686351 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.30322616 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.294627824 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.293251741 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.291594961 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.294148905 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.292199729 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.293645759 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.293253481 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.292629935 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.293656788 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.293273033 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.294838518 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.294374897 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.294440466 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.293502642 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.292543436 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.293224563 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.292979008 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.291836867 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.292909722 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.29081652 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.291628179 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.294805022 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.294424168 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.292693206 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.292837604 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.293238039 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.293581047 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.29490111 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.293250804 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.295469348 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.293658352 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.293647286 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.293424224 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.295257321 seconds)
  done (took 94.297954921 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.293999838 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.29149341 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.291552038 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.290243072 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.290439508 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.294169492 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.292894552 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.30377096 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292984664 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.293250506 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292692232 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.291506999 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.292035438 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.294730693 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.293076846 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.29450637 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.29332494 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.291880274 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.293895559 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.294569501 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.294901456 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.291724077 seconds)
  done (took 29.659030646 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.29617494 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.295462349 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.293752032 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.294417127 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.293206049 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.296281135 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.297254165 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.297728612 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.296000242 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.293507382 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.294381429 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.296695151 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.294746223 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294767449 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.294508255 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.295038914 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.297662126 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.295049841 seconds)
  done (took 24.520927245 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.29657582 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.293375979 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.297476378 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.293945227 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.294766908 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.299815379 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.293796064 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.299404851 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.298089291 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.294944489 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.296122866 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297323026 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.29881277 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.294917997 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297586186 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.29550631 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.297193735 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294804428 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.298987515 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.296456016 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.295851588 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.29799698 seconds)
  done (took 29.731535838 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.297793914 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.297671052 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.295272663 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.294665003 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.294977549 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.297251943 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.298255131 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.295476943 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.299546908 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.299111523 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.295417288 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.301102955 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.297535596 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.296839627 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.295583523 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.298308822 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.29931698 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.298205084 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.300057857 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.298136269 seconds)
  done (took 27.15900825 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.30064521 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.299925914 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.300414528 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.301964697 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.301383208 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.29993005 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.301679924 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.300073267 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.30178845 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.302685429 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.301382398 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.302642177 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.301344943 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.301795043 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.301859525 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.303903179 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.302282843 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.302519518 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.30307639 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.30127679 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.304027625 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.301098816 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.303566374 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.303367524 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.302542513 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.302290443 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.302505915 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.303797723 seconds)
  done (took 37.666179844 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.302162378 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.302600631 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.299079861 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.298387959 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.300063294 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.299351311 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.301345578 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.301306031 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.30525686 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.299989745 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.302407968 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.302231967 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.301301992 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.303604318 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.302880729 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.301457764 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.30276606 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.300878559 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.29905524 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.300548766 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.302397398 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.302518034 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.303372066 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.300662182 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.300031641 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.303481438 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.301467517 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.300286341 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.302394428 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.300092694 seconds)
  done (took 40.256750426 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.321261281 seconds)
    (2/2) benchmarking "in"...
    done (took 1.320667098 seconds)
  done (took 3.855269503 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.300146695 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.302590397 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.304179359 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.3003599 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.302357487 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.303696246 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.30255866 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.300809672 seconds)
  done (took 11.630495702 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.303736166 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.304242132 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.303368793 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.303905123 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.305373098 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.304849379 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.311416462 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.32553257 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.304569005 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.305266448 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.313007491 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.313571313 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.308389567 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.306306528 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.305933511 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.306681692 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.306234974 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.304741576 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.306568805 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.305610821 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.306205388 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.306852876 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.308430113 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.303411672 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.308661365 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.318733138 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.329254765 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.304945557 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.305764481 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.311240186 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.306798477 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.30431032 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.307025892 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.306657444 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.305861814 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.307925321 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.316007626 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.327620005 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.312368134 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.324903228 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.306927958 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.303732911 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.30889753 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.308475753 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.309023727 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.307631723 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.308591033 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.303908359 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.307831201 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.311071027 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.314779258 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.308136525 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.303971475 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.310189119 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.309847114 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.314538888 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.331297254 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.310356604 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.320284612 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.319159571 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.340216039 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.334658406 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.31011482 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.307504596 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.319559375 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.337720553 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.316617321 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.328957548 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.307042837 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.308887552 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.316257589 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.342023387 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.336368336 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.309792298 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.310067696 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.309187547 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.310463819 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.309970875 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.31643148 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.333781049 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.309155747 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.309659016 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.320461383 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.338083698 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.310878251 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.31025445 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.312287174 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.311391418 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.313663867 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.322492657 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.333682239 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.311462241 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.310615258 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.311840415 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.31284126 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.312590716 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.310041968 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.311831288 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.308558148 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.311604388 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.311325615 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.316852343 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.321258973 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.311909269 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.310892649 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.317486042 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.330513112 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.31193025 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.320033468 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.311659663 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.311417062 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.314217947 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.319116848 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.309077334 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.316223369 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.322319931 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.312452589 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.314295422 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.312725601 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.31284967 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.323773701 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.346397136 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.312334818 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.313153452 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.317669691 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.327719808 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.312479323 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.315717538 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.313122238 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.310579432 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.309852575 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.314657984 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.313528585 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.313912964 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.313234472 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.314589723 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.30988245 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.314207389 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.314996614 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.315641295 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.316307623 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.313684377 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.316082713 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.317809021 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.315136438 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.317295989 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.319800789 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.333345378 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.315226992 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.317120694 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.311561266 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.314056317 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.316829921 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.316203161 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.31553676 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.315438669 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.315325236 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.314685829 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.31398405 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.314187009 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.316002 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.317980725 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.320920239 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.316146129 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.320746253 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.315858729 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.313315964 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.316319136 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.31574504 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.315187812 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.315566174 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.31384253 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.320502292 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.325673048 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.316257245 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.316643922 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.319808228 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.316751052 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.31800047 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.316412668 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.320286401 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.328293958 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.316353931 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.326225438 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.337820012 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.318294642 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.317957461 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.318104917 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.317849693 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.317413276 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.322291667 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.327002385 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.329384979 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.344904563 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.320225185 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.321011481 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.318499427 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.323043838 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.32416579 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.318776897 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.320372264 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.318079779 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.318431477 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.318399984 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.31979365 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.318643524 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.318619518 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.319012584 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.318287677 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.319530648 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.319026639 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.318720048 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.319083561 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.317232348 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.319659285 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.318689098 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.319759767 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.316593586 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.318837889 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.318914334 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.320722683 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.319235118 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.326271189 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.317177932 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.322546487 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.321081078 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.319519233 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.319417508 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.319188097 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.320997241 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.319808551 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.326670613 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.341874188 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.321450458 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.326292464 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.342874445 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.320344573 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.32296097 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.320206375 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.317099212 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.325514395 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.330278908 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.319714457 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.320416742 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.321456335 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.320642887 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.32199321 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.32726934 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.337788627 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.320035349 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.322103529 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.323827984 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.318222855 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.322162443 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.321046518 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.322581856 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.325038065 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.320916903 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.322979164 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.320991348 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.322551574 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.3218652 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.321663973 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.325469972 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.332293601 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.326013208 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.32282875 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.323120163 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.323655774 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.325884147 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.324054679 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.323592264 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.320006314 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.334685136 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.347198224 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.328661611 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.34347089 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.322689727 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.327071059 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.342641913 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.327311225 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.324131497 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.324853513 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.32493394 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.322758638 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.321971918 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.32567741 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.326064782 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.326367604 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.325232368 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.329154155 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.325499043 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.322504083 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.324767049 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.326700584 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.325280534 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.324903652 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.3237793 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.326777845 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.327321154 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.324145391 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.325195319 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.332780603 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.348723556 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.325361576 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.325783336 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.325908185 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.325091243 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.329470901 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.32629459 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.331053616 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.337309332 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.329623252 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.338188396 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.328770365 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.336684521 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.326142337 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.330646204 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.336137367 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.322280401 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.325561333 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.326799956 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.32622535 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.331768483 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.34943897 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.328190743 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.331025227 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.325763461 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.326643607 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.327431388 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.326474933 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.328106595 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.327345804 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.334445455 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.351043392 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.332079441 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.328749064 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.325219145 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.330459933 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.32724511 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.327583312 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.333506264 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.327668866 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.327948498 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.327627388 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.328094831 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.328555959 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.328417907 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.328212784 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.32313063 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.329861454 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.335356133 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.352880423 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.333538238 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.328881437 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.33431123 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.347296937 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.33622283 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.349323082 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.331221849 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.328523807 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.327611169 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.3307586 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.328479511 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.329213512 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.329154692 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.331673689 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.334323569 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.330397205 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.330969615 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.328859927 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.330019071 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.328725235 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.341767185 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.358794328 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.331248178 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.334012375 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.325998065 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.332742074 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.335934248 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.330583279 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.329552265 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.333642207 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.343674277 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.3395714 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.329375572 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.331147422 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.329731239 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.330704386 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.332469024 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.330816877 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.330241248 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.331796347 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.333635322 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.330674439 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.334223521 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.331321829 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.333042729 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.334013022 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.333562576 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.345627742 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.350481973 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.333605304 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.330664496 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.334134056 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.33287192 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.333762929 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.333039994 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.334006766 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.332228197 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.33592851 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.341121399 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.341291927 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.334551104 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.331899124 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.332481356 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.333489994 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.332621917 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.333043873 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.333398577 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.332342681 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.335516512 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.333672194 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.334275897 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.331051536 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.334657427 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.332617597 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.330602436 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.33594269 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.343899478 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.335659786 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.330138128 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.333799045 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.333536882 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.331541501 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.335423563 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.340635205 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.357168563 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.34775751 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.346241724 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.33832324 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.334936814 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.339157467 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.345447112 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.333966664 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.333929521 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.335002588 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.337986413 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.337119253 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.339255371 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.33478884 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.342338023 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.352582237 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.335647967 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.343263117 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.358175122 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.33682993 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.338933054 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.340571469 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.336456338 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.333693157 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.335809949 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.335956508 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.342629048 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.360990696 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.336941069 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.339215143 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.33550283 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.338592724 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.342066498 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.337382488 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.337708212 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.333852606 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.335833401 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.339409416 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.338862951 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.333958257 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.334891778 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.337690883 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.341709148 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.348026081 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.335157755 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.339357845 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.336892077 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.340713429 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.33855407 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.338686084 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.333453564 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.335285451 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.338917419 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.338151303 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.338578114 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.341519589 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.339151673 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.340706432 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.341094713 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.339543609 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.34293397 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.352516908 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.349650486 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.334818536 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.3393086 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.339982506 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.339879147 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.338903735 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.339598638 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.338977801 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.340131658 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.338535752 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.339215565 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.340452395 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.343358118 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.356386083 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.361188729 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.339805779 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.339055193 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.342279733 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.340908067 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.335405563 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.339427867 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.342091742 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.342580987 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.349416362 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.338401917 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.347922509 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.361432011 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.342237931 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.345727395 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.343946044 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.351541257 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.344968717 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.338862502 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.340318014 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.347714249 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.361077257 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.341611372 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.353034683 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.376880944 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.363127449 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.340405096 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.340921494 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.34168004 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.34240821 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.341281103 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.340489241 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.340807836 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.341852157 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.342744129 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.341377858 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.35074773 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.341272907 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.343135997 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.342004345 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.342650484 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.34203976 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.338926684 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.344448293 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.344984349 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.343985992 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.341848231 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.342302352 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.343936726 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.355689514 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.369571286 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.34081664 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.340511227 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.337994123 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.343939382 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.344780873 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.358240503 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.349329637 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.343675183 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.341950859 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.344118711 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.343928387 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.343680442 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.344289763 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.342403705 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.342299469 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.342317817 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.356780177 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.370666778 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.345790349 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.345368268 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.345786625 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.345301686 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.346354005 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.342585473 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.343122156 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.345731228 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.351100543 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.351737485 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.345854887 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.345893582 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.350181784 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.356596918 seconds)
  done (took 792.836382518 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.344249283 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.340911724 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.343653058 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.341584448 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.344428661 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.344372096 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.344239223 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.343227409 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.342583734 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.343564218 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.343985407 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.341488878 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.344645512 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.344488861 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.343390727 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.344970683 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.344178901 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.343614707 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.344461872 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.345006124 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.343050172 seconds)
  done (took 29.465826904 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.346353884 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.343824377 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.345469431 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.347211999 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.343944777 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.347357424 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.345012128 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.348201028 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.34798605 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.345950333 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.348804356 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.347181588 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.346138971 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.344609202 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.345310979 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.346747964 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.348304578 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.344881572 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.346247578 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.3454491 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.347684422 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.346384421 seconds)
  done (took 30.873222974 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.350460132 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.34841725 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.348772132 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.347216144 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.349637669 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.346621899 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.350631049 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.349860794 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.349932919 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.348496426 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.350092325 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.353015252 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.357043469 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.357475207 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.352491847 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.349471482 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.493271484 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.349858453 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.350330446 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.349589714 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.346089124 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.35292179 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.367976679 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.346364589 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.349756621 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.351505388 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.348699434 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.347454771 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.350237958 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.352494476 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.357085177 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.350907356 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.350266355 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.351498889 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.347763692 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.35349403 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.354990877 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.352639054 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.350646205 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.351329 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.364118574 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.37823517 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.351819633 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.358042787 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.372019842 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.352303827 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.3564966 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.362990816 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.350093151 seconds)
  done (took 67.689862434 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.353972761 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.351403561 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.349078074 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.352111272 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.352133396 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.353679116 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.351772371 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.353739207 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.351017555 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.351666147 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.352678399 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.351086709 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.353319187 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.353094854 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.352485382 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.352637063 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.35174437 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.34988243 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.349848912 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.350808319 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.351364374 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.353017104 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.355528845 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.352583372 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.352599 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.353346088 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.351213795 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.35393821 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.35125464 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.351694861 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.352698685 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.354952012 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.354439775 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.350566393 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.352614721 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.35190961 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.356166101 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.35294951 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.351056954 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.352180308 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.354030909 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.352238306 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.352644797 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.351543881 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.350168345 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.350044779 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.349603523 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.351297645 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.351650637 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.352840249 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.350458854 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.351758607 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.35460246 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.352832201 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.353593408 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.355002179 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.35089602 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.349751537 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.352659014 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.352012372 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.351295356 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.354337337 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.350655596 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.351433671 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.35444293 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.354846599 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.350848298 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.356315906 seconds)
  done (took 93.218952059 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.354329855 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.352710548 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.355480825 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.353309547 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.354949614 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.354207903 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.355890023 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.355292335 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.357213429 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.355535333 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.357146254 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.357788645 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.359173118 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.357862344 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.357579743 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.358527013 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.357444244 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.357427313 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.359123724 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.359852645 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.36080401 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.35890715 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.358689891 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.360257589 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.359609603 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.359639136 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.354820192 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.358733015 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.357415621 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.358899719 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.359967942 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.360583058 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.359302797 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.360345681 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.358367337 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.360587741 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.359331845 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.358163065 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.36005259 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.360082077 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.35966347 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.359240724 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.359278298 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.361194511 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.358434747 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.360194386 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.360912912 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.360041982 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.359359826 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.359257361 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.35673862 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.359731102 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.359921948 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.358570829 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.359345119 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.362417528 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.359650362 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.362600399 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.361560711 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.360233285 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.360752926 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.357614491 seconds)
  done (took 85.496894968 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.362238225 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.3602427 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.358974404 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.359519316 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.362228724 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.359247208 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.361341766 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.36118082 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.3600849 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.359506837 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.360476322 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.359945096 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.360292019 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.361038766 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.35587888 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.359302774 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.35814775 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.356824791 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.36056555 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.358485087 seconds)
  done (took 28.462021627 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.356974576 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.35846983 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.35916498 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.358611273 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.361850511 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.361666278 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.361063651 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.362837677 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.359224332 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.361634966 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.362126722 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.362546513 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.359280818 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.360159097 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.364895455 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.361283956 seconds)
  done (took 23.040161348 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.35970248 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.363716375 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.360940064 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.360364051 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.360903989 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.359584582 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.362078718 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.359433929 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.358584309 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.360888504 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.360468089 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.362825495 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.362380217 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.36064532 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.359699288 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.363872905 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.363440629 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.363599567 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.36427352 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.365304292 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.363275162 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.362796142 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.365074495 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.363118184 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.362397476 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.361394272 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.363345968 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.36237625 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.360791249 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.366115401 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.363861874 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.361925433 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.361745638 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.363050425 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.365051082 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.365657663 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.365530273 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.364433566 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.365947639 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.366287221 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.366577178 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.364937337 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.36475014 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.367121644 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.365340014 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.364597869 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.364406367 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.362650245 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.363613575 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.364512101 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.365415178 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.366846678 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.367600634 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.367665185 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.364581507 seconds)
  done (took 76.259438865 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.365489916 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.366453956 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.363795748 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.366285939 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.367248194 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.364781926 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.366473885 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.36687167 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.365193787 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.367757158 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.364488985 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.370623614 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.366273796 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.368886135 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.367409207 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.366873867 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.366721388 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.365889746 seconds)
  done (took 25.869092683 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.365967223 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.362148314 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.367441712 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.36424494 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.366296345 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.365967628 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.365682064 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.369157591 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.369221485 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.366873523 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.367522958 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.368540546 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.369043238 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.36832302 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.364946664 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.366599884 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.368582359 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.369511397 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.363148176 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.365730629 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.371608208 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.368263833 seconds)
  done (took 31.348484631 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.369638051 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.368583813 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.366629005 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.38558467 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.388146908 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.392015058 seconds)
  done (took 9.546169861 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.376816634 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.366596949 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.365171856 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.368069753 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.369529138 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.362173391 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.364248696 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.36401798 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.367175936 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.365703958 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.363507605 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.367879595 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.369740085 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.36506008 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.367711399 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.368211146 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.368290735 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.366757368 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.367174666 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.37077584 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.367358787 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.368667865 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.362691488 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.365371483 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.367818979 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.366552703 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.369142538 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.370182376 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.366731287 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.371436269 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.369183927 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.36885482 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.370364137 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.367224046 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.36544733 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.368621915 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.36331897 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.366413595 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.362712117 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.360443136 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.367833318 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.365877623 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.369878786 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.362789805 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.367727662 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.35880752 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.362636165 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.365480417 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.363048745 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.366696803 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.363543038 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.36137155 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.36713708 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.368751902 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.368132622 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.36618313 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.365564749 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.36368307 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.364090481 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.364209685 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.363540964 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.367808774 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.362220691 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.364057214 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.366537205 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.364473513 seconds)
  done (took 91.480390856 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.366574197 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.36465368 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.365236423 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.371684724 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.367025131 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.366867381 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.362130586 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.368011075 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.366708003 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.362716144 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.365919028 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.364300315 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.364734994 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.365291625 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.366509384 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.364512613 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.36652339 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.365349761 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.36405563 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.367578207 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.364313774 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.365428926 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.365397067 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.364145422 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.36364323 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.368280738 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.364696069 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.369454508 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.364128839 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.366709693 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.365415578 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.369043555 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.37044058 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.36505014 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.365197476 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.367090357 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.368647231 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.368395798 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.368158921 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.369063272 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.368237737 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.370056236 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.366088564 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.364755166 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.370136196 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.368177678 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.366722183 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.368965756 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.370739844 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.368333414 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.369789057 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.363772095 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.370697954 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.370408951 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.371662673 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.37190781 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.365354797 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.370575588 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.367895155 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.374856543 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.370093563 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.366455493 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.371681606 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.37177992 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.370821385 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.37200238 seconds)
  done (took 91.532380655 seconds)
done (took 1849.009122367 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.413073446 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.361962199 seconds)
  done (took 14.052176671 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.532985193 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.487428855 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.373029463 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.36618359 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.367596647 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.379601003 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.384617094 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.368771589 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.371962778 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.373133261 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.373692264 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.561429685 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.373344663 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.36962439 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.373819158 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.467880843 seconds)
  done (took 43.813461255 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.400858431 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.383945507 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.51704994 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.401472518 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.403203546 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.602289059 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.443069414 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.381149432 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.59308244 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.427184357 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.202837517 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.397151682 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.3784967 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.672657383 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.395714527 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.6004589 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.674473154 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.206339265 seconds)
  done (took 32.363249412 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.912499555 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.380199592 seconds)
  done (took 9.576623731 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.432705011 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.377389087 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.395425029 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.370833861 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.406286236 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.419978319 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.441007271 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.442177727 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.429131804 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.414458214 seconds)
  done (took 65.421082063 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.40064472 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.380294546 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.3812614 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.379301269 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.367970053 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.36366952 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.378530166 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.392958508 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.835990392 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.537603485 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.406270527 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.385258623 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.39707927 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.379172476 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.374939382 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.415324464 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.530516518 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.394052332 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.373621856 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.384581248 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.376511611 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.471347542 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.431819915 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.381992599 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.535247492 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.847077732 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.384172899 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.38498251 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.507788648 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.39621001 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.378414931 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.379342163 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.379041217 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.000633725 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.949783061 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.403787781 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.403384765 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.388923663 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.373170217 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.515123409 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.399971119 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.387930097 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.369751652 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.931210704 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.550440352 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.520278074 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.949651612 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.386123857 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.383283287 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.45519442 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.384584588 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.383733633 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.416334012 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.227943458 seconds)
  done (took 116.380201788 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.37498757 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.857781946 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.548116707 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.40025309 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.329260008 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.277378431 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.396765985 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.73587455 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.425569671 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.368694145 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.686674951 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.974001639 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.405613195 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.40184393 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.886859767 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.393486317 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.375362152 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.350033437 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.399039623 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.371810719 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.836978688 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.402221606 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.369140282 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.481574811 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.413770135 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.928779904 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.103204408 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 4.008374026 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.396471462 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.369452096 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.924885335 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.401114115 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.422180741 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.375516687 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.685521318 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.83264092 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.818131758 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.407236786 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.390152898 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.372098997 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.399820705 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.922836174 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.831102472 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.398019925 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.390498718 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.924970986 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.400507268 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.384228746 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.377742515 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.592462701 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.190463114 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.378417602 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.1862688 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.380761229 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.725129123 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.374164574 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.37991727 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.952252774 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.399219231 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.644176197 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.42717036 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.371897669 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.373513418 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.372709715 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.376423884 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.810177922 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.468895252 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.374117832 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.81171251 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.946164695 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.398522618 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.977616836 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.326407803 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.401707056 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.413649613 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.375037855 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.189287892 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.979333168 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.424765857 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.374212437 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.798972313 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.406266642 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.694862591 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.403214525 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.399248784 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.86920274 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.41126882 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.384318418 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.38290882 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.387662909 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.174338203 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.384593461 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.698271426 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.449503174 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.374960249 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.373842734 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.413925093 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.374890159 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.401453133 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.384011838 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.975075509 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.40664477 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.560146966 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.406926406 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.392422252 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.385784455 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.376418949 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.383950668 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.614892713 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 4.011417952 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.389463423 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.378897755 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.376735152 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.387359707 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.456754235 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.378986947 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.771232403 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.407589625 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.377205556 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.414322416 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.30742291 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.455428372 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.378343984 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.407499045 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.235332763 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.618195269 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.405467181 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.376183219 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.384839916 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.411055589 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.974382688 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.379771236 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.460794267 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.384920163 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.159009239 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.432589602 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.413178411 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.849537311 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.393052341 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.380358306 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.403198472 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.380806938 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.725880252 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.691597462 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.010407767 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.379563261 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.405500007 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.174559587 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.427631199 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.531465244 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.411229255 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.412687591 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.592225817 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.939454052 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.380092839 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.954193236 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.379078141 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.612295854 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.389084398 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.752020938 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.965376542 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.407638181 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.394798596 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.175540234 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.080501166 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.14349438 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.388234882 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.687464853 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.400340275 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.838714266 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.37958188 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.385059116 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.000699553 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.390998637 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.381364962 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.380781669 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.380961538 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.442828313 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.559675046 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.67646034 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.38784563 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.932733976 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.448949928 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.379503122 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.418249486 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.384506811 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.733417341 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.449437287 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.384912817 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.387796152 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.382498715 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.397549333 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.943953959 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.38961051 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.388423441 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.53998467 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.099763627 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.409591427 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.385669062 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.230418466 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.814278266 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.020456974 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.453279207 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.779164979 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.417315996 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.434422775 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.282875406 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.439629431 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.990810401 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.410689205 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.384678647 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.081856012 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.409194021 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.442156158 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.385644345 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.384588121 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.036076271 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.4088575 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.386191607 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.131536593 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.390142791 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.654685363 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.391251218 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.39182515 seconds)
  done (took 1129.859412036 seconds)
done (took 1412.747657492 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.38706961 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.38720829 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.384541543 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.393035105 seconds)
  done (took 26.849288553 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.400048736 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.396765227 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.398288052 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.395046929 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.398951061 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.397432441 seconds)
  done (took 9.689634925 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.883704486 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.384517833 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.398203999 seconds)
  done (took 19.971157166 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.663572704 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.887856894 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.844723295 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 4.021768097 seconds)
  done (took 11.723843947 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.396128139 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.395677249 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.40012236 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.398444294 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.401287811 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.403637198 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.398013917 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.399657776 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.401580013 seconds)
  done (took 13.896114068 seconds)
  (6/6) benchmarking "26942"...
  done (took 6.116205852 seconds)
done (took 89.545734463 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.37391328 seconds)
    (2/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.990073797 seconds)
    (3/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.771479071 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.518209798 seconds)
    (5/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.458068073 seconds)
    (6/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.406639928 seconds)
    (7/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.390086261 seconds)
    (8/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.700162284 seconds)
    (9/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.181187251 seconds)
    (10/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.442461202 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.676986877 seconds)
    (12/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.379592376 seconds)
    (13/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.811058719 seconds)
    (14/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.369992008 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.487566321 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.427471101 seconds)
    (17/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.797957041 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.412649426 seconds)
    (19/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.127387058 seconds)
    (20/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 3.185999954 seconds)
    (21/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.815002791 seconds)
    (22/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.689497884 seconds)
    (23/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.444880096 seconds)
    (24/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.922367696 seconds)
    (25/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.113594873 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.840082984 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.304683871 seconds)
    (28/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.409993445 seconds)
    (29/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.208891649 seconds)
    (30/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.470968417 seconds)
    (31/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.124964433 seconds)
    (32/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.378210843 seconds)
    (33/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.595755676 seconds)
    (34/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.418013451 seconds)
    (35/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.842249182 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.526130503 seconds)
    (37/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.14871741 seconds)
    (38/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.148081745 seconds)
    (39/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.386089386 seconds)
    (40/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 3.051563956 seconds)
    (41/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.450869391 seconds)
    (42/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.42015409 seconds)
    (43/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.402288168 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.439076535 seconds)
    (45/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.749785007 seconds)
    (46/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 3.143057181 seconds)
    (47/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.424639696 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.505359417 seconds)
    (49/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.592192919 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.668787016 seconds)
    (51/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.855806678 seconds)
    (52/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 3.100495374 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.783692608 seconds)
    (54/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.494853803 seconds)
    (55/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.474155924 seconds)
    (56/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.424075289 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 5.025858216 seconds)
    (58/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.149359516 seconds)
    (59/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.385688116 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.446387713 seconds)
    (61/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.398564945 seconds)
    (62/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.196177889 seconds)
    (63/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.426334715 seconds)
    (64/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.397691891 seconds)
    (65/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.370620111 seconds)
    (66/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.535854619 seconds)
    (67/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.855035706 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.540996029 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.40401308 seconds)
    (70/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.379844978 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.421263039 seconds)
    (72/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.412589308 seconds)
    (73/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.040313552 seconds)
    (74/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.723450821 seconds)
    (75/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.414540173 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.561819549 seconds)
    (77/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.839772548 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.318437552 seconds)
    (79/309) benchmarking ("sort", BigInt, false)...
    done (took 6.392139267 seconds)
    (80/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.462718578 seconds)
    (81/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.464883892 seconds)
    (82/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.59585624 seconds)
    (83/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.372009257 seconds)
    (84/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.096865295 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 5.821861491 seconds)
    (86/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.488457386 seconds)
    (87/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.424984283 seconds)
    (88/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 3.133579518 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.383880183 seconds)
    (90/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.351976052 seconds)
    (91/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.807206325 seconds)
    (92/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.120421194 seconds)
    (93/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.52489089 seconds)
    (94/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.325410244 seconds)
    (95/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.596395971 seconds)
    (96/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.746194741 seconds)
    (97/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.390091766 seconds)
    (98/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.39791046 seconds)
    (99/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.469040385 seconds)
    (100/309) benchmarking ("map", abs, Int64, true)...
    done (took 3.026150878 seconds)
    (101/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.157367501 seconds)
    (102/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.805655143 seconds)
    (103/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.452638582 seconds)
    (104/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.01041387 seconds)
    (105/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.372517482 seconds)
    (106/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.493523245 seconds)
    (107/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.108309552 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.619421774 seconds)
    (109/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.198527791 seconds)
    (110/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 3.064065881 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.122380659 seconds)
    (112/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.409356549 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.158555813 seconds)
    (114/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.414118949 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.392925282 seconds)
    (116/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.414063126 seconds)
    (117/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.509153848 seconds)
    (118/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.391514821 seconds)
    (119/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.491440335 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.398422381 seconds)
    (121/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.441406848 seconds)
    (122/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.742581498 seconds)
    (123/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 3.094245225 seconds)
    (124/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.414267048 seconds)
    (125/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.478235943 seconds)
    (126/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.406482534 seconds)
    (127/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.403137315 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 1.925718654 seconds)
    (129/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.618165771 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.439123337 seconds)
    (131/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.517586295 seconds)
    (132/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.42555474 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.679730326 seconds)
    (134/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.516648796 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.296785465 seconds)
    (136/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.382162551 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.659038322 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.783324528 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.418785559 seconds)
    (140/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.540885168 seconds)
    (141/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.506371621 seconds)
    (142/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 4.175297997 seconds)
    (143/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 4.18256077 seconds)
    (144/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 6.405180082 seconds)
    (145/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.513531551 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.506483614 seconds)
    (147/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 3.03352763 seconds)
    (148/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.763282382 seconds)
    (149/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.431569945 seconds)
    (150/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.530519311 seconds)
    (151/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.531078281 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.311654201 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.420365948 seconds)
    (154/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.850297794 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.859254496 seconds)
    (156/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.406082445 seconds)
    (157/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.238406245 seconds)
    (158/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.504594486 seconds)
    (159/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.402925472 seconds)
    (160/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.407236529 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.503259088 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.393745564 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.418795706 seconds)
    (164/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.885102704 seconds)
    (165/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.392333118 seconds)
    (166/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.458757856 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.475715604 seconds)
    (168/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.333948485 seconds)
    (169/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.396654907 seconds)
    (170/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.441537675 seconds)
    (171/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.515238627 seconds)
    (172/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.920063657 seconds)
    (173/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.482221792 seconds)
    (174/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.29683745 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.491359569 seconds)
    (176/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.416127058 seconds)
    (177/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.252042959 seconds)
    (178/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.940655421 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.059635439 seconds)
    (180/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.519463092 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.471158683 seconds)
    (182/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.977227082 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 4.305873728 seconds)
    (184/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.419410691 seconds)
    (185/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.39755736 seconds)
    (186/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.459978189 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.263080877 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.425351732 seconds)
    (189/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.412266033 seconds)
    (190/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.425860185 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.462095309 seconds)
    (192/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.427864442 seconds)
    (193/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.847395678 seconds)
    (194/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.198550553 seconds)
    (195/309) benchmarking ("sort", Float32, false)...
    done (took 5.480726731 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.420676013 seconds)
    (197/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.489465305 seconds)
    (198/309) benchmarking ("sort", Float64, false)...
    done (took 5.811435786 seconds)
    (199/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.399846877 seconds)
    (200/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.757794087 seconds)
    (201/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.295709479 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.778165251 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.476494346 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.935639653 seconds)
    (205/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.406299756 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.444349533 seconds)
    (207/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.400741652 seconds)
    (208/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.618377937 seconds)
    (209/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.625049102 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.037088046 seconds)
    (211/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.383789406 seconds)
    (212/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.524790815 seconds)
    (213/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.51224278 seconds)
    (214/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 3.180258027 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 6.42353991 seconds)
    (216/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.841231554 seconds)
    (217/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.961215954 seconds)
    (218/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.382524756 seconds)
    (219/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.483129681 seconds)
    (220/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.427662557 seconds)
    (221/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.443368181 seconds)
    (222/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.436627624 seconds)
    (223/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.447615364 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.408162984 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.501853145 seconds)
    (226/309) benchmarking ("sort", Int8, false)...
    done (took 4.440288371 seconds)
    (227/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.427637622 seconds)
    (228/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.597871764 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.9543774 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.450686302 seconds)
    (231/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.409741171 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.420640763 seconds)
    (233/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.384164665 seconds)
    (234/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.532616713 seconds)
    (235/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.703536925 seconds)
    (236/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.411271247 seconds)
    (237/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.416130324 seconds)
    (238/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.389054804 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.470690867 seconds)
    (240/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.437888811 seconds)
    (241/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.431670272 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.449477982 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.33292117 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.457790984 seconds)
    (245/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.4011441 seconds)
    (246/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.427927682 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 5.019632235 seconds)
    (248/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.957057915 seconds)
    (249/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.391442382 seconds)
    (250/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.436574681 seconds)
    (251/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.39904697 seconds)
    (252/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.404046528 seconds)
    (253/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.412093558 seconds)
    (254/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.655673843 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.665527439 seconds)
    (256/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 3.051537682 seconds)
    (257/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.601943424 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.471536762 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.415578966 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.529247029 seconds)
    (261/309) benchmarking ("map", identity, BigInt, true)...
    done (took 3.11972911 seconds)
    (262/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.469632784 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.460217178 seconds)
    (264/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.474042435 seconds)
    (265/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.179627003 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.823396752 seconds)
    (267/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.451217972 seconds)
    (268/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.413285374 seconds)
    (269/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.495755864 seconds)
    (270/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.425847029 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.41487719 seconds)
    (272/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.489136177 seconds)
    (273/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.277066722 seconds)
    (274/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.553758059 seconds)
    (275/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.50748692 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.849018394 seconds)
    (277/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.664677153 seconds)
    (278/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.976927983 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.486937812 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.432139094 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.499214227 seconds)
    (282/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.939019184 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.536284914 seconds)
    (284/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.234078598 seconds)
    (285/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.267996165 seconds)
    (286/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 3.141197841 seconds)
    (287/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.795538316 seconds)
    (288/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.402380387 seconds)
    (289/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.757592714 seconds)
    (290/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.772258887 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 4.329167001 seconds)
    (292/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.456887227 seconds)
    (293/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.413474044 seconds)
    (294/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.753588201 seconds)
    (295/309) benchmarking ("map", abs, Float64, true)...
    done (took 3.026394553 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.865716348 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.164315137 seconds)
    (298/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.491494298 seconds)
    (299/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.684494983 seconds)
    (300/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.339604298 seconds)
    (301/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.420623386 seconds)
    (302/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.198512006 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.463163743 seconds)
    (304/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.413342769 seconds)
    (305/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.447305471 seconds)
    (306/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.413979515 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.361910249 seconds)
    (308/309) benchmarking ("map", identity, Float64, true)...
    done (took 3.045977497 seconds)
    (309/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.429099591 seconds)
  done (took 976.00461854 seconds)
done (took 977.310004902 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.445710346 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.441726817 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.426777927 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.448628133 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.538796016 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.454356292 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.437808457 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.428016167 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.474911314 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.476869234 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.425629032 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.451344381 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.429401132 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.427607802 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.427120338 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.441582315 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.651007363 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.419335801 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.443318241 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.437696288 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.445351569 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.424899165 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.477913664 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.45690974 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.432274468 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.427796552 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.431549276 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.449048906 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.5392536 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.433547517 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.431781249 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.440366083 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.649904157 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.419690747 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.423107855 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.44843977 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.440203073 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.438943325 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.433075433 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.459031251 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 3.134165265 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.439334789 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.430761148 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.429157984 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.429239005 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.43111813 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.431539364 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.434416045 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.440400595 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.445346825 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 3.129431312 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.456649529 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.435077412 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.427096798 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.43949255 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.426276667 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.431990268 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.447616301 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.449032495 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.449058944 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.639304984 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.428034837 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.432545145 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.449444081 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.435930667 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.165634513 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.4392621 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.433549516 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 3.132099711 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.449912137 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.1611227 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.453682487 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.429224409 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.442397168 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.461600592 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.647857006 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.419085478 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.428495015 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.435510522 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.430921963 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.441528018 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.443397563 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.438963168 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.430316407 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.443244914 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.45904274 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.442226858 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.43134102 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.439011081 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.451521453 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.439414899 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.443189546 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.436747506 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.426762101 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.437884688 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.435383801 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.436289509 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.434668179 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.436024606 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.444686027 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 3.133969199 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.46463911 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.428935085 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.431032735 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.432889559 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.446338782 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 3.135040005 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.44646263 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.454647968 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.480265264 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.433597341 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.641122895 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.428814875 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.450577035 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.441545943 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.437120842 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.429573291 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.64264439 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 3.124760481 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.462337819 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.437916986 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.432282943 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.452003869 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.436268069 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.431781954 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.655181453 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.428809536 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.450354004 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.555618905 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.448425046 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.467250524 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.43511162 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.436946175 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.458651792 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.453417102 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.471365565 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.436346722 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.453132747 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.451226432 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.430472224 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.449172258 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.44411223 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.437294155 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.439087137 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.429572189 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.456997039 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.449975896 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.450420899 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.456385573 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.556189091 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.432851187 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.645672161 seconds)
done (took 244.027581964 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.493160487 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.429838991 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.516521363 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.431660072 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.538118403 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.541369162 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.428975818 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.430597418 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.429316025 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.81251169 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.427324289 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.426183597 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.422095764 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.42781366 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.514158109 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.431581889 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.424330421 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.774421924 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.429871914 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.501190146 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.43014259 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.429778721 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.430421978 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.814698374 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.429421636 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.430521697 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.507442405 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.433323859 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.7826199 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.425176964 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.433916738 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.781124316 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.521404073 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.449675346 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.44196714 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.44032985 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.537967894 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.45033413 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.514987872 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.515914517 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.517910313 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.470121365 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.426228846 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.432183282 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.431460756 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.432930294 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.432364328 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.458463288 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.432292703 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.430983648 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.775301912 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.447216433 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.44101977 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.429340619 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.431484666 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.453402138 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.42746139 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.434433252 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.525619982 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.435284152 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.498284321 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.815623484 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.813184994 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.433433756 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.43412798 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.432650077 seconds)
  done (took 155.060112183 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.501553192 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.51067061 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.562153666 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.450641847 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.486253999 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.562100703 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.450767566 seconds)
  done (took 11.863078606 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.442497383 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.435933276 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.484970553 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.485449731 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.435171632 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.582707213 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.436600785 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.445764695 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.434826526 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.488667174 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.436179568 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.43557077 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.442998654 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.435755326 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.48610282 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.446617102 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.551625147 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.436592192 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.439366492 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.59378513 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.433082916 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.443323986 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.487782219 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.448756155 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.437178547 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.446336516 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.003278257 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.437918055 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.430520569 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.43870629 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.430779304 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.477066095 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.436775389 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.437895281 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.434924822 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.552480409 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.437710518 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.437635208 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.438234123 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.436339669 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.439038404 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.437261781 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.437946331 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.434698878 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.440511577 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.463963536 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.438875007 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.440636937 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.438290829 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.43837949 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.49096699 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.4391843 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.437625313 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.43917525 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.495657936 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.446822877 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.44109243 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.438173515 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.438906991 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.437890182 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.598273226 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.488288797 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.440300659 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.489387341 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.442741057 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.439539346 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.439838695 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.444324925 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.495986116 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.439937789 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.489047796 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.437719064 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.595239582 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.46541143 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.441547365 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.443749023 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.443076645 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.441791602 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.438108998 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.447398301 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.437290641 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.443861934 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.447763395 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.439350386 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.435962952 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.545769516 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.551130594 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.440349831 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.452034078 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.449394972 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.440718912 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.494223411 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.443479655 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.441905764 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.4947978 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.556265385 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.496513066 seconds)
  done (took 163.531114782 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.447726491 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.449658499 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.444260582 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.459659156 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.444780712 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.442448888 seconds)
  done (took 10.031019753 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.444601113 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.443714997 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.442464071 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.443683135 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.445349337 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.443804019 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.444710868 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.445032228 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.445607872 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.444280974 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.443725189 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.446801232 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.443073158 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.444048768 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.450920692 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.446476275 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.445496953 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.443121215 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.443431621 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.44658081 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.550159915 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.444395389 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.445531374 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.446634048 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.450706382 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.444064155 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.45323027 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.447157616 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.444880973 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.452154454 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.461958186 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.442499475 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.446977581 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.449070802 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.453187407 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.445020675 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.451187692 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.443256196 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.445287963 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.447322077 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.445803747 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.444766796 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.44624606 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.447722521 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.450099779 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.450857827 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.452219765 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.454680748 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.445533962 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.448026231 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.446934327 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.44870631 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.44557891 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.449381785 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.452124571 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.463372163 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.452468675 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.447996009 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.450134335 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.448750828 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.453944862 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.447621768 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.452010743 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.451406638 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.444682742 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.448260222 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.44953884 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.450399214 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.44833915 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.447795547 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.452605346 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.448065188 seconds)
  done (took 106.6919323 seconds)
done (took 448.508322347 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.670742486 seconds)
  done (took 8.017719499 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.729233909 seconds)
  done (took 8.076949883 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.588529574 seconds)
  done (took 25.943059049 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.494513131 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.614719452 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.955964768 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.459225533 seconds)
  done (took 27.874397104 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.999912425 seconds)
  done (took 8.348944058 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.460247576 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.435403826 seconds)
  done (took 14.246431267 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.798833576 seconds)
  done (took 8.146450028 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.522813695 seconds)
  done (took 7.877421486 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.447466532 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.471682127 seconds)
  done (took 14.282285493 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.423806264 seconds)
  done (took 7.772825587 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.517598947 seconds)
  done (took 9.869830276 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.456914032 seconds)
  done (took 7.808906663 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.464794098 seconds)
  done (took 7.813968917 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.857798852 seconds)
  done (took 11.206685916 seconds)
done (took 168.633440078 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.444317164 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.445082176 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.448486006 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.446700682 seconds)
  done (took 27.132472526 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.484736695 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.484544698 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.487210648 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.49623912 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.490997771 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.48594679 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.476679821 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.477843971 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.495582283 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.485962014 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.486992128 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.490443547 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.486829298 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.476576083 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.487575541 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.488142315 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.49666961 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.485859783 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.479374585 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.489973216 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.454962582 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.499011633 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.48976206 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.454793132 seconds)
  done (took 36.984047276 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.974979208 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.528430329 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.608180552 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.507346886 seconds)
  done (took 7.969158742 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.504900102 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.506738439 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.521384594 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.561149762 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.596654689 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.516414006 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.484153313 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.47618465 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.458785236 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.507610154 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.582093776 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.528347682 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.610367575 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.454109185 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.6327926 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.454716504 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.454299708 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.507090942 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.560153816 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.570904832 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.45901283 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.508730741 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.513894415 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.525665712 seconds)
  done (took 37.846749721 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.469122207 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.463237786 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.453869285 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.454884468 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.476350932 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.456524289 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.458866616 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.458244877 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.456081116 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.456918242 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.454048707 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.468911351 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.454618999 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.454615244 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.462271747 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.457899147 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.461776558 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.457452972 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.456249913 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.459819699 seconds)
  done (took 30.544340969 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.450090238 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.306395119 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.800683376 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.705661519 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.451516552 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.452513265 seconds)
  done (took 28.520087059 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.543899435 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.725176129 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.449622347 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.910042283 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.99212234 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.468130988 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.459658969 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.747206755 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.167131028 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.156866876 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.532531919 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.539093766 seconds)
  done (took 22.049866728 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.461886555 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.453999178 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.462105422 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.468669897 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.53077078 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.482783993 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.46256957 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.450890739 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.530966304 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.551693818 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.480787449 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.530414281 seconds)
  done (took 39.224621411 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538544207 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.503482459 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.638763317 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.405905401 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.179692886 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.656953867 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.397366276 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.965068568 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.460059907 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.727146726 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.454735686 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544364529 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.708519137 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.454032073 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.457840795 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.674136377 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.700382496 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.048377506 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.457588593 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.184912324 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.481177819 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.465993126 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.31843698 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.49063028 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.66740791 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.438079128 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.71088153 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.230737205 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.810842819 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.467927896 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.466136879 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.454905562 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.727160031 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.218435805 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.573543898 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.466114233 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.437501199 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.002502464 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.45540317 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.279245405 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.473314118 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.460390798 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.464416067 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.456004713 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.392237215 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.461639945 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.969266288 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.460584559 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.165527713 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.456838695 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.466217806 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548250071 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.460518907 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.029471303 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.655088561 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.456294213 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.453364461 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.462839624 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03020488 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.814347952 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.466651729 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.392640385 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.046108691 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.28176653 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.217736281 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.572066321 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.459323385 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.462159705 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.390303445 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.269885946 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.472299745 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.595255881 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.472650827 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.120711653 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.270030504 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.473386062 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.389971958 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.1173559 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.467406186 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.393782704 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.687209497 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.237883905 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.397447733 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.406025032 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.392153966 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.331358398 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.465720855 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.022640278 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466825913 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.970144345 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.472606422 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.47294966 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.476364959 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.682757889 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.336391668 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.454533448 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.47431023 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.577642704 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.471359316 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.964938936 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.395224579 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.45193052 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.718800362 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.673180055 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.458169247 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.708726704 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.742495083 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.461251692 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.477370663 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.47300622 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.47244654 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.172250669 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.493814891 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.817409933 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.478952344 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.238572853 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.346226232 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.474608228 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.563040393 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.470505565 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.762068682 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.387853917 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.356278382 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.527696255 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.463584657 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.459746324 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.309065637 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.313237979 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.619827188 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.457533808 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.459200393 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.496835253 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.462745882 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.423136203 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.467017349 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.46162188 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.266105785 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.686512629 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.470948561 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.735784437 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.396180363 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.600532509 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.467701377 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.677181914 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.948201057 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.481708892 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.721379053 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.45560496 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.481312592 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.477117735 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.480707831 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.559555475 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.481881028 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.475760196 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.720794122 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.462020591 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.462861609 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.339288985 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.243737401 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.465040761 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.470279882 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.463647921 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.16931369 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456943651 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.460944426 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.357012383 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.478234583 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531476332 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.469287612 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.475070309 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.687014638 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.554492344 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.468066312 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.470727827 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.691530145 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.473435119 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.312196775 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.546790798 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.722046236 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.183234121 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.499063394 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.400655026 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.176493917 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.159089072 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.465154833 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.654982661 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.466477513 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.47626983 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.474832572 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.235558528 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.179734118 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.485693164 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.240240178 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.471673793 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.47668224 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.472228771 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.467278818 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.682862393 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.867478048 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.478911708 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.47849143 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.610363347 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.481182954 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.401798229 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.984999377 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.471248685 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.467533282 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.244231647 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.499261094 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.234566717 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.001006305 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.719702168 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.409660009 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.479093834 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.45702153 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.507479756 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.470450478 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.477779513 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.487659876 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.480469692 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.477357952 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.478721685 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.254562535 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.918149807 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027204399 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375742737 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.1588627 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.652335598 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.470343421 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.392288959 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.984602422 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.404793205 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.127434117 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.709908982 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.00659074 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.427641272 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.722853461 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.956140514 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.446432457 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.482026066 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.698729726 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.627556983 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.477693173 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.483759521 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.680914331 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.504854322 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.470349583 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.399794594 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.74294534 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.768852809 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.465892456 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.549199432 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.981313954 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.479619215 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.250959043 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.470368751 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.033348651 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.710738633 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.020191031 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.867474595 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.462716682 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.491330395 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.02594462 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.471057946 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.002991765 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.239165619 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.503577253 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.732811989 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.413680186 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.481614436 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.483599021 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.468288402 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.213548646 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.464023472 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.730591166 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.479121074 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.405646067 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.488628853 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.133417328 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.351685787 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.478137374 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.469003832 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.381913692 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.475348532 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.830790145 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.481213999 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.747818077 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.498191454 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.408044076 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.407791536 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.168031013 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.473228442 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444982518 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.079696559 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.0067765 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.657542806 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.499898945 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322474994 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.732168503 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.484967593 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.195672019 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.720758273 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.536146984 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.497800735 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.575897425 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.474226191 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.456987208 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.357208664 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.711670002 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.474420499 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.691616893 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.701257669 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.376596484 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.47454556 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.688857541 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.358964891 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.475632815 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.778677315 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.207338977 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.489066027 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367252634 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.520999227 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.475638382 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.516404569 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.055670489 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485228367 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546575896 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.48686614 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.487250841 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.485299937 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.690355048 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.477794403 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.480801936 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.490712056 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.569885509 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.890769754 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.750128529 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.249919613 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.202907585 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341561787 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.206261687 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.510602477 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.476989056 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.487451696 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.412158694 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.613952087 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.005213284 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.750388371 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.597791712 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.142123269 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.500473157 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.494901401 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.498571453 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.691561656 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.752474456 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.353052751 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.487919026 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.142893134 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.639312072 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.491071099 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.689415323 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.096766301 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.165807591 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.60671334 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.494943615 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.987243557 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.753396645 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.570915759 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.479706113 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.077182393 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.50332735 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.037491199 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.504992863 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.479541478 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.651515123 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.490149748 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.245812085 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.509106672 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.637108469 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.252368059 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.37593003 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.740216761 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.030560068 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.480504032 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.209895578 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.367878596 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.747270288 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.547510979 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.490743056 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.589107747 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.626781009 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.495448981 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.380587161 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.479446377 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329267096 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.189068876 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.490291853 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.208888333 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.765854326 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.477048291 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.478029325 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.525525369 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.491650379 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.705060672 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.346362175 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.705536528 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.488730251 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.482887046 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.474292507 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.203432218 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.514047417 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.415240028 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.474762189 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.781300231 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.738454902 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.506284649 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.934748827 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.194613064 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.151626705 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.458532759 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.501849818 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.48075862 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.349915399 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.204213694 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.784969632 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.101133994 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.143808402 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.4854712 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.756698601 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.486761046 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.495296906 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.761604724 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.486400614 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.488911892 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.496822764 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.204794271 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.464772487 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.488129638 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.317255554 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.422363751 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.710709744 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.293194408 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.420763475 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.481242304 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.707982736 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.484616985 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.605852852 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.488812111 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.490947099 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.487619723 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.220269706 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.774156454 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.483704729 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.478673077 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.476032475 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.498307903 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.495608233 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.793296149 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.481714682 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.159874881 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.836705239 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.741339871 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.493464663 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.465513723 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.486192696 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.48428396 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.209239786 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.454121442 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.245913269 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.17522034 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.504057634 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.497043631 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.489694043 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.701883588 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.697919694 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.50193116 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.499876023 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.496487148 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.502270144 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.387143127 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.258194491 seconds)
  done (took 1682.369200828 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.508513352 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.525328228 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.502358767 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.523567739 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.537056757 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.620866483 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.512319967 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.495591532 seconds)
  done (took 53.611115777 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.485390445 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.639279609 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.525160027 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.486659085 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.487159669 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.503634946 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.06028578 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.511265535 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.48652111 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.497509024 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.494315934 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.48127662 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.278182979 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.498080553 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.494500184 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.472015381 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.486788035 seconds)
  done (took 68.280302075 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.498316364 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.729938998 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.563007869 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.484176979 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.480726638 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.504918216 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.34425763 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.542939764 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.480552115 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.865570147 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.14023557 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.536420079 seconds)
  done (took 83.558514455 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.498581901 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.496267708 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.493876328 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.496724449 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.496891755 seconds)
  done (took 8.869484455 seconds)
done (took 2128.31141903 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.73478734 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.382089148 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.27564758 seconds)
  done (took 6.043540244 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.637739769 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.688284626 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.822210621 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.840794203 seconds)
  done (took 8.376079957 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.771134846 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.885888217 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.677209567 seconds)
  done (took 6.721174491 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.229305443 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.48875905 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.649250914 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.487370504 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.489150931 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.491209955 seconds)
  done (took 20.855906419 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.494143952 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.496315709 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.491237299 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.493283196 seconds)
  done (took 7.365143626 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.46947056 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.19202908 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.461695516 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.475251203 seconds)
  done (took 18.984870478 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.239312876 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.254363043 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.236877218 seconds)
  done (took 8.119820424 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.494990887 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.334175294 seconds)
  done (took 10.217212985 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.808087437 seconds)
  done (took 3.195047377 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.626113562 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.826312888 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.791331191 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.680264683 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.782160763 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 6.259492514 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.541062183 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 3.020779126 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.636437011 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 4.35685491 seconds)
  done (took 32.910417552 seconds)
done (took 137.27856757 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.056667797 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.500558961 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.696272652 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.074563312 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.717189129 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.697724512 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.777159303 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.033951548 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.52906408 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.515342479 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.024188982 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.716270589 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.724675549 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.511216509 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.724301648 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.886547178 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.730382296 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.095204539 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.489825251 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.492304591 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.769268233 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.667290033 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.852393367 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.680578439 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.716970599 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.648030671 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.259971799 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.877849433 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.509276443 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.266864163 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.639166948 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.504113762 seconds)
  done (took 205.773947873 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.493074361 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.483320854 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.484197117 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.5018215 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.487486074 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.484696687 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.502502119 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.502703496 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.503533822 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.496403247 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.5030441 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.483837557 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.486056091 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.483460703 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.506988731 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.48478579 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.491504847 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.483673016 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.524366801 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.48582495 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.485109131 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.485717087 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.506776159 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.48390613 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.502162585 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.484825936 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.48380637 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.503507149 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.506274687 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.507397774 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.485162905 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.485235487 seconds)
  done (took 209.186897792 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.494154695 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.506038286 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.492111739 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.484340502 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.503788014 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.48759467 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.486292087 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.501551256 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.48549521 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.48633709 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.487463992 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.510319781 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.490313963 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.486284649 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.489816153 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.48731869 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.487252573 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.499934994 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.487243491 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.505061226 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.488755366 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.485699928 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.485499889 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.492410776 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.48636712 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.48716958 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.494646065 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.487950665 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.514112187 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.487148755 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.507965672 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.500800477 seconds)
  done (took 209.170749365 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.700182441 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.502812757 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.502987325 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.463171211 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.504334197 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.503959492 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.502182855 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.695684716 seconds)
  done (took 15.772039444 seconds)
done (took 641.293645103 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 4.210360199 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.889384475 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.730061919 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.52729317 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.510579708 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.543259158 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.524485372 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.730886626 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.542422988 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.742017692 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.897958951 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.532134599 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.063176615 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.513280023 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.82925151 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.643518865 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.525069317 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.647620175 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.873764421 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.26863469 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.820280194 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.155403475 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.740951433 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.524700286 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.077305677 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.158224021 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.462580114 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.513034033 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.534553853 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.885914008 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.582556818 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.734199512 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.610138737 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.603450045 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.662989556 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.645619297 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.7142192 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.603820434 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.752548222 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.921285798 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.189974 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.338858352 seconds)
  done (took 103.373761089 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.488950087 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.491105557 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.488107636 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.488715633 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.49046532 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.488779196 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.488544783 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.488687175 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.487897699 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.489526497 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.490515207 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.489831518 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.488797383 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.490398665 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.490001641 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.490790565 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.489605553 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.49413754 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.489677659 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.488017569 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.487994156 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.491327858 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.488623831 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.491270786 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.489742505 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.492233993 seconds)
  done (took 40.134359577 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.506701244 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.789677237 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.969780435 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.506600839 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.500040139 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.512293106 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.600330817 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.501976199 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.513074445 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.513258448 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.697521831 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.503420255 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.547329382 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.00806601 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.50510292 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.50823699 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.510487858 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.510233467 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.800372885 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.510579468 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.635123135 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.503334391 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.611458328 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.521749608 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.532062816 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.509102646 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.514949804 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.05920906 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.53429293 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.699337516 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.536745675 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.61100627 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.009363249 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.996283311 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.509254901 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.520004381 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.513150646 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.709068932 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.509450075 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.508966591 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.609187496 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.503067882 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.985633444 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.157291707 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.526126935 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.51110884 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.076058472 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.721290507 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.811034065 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.512069248 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.011521912 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.50896088 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.510631778 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.514754393 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.822252219 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.512484032 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.511307296 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.091162943 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.533317346 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.611088026 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.513839389 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.513497064 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.806174985 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.506684839 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.794428021 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.508216066 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.519795398 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.534330254 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.983898956 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.508797476 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.184060216 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.527330144 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.512385401 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.706351451 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.784979273 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.10976876 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.528187721 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.810246127 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.005444766 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.619900593 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.510628298 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.043559829 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.624278171 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.508983497 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.512512498 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.510185962 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.513581274 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.559782371 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.608758127 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.111842019 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.189030117 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.103356234 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.627115926 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.520308537 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.509095512 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.090668706 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.531108503 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.515943032 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.976573006 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.180639541 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.529199943 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.520615626 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.182522044 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.53027678 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.608715227 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.514776472 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.984850361 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.509282175 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.562199987 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.512571814 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.521556871 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.536831796 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.613583939 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.512987795 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.514200444 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.157196864 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.725207149 seconds)
  done (took 198.767908207 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.512057781 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.503371096 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.508145488 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.501595028 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.509752851 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.516796145 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.50679243 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.50557503 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.515687593 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.511019769 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.50945854 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.50940898 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.510351379 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.538275755 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.512595759 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.515443184 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.165761742 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.51234331 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.503716849 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.502323531 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.352906294 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.512881795 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.512105522 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.524306379 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.513841625 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.51259712 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.513991278 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.505448933 seconds)
  done (took 157.226934602 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.51762025 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.207359741 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.529272591 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.681014835 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.535875064 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.51015935 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.678623854 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.586000141 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.542321734 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.514782676 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.516010337 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.886005717 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.514263114 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.15180816 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.753839672 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.695618652 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.147638799 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.533405495 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.513340213 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.517688278 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.68177256 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.523057668 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.920010031 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.276128858 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.542902925 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.270255074 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.507321289 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.519008181 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.518844016 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.27480634 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.539944609 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.924014894 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.614194571 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.589589225 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.293865043 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.1794124 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.166500849 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.694191732 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.513181153 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.519715441 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.516726909 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.501826189 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.274381361 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.542570678 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.52081135 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.26030278 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.54626945 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.521773866 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.517420244 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.518137785 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.600117065 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.620923338 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.952102095 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.28318545 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.636045826 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.527071693 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.682738813 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.923216253 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.522159534 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.158831161 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.492797929 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.275326753 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.545786025 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.496170813 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.511939572 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.518763374 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.703094677 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.677214882 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.155168607 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.533710333 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.149268623 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.72023008 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.511714491 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.517392323 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.523022851 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.273597652 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.181146368 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.719731392 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.678745956 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.755325848 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.500051223 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.521035789 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.506423058 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.615159251 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.514786933 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.270266147 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.182528723 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.535177732 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.521785526 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.523469905 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.523077977 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.742750342 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.294181665 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.642155073 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.140519547 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.940545447 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.929861811 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.525145949 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.593605892 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.544323348 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.927761434 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.527732335 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.593263123 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.99874474 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.932872687 seconds)
  done (took 184.130085569 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.801547573 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.98568169 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.634935267 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.678653966 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.210665801 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.132104205 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.928659033 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.690848775 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.653030246 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.820885209 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.947345983 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.61666008 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.72860585 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.611252803 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.379136562 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.63592112 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.654189024 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.689110191 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.658981858 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.681757998 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.296985145 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.849932387 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.714837361 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.711526216 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.631872539 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.421298124 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.166731919 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.134552968 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.710158396 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 3.099662841 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.130632401 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.810237348 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.688425552 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.367983529 seconds)
  done (took 74.293296974 seconds)
done (took 759.32172082 seconds)
SAVING RESULT...
DONE!
