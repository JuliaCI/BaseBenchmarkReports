cset: moving following pidspec: 24828
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.336105178 seconds)
loading group "string"... done (took 0.55480708 seconds)
loading group "linalg"... done (took 7.615257432 seconds)
loading group "parallel"... done (took 0.173404602 seconds)
loading group "find"... done (took 1.180073416 seconds)
loading group "tuple"... done (took 1.865315264 seconds)
loading group "dates"... done (took 1.279772748 seconds)
loading group "micro"... done (took 0.23784658 seconds)
loading group "io"... done (took 1.105721191 seconds)
loading group "scalar"... done (took 41.493675394 seconds)
loading group "sparse"... done (took 13.341208943 seconds)
loading group "broadcast"... done (took 1.059604427 seconds)
loading group "union"... done (took 14.60811675 seconds)
loading group "simd"... done (took 5.055937694 seconds)
loading group "random"... done (took 9.792466368 seconds)
loading group "problem"... done (took 2.006776165 seconds)
loading group "array"... done (took 22.745683515 seconds)
loading group "misc"... done (took 2.06315816 seconds)
loading group "sort"... done (took 3.465053032 seconds)
loading group "collection"... done (took 19.957238973 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.576151633 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.157918317 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.152991381 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.148817503 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.199302209 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.145653199 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.164297822 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.100034646 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.028381457 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.182041341 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.157619509 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.533481572 seconds)
done (took 5.312265802 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.271272275 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094706687 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104826023 seconds)
  done (took 0.912243162 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.078590092 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.146199806 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095951798 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.079306148 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.097976033 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.079461097 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.09776727 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.078811692 seconds)
  done (took 1.39059077 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.086221468 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.099263401 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.084141348 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.100032209 seconds)
  done (took 1.084792337 seconds)
done (took 4.459292571 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.731471307 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.283727159 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204965233 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.464827252 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.196696978 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.216452387 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.715376921 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.352073291 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.253319237 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099710848 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.1354611 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.398440333 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137887407 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.685592415 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.0903503 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.125210606 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.189005719 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.468782325 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084597431 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.113130594 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.118662276 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143413974 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.134279825 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094424139 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.189566841 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082087009 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.195579184 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108556706 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080613344 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.277070222 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.202069167 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.729432526 seconds)
  done (took 11.055894212 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110743933 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.134988151 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.099905158 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139755608 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.138341148 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.103443868 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.08639666 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.099221801 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.124874042 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.18061239 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.133764452 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.123229608 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.097772292 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.084305813 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.118858913 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.250824588 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.123592525 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.102508699 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.10418369 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.09011654 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.142179674 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.116332699 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.112214586 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.096038985 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169193488 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.227570846 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113603407 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.129376464 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.10032634 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.114967493 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145425887 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146582683 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.09718441 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082221864 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.176597266 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.127046256 seconds)
  done (took 5.267784642 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.111294232 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.190648466 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121853931 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.170596428 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.081644694 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.144187612 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.095300656 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113795386 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.258493404 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.107332059 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.156772902 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.491303655 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.144828819 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099951656 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100569165 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083333379 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.099278616 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.656973645 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.156772067 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.11640788 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.115414031 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102353055 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.084629524 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.364342066 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095658041 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.084451095 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09805957 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066361984 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.161572025 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097721268 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.155688455 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.121358869 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.0828964 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135499288 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.205350064 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109878318 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134796173 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097193922 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.07963484 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.174951857 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104987169 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.07996331 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.121293196 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134039485 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.136055298 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098055836 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.081869796 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.197416109 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.097825854 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.095942508 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.954304401 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.183062171 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.09163625 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096056262 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.288511659 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.118270185 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096861157 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.07808565 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.099609322 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.279864004 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.209125939 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097727733 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.081179696 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096331133 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081582032 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.386269813 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100875506 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.692338953 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083221981 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.107034015 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083996918 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097741759 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103751834 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087642578 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117904456 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079765885 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.09926093 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079375445 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.097453078 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081607506 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.109164273 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.215809378 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.099018924 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.079516906 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.096494116 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.077663909 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.117664545 seconds)
    (87/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.094151521 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083042122 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.096329401 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126597161 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115957081 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099406878 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.097387221 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.11685552 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099551537 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.107387488 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083578037 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144012211 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.097014613 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.134585639 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.096521427 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124316969 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.10007438 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114133136 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.112144188 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098854355 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.169030727 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078227482 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.096384066 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079511457 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.097458997 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081510731 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.100724454 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109534815 seconds)
  done (took 22.872185588 seconds)
done (took 41.020485203 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.327109217 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.10452036 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.104315159 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104577963 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.102330396 seconds)
  done (took 1.528212378 seconds)
done (took 2.286103568 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.289920257 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.175454311 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096947004 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.167547798 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.09449018 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.16569018 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.160434715 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.095238902 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.220833242 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.096172432 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.162457492 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076635947 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095972103 seconds)
  done (took 2.685232117 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095305509 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118993883 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083486346 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111362158 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077062931 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112318521 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093055376 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117009062 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110172445 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085783096 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094140094 seconds)
  done (took 1.857384873 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095231011 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11396802 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083730486 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111624247 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077164957 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112462714 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09344409 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118278847 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111112234 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086856191 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094067697 seconds)
  done (took 1.855150255 seconds)
done (took 7.148642171 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.093237328 seconds)
  done (took 0.845897819 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.955502034 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.879623147 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.114495573 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.148961713 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.315519709 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.172615079 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.476509916 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.126179492 seconds)
  done (took 11.154722765 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.145488248 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.085321879 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.104557906 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.085814993 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.101271428 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.085874183 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.102131403 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.099813017 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.085985065 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.099315929 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.083680746 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.103509738 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.101457214 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.084519761 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.103295239 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.083936606 seconds)
  done (took 2.378518548 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118257968 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118019921 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.107286185 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.109235624 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086585207 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.106248261 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.107087164 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089149867 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.103182901 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103647068 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090643054 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.106372473 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104348988 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079955992 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107648255 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.108410839 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085978925 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.107268477 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107646625 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090544392 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.107502204 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095268138 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086994719 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106684232 seconds)
  done (took 3.303371158 seconds)
done (took 18.441434476 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.160281497 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.109026384 seconds)
  done (took 1.031433745 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.097165458 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114473553 seconds)
  done (took 0.977801096 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.098446658 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096795052 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.122865603 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108914059 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081354066 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097091364 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.120597741 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079671763 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.098054197 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.081324266 seconds)
  done (took 1.754898764 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084415735 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.11013254 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101573323 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095249451 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.106054967 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094858998 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.089486316 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099416329 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.11052272 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.0772386 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102457407 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114611122 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086222802 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116455296 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104645585 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082681456 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.102519051 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099293179 seconds)
  done (took 2.545214706 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080058325 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097459988 seconds)
  done (took 0.942918468 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082330592 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094323668 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081525792 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097808609 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093900095 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.07723448 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093945106 seconds)
  done (took 1.386305378 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.441018716 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135348686 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.26066684 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.085428259 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.120072493 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.301757001 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.099162472 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084913927 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.104084874 seconds)
  done (took 2.456279877 seconds)
done (took 11.862112724 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093533684 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.115813406 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.11241801 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.4643915 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107374059 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.099909668 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.146710877 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.256652313 seconds)
done (took 2.170056451 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.144980507 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.596306497 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.425161754 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.231775385 seconds)
  done (took 2.029169291 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.405954659 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.098977234 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084602178 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.084455015 seconds)
  done (took 1.451981216 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080867522 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099627695 seconds)
  done (took 0.959338891 seconds)
done (took 5.364690514 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081520094 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.096427918 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.079115614 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.097051831 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.078941326 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.095408758 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.081966328 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.131569875 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.097579728 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.081073722 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.098709072 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.081048748 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097888485 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078553075 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094048117 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081475204 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.094075626 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.078221428 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094327058 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078049694 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096562192 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.078393046 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.094522967 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.078321173 seconds)
  done (took 2.956924103 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100944679 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098904517 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102942584 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086672972 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.103199337 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086375494 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.104949847 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097692168 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086618719 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100325958 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100869334 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085872343 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.10006407 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085215463 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099920031 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.101878165 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086727421 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098974627 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083234883 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.103304304 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.10316089 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081799538 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102653402 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085998762 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.102134732 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102878299 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082254678 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098948051 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102803901 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.08546112 seconds)
  done (took 3.643747466 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086297229 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094241697 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078738501 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101078282 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078899119 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.09760534 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078292357 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.097098408 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.07979315 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096771859 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079702125 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.0959717 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078122536 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.098785086 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078647212 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100671262 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.112896565 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079712307 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095527785 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079294329 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.09931323 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078097168 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095859874 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078883218 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095532251 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.07808093 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096104773 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078249499 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097226971 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077310498 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.098866999 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081271331 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096308241 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.083696977 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.099963872 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077450495 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.099818185 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.076644884 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.096931698 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.09442303 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078707691 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.09588497 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079455764 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.102015351 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.07919865 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097445545 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078381019 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.098150531 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079815736 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099591256 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077652723 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.097101586 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079704582 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.097835571 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.08097919 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.096356462 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095897411 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.079013364 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096536886 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079480215 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.095082045 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078937307 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098152258 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079534777 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.111434142 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084493491 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095605552 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080368463 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097263908 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080304548 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.098349698 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.109092938 seconds)
  done (took 7.230642148 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.133783531 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.127181722 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082095507 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098330473 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076673158 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097464021 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.082810303 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097349077 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097223759 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085525958 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096807957 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079801668 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098903803 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093716842 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096979035 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097450073 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08611378 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094903392 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079104093 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100319801 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078640676 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101312849 seconds)
  done (took 2.868168667 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.212130882 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10578843 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144461416 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107360088 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084084354 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108994458 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102498495 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087196784 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103783499 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083472375 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102528215 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104215605 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083262726 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101817664 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100249178 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.195436177 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103678389 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084207127 seconds)
  done (took 2.801697462 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092793083 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099579393 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.098473442 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100254387 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098649654 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084924899 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104898708 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107694093 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084769575 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099717259 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089856854 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103601002 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.10145038 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081991151 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101739213 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082363764 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.10245316 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081549826 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109192421 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106096415 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086929748 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109917498 seconds)
  done (took 2.91975289 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097808703 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102230875 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.119723148 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084761985 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095996159 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080212153 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.107031456 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082407123 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108645248 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100495455 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081908076 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.101898107 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.089061136 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101459811 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105622253 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082913352 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102192374 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081600105 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102774754 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078092421 seconds)
  done (took 2.698229127 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102958409 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101672661 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099649762 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092970437 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101499927 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.08328275 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110887848 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101522328 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083391881 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127064219 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103026023 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08280806 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111378162 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106839502 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099824915 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092984137 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111755528 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109309544 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082313135 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101975903 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125399902 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083229548 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.11093339 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101044455 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082652009 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103040511 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.1007404 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089365578 seconds)
  done (took 3.597704793 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082810421 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099177887 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079973619 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.097386588 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079831834 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.097888268 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079638513 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.099705491 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082606507 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097506914 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082406399 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.099953555 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082856144 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100307945 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081750413 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.100966742 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082686368 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.097918861 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07927533 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097775525 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081337826 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100956546 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081498221 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.099048624 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079194276 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.101411643 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079340419 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097816921 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0824791 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098029887 seconds)
  done (took 3.499674614 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.092863604 seconds)
    (2/2) benchmarking "in"...
    done (took 0.108231103 seconds)
  done (took 0.995687877 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080193921 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116260896 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079639863 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.106702941 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085976822 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.102783579 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109136122 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087137889 seconds)
  done (took 1.563268668 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097476702 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.112170127 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084083034 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.115058392 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.110791419 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.099510519 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.173369898 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.103310845 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.105869008 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.08178541 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.115270539 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082331522 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.107593084 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082588792 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.107897771 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088480539 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.100153967 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.106771699 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.086097867 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.099436604 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084874213 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110411612 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087335265 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.098441148 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.102003537 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091715231 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.114271074 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082849041 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105029064 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.10779633 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089395606 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095741884 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082244232 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102239505 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.080989514 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.110960735 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118102476 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085413417 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.111793008 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101431497 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095212521 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.096497629 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086687186 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.107672119 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111392692 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.083973953 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.102058524 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.07860126 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098675278 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085213995 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.097004855 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082723803 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.096766445 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08970134 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.105948021 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112394489 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.0816435 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.103447226 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085195099 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.106210126 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089092885 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.104426996 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103767367 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.083139961 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.11181122 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.087379402 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113010085 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.095801415 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.077470208 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.099546812 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.093156195 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.125511376 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.106972871 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.08502661 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103054918 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080982387 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105320177 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08411973 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108473392 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.107991899 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.08368605 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108660056 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089818674 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103205167 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.102672542 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.09151201 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.099858522 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084813974 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.100837919 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.1201518 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.081914893 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.099350367 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.080375379 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.112912666 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084823608 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.101467118 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079255974 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109340361 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.094441593 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.083857438 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10286367 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083510784 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.113836995 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106624774 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088725271 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110387468 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.107715116 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083994765 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.104125554 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.080028017 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102580291 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084283631 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.108721601 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.075595716 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105306287 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.082925958 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.102910263 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.110469046 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.081020845 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.102037204 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090410053 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.108389261 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.099787321 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.079747171 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.10427796 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083382555 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106590495 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091033259 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.101035177 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077903432 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.097674834 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.104557157 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.083175953 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.105208458 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088371348 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105555027 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.07709128 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.100060529 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.106129093 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092284864 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.102245375 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082827208 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.108927667 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.102389116 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.082110423 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.108196997 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085758374 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.100890541 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.088006486 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.103631568 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077020375 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106480921 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.104451325 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.081514113 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.105533966 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08668411 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104548761 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.101750143 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083043486 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.108021891 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084046102 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.101448665 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08180035 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.100462341 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.111516722 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.085669341 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096682477 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.079891627 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.110325551 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.080120117 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.101668435 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.08105075 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.105096619 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.10140517 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.081914659 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.101295886 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085033575 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.11444753 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10579014 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08428567 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.107245988 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094601357 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.102846284 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.08486451 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.103296657 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102607345 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.083862963 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.11160934 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.087507765 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108321457 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.103699017 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.080267892 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107844876 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091884959 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.101360794 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.079938527 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.101496378 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.105117339 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.089555157 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.106007912 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.083685349 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100248118 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083128813 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107152232 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103795598 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.082409309 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.100920393 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.088299887 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.101937577 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.10797902 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085579129 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.112303735 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086810069 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.098351092 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086684427 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100537789 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.107619434 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.079258559 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.099157478 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.082267293 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.102810402 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.081818423 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.105343104 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.076203426 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110040651 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109526498 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.083312039 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.100794631 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.083862323 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10904149 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.08417747 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106972833 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.085212403 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108791576 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112929755 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.083130762 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.105933627 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093303405 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.103560586 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.095425117 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089109658 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.10061145 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.082983423 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.101220343 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.08209683 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106595165 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111592935 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090925375 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.096791833 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086357838 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.101753641 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.081885196 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.098790524 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.086817446 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.106330086 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.102591026 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090500495 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104264589 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.083698827 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106230141 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.08229517 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.104497091 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.103317166 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089681725 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.103158671 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.085123836 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.102474671 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085527461 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.102430136 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.0801041 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.10441577 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.102220769 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.083329098 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108033007 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.082688065 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102657258 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.085572926 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.103609091 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102336986 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084494698 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.10063183 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087422528 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102963828 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.083188727 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.106332568 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.077728772 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110480914 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082059357 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110932748 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.102738864 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.08059941 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.108292671 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.08585024 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.109105109 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.102548981 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.08546918 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.104483996 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.082807867 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.107652188 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089828983 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.101147493 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.113392571 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092730007 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104121847 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.086443615 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.104066313 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.085147005 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.10330013 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.102332304 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.086428016 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.102574863 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.084563541 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.108491566 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.086460372 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.103648575 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08529344 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.104686384 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.101600716 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.08591782 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.096769532 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.083188642 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.102463017 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.083395605 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114075009 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102810078 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.087244193 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.100790538 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085642498 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.102038004 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.080164869 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.111523979 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112165522 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.084088684 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110461856 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081831567 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.105006862 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11368233 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.078070041 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.100711728 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.081949276 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.100502338 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091531858 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.104795419 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.091986144 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.104369297 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.110727923 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.081240981 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.103241401 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.082728509 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.097608431 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.08148849 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106596783 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.085801943 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102527052 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.083569815 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.106601522 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10419329 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093751167 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.102743399 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.083522632 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.104095112 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.079260913 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.103838826 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.100554652 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.087931417 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.104549288 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.081132956 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.100230821 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.08351688 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.103910102 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.085355483 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.103351668 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084174914 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111099308 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101813997 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.08754736 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106103854 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.078785009 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.106000822 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.082881386 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.104040194 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.100828041 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.088335698 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10659569 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085053307 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.112372779 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.082797657 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105620325 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102992196 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.083216858 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.102721394 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.083600194 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.103290707 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.082378351 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.104652454 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090775228 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.10253268 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.105971843 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084119914 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.102948387 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.090744986 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.104977671 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.086388943 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.112998254 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.10596581 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.084793745 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.111902567 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.087130535 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107510851 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103616836 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.085777745 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109492504 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.082841139 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.110587342 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.083846196 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.10498721 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.103969275 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.082159094 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102403728 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.084395925 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102667958 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.089648774 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.105564247 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.082386597 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.103521427 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.080911657 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.105407271 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106562838 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092792402 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.106413411 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086376124 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.099632725 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.079959029 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105797185 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099706007 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085980712 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105762459 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089908585 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.106600475 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.084574083 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.102436906 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111875214 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090306803 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.107517867 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.081845677 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.107146721 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.084471848 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.10651491 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.102795596 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.085592987 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104161316 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.087863926 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.105385695 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.082795524 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111892412 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.08572927 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105295431 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.104613566 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.085250352 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.104237932 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.079212651 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.104768698 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.086279672 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110305076 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.085098444 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104760236 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114180993 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083170747 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.103400727 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087570466 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104149688 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.107082124 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080033526 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.104433409 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085649959 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105312475 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.079600728 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.103152532 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.081549731 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.106601211 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.081918621 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.099902677 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114376601 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.09311391 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.107523655 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082858391 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103330602 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078727949 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.100271241 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101343123 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086648143 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.105054948 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.094109592 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.103491541 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.083478448 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.099045266 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082874049 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108313915 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.106858068 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081993121 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.099417466 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082863902 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.107345244 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.089450829 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103346272 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.084323 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108285835 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.105802421 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.083012301 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107053138 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.080547904 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.107886729 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116467671 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.085551871 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104183249 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.091167232 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112950477 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.083511366 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.100549525 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.10374458 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.087419983 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.103950441 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.084726601 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.105187334 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119601674 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087669697 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.10286512 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.083070842 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.107005159 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083182509 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.112894199 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085215965 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.105613576 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.108741606 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085902478 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.113197462 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085899903 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113541565 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.10705805 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.087528778 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.10258417 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083685557 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.102267462 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.082415177 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.105877481 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103752364 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089921981 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.113219893 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.083225414 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117298998 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.114324126 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.089957613 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.101534023 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083402166 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.104583324 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079778134 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.106579035 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.081433777 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.104149458 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100815038 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.087607658 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.104858815 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091752396 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.10574178 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085359169 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.105828288 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.078209563 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.106974366 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.085928705 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106598097 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.100606523 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.085232588 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.105121564 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.089398039 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109302558 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.084551609 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.107493265 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.08492927 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106248471 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.099282718 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.092016292 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103215388 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087463426 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.103513391 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084781684 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.106680707 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08724913 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.111113284 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10625755 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.087134195 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.117910602 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086243055 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.10307304 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100875938 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.091003364 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.102596392 seconds)
  done (took 58.463286176 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147816472 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081166158 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102217284 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080215968 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115109576 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100159538 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080575047 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10112916 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081926505 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.104364814 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079617481 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101458946 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109404533 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125703835 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093762663 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106080418 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078964131 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101782559 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099317488 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081570263 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11046405 seconds)
  done (took 2.929494594 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.106405976 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.122978184 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.116694294 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119114457 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091154077 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.117942198 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.116239886 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115588718 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098837271 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113580417 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.120389757 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115450188 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092330641 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.1138169 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112463176 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093131543 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.120064814 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111400322 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116796915 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096247756 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115046433 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.116111579 seconds)
  done (took 3.289954893 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.085745682 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103197493 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086063291 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.098980232 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.084666134 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.099674381 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088448985 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.102673749 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086401614 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.104474875 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082140267 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.10460572 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.106399769 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.080162788 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.103416272 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.083166912 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.154529453 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.109309992 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083244009 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.107525162 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.077910344 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.108345323 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.099600691 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080728094 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.103768538 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088294643 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.106000301 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082137595 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.105825959 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082901475 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.105180206 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081417513 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.106820413 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103830003 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083844782 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.103129803 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.08471992 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.104967529 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.080542002 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.102940733 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084627371 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.100680629 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084804191 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.106519645 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.082004937 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.10437432 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085117719 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.105406035 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.098590856 seconds)
  done (took 5.55039849 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.105053068 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.164084172 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.087406665 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.14557747 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.123422344 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.113701054 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.08803472 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.144972387 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.104437631 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082425586 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123963908 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.122574356 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105235858 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089707202 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.113104653 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105863253 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086415988 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.105469593 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.10878013 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084806025 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.110354894 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090271584 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.122873325 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.120276521 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.1097507 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083085717 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105761131 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.109740566 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098297977 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.111708457 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.110762992 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091008628 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.122737001 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.107645048 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083558258 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.108460525 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.12436951 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.084263025 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.108187887 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.10276551 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086987856 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.111324372 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.111933395 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.103147988 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.107332922 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.111469923 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084647524 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.103659752 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.119713269 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.088282043 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.114996264 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.121268029 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.088722558 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.107042384 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110897201 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.121594203 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085868086 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.103777738 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087853108 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.120334421 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.103516731 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088971748 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.121141889 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.107012853 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.092520152 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.121866986 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.111309472 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.109717494 seconds)
  done (took 8.254086456 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.095053396 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112724896 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123751119 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121830703 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092183889 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112947684 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112869101 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091384234 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112441178 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117990681 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111885782 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.136243789 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.087442263 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116598135 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111775361 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091435217 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113630421 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112185038 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.0913907 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11264148 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.112822326 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.122159831 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091704943 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.122238675 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.143945854 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106648605 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091528738 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114204059 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122835238 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.112516223 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124391322 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091124746 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112383668 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121578227 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124383141 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091156015 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105745031 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111377391 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.092765004 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114415377 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106771306 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101901904 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112749688 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.107017831 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090984524 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.113825866 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122401648 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.125572831 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115809028 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097049776 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.11285165 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.122035159 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112102305 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091855369 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.122124653 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.14809884 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12236281 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122596549 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111902173 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.10037474 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121725275 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.130007091 seconds)
  done (took 7.780917738 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.1087383 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.117283935 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.119151913 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.10053259 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084064217 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.11082517 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083811498 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.104353614 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.115451031 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095603688 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119839251 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109635813 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091714485 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120080651 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.11051656 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113779978 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088991559 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.110972879 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115567406 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088378878 seconds)
  done (took 2.973815274 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095097232 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125500379 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084930602 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.11435645 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.109421288 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091171459 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.109722274 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108692291 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087502991 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108888471 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096585143 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117778878 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107054055 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091897568 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.118032656 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112814632 seconds)
  done (took 2.54949809 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.09962829 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119008981 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.12267539 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086631381 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.106651486 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080807625 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107681243 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.10209176 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082635838 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.122864726 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085166625 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.110356375 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105735833 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083462144 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.102620994 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088813545 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.103753027 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083339085 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.107400424 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.121326368 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096872342 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105920422 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.106387467 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.088299342 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.107063974 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090721741 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107928737 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.104241314 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084580706 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106803316 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085548379 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.114677446 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.104096312 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.085598257 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104468464 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082277092 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.106672428 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085079146 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.11092003 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105873066 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084325037 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.106576096 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084668658 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.108001941 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.08028651 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.107685589 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101897767 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.093481415 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104627013 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086409701 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.107177407 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086507738 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.109235148 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.117346206 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088431203 seconds)
  done (took 6.340814154 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100096977 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110649755 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080386913 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104773945 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087531668 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.110160119 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.111149405 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089883841 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108728372 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08367675 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.110678144 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089704622 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10986641 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109440367 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087572837 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110061374 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081568444 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108647397 seconds)
  done (took 2.669212108 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.092293065 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106461404 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093547003 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.108038962 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084648634 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110168995 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080786426 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.107249248 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103641681 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087245109 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106472467 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087956818 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105955173 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087594024 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107995012 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084986489 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.110342821 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103720959 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.087121572 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102738809 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088311755 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105842724 seconds)
  done (took 3.026649198 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.119495457 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.126932851 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092671529 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.234450447 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104415653 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.134085501 seconds)
  done (took 1.687350238 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1110795 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123078751 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107341524 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108593416 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116395199 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086259483 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109317424 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109136028 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119274312 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102405299 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11062163 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119674268 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11871723 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096923124 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11682882 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116450855 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109005746 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088394591 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107927152 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129446167 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088435535 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119771965 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109923418 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087180343 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110003441 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11866321 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118806297 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122551315 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087966069 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12057545 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11551035 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088165638 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119495359 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12357338 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109853283 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098529727 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10966671 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1301859 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115433794 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097710936 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.111245573 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115857465 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098385874 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114993159 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119693741 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109546657 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09328268 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109828386 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109590883 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136183435 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09458472 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119085003 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116400029 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119189112 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097375221 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136376112 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123174935 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119303541 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116251668 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124755382 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118593107 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093489816 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118093449 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123600823 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116401279 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096585311 seconds)
  done (took 8.227628193 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102718665 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.129342557 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109405511 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12460247 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098591729 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110820571 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108496826 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089067857 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109581307 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10813151 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153904741 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08949647 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119899228 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119147206 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086941946 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11113756 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109628194 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117574583 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087520105 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136967167 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110618631 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118782617 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117809739 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098095177 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123850004 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116523928 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109087318 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088644896 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110074807 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10916373 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094224603 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110716446 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119086983 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086424016 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119939003 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109838198 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087317128 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115892062 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110228617 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115905354 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09814366 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129826635 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10990005 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109077017 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101778347 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11208321 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110209131 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087567246 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110513593 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108376305 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103291665 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124398228 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124442342 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120077689 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109981954 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088727457 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110460083 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108856812 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089096994 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117570239 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118936226 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087378593 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135945566 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111640832 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110673398 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118789039 seconds)
  done (took 8.138839262 seconds)
done (took 157.433523347 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.230572594 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.202343426 seconds)
  done (took 1.310403625 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.08906652 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.138055995 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096991045 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.171624446 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085284957 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.142164383 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.139397946 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097746737 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.10866589 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085960887 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.108875803 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087463681 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.173894917 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085199041 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.109580618 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108175324 seconds)
  done (took 2.713704681 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.115554822 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.257617331 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.125084043 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105645331 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.090468754 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110803934 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084754607 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.113372828 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089958584 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.106670504 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.088629913 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.108966457 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.084189427 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.109039716 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.088908765 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.110999966 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105455377 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.090339727 seconds)
  done (took 2.871985296 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.114330307 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.151012393 seconds)
  done (took 1.156114381 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.245250099 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.165136569 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.233358854 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.476240486 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.277429173 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.35977835 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.206059593 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.220510176 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.166417352 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.213416685 seconds)
  done (took 3.448459336 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119933147 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.182261257 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.321482961 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.157852571 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106558507 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.129863316 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.158028408 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.13206074 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.126722932 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101775558 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.124478946 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.11999674 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.1387306 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094887221 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.11687818 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118646818 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121129905 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.116668457 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115748821 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.095809147 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.139817185 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.083947687 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.117588055 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.115063305 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.096227578 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.121722782 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.107227291 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085367338 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.119214242 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093347613 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.115871504 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.127274364 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.119291531 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.15603761 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.123888143 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.159049571 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.11906498 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.091944238 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.117407035 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090690116 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.120887838 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.121070989 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.125815505 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098133595 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.10836607 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.097461827 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.109159121 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085076363 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.117136654 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.119429291 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.094230136 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.116045967 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.155267369 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.120974034 seconds)
  done (took 7.478726669 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.793527075 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.157252797 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09087578 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.885457826 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.135990279 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105154421 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.777402783 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111785532 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.26108532 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.754697201 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133976546 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096913258 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.230419821 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.258635057 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.930820638 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.287897864 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.640383363 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.128032756 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152569739 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.154827628 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118189271 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114658669 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131791033 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.430941522 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.11796544 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089505673 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118406261 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.120679018 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159656362 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125258171 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.091258666 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.200215688 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.247981829 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.203827469 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.09478724 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112327576 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089059803 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.192688788 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266819803 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.195369561 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179970068 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109709938 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089174483 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123087481 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132444837 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.0855385 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.184791118 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.175161217 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.170782175 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115735452 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118734962 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098103659 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122257813 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.163948591 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.123705632 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.31688949 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.314691247 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088796475 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121985672 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.127389918 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.241358054 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123943815 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225425325 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.13987997 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.190363729 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.113349696 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.825442135 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.170616835 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111820801 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095937289 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12117974 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116588179 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.098857146 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.166908699 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.405778145 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125531286 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114182312 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090797661 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.230308066 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.104587492 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113807792 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.16239769 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118114615 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120933912 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.103847317 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123702491 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.168383642 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.252270342 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.101444698 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120844221 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115479464 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.102715721 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.1174235 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.215076141 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.222101071 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.161852133 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.233964682 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100506677 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.186149543 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.169608766 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12018151 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.173681809 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119872729 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.103249678 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123924889 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217434169 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.14652161 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.12397639 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094392081 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119351499 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148442506 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126979814 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.09753789 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.192404493 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.458167649 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.166843758 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.110464198 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127787919 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099178972 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183434579 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096462218 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263171412 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122015472 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.170090637 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119464194 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088271219 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121694219 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.16263482 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122675254 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120362167 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.100749894 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120429067 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.23744289 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.217674774 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121751176 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.222130418 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184198374 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.11931897 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171945554 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122820965 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169364534 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121601667 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.098933377 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117908148 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.817759499 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12387447 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099630039 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116711784 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.188156816 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089211936 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126316618 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125541686 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086113579 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.817035687 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128652802 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120449 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103531198 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117959754 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121017544 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096485955 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116772966 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.16231636 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231523117 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120134971 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097000708 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.12605229 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.160829954 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.118513122 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125404137 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124101063 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.104582869 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123057831 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114175803 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103261725 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191281407 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.164721634 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.21808563 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.573569923 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113482596 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.124146722 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.204653693 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113134542 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.288519139 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119101336 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.202698102 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185351052 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.09994216 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.32041778 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.165845838 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.187547696 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.128525102 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.173577695 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110101459 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118345653 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.166083471 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112038885 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096865933 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.161333723 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125987239 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123583357 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.940656552 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089835856 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.252506218 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.088376701 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.170671321 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11866025 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12012481 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.286884043 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090778185 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129205622 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.164535392 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115299698 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.123997125 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.847656506 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.124871616 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.099400663 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118890232 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.222377686 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.165017408 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121264306 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119767313 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097774066 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.18393508 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.213002014 seconds)
  done (took 44.268166017 seconds)
done (took 64.130344161 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.284759385 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.219931147 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.272394864 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.17220322 seconds)
  done (took 1.942710135 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.174518987 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.151473364 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.122673045 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109689143 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.152547257 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084428179 seconds)
  done (took 1.711930258 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.368436907 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.281595832 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.246731082 seconds)
  done (took 1.818845699 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.2916436 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.247866492 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.477310423 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.328382434 seconds)
  done (took 2.387464537 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.210128501 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.135410327 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.114818554 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103800849 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.200803939 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.249078505 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.143145176 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.204075125 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.098615015 seconds)
  done (took 2.42401109 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.200828814 seconds)
done (took 11.406921326 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.232611193 seconds)
    (2/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.159991653 seconds)
    (3/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.1231674 seconds)
    (4/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.281114169 seconds)
    (5/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.250025594 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.102429321 seconds)
    (7/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.264012347 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.147139634 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.185186286 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.100481808 seconds)
    (11/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.223654041 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.117979991 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.117154897 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.136584352 seconds)
    (15/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.188184113 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.183010367 seconds)
    (17/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.190730378 seconds)
    (18/309) benchmarking ("sort", Int8, false)...
    done (took 0.1984345 seconds)
    (19/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.134301515 seconds)
    (20/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.155620996 seconds)
    (21/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.091565878 seconds)
    (22/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.164516192 seconds)
    (23/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.125069937 seconds)
    (24/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.238427685 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.140712991 seconds)
    (26/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.148872696 seconds)
    (27/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.169522247 seconds)
    (28/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.121995809 seconds)
    (29/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.123661791 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.139203233 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.11864517 seconds)
    (32/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.222067845 seconds)
    (33/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.195661253 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.136786788 seconds)
    (35/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.228816114 seconds)
    (36/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.125448079 seconds)
    (37/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.127672401 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.135363712 seconds)
    (39/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.083419506 seconds)
    (40/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.121637818 seconds)
    (41/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.182172074 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.115282442 seconds)
    (43/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.231509479 seconds)
    (44/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.123188122 seconds)
    (45/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.124416506 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.094909135 seconds)
    (47/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.245668499 seconds)
    (48/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.116836816 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.093054839 seconds)
    (50/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.199307934 seconds)
    (51/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.196810263 seconds)
    (52/309) benchmarking ("sort", BigInt, false)...
    done (took 0.220996541 seconds)
    (53/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.093148545 seconds)
    (54/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.08839832 seconds)
    (55/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.112327792 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.117124551 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.140975828 seconds)
    (58/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.08872836 seconds)
    (59/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.244325882 seconds)
    (60/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.124094622 seconds)
    (61/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.224896953 seconds)
    (62/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.119138122 seconds)
    (63/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.098493837 seconds)
    (64/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.114062164 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.086575317 seconds)
    (66/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.120169975 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.112501845 seconds)
    (68/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.222874332 seconds)
    (69/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.181940677 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.138476851 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.194490427 seconds)
    (72/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.125396231 seconds)
    (73/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.19580939 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.183153958 seconds)
    (75/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.08600878 seconds)
    (76/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.118034517 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.16853373 seconds)
    (78/309) benchmarking ("sort", Int64, false)...
    done (took 0.087235822 seconds)
    (79/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.2182196 seconds)
    (80/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.121758567 seconds)
    (81/309) benchmarking ("sort", Float64, false)...
    done (took 0.147018506 seconds)
    (82/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.094282857 seconds)
    (83/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.179181002 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.108692703 seconds)
    (85/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.119283102 seconds)
    (86/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.155498303 seconds)
    (87/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.117756698 seconds)
    (88/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.180273781 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.120903462 seconds)
    (90/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.197775158 seconds)
    (91/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.237256794 seconds)
    (92/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.115686304 seconds)
    (93/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.087218868 seconds)
    (94/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.09553339 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.119934157 seconds)
    (96/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.11113474 seconds)
    (97/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.091933216 seconds)
    (98/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.120976351 seconds)
    (99/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.181444092 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.086752716 seconds)
    (101/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.1183282 seconds)
    (102/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.164106021 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.156448242 seconds)
    (104/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.137282894 seconds)
    (105/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.210432007 seconds)
    (106/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.096542496 seconds)
    (107/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.097603112 seconds)
    (108/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.161908453 seconds)
    (109/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.12349791 seconds)
    (110/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.098613855 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.111877031 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.116966563 seconds)
    (113/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.103112298 seconds)
    (114/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.065228665 seconds)
    (115/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.180146109 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.140837001 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.130263346 seconds)
    (118/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.093760712 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.420379889 seconds)
    (120/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.117255548 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.112507236 seconds)
    (122/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.09410216 seconds)
    (123/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.148542897 seconds)
    (124/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.146646692 seconds)
    (125/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.182992499 seconds)
    (126/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.091641098 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 0.193544065 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.094697261 seconds)
    (129/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.091791241 seconds)
    (130/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.068174062 seconds)
    (131/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.10954534 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.095183934 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.139939488 seconds)
    (134/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.094618349 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.130922725 seconds)
    (136/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.07517913 seconds)
    (137/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.119299138 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.09166417 seconds)
    (139/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.175483113 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.118146847 seconds)
    (141/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.129759794 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.196707682 seconds)
    (143/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.06661614 seconds)
    (144/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.091219111 seconds)
    (145/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.216373779 seconds)
    (146/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.153032063 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.118941353 seconds)
    (148/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.188049694 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.116457778 seconds)
    (150/309) benchmarking ("sort", Float32, false)...
    done (took 0.175330078 seconds)
    (151/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.117579464 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.086165279 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.110473121 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.094608882 seconds)
    (155/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.12599588 seconds)
    (156/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.078910412 seconds)
    (157/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.217310327 seconds)
    (158/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.160775331 seconds)
    (159/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.067378578 seconds)
    (160/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.121072681 seconds)
    (161/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.067301855 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.11033543 seconds)
    (163/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.093171071 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.118679262 seconds)
    (165/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.066661738 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.109199742 seconds)
    (167/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.139535562 seconds)
    (168/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.118307278 seconds)
    (169/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067788133 seconds)
    (170/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.123089095 seconds)
    (171/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.06729879 seconds)
    (172/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.123758872 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.08718181 seconds)
    (174/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.146399844 seconds)
    (175/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.094147342 seconds)
    (176/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.090683405 seconds)
    (177/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.093682375 seconds)
    (178/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.067885834 seconds)
    (179/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.118273161 seconds)
    (180/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.065937286 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.135425703 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.116802978 seconds)
    (183/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.113588896 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.133517522 seconds)
    (185/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.09086666 seconds)
    (186/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.093187311 seconds)
    (187/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.095070327 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.111692451 seconds)
    (189/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.065777574 seconds)
    (190/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.123114991 seconds)
    (191/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.13631283 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.107384543 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.112034658 seconds)
    (194/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.084606307 seconds)
    (195/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.216987642 seconds)
    (196/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.112207544 seconds)
    (197/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.147008344 seconds)
    (198/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.12029266 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.109884444 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.086322938 seconds)
    (201/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.06672578 seconds)
    (202/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.115665899 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.131085074 seconds)
    (204/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.088287695 seconds)
    (205/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.214649804 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.163152882 seconds)
    (207/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.088507007 seconds)
    (208/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.110810474 seconds)
    (209/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.087459754 seconds)
    (210/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.091515623 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.194714138 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.096884685 seconds)
    (213/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.075760681 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.119498241 seconds)
    (215/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.09245972 seconds)
    (216/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.093556407 seconds)
    (217/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.175360193 seconds)
    (218/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.156618455 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.15787743 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.137038011 seconds)
    (221/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.066300941 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.117654996 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.146865246 seconds)
    (224/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.150928182 seconds)
    (225/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.112615478 seconds)
    (226/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.088999496 seconds)
    (227/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.110672007 seconds)
    (228/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.068794922 seconds)
    (229/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.125897558 seconds)
    (230/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.09297635 seconds)
    (231/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.067282768 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.19142126 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.158102725 seconds)
    (234/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.095054852 seconds)
    (235/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.106756218 seconds)
    (236/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.069279499 seconds)
    (237/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.078198018 seconds)
    (238/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.113713172 seconds)
    (239/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.091002955 seconds)
    (240/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.092451564 seconds)
    (241/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.067163232 seconds)
    (242/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.119224285 seconds)
    (243/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.067465196 seconds)
    (244/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.117311044 seconds)
    (245/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.090087609 seconds)
    (246/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068811268 seconds)
    (247/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.114146042 seconds)
    (248/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.111426457 seconds)
    (249/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.068666966 seconds)
    (250/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.08722397 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.112335271 seconds)
    (252/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.101001998 seconds)
    (253/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.115467492 seconds)
    (254/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067893996 seconds)
    (255/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.11490179 seconds)
    (256/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066702772 seconds)
    (257/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.135907668 seconds)
    (258/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.068768497 seconds)
    (259/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.179739932 seconds)
    (260/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067645935 seconds)
    (261/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.092291335 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.094092881 seconds)
    (263/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.066511874 seconds)
    (264/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.120366587 seconds)
    (265/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.117097381 seconds)
    (266/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.087771623 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.119291795 seconds)
    (268/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.068728524 seconds)
    (269/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.124612838 seconds)
    (270/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.092901326 seconds)
    (271/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.07853135 seconds)
    (272/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.183990882 seconds)
    (273/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.069934528 seconds)
    (274/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.112786708 seconds)
    (275/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.088409799 seconds)
    (276/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.093119271 seconds)
    (277/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.092165184 seconds)
    (278/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.111944858 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.095473959 seconds)
    (280/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.092726402 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.113115746 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.110947095 seconds)
    (283/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.068411146 seconds)
    (284/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.129908938 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.086466701 seconds)
    (286/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.092423728 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.096001765 seconds)
    (288/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.137073416 seconds)
    (289/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.0788814 seconds)
    (290/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.092165695 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.088204392 seconds)
    (292/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.112498297 seconds)
    (293/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.06776801 seconds)
    (294/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067684331 seconds)
    (295/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.092469055 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.09272628 seconds)
    (297/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.091017413 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.112155657 seconds)
    (299/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.112367418 seconds)
    (300/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.089066727 seconds)
    (301/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.114015702 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.092696012 seconds)
    (303/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.224947249 seconds)
    (304/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.09214638 seconds)
    (305/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.093487106 seconds)
    (306/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067782646 seconds)
    (307/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.11254646 seconds)
    (308/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.094205122 seconds)
    (309/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.12821393 seconds)
  done (took 40.135588511 seconds)
done (took 41.058604089 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.101710792 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.149643101 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.09557672 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.138138201 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.125712174 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092420258 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119907089 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097663188 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.125685703 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125731131 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.099778268 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.094955754 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096957404 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.12242693 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096922886 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.141420245 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124538385 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094294782 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.120370164 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086381219 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.121294879 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086390441 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.114752944 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070171634 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.123623547 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093617887 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.11863713 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120090281 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087800054 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.111330991 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.091836641 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118814139 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087342043 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125236058 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093898269 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.120378377 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096567178 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.122718121 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.087845884 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.113196397 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118940788 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.08783135 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117953556 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.09546056 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117119088 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093212136 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.120939654 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099548681 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.141736269 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115858923 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.096717046 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.124380423 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095701336 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.122527304 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090904875 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.123563558 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091643978 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.143486028 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.12113092 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092253537 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.120937288 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094948031 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.118734087 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094401172 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.121870459 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.122089091 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099215708 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.117657082 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097387594 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.119167424 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086438005 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.121457031 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089823041 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.112981441 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095550428 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.123522828 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.109720705 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.09497229 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.118385941 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.093097465 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.111393131 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090644195 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112729195 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093589806 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114779289 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070565672 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.115756052 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.094674458 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110736136 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.09742665 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.118175266 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094381961 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.114311949 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098750102 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.114042435 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.09232354 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.114015895 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087053798 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.11464455 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091340404 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.112478749 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088976207 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.122497141 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088260163 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.12034645 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.122840276 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087857541 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.118125303 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087795187 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.111596785 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101499054 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.122981316 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086485584 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118281581 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085390801 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.120554318 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086239297 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.113420862 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086581524 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.113253028 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092369774 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.113889349 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113859446 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.096462426 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126517099 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087472459 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.115009042 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090835024 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111632489 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093501091 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.11345139 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.088144127 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.114898541 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078738752 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11474501 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088527763 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.119281587 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090009103 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.121640286 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.088943728 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.121885361 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091052047 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.119440528 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092395299 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.112321872 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074354645 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118929192 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089454934 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.115942635 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086529552 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.114938968 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086704725 seconds)
done (took 17.132633433 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088219432 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.187068212 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152668543 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.143600417 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107398413 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.113475931 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122156696 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.120413779 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.1155618 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144659631 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110627609 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.134827229 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.149062381 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087403016 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113460057 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091985456 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114313582 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.10636776 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.148463709 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.134410567 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.166743378 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086278399 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148810612 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.13752979 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121623944 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.115909914 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113454513 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092661384 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.116448116 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103187481 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.135536903 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.115337232 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.089084741 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.136045795 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105419112 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.122215967 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087500637 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.121403571 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087385543 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.114381482 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142584398 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.134010704 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.094453342 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118080426 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.092154636 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.115249178 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089582572 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122207397 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097769977 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.118993867 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.126873776 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157659008 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091431147 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123346281 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086502762 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.124630409 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121950223 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090447186 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112911533 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091034074 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.113634743 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091677663 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128567332 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.143535386 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.09173515 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.12297919 seconds)
  done (took 8.725088311 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.10570637 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140765388 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.10531695 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.132800612 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112315946 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.089348469 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.131132662 seconds)
  done (took 1.806673818 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089736663 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134955309 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.110958648 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.13745309 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132551663 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.109667564 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124810949 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088177166 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.13276694 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.088890892 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.136145844 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.153202423 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089832213 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.124575662 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138096974 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089682709 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138414627 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088426154 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118183635 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111593489 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117926512 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135541102 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091584554 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.115442246 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102973265 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.116120503 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163092032 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094093728 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115965243 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091593131 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11368821 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.167939906 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102589702 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.128977267 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113053702 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.104829533 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128705619 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08684468 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.131437473 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094105671 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.130100949 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089084192 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116612431 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.086319821 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119912229 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.124965711 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.091016234 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.11568446 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092776306 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134850811 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089860343 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128876932 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089331859 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119919912 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.089592431 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121883188 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124122847 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.091559451 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.136356092 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.0909612 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132181626 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105309798 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.130267144 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131981759 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091994237 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128548593 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102295359 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.11866758 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089552082 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.119145105 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.130701434 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087823856 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116107549 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.101017256 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116316535 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113328465 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.139498729 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115250517 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.101603566 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114682653 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090369635 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.115253097 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.113183859 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119730075 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.08869932 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120345522 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091263457 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.114436158 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088594668 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.119332485 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.08731981 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.117562613 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.092169724 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.116355076 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.116749897 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.106690178 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.116608777 seconds)
  done (took 11.931877604 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091732288 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114553616 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.09276977 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115488593 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090262415 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116496587 seconds)
  done (took 1.623932561 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114644548 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119203976 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103555244 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.122483626 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157507285 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104371911 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.13173884 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125459837 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107407882 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.129753367 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129776426 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104872282 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.137857836 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122239393 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104283182 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122319028 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.129209016 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101238665 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.129025789 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095818952 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.139007594 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121963286 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097106574 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.134258426 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117508838 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096768421 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126275121 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102910798 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.129742476 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123380147 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096652072 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119164253 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095403819 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.126241866 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130553952 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.0958467 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122769456 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119332284 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102125777 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119397415 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104935068 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123059095 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.128304696 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095265045 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125903457 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.12129266 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095894249 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126681246 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.102776191 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121582657 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120250074 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095959697 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119915183 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094869513 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.123360061 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123605062 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094933982 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.131375038 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.095356129 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.12308997 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119170961 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093727311 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125191267 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118067305 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.106115576 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120575386 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096506371 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123968232 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121963483 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.099006188 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.121771763 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093858518 seconds)
  done (took 9.321489916 seconds)
done (took 34.397013721 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.696847593 seconds)
  done (took 1.694953751 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.730422899 seconds)
  done (took 1.729806487 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.346601267 seconds)
  done (took 18.348815803 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.516470921 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.600156975 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.825155485 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.183963185 seconds)
  done (took 3.127977033 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.968810932 seconds)
  done (took 1.99155506 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.297806486 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.261065376 seconds)
  done (took 1.565597606 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.791509287 seconds)
  done (took 1.807300286 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.370920388 seconds)
  done (took 2.380224013 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.335758269 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.186970629 seconds)
  done (took 1.536842388 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.553058893 seconds)
  done (took 1.566687502 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.970565513 seconds)
  done (took 7.992669381 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.260767863 seconds)
  done (took 1.293388766 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.303315121 seconds)
  done (took 1.325580008 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.592404053 seconds)
  done (took 4.613715835 seconds)
done (took 51.985836818 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099932211 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127575137 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.103825039 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.12595462 seconds)
  done (took 1.472307078 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.102312539 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.122514898 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10081537 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.12207568 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126914325 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.098726189 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124204763 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101187692 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.122594829 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096331338 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.122268131 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.11997184 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099543902 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123960006 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093890418 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.125296968 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.09829407 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.123792724 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124908118 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097335746 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119593404 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098172678 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.126895033 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093653612 seconds)
  done (took 3.709146317 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.101296609 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119720335 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096792291 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118670461 seconds)
  done (took 1.465810014 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.101122117 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.14330184 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.139551528 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100878452 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.14471182 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.136661636 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.092839812 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.119003132 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.095256437 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126419008 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091123545 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.150492282 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.13917664 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099347199 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.129500259 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.08866939 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118440938 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.137757647 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.100385593 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127697836 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.092683565 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.128729884 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090425761 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.141659636 seconds)
  done (took 3.862069688 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.15885398 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.152323471 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.140410549 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095498691 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.157361972 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.142000785 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088534027 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.142039632 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.086697906 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132319891 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.119166583 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133478664 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129267889 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.08765764 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115096804 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087323539 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.130048223 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.132070902 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091314154 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.146460346 seconds)
  done (took 3.499462048 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098875002 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118188495 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088677004 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117238632 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099932243 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121879804 seconds)
  done (took 1.675244029 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091501294 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114579511 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091086369 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115085682 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095580569 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115655816 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089153536 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115994056 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090341886 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.116183039 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.08953971 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114159523 seconds)
  done (took 2.271000845 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.463977686 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.093631739 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121949855 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.114867493 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.097977235 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.115852148 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.104375003 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.1204863 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141003766 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.090454554 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115807639 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.092540051 seconds)
  done (took 2.703706298 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240547256 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126970113 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.294460766 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192783594 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160504632 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172605459 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153542948 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167686923 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.226498642 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159699788 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21239041 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222626173 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126135417 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220834191 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112071648 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.147526837 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227804848 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2223254 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157021141 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235441719 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203163367 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167682616 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181267535 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153629922 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140566366 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171126143 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.12239102 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105553551 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239338745 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181947546 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220996403 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164907805 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148027789 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217580504 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250871803 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227431828 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190705486 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136841415 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.145615105 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.16843914 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271937115 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140539268 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239880349 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161159641 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10598565 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223078949 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171184796 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.176334811 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.151907105 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139662869 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200484623 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243516954 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.196182525 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139351232 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16450729 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162777445 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.170604178 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153484437 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255931418 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201554975 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181915336 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.121962222 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14714756 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19353172 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184859209 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.168546004 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.209826427 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145901704 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196607369 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187321298 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168577012 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221584815 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.186100602 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143092219 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172581948 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177199454 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172776511 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258631999 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179721394 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.124193478 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170452808 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151595392 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132028966 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.170889362 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126670887 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215421856 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151923876 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.136369752 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164623753 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164413768 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164276503 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200763504 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223060685 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122111176 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.112132633 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157380215 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.1575572 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193169232 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140927651 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163118788 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163358838 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130685026 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179551824 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097320959 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20371646 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092394679 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178586458 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185841186 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.128834257 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159824293 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15471207 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.149539933 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182038968 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200098262 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142790159 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134809063 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209276825 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176930217 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.151619466 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18098375 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228872953 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.116038993 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150830574 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228928531 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248106783 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114760883 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231768401 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155173303 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108850319 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.135440472 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181171177 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158045658 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162167792 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134162563 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.183488051 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238342677 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.100361727 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140142225 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189776269 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135203306 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133367178 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162177208 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148200988 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.112654465 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.148273206 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.154545884 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183022999 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180698609 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154962396 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166949937 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152862923 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252348279 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141963719 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.151200449 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150214641 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.094324386 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.222341362 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199935766 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131039054 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207092541 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.175061464 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158365075 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172399282 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136729317 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179400726 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130314997 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.09502906 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220662623 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168060169 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163307888 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.198851444 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156095184 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.184577555 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.182176656 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202146145 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178127362 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.165070842 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16074687 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.112181763 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160827008 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168047289 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.125442895 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.144007868 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.107363665 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158714835 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144344384 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136341923 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198755987 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200674896 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122138094 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160945613 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151247371 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181918772 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.130121188 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1807015 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.177256008 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149012223 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.224636182 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195884984 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188463984 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145337756 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232672848 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.094453828 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125646769 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142641541 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173227314 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107758582 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137430197 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168852563 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181033428 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213338299 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179043498 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163486779 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179456284 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193682782 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.094687033 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169504907 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212150935 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176886756 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.16362704 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142164953 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.154063701 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177597758 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158577913 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259957542 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168293806 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177376415 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240590787 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.149083126 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106198914 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152544192 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188454382 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155444341 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204873031 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121417345 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141927849 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162771708 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.133642385 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162721667 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18562023 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164377858 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222559105 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.15102272 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189326511 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127349648 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167285715 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159311856 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166567279 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.082407221 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178953659 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233500728 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148299013 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171651676 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194670176 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133494794 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.179508604 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213415916 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226274446 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137044455 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158594349 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133129849 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164700281 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2018426 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180093961 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160869673 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19315242 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159229808 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.109166285 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141906234 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152150915 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154111027 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133981286 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.150142788 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.178431881 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.11225011 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219294143 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16233887 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157349004 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173247071 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.122910342 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.146343962 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152747458 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243482267 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176021631 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215129147 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151460575 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179206296 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23561771 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097972355 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134877081 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.135091791 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181101594 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136357062 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19151903 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.148769081 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158123351 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18370607 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194671234 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141231158 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.092983756 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158422182 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17468709 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166381196 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153090593 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.160756637 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238181334 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.116120958 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134104108 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173453034 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158199466 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148414854 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200256588 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080003259 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151042118 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129395244 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105714369 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165332662 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238388962 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136465442 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.160205415 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198942848 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171686655 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166485687 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150263296 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123538249 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167898814 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230254122 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189209585 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.133110397 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158000218 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179239068 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197463165 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162355173 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.14158101 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204146562 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223179636 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.200394038 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.143301826 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169548095 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169167678 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158086274 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187752419 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137449235 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206236403 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13712552 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228036641 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153257036 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142751086 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178230656 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.120613062 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145723394 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216677587 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176532732 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107831999 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134992933 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168716721 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177864443 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155724652 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128243032 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182471315 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.126686016 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191831738 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26090523 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134382216 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15355095 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121272324 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136965343 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158952709 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160332203 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141707465 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.140218701 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233494759 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.136465602 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193385044 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232958063 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17335417 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175382022 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145893886 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.694745657 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.13087096 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195954454 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158217031 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207166609 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153394354 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175946153 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159184572 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169206995 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223550836 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161949694 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.231858557 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194935559 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.177371196 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13398314 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159402311 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162271967 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.145428785 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155042808 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169242288 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161497443 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.15298095 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.179077333 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170415115 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.134677913 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112085768 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229594517 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156852177 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189185158 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181123901 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139804727 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174169216 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187424519 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135424668 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.181628451 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239199402 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141857477 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122245453 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135775085 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.156443933 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263284884 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.096481447 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230544972 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176587879 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159339701 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168106015 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.1482487 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189729233 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158923768 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205532343 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146229118 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160075686 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128158356 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139753441 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.13192516 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155340408 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170021179 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.148408492 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160945547 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.141261115 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193709938 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.125867628 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145973725 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158090993 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19271282 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214684391 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.142810289 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138406285 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163043717 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151701712 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.176183488 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178732344 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.137238759 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107774968 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.138411796 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.16135314 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112452776 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1573631 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158873444 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166701901 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234420742 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.110179164 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.281852004 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142424617 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155167185 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.090276213 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.133906924 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150847746 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1183836 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15804229 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152276213 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262271063 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.147320865 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.105401553 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149972999 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.12762887 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136324474 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139105498 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195403381 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177017592 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146480368 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.082815103 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160732531 seconds)
  done (took 81.704768579 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.173016077 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.135702965 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.149489334 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.204224484 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.179788659 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270677806 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.213099721 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.255865309 seconds)
  done (took 2.696626671 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.094241232 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.148615752 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.154435243 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.135486772 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.093376037 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119624864 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.337554635 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133154101 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.092026031 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.141807163 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.147330754 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.120058947 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.517697503 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.120612368 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.119472555 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.084467105 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.119328449 seconds)
  done (took 3.789553223 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.464985783 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.72854326 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.482681309 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.127871355 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.249170836 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.13666466 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.86139356 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.216169492 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095422112 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.495736044 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.775373953 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.189481987 seconds)
  done (took 18.943742203 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.099483042 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.121501623 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.109072023 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.136505777 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.096966253 seconds)
  done (took 1.681863421 seconds)
done (took 130.490657969 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.10454667 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.408241881 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071701327 seconds)
  done (took 1.635074112 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.1079295 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137463347 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109316996 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136897617 seconds)
  done (took 1.620310124 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098951218 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126566 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109734294 seconds)
  done (took 1.457096895 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.325346571 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.192368257 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.144699401 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.108217071 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130047128 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103579356 seconds)
  done (took 1.46378447 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.098465848 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128169484 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098282785 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130971742 seconds)
  done (took 1.581709519 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095674146 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.07129403 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101684284 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.07582574 seconds)
  done (took 1.464150515 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114698196 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132824725 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104493806 seconds)
  done (took 1.477444007 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.130712071 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.140086242 seconds)
  done (took 1.3969171 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106707873 seconds)
  done (took 1.227021074 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.119534809 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.169885794 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.190980718 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.166254254 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.231232768 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.170290995 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.142130316 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.114925306 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.132756966 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.145639992 seconds)
  done (took 2.709596862 seconds)
done (took 17.925547242 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104110159 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.513693805 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.412849318 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117887673 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722895047 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380792813 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.032476889 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147348023 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166026463 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094367721 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141107391 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.674150604 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.060925961 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.468147487 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.019460486 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.466635295 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.706119538 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09400639 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119958164 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095845937 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.014633884 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092619632 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123236768 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092173377 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.704338304 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426110591 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095862953 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.465862128 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092376071 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127933902 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382691922 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123987217 seconds)
  done (took 17.394422672 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.099365 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174074493 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098677251 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.139483353 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.124386104 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09555485 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125980551 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093871122 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180515375 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124167601 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110473234 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122513994 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.12689443 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095883614 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143482107 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092384329 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126664081 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092344559 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123072498 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121810935 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112606112 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121486799 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094806074 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122858268 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094040608 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137447708 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124298003 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.094682257 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121568108 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100066335 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.129632655 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095610174 seconds)
  done (took 4.887856323 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.142679597 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184074195 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129949703 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127292975 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.169968348 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.125003988 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200805688 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.11764397 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.185642095 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.125331979 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141176813 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093863502 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.158303223 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.122401155 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116407885 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.12157213 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09655849 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123100056 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092442273 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12393435 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140773896 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093787245 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124134005 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09435218 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.124317986 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108141062 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.125425992 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121638678 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094587938 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127636231 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100675285 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125589775 seconds)
  done (took 5.21665499 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.098779875 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126494401 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110768664 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.139552319 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095769185 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.127660834 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097295502 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125600938 seconds)
  done (took 2.05721322 seconds)
done (took 30.679866282 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.112631723 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127802173 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.108138004 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135569534 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.104038886 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.133609587 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091376509 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.135245607 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.135263434 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.104092245 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137913067 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.093347741 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123931946 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091768596 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136562813 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097621209 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133422404 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101382406 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134989976 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.1319497 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.096689721 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.134768251 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.1039207 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.135215837 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104807879 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.135102618 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.138348353 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100455665 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.123280961 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095644723 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125532176 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.105555025 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.125528599 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.106864872 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127902817 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.098100125 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.125386482 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094831386 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.13436073 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133993605 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100911137 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.134498514 seconds)
  done (took 6.07967 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.109385511 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.140914429 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.106203142 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081561543 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.118525199 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080523365 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.139433628 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079555147 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.111074232 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.109006297 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073917122 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.107628153 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078510533 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102322616 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.07819113 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075229277 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.1093144 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077074406 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076877345 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106863031 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080510307 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073806679 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.109373052 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079931478 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074616573 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.113100086 seconds)
  done (took 3.630854323 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.101797705 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136780586 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113460685 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.185341778 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162867861 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100498285 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.134513368 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.140595911 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109817098 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121188123 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097599165 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.150909461 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111116682 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.130665968 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092558965 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.139707897 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.145811665 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094299637 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.129210372 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112566598 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139998817 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102259608 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.144546725 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.134195825 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093230864 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123569212 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.09690943 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.136654839 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098040967 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.133108085 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.126384327 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.097978797 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123376905 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105599958 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.127200635 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094362493 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.144508616 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132529662 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.102331737 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.122387226 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.096746845 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.12307905 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114394477 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.168485798 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091627269 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.131287335 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.129117779 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103704229 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.122474978 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111506614 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132657643 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092222031 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.12728867 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.092004617 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122756681 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105624299 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.125397261 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.124243195 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.104317774 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125773464 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106353706 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.12689234 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108818753 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122542152 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.09914568 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.122485653 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.091724757 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.122021944 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.144469131 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094860589 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.165428378 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093403503 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.125360941 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.130760795 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.103182727 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128072935 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093901393 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139018436 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102298622 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.127328545 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102079845 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.127032697 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095899184 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.142064583 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.124976366 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.096357876 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.12310355 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.10118012 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.12574574 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094311112 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136949869 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.093207733 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.127090076 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110156527 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122798342 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.122736473 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100705055 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.12693588 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.093097036 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13634831 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.097877635 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.123973675 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.13060477 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.094096672 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.124993253 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.104239427 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.127128857 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092108234 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127563822 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099602986 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.12396021 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093504681 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126350707 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094518611 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133424443 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.098753505 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.128728791 seconds)
  done (took 14.953812356 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.232262793 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.217158055 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.238506233 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.263755497 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.137134137 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115614379 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.214030426 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.157840901 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124134329 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.163210473 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.163443397 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.181749395 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.140331777 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.181722851 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.144182039 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.121552682 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.11363845 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.166318397 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.216794581 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.292069669 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.113637274 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.133679485 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.16317715 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.162165301 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.106638507 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.135224179 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.139628172 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.106244031 seconds)
  done (took 5.803670168 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108942478 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.157969709 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098993396 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.146992282 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149646804 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.09237527 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.129041998 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.09470258 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.137632878 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135551307 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093275111 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.130572681 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099530465 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.134324154 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123490661 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103290552 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.133451878 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094815149 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127596409 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097769827 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.130938633 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101830263 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.128903866 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.121488671 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.104798383 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122305398 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087387603 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143057285 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122460594 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116902041 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.12192159 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.099988574 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.134669839 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094732062 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.124127328 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094734167 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.12713399 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094739237 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125726098 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091390685 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123552586 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077719205 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.123730623 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.135895865 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.100627201 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079583591 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.130599443 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128579706 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095752766 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121439936 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.098138494 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125429187 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097333739 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130785848 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.099306276 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.125265377 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096648546 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116971612 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100534058 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.126301882 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085851229 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.12128844 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099775363 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118058489 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101646359 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128812024 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092789029 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.126671458 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.096890253 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.13039748 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095835633 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.127788265 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091325873 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.127052194 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096214871 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.130055481 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.096329465 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.124575894 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.123140252 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.095474559 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075216354 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124647117 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074627561 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.127327634 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092161374 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.123523174 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.096242355 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130587081 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.138691837 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095972234 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.132839712 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094555762 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.1239701 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097869936 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.114706421 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.097407948 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139900811 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.14114994 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094538042 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122161997 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107198741 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.126678243 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092535576 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.1070289 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102289722 seconds)
  done (took 13.066291907 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.12732375 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.154354793 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094636946 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.143736841 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.156980432 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158119627 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101780789 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131240811 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.09531845 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142556585 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093586627 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132869361 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.097329586 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137701101 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157570931 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104097718 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126218252 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.106613222 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.132503627 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.170015903 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111930691 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143688916 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.108375334 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.126271731 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.128308469 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.111847668 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.162274148 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107154509 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.138895979 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142417246 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109519188 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.162187511 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.144021796 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.099557399 seconds)
  done (took 5.534451146 seconds)
done (took 50.205457539 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.246130923 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.48618583 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.238241532 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.228811395 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.26631822 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.241813914 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.248458359 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.249802157 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.317969631 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.236086521 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.493326825 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.897537427 seconds)
done (took 59.313690593 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.347243734 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.370170922 seconds)
    (2/2) benchmarking "String"...
    done (took 1.500131174 seconds)
  done (took 4.033251738 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.592479736 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.190521507 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.503120965 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.236186718 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.239749201 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.527853687 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.005553267 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.626460519 seconds)
  done (took 28.49205959 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.239573518 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.637918703 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.166179981 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.158681037 seconds)
  done (took 19.36758243 seconds)
done (took 61.997118374 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.264380253 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.317097136 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.264595078 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.217650424 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.374404582 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.261966941 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.669716593 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.484363836 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.238361789 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.219890904 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.260349597 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.257282076 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.28440007 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.648504822 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.247295751 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.249127627 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.278809848 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.74486507 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.654094523 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.24160223 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.246830271 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.322157785 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.271379149 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.236902045 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.256723355 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.239026678 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.238253476 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.249486337 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.940117112 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.23979533 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.254394998 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.841558139 seconds)
  done (took 193.679706759 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.237975205 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.222970812 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.380314224 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.280175958 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.567820022 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.439345024 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.376204765 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.813589576 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.262332896 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.248697063 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.362344139 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.239727844 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.463124479 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.226440655 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.248971653 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.251117585 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.476965252 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.490877398 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.258507916 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.512712691 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.257386039 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.294910444 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.227450916 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.340788269 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.259730881 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.353208638 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.264464117 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.265978488 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.451086097 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.382464787 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.282224426 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.284059262 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.880915026 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.098513548 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.247647637 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.247492403 seconds)
  done (took 150.666042499 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.541347396 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.239595799 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.239193247 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.237650266 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.272607343 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.239376651 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.819398752 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.817160363 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.740698782 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.48307359 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.240239029 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.297949488 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.548547573 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.238849935 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.331893143 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.24818518 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.236569241 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.251165849 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.282833816 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.237973365 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.234239779 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.825581851 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.250444477 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.420333668 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.258679695 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.234874915 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.268543691 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.623912218 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.234455162 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.267326529 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.557750527 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.286561116 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.234401923 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.604211936 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.659035239 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.343996758 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.234463342 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.266205783 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.23325538 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.505852854 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.233305462 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.234999648 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.236559427 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.881154526 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.236664147 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.801069613 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.235620579 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.202329847 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.237903845 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.233916867 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.656510351 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.841744319 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.256571693 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.232942526 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.235996626 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.233652648 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.233987783 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.265683102 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.232512335 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.667946906 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.33704481 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.252151097 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.238051583 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.268584903 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.234603976 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.435937455 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.238759562 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.645733513 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.292081156 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.341289351 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.817802573 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.236832491 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.33008543 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.3545908 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.234771173 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.235337309 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.235192831 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.235765853 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.342797486 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.235714325 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.656437187 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.239879518 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.236151762 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.297435032 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.233824897 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.330359402 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.234638708 seconds)
    (87/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.234196027 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.2350984 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.235406465 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.582647923 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.018107022 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.332701107 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.234356143 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.236463171 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.234104297 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.654271478 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.804741361 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.465701401 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.237431356 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.659448966 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.237789969 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.666012083 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.781373427 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.871501123 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.238256857 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.3448813 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.237192704 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.234673615 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.23308571 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.261893089 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.253647829 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.294773639 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.236174261 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.631866685 seconds)
  done (took 350.570134936 seconds)
done (took 697.62279144 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.95998151 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.907015861 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.050220628 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.920951435 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.904319777 seconds)
  done (took 10.902470963 seconds)
done (took 12.0608355 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.427650357 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.430431502 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.296281871 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.42850226 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.263295532 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.447176018 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.407432213 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.255133157 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.340243694 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.318101922 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.338080177 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.28923317 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.263635975 seconds)
  done (took 18.666678818 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.561528416 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.552236109 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.297502902 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.547298885 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.274678026 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.558322614 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.439700113 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.473607292 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.444068717 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.26946412 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.249827846 seconds)
  done (took 16.830955176 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.564964417 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.559876891 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.301076683 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.564141211 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.276937519 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.566054387 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.4418495 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.455254193 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.461360519 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.268327436 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.248262008 seconds)
  done (took 16.87072267 seconds)
done (took 53.527263348 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.245585295 seconds)
  done (took 2.407938177 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.279718744 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.442258453 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.260137608 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.248732037 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.244297493 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.245144984 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.250514318 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.244366971 seconds)
  done (took 11.377721662 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.242742415 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.240805519 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.244036155 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.244134563 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.24003104 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.243673467 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.240652588 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.238474478 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.242310486 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.239538607 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.240157051 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.244535006 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.243032059 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.241299148 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.242188939 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.239527865 seconds)
  done (took 21.030049469 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.241896537 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.240624169 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.240294716 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.240473893 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.242311014 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.241319893 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.24125613 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.240301744 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.239580012 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.240644588 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.241378586 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.240886273 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.243886716 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.240171287 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.24138448 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.241142611 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.23947884 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.24067825 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.24442895 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.239649435 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.243024012 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.238667863 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.240513742 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.239583871 seconds)
  done (took 30.94812085 seconds)
done (took 66.926234644 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.305730702 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.936102532 seconds)
  done (took 9.403409016 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.241842746 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.242118242 seconds)
  done (took 3.646557573 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.243487565 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.240320695 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.240693126 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.240756955 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.241193726 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.240740814 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.242247286 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.241988647 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.242212459 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.241816301 seconds)
  done (took 13.577219839 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.242730896 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.242237399 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.240085201 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.242271375 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.242036448 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.240076112 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.242422012 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.242822816 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.242521416 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.239758898 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.242499384 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.241207077 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.24121695 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.241132065 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.242386064 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.240386566 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.24066478 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.24113632 seconds)
  done (took 23.509784532 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.241977029 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.242234062 seconds)
  done (took 3.646484579 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.24005533 seconds)
    (2/7) benchmarking "second"...
    done (took 1.238790138 seconds)
    (3/7) benchmarking "month"...
    done (took 1.239933577 seconds)
    (4/7) benchmarking "year"...
    done (took 1.240209013 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.239813312 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.241105798 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.239959624 seconds)
  done (took 9.841179848 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.243647407 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.419518891 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.499516139 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.867020081 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.244454445 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.246593015 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.112121962 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.246344528 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.248385773 seconds)
  done (took 14.291520359 seconds)
done (took 79.077616886 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.24670525 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.254289925 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.39682821 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.260257877 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.257271443 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.536339279 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.284965809 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.362160316 seconds)
done (took 37.761902689 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.258620104 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.975545525 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.972095392 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.234688159 seconds)
  done (took 11.346275555 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.223157191 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.154088988 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.21999218 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.245470345 seconds)
  done (took 18.007210408 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.222569249 seconds)
    (2/2) benchmarking "read"...
    done (took 1.57582567 seconds)
  done (took 4.961071995 seconds)
done (took 41.735780522 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.24406873 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.242284546 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.240025639 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.241487843 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.239997503 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.241165363 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.240961761 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.242371712 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.241592317 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.241460969 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.240903044 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.242484643 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.24258149 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.238970276 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23960997 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.241539961 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.239073501 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.239279857 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.239970018 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.240845411 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.242786365 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.239173633 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.240270709 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.238203855 seconds)
  done (took 30.943604564 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.24210293 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.239300252 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.242997653 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.243530637 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.239755978 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.243394341 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.242454729 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.239519611 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.242791452 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.241684835 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.240463581 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.243144974 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.242131114 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.239769129 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.2430788 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.239719236 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.243807897 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23925156 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.243534622 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.240518612 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.242876765 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.240545131 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.240662978 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.242570366 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.239718942 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.241181964 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.243057048 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.241683367 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.243532152 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.240290507 seconds)
  done (took 38.413204028 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.248836772 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.248909838 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.242582873 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.243719902 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.242323055 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.243349721 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.242875537 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.24334841 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.243629352 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.243216636 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.243689662 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.243841245 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.244151157 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.244352967 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.243383054 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.24418122 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.24354293 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.243104956 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.245645818 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.244086373 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.24427076 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.243675634 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.244421561 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.243533178 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.243843325 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.244566471 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.243254908 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.243369051 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.243875108 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.244872078 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.244128608 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.243937377 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.244034046 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.244118984 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.244652735 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.245068455 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.248862647 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.251287486 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.24431307 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.244694621 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.244112986 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.245050897 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.246341715 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.245714157 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.244216245 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.244870725 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.245068903 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.24479461 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.244839804 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.245532412 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.245917474 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.245632783 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.245976579 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.245593259 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.24463027 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.245723035 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.246116691 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.247741091 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.247113582 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.247010196 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.248203803 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.246972814 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.245553207 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.245217349 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.247075196 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.246274429 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.24677302 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.246637438 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.246282571 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.245339697 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.246096627 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.247313988 seconds)
  done (took 90.812862707 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.247449138 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.245048246 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.244618884 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.243423386 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.243135218 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.247137122 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.245245615 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246569098 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.247062517 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.247313944 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245950292 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.245942595 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245593237 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.24714321 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.248686144 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.245079551 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.247907597 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.245360003 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.248302258 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.249307751 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.247551884 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.245839045 seconds)
  done (took 28.585988311 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.249278676 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.250156921 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.246756187 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.25009771 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.246342613 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.248466979 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.249481762 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.249741079 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.249008758 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.246065983 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.246671155 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.249402092 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.246139883 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.2454755 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.246050617 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.248772492 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.249433448 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.248868562 seconds)
  done (took 23.634299539 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.246917894 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.247896384 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.248564846 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.247156377 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.248188421 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.248919507 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.247119625 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.250583812 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.250454767 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.247688853 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.250616976 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.251028501 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.250753718 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.247863348 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.249428594 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.248175706 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.250526545 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.247795411 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.250338388 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.247729491 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.248404204 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.250799177 seconds)
  done (took 28.645584587 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.251680868 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.251287368 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.24870744 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.247788434 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.247505657 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.250972272 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.249479649 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.249040299 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.25192579 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.25036149 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.248503874 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.252943789 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.250231573 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.251093058 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.249284645 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.248794802 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.251893134 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.249096885 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.251184714 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.24838769 seconds)
  done (took 26.169060879 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.253197972 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.252964069 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.253186281 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.253433076 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.253028158 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.254843328 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.254771979 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.253747406 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.252360588 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.25477023 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.253921588 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.254439215 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.255650608 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.254980187 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.254030149 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.254960329 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.254875607 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.254423574 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.254529149 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.254604742 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.254742029 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.255314672 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.255737313 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.254533681 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.255281254 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.2545519 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.255702825 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.256127168 seconds)
  done (took 36.296011021 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.254153189 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.254500663 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.251873888 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.252615415 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.251276579 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.25183185 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.25279712 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.252585481 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.253730211 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.252285946 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.256748466 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.254837242 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.254185309 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.255161341 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.25429814 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.254378384 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.255613758 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.252379158 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.252034246 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.252779068 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.254671342 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.254760124 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.253958206 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.253042894 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.253329198 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.255772076 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.25391847 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.252974496 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.255912183 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.253457684 seconds)
  done (took 38.785820551 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.27562273 seconds)
    (2/2) benchmarking "in"...
    done (took 1.274259787 seconds)
  done (took 3.723581272 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.254896184 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.256437469 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.256436215 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.25435987 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.254116995 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.256628637 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.257635358 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.253981353 seconds)
  done (took 11.219462994 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.256705527 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.256386901 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.256797839 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.257095418 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.256559072 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.258757694 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.265580634 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.275732115 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.258512879 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.258650574 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.263629214 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.267779179 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.262662314 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.258377681 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.257697828 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.258614224 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.257786343 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.258293082 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.258935307 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.258647188 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.25964341 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.260884639 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.26190631 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.255104556 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.260341464 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.269641943 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.28084371 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.257926516 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.260160157 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.261899443 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.2603777 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.255323855 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.25831397 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.259657073 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.260769639 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.259474847 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.269707112 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.27750658 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.266187481 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.278897487 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.259476229 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.256041455 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.261262399 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.260824976 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.260213888 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.259928237 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.260363004 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.256990901 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.260562012 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.263994033 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.264841134 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.259749715 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.256478848 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.264430634 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.26129224 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.2692902 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.279536687 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.263295402 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.269563678 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.27204324 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.292724219 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.285555116 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.261775541 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.2619195 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.27150713 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.28323922 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.269662453 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.277238074 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.258165905 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.260726705 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.268556102 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.2936353 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.287497077 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.263009631 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.26168365 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.26077231 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.263193082 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.262399806 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.270279793 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.284355484 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.261764031 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.263315138 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.273126831 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.284505228 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.263566679 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.262202074 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.264013891 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.263296944 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.264286872 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.27561272 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.281353606 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.263669787 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.263664605 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.262146682 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.264948832 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.264673237 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.262544211 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.265560575 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.260030689 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.264111787 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.264562537 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.268486105 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.272017154 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.26495575 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.264185499 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.270831669 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.283010719 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.265921894 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.27140855 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.263498201 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.264665867 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.267240303 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.269606741 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.260699299 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.267110231 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.272879954 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.265466454 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.265891272 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.264358144 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.266141276 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.274087246 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.289132274 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.265503041 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.264658397 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.269684267 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.276457428 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.266468115 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.268832569 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.265148065 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.263882511 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.262574548 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.265971412 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.264220427 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.266851075 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.26566992 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.268192604 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.263738162 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.265413035 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.267179312 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.267499294 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.268571233 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.265991877 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.267960119 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.268731514 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.267126117 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.268278272 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.2741914 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.286572189 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.267208855 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.26692455 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.264623253 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.266711545 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.267478192 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.267422704 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.268862616 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.268568554 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.266922239 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.267281897 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.268541335 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.267680334 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.267752112 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.267442042 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.27218748 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.268164516 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.27168346 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.267601611 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.265014299 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.266543401 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.267834293 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.268151713 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.267721639 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.267457994 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.271694097 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.275992898 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.268406844 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.269372087 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.272982294 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.26984939 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.268569426 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.268857546 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.272901427 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.277087425 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.270176678 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.27658402 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.289835135 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.269445653 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.269692883 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.26975103 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.269568177 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.2696102 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.272431672 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.276253417 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.281165352 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.294562471 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.271797877 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.272311151 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.270908241 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.273771099 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.274573508 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.269727738 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.270410962 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.270166847 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.270225125 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.270680291 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.271617889 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.270569803 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.271273733 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.271972248 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.268809356 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.270078445 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.270794849 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.271508389 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.273398441 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.268199335 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.270152243 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.270726089 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.271130268 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.267404108 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.270478079 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.270693701 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.269330736 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.271240506 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.277696296 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.267981711 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.27215496 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.27208014 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.270991853 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.271666941 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.271939594 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.274851175 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.272597026 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.280176471 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.291443809 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.272982482 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.279552182 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.289836896 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.272906232 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.275058245 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.272729779 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.269327422 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.275403066 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.278921374 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.27364294 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.272734472 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.272556908 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.27299658 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.272307064 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.280170132 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.290427673 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.27403839 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.272696751 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.275359631 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.270745846 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.274988042 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.273833228 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.27421495 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.275675582 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.274043221 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.272430555 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.274536094 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.273902056 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.274368133 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.275136615 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.277499156 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.280825457 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.281120635 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.274717362 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.275791323 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.27521299 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.277187653 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.274885904 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.27473913 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.275104375 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.286546969 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.298931891 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.281039787 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.295369648 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.276028139 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.280936489 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.295814925 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.281606802 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.275943464 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.276306656 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.27502392 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.274502898 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.272712584 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.275494091 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.27507583 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.276175876 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.27748131 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.279089667 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.27537402 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.274366523 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.275984011 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.275834586 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.276009569 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.275044361 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.276811447 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.279122715 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.278664555 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.276306174 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.276057272 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.28295612 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.296365209 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.277671897 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.275835714 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.277565252 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.276516817 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.277608488 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.277452042 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.281662988 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.283697007 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.281209807 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.285068511 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.278479217 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.287541038 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.277296494 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.280844938 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.285507498 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.275248155 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.276404589 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.277820721 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.277482722 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.285385982 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.298942735 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.280486793 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.281264329 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.279735748 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.279910323 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.278885822 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.277977391 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.278466518 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.279304901 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.288252904 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.298089945 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.283498056 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.280189593 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.275579621 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.278595096 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.278924334 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.278344825 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.282290727 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.279431049 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.279553599 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.277738285 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.279604857 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.278063196 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.279485166 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.280454877 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.275966785 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.279064905 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.288423193 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.300864308 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.283010502 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.279586661 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.287239253 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.298982425 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.286363576 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.299438061 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.280876207 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.279814837 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.2794076 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.281985055 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.280801487 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.281181961 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.28079309 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.282282692 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.283850214 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.281429295 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.282674893 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.281697183 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.282065354 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.28126902 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.291003257 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.301935231 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.282815161 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.284919426 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.278328278 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.283024319 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.285416008 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.281778002 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.281252024 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.28485617 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.291784187 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.288799667 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.281444567 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.281149432 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.283231002 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.28093214 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.281984378 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.280848381 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.282816944 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.281831207 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.283193346 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.281272267 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.28712831 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.282270993 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.283475425 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.283105687 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.283735847 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.29197865 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.301637378 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.283744011 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.283741086 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.28467504 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.283776783 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.285011191 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.282737052 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.285376165 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.281988088 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.284708943 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.290305755 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.289775887 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.285756445 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.283856294 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.28260271 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.285005554 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.284788038 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.284101903 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.284452115 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.284168919 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.285467527 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.285000908 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.28522588 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.284013392 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.284071483 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.284981396 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.283843519 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.287565884 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.290869784 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.285040615 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.282398716 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.284560196 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.284138036 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.284295851 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.284860104 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.292391873 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.307094169 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.295094814 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.293378405 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.288796659 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.285770444 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.287055559 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.292660084 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.283671072 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.287414749 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.285446466 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.287135488 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.286714197 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.289529985 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.286217836 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.29372409 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.305858754 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.285637271 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.296144252 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.305106869 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.285804156 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.289544196 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.290895713 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.28768415 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.284311385 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.28468485 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.286149322 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.293718729 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.307012227 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.286577799 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.288448595 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.286981686 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.290277094 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.291759877 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.286369624 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.288544351 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.283905956 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.289048524 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.286751173 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.286832872 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.285980725 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.287679807 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.288659476 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.291554363 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.294092087 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.285369713 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.289411895 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.288071134 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.289294946 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.289490902 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.288656677 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.285908602 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.286241695 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.288431921 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.289177065 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.289029742 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.290513091 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.289197398 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.290739874 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.2895124 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.288519234 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.292990221 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.298609574 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.296152245 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.286304436 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.289027545 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.290259965 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.291955493 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.288674204 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.289804345 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.290816529 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.291902264 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.288565256 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.289846582 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.290537489 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.2930462 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.307383057 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.308963222 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.291253067 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.291052592 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.294333049 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.289601148 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.287712016 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.291020614 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.293243019 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.293584188 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.297345788 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.290515719 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.299201541 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.310318466 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.293147157 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.293920902 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.293290195 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.298761407 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.29329606 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.291471064 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.291225876 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.296256395 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.306284059 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.290363863 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.30136531 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.319909424 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.311052512 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.293345873 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.292626984 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.2922772 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.29219411 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.295130549 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.292477786 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.291468483 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.291626661 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.293445947 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.294163886 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.296249595 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.293143202 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.293406453 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.291768711 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.293052933 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.294408749 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.290659474 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.29100928 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.293342704 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.292381428 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.293868142 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.293751867 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.294584326 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.305380534 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.319510811 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.295203897 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.29420722 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.291898026 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.296801975 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.298176582 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.305447072 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.300358366 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.294963487 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.294018504 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.296949971 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.294349351 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.294216087 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.292782683 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.294156224 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.294484819 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.291665264 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.306979718 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.318634238 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.300103105 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.294506899 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.294905709 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.293846958 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.294924952 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.295575601 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.295141535 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.298005656 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.29827866 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.299155042 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.29504605 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.295753112 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.298768527 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.301928667 seconds)
  done (took 763.691672432 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.294204173 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.293027668 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.292304611 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.293667499 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.292412704 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.29381473 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.293134126 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.292282462 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.293918114 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.293214176 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.294184205 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.29297583 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.292519417 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.294479897 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292220489 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.294045519 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.293493484 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.293870666 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.29369928 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.293563446 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.293354792 seconds)
  done (took 28.371356754 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.29726362 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.294296304 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.293484863 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.296938273 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.29380923 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.296837494 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.294299537 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.296251908 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.297654674 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292948614 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.298756385 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.296400342 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.293770354 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.293915732 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294896353 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.297785095 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.296458497 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.294929845 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.297462066 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.296970783 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.296523567 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.295137625 seconds)
  done (took 29.718692509 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.297784621 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.298260598 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.298202158 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.294842889 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.298876927 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.295498163 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.299190848 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.298545694 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.298224569 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.29988815 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.29757004 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.300108442 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.305824347 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.303113416 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.302186794 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.29923717 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.442851217 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.299341656 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.300661918 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.29914634 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.296578618 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.3049424 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.315967023 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.295899934 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.298227109 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.299102168 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.300281903 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.299784578 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.300298294 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.301646387 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.304165689 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.299428643 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.299750166 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.303329674 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.300082942 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.301307979 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.303926624 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.300791933 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.297449141 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.299742381 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.310226597 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.319272766 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.301339654 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.306578871 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.319814685 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.30096422 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.30387063 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.308142834 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.298447173 seconds)
  done (took 65.135947408 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.300529327 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.302099043 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.297663626 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.300402913 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.301447889 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.302233248 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.299933712 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.302453784 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.298908628 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.298574762 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.301765307 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.298886005 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.29891133 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.300686476 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.302700061 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.300497058 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.29843922 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.298040686 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.299788962 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.299620859 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.298901505 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.30212362 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.30213825 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.299865727 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.30366026 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.298835211 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.299481887 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.304166587 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.300038751 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.300094676 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.303719642 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.30339849 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.306032802 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.300619833 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.30140951 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.303548791 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.303619962 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.300805648 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.302565714 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.301020545 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.303291426 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.303443557 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.303312831 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.303720609 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.301266991 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.301323002 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.301398341 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.301956909 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.302744027 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.305034073 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.305218192 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.302525216 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.304482677 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.302432653 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.304464566 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.305220681 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.301623165 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.301691828 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.304649585 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.301384496 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.30318587 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.304891555 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.303330127 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.305638246 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.304759218 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.302741569 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.303748802 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.304788218 seconds)
  done (took 89.753343084 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.306319873 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.305716705 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.305028431 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.306019606 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.30708171 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.306235116 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.30686855 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.30630855 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.305636221 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.306406361 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.307441279 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.305360587 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.305726656 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.305113298 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.305578424 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.305481079 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.306729517 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.307244614 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.306469633 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.306181341 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.306678308 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.307553176 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.306732541 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.306642678 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.307259913 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.306835336 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.30762306 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.307001757 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.307553356 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.308024348 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.308360633 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.308173993 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.307371686 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.307228836 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.307711226 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.308806454 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.307116255 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.307931203 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.309902536 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.30804034 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.306964002 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.308058167 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.307355419 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.30829149 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.308908474 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.307916657 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.307196529 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.309484195 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.308207249 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.308973619 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.309216207 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.309120395 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.309749669 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.308181528 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.309471398 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.308839416 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.309522135 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.308882635 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.30953205 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.310031113 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.309352137 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.31004452 seconds)
  done (took 82.291495849 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.308795445 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.309265513 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.306539762 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.306664294 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.308601332 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.307014381 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.309279842 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.309994352 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.309966069 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.310518597 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.310048859 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.306739019 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.306933327 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.310134988 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.307362385 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.306484395 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.307657956 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.308298749 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.310094445 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.306874036 seconds)
  done (took 27.390690583 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.308484062 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.308880384 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.308361353 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.308030419 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.310053961 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.30826735 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.310301726 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.309907068 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.309525096 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.31040573 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.311599256 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.311975234 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.308810275 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.308892359 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.311056002 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.308967515 seconds)
  done (took 22.17989489 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.308362623 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.311065461 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.312030784 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.312576831 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.309564781 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.308645766 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.312044007 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.309690572 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.309681974 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.313912105 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.312105833 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.311317175 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.312718739 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.311514641 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.309852273 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.313457965 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.310186346 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.309891253 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.313507434 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.311574071 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.311600577 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.309343754 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.313582925 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.31218179 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.310751893 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.310740043 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.310398288 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.310334122 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.312405046 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.313037626 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.310866489 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.310779727 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.31032054 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.311049737 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.313067007 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.311241926 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.313858916 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.312893064 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.31373771 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.313702951 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.314244252 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.311231923 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.313122664 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.314329706 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.312307726 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.31393634 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.311248104 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.312013262 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.311715193 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.311141805 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.314282992 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.314493625 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.315374179 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.31519796 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.314943293 seconds)
  done (took 73.387490496 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.314512385 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.314464828 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.312670401 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.313911847 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.314665342 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.311606116 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.314117916 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.314115579 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.311877974 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.316075789 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.312061313 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.315243071 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.312827919 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.315194235 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.314232099 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.31533824 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.312907352 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.31297721 seconds)
  done (took 24.878452091 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.313660891 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.312863875 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.316163967 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.314484496 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.314182492 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.316578021 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.313515057 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.316347547 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.315840446 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.314531435 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.313644728 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.316353048 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.316951346 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.318082191 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.315276411 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.315220313 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.317718413 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.317852803 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.314692662 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.314256591 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.317764557 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.318167115 seconds)
  done (took 30.175714271 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.318350927 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.315973795 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.317444048 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.333590304 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.334915254 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.340628268 seconds)
  done (took 9.19301134 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323710289 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317357003 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.315405471 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318454403 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31783448 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316259477 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315118482 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315212918 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318440663 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315866227 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316155041 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317380856 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31792662 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314885495 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31907649 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31727522 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315460465 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317218685 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317325536 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31881739 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315961277 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318567665 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314693588 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314647724 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316579811 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316210936 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317939368 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317114898 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316725372 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320291109 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319373291 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315940121 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320143487 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316166578 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320614112 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319764775 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317009037 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319708499 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318966372 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317299528 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.320187825 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31930416 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320492834 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317856718 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320043003 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315967181 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318227235 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318074631 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318662104 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320503257 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319900572 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317465716 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321517156 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321159402 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321130334 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321471673 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320133599 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316539372 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320751011 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318738769 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318686539 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32068067 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320656168 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318717902 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32109247 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320118599 seconds)
  done (took 88.2639384 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318980068 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.318006447 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318958087 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32048977 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319394918 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319370984 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317667453 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320152623 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318838003 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319969676 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323105382 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320119403 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319938593 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319635159 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320447471 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320990191 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319291734 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319175078 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320383854 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322045072 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320795115 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321410987 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320594 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320039299 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320561641 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322693074 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320647803 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320571522 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320825088 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320516425 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32215452 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320874104 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32125761 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.320912193 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321292272 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321721889 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321311781 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321421224 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320588449 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.324444293 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321416221 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.325505588 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320549901 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322175594 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321922596 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322345995 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321349941 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32260329 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32194606 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322976412 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.324112611 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322314817 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.324069876 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320814183 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322100401 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.323084456 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322911132 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322384199 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322836261 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324788672 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322565373 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321830901 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.326209892 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32258128 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322281129 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.324083771 seconds)
  done (took 88.452407575 seconds)
done (took 1781.274072956 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.361594797 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.35725021 seconds)
  done (took 13.958519686 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.489110004 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.444200568 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.325505027 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.321230296 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.325814832 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.327453824 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.34609117 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.325872839 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.326892242 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.325561209 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.32888791 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.511025853 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.323929836 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.32702077 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.326550107 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.419199119 seconds)
  done (took 43.036609022 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.351759393 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.3321358 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.439805491 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.350732449 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.353068219 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.512642568 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.386800383 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.329882908 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.497367845 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.373774408 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.880714707 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.357446004 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.329294095 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.408545435 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.348512087 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.513144412 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.572269541 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.847474295 seconds)
  done (took 30.425706836 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.763588093 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.334578645 seconds)
  done (took 9.339245579 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.338213503 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.324404427 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.326658482 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.353670345 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.351829311 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.32259674 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.399093902 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.387679911 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.347876861 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.380235222 seconds)
  done (took 64.776303758 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.348787308 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.330291764 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.330878397 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.328211864 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.321726739 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.327020836 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.328750188 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.326580024 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.817553574 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.458714806 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.351414917 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.337679554 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.348383759 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.331298409 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.328529801 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.366634383 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.484278233 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.34570397 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.325304905 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.335629384 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.329779254 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.428392009 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.372370918 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.327271576 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.453004664 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.844329728 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.339150231 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.337450236 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.465681934 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.344952057 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.330573862 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.331382538 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.333596821 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.921758445 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.85610487 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.351892442 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.355033578 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.33932289 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.328341057 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.446555479 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.349269414 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.336129195 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.323993352 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.822171217 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.488807739 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.443369877 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.535198847 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.337986312 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.333460139 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.3912169 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.33246617 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.332882875 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.360579758 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.078962989 seconds)
  done (took 111.020996645 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.338883038 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.812501158 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.493467582 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.347378522 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.109407451 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.014177465 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.341913519 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.601795777 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.355744906 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.327050924 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.603771722 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.819247714 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.347610653 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.405357342 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.341965722 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.398953048 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.337095677 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.072707286 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.342569149 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.330789035 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.752125408 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.344510189 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.332974819 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.492039467 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.364598633 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.77659294 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.741461738 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.736301708 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.346619655 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.331409142 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.774385738 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.344812735 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.398015606 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.329438119 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.598024828 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.670465921 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.665004536 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.341374291 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.339089487 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.329478473 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.355458135 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.780055465 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.672806103 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.342948865 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.326245821 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.794883999 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.343957087 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.329997867 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.32997392 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.525624725 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.309075404 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.328980652 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.73320244 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.326487388 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.668452116 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.41128128 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.397199236 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.810920199 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.344174516 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.389920848 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.394767879 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.33002602 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.334061892 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.328337136 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.333042351 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.665173697 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.877528243 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.335249286 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.665175494 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.790636419 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.344493879 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.837802074 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.259403408 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.354342803 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.398795054 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.328134369 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.906453554 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.820915339 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.347991384 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.328632768 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.651033339 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.347830952 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.602472705 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.344078386 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.331328033 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.753361978 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.349805221 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.365800463 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.329770723 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.349228128 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.963509404 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.334005414 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.608198393 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.385202483 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.331662956 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.329457256 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.362334291 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.330587046 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.33134176 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.336412676 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.838013584 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.353941691 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.455247461 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.351073552 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.343560406 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.330799787 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.329155641 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.332858931 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.548929402 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.852884428 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.338621119 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.331670374 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.335101109 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.346512611 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.47505283 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.334763651 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.626104097 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.347945925 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.331357456 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.330699565 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.026994716 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.352786074 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.332086551 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.335590598 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.156651134 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.563134871 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.350529098 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.331984925 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.332203757 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.348027439 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.678401158 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.337993733 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.354348152 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.336803005 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.023080843 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.390969533 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.375075776 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.980413193 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.339992401 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.295762143 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.357267659 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.334883752 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.649637886 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.602752059 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.786105058 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.336447683 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.349513354 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.01270561 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.357465472 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.481612441 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.352254472 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.354595225 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.532433425 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.809960093 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.336515574 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.894584256 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.336183305 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.545701271 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.334482405 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.648935337 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.809261033 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.351422403 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.336139286 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.020842546 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.996890652 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.946468643 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.337903682 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.605087585 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.30758415 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.791581795 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.335265553 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.335553101 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.763054495 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.337741073 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.338367329 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.335108011 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.335115233 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.484109243 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.509921674 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.622291018 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.339288134 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.78416153 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.352542052 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.336717519 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.354431094 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.337167369 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.68622975 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.418691181 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.336792534 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.337752703 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.338770485 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.343891971 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.796422952 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.325840605 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.337148832 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.490900572 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.951627046 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.35340271 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.336779181 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.040071088 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.59580907 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.832613227 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.401338528 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.635290998 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.36081354 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.375652593 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.048133151 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.357006091 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.842557352 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.357913049 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.332959864 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.912569454 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.342358422 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.673917667 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.322079365 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.326907719 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.856145104 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.339156046 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.325723903 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.652554002 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.32488024 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.563224939 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.317970418 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.321529699 seconds)
  done (took 1111.352868472 seconds)
done (took 1385.15006725 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.319725197 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.324597795 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.306531168 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.325920707 seconds)
  done (took 26.51478784 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.327624495 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.325490712 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.326906268 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.326150989 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.326599013 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.324935631 seconds)
  done (took 9.196324376 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.3734287 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.326807134 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.329315779 seconds)
  done (took 19.270090006 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.536350666 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.596568473 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.686797371 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.493516504 seconds)
  done (took 10.552403521 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.324540552 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.32470847 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.325862737 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.321708355 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.32542971 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.327796799 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.323176877 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.32518013 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.327221597 seconds)
  done (took 13.16375784 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.154684201 seconds)
done (took 85.090453392 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.31722203 seconds)
    (2/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.323578724 seconds)
    (3/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.389780848 seconds)
    (4/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.793113301 seconds)
    (5/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.553987661 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.58452208 seconds)
    (7/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.883242061 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.609186667 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.300984433 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.356675176 seconds)
    (11/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.301489924 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.339248368 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.355314774 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.356405757 seconds)
    (15/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.56579889 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.217893729 seconds)
    (17/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.075139323 seconds)
    (18/309) benchmarking ("sort", Int8, false)...
    done (took 4.362574433 seconds)
    (19/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.428411347 seconds)
    (20/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.315219917 seconds)
    (21/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.55388311 seconds)
    (22/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.680462468 seconds)
    (23/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.401126282 seconds)
    (24/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.915998867 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.173550352 seconds)
    (26/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.071476738 seconds)
    (27/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.339210691 seconds)
    (28/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.402686994 seconds)
    (29/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.054397487 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.719782284 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.457863807 seconds)
    (32/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.841727343 seconds)
    (33/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.153385313 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.40849493 seconds)
    (35/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.33848819 seconds)
    (36/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.497551797 seconds)
    (37/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.907866359 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.236971178 seconds)
    (39/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.343692805 seconds)
    (40/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.321273163 seconds)
    (41/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.486009967 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.237702251 seconds)
    (43/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.306914864 seconds)
    (44/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.393845222 seconds)
    (45/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.495730848 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.422617569 seconds)
    (47/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.286217322 seconds)
    (48/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.690837283 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.568353496 seconds)
    (50/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.875172351 seconds)
    (51/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.313796713 seconds)
    (52/309) benchmarking ("sort", BigInt, false)...
    done (took 6.305469953 seconds)
    (53/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.340184936 seconds)
    (54/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.366018244 seconds)
    (55/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.357435127 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.776138566 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.905296017 seconds)
    (58/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.792112521 seconds)
    (59/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.834225226 seconds)
    (60/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.657948747 seconds)
    (61/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.952759211 seconds)
    (62/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.414326626 seconds)
    (63/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.391550472 seconds)
    (64/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.325202712 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.166528359 seconds)
    (66/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.311546091 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.717143228 seconds)
    (68/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.329329006 seconds)
    (69/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.87488373 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.944538082 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.421105449 seconds)
    (72/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.7239516 seconds)
    (73/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.452594735 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.420028354 seconds)
    (75/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.366054239 seconds)
    (76/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.157946118 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.358101582 seconds)
    (78/309) benchmarking ("sort", Int64, false)...
    done (took 5.512500795 seconds)
    (79/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.314739789 seconds)
    (80/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.325383592 seconds)
    (81/309) benchmarking ("sort", Float64, false)...
    done (took 5.620579547 seconds)
    (82/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.296554856 seconds)
    (83/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.094489563 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.356207719 seconds)
    (85/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.388824578 seconds)
    (86/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.310625506 seconds)
    (87/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.759910983 seconds)
    (88/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.601835911 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.388693041 seconds)
    (90/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.072425397 seconds)
    (91/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.732785038 seconds)
    (92/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.335274879 seconds)
    (93/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.677161645 seconds)
    (94/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.888521942 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.320451416 seconds)
    (96/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.068481582 seconds)
    (97/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.065444539 seconds)
    (98/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.316463454 seconds)
    (99/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.093650661 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.666498176 seconds)
    (101/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.436923161 seconds)
    (102/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.627282036 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.388053709 seconds)
    (104/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.320546695 seconds)
    (105/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.078042989 seconds)
    (106/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.349514025 seconds)
    (107/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.300298873 seconds)
    (108/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.601044791 seconds)
    (109/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.340849023 seconds)
    (110/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.308330075 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.907737433 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.532005394 seconds)
    (113/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.43324733 seconds)
    (114/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.42115233 seconds)
    (115/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.695015783 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.339365516 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.386341588 seconds)
    (118/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.123242314 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.332231681 seconds)
    (120/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.349055722 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.724086323 seconds)
    (122/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.358168889 seconds)
    (123/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.302795309 seconds)
    (124/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.678951087 seconds)
    (125/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.67106862 seconds)
    (126/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.669001741 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 1.835698083 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.356290775 seconds)
    (129/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.467226216 seconds)
    (130/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.736011854 seconds)
    (131/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.708521161 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.567511269 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.639633251 seconds)
    (134/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.345308873 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.758583431 seconds)
    (136/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.664815184 seconds)
    (137/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.319294099 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.070542769 seconds)
    (139/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.306506723 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.576385613 seconds)
    (141/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.305582876 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.346616992 seconds)
    (143/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.674514036 seconds)
    (144/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.680540372 seconds)
    (145/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.317931695 seconds)
    (146/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.155243309 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.421343934 seconds)
    (148/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.505039615 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.178087255 seconds)
    (150/309) benchmarking ("sort", Float32, false)...
    done (took 5.367146093 seconds)
    (151/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.362327447 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.959498624 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.076199731 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.34723744 seconds)
    (155/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.019688095 seconds)
    (156/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.623183021 seconds)
    (157/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.337001383 seconds)
    (158/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.180273628 seconds)
    (159/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.527907333 seconds)
    (160/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.336021495 seconds)
    (161/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.665680645 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.959495954 seconds)
    (163/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.4378577 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.335188761 seconds)
    (165/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.506012127 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.967693159 seconds)
    (167/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.312344182 seconds)
    (168/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.345834306 seconds)
    (169/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.87417695 seconds)
    (170/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.430427 seconds)
    (171/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.07401133 seconds)
    (172/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.036220233 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.262328239 seconds)
    (174/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.666846574 seconds)
    (175/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.34497832 seconds)
    (176/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.12347556 seconds)
    (177/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.423883322 seconds)
    (178/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.293209901 seconds)
    (179/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.360149846 seconds)
    (180/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.307374491 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.867093788 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.340351594 seconds)
    (183/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.397500707 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.710123139 seconds)
    (185/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.353189732 seconds)
    (186/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.526080392 seconds)
    (187/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.362316402 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.23869529 seconds)
    (189/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.879277138 seconds)
    (190/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.330907524 seconds)
    (191/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.332618065 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.761154159 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.729013667 seconds)
    (194/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.419411669 seconds)
    (195/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.399282401 seconds)
    (196/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.338180564 seconds)
    (197/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.365326003 seconds)
    (198/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.359283865 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.665480322 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.395642117 seconds)
    (201/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.680722598 seconds)
    (202/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.402571164 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.68777711 seconds)
    (204/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.345072354 seconds)
    (205/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.317398509 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.357826006 seconds)
    (207/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.420200158 seconds)
    (208/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.060530329 seconds)
    (209/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.32506158 seconds)
    (210/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.728171755 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.324459264 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.945996666 seconds)
    (213/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.590422914 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.533733186 seconds)
    (215/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.342322752 seconds)
    (216/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.315449659 seconds)
    (217/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.168819686 seconds)
    (218/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.324941708 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.320872514 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.813254355 seconds)
    (221/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.553164782 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.346022229 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.405795239 seconds)
    (224/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.597915032 seconds)
    (225/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.401763352 seconds)
    (226/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.317395162 seconds)
    (227/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.372839891 seconds)
    (228/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.351471003 seconds)
    (229/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.595087197 seconds)
    (230/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.7111903 seconds)
    (231/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.927002819 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.326339461 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.444413843 seconds)
    (234/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.326383588 seconds)
    (235/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.838396095 seconds)
    (236/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.332807946 seconds)
    (237/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.315269538 seconds)
    (238/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.326480721 seconds)
    (239/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.381938561 seconds)
    (240/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.785644801 seconds)
    (241/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.558368126 seconds)
    (242/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.385921938 seconds)
    (243/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.647085017 seconds)
    (244/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.052594498 seconds)
    (245/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.400234036 seconds)
    (246/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.298534575 seconds)
    (247/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.374605148 seconds)
    (248/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.328562993 seconds)
    (249/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.755524595 seconds)
    (250/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.15887687 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.528787819 seconds)
    (252/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.70051506 seconds)
    (253/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.390599862 seconds)
    (254/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.867544712 seconds)
    (255/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.391239067 seconds)
    (256/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.973994902 seconds)
    (257/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.335485172 seconds)
    (258/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.884242223 seconds)
    (259/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.67875925 seconds)
    (260/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.197867446 seconds)
    (261/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.948273532 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.353376165 seconds)
    (263/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.450859534 seconds)
    (264/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.467897078 seconds)
    (265/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.432051076 seconds)
    (266/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.422112593 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.706895995 seconds)
    (268/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.607445453 seconds)
    (269/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.763246362 seconds)
    (270/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.521324063 seconds)
    (271/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.320566382 seconds)
    (272/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.91551896 seconds)
    (273/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.93668093 seconds)
    (274/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.370545833 seconds)
    (275/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.340989493 seconds)
    (276/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.596628245 seconds)
    (277/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.405687982 seconds)
    (278/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.319343789 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.429893833 seconds)
    (280/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.501487727 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.304478868 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.410519439 seconds)
    (283/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.131681433 seconds)
    (284/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.256440102 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.438039354 seconds)
    (286/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.194005253 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.147522363 seconds)
    (288/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.320885514 seconds)
    (289/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.762331695 seconds)
    (290/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.901295741 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.174725286 seconds)
    (292/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.3379032 seconds)
    (293/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.619828252 seconds)
    (294/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.311599581 seconds)
    (295/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.593557764 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.361975599 seconds)
    (297/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.159704606 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.800584353 seconds)
    (299/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.543231492 seconds)
    (300/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.499832338 seconds)
    (301/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.407418449 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.344434824 seconds)
    (303/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.322792775 seconds)
    (304/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.703396689 seconds)
    (305/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.365499277 seconds)
    (306/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.372482602 seconds)
    (307/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.789847747 seconds)
    (308/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.331684115 seconds)
    (309/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.702601985 seconds)
  done (took 915.700603777 seconds)
done (took 916.940404092 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.355176979 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.349966017 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.333164683 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.354270112 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.444843194 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.357708897 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.342729455 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.335299162 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.379963149 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.382497202 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.332288344 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.355470651 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.335224804 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.335085723 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.334135789 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.349835767 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.376211471 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.343128528 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.349805611 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.344831213 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.352014868 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.333261965 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.384653812 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.35742102 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.337090284 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.337754014 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.338063378 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.354602664 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.447058099 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.338460518 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.337970489 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.346130917 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.372430182 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.340768134 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.330224123 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.354773259 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.345990616 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.34576231 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.338737531 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.367056188 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.757274134 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.351835306 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.336506489 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.335735869 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.335800373 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.340595111 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.337489794 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.34240881 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.349828726 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.351150847 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.742581068 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.366485792 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.3386315 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.337744696 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.34758362 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.336996683 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.338837076 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.354496454 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.356321186 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.354246734 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.358910097 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.349841034 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.337971246 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.353920505 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.343814766 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.778952442 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.348329171 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.340142713 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.753532267 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.359441928 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.776881686 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.361729429 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.33796629 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.351388072 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.368406417 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.353561115 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.331740133 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.337687879 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.345906284 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.336512917 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.347420661 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.351750074 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.342290264 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.337677419 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.353731931 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.364969512 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.347954934 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.338953285 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.347567102 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.358418106 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.34570782 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.350671272 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.34209499 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.334128753 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.348548102 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.343364584 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.342087812 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.341528525 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.343598166 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.349744985 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.757326666 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.374662616 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.336875604 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.336212774 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.339525811 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.352531879 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.757598823 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.356911945 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.362417115 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.386947298 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.341291192 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.344516662 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.343224411 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.357840769 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.34993685 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.342903001 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.335371237 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.357511131 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.754739403 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.371494754 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.341943947 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.337383202 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.358727166 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.342255683 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.33637407 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.378983399 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.351837533 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.355477587 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.461742431 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.351998251 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.371361109 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.339343931 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.343773379 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.363544426 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.357268982 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.372178803 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.343882679 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.359739639 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.357663179 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.337797269 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.352002288 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.35166091 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.343975436 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.348165685 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.335957644 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.364471239 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.356110821 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.356638345 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.362180612 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.463060556 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.341025077 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.357649709 seconds)
done (took 226.028753847 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.401030088 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.336826531 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.421896297 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.338652681 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.438318366 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.440086682 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.335879381 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.3364669 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.33634647 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.714521103 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.33651198 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.33687476 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.338805309 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.336894328 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.420978335 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.337905622 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.336222864 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.738442759 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.339958333 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.410176526 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.338582672 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.336757462 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.338541124 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.719191958 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.336706581 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.334162246 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.409643094 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.340195362 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.684950932 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.341189475 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.33177248 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.684817125 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.428822504 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.356146116 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.349117165 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.346511134 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.440007597 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.358407367 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.420353973 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.419837622 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.423710565 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.378079789 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.339694341 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.340300881 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.340871237 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.342045732 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.336683624 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.366814726 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.337406775 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.339116327 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.740826033 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.351249757 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.348593394 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.338781876 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.338910625 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.360903114 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.339655366 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.341961217 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.431165521 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.342579199 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.40434988 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.721380549 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.716731132 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.341894763 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.337280696 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.338983834 seconds)
  done (took 148.942235946 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.40836228 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.414155537 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.453114051 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.359569958 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.393308489 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.459070937 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.36000995 seconds)
  done (took 11.102100278 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.348332758 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.342673424 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.392395592 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.392984765 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.342075122 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.490221824 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.342641905 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.35423159 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.340392362 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.396415815 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.342944178 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.343268931 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.349682553 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.340092644 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.391844829 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.353677945 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.4582232 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.343630118 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.345214909 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.501096569 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.341990362 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.350766251 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.39469261 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.356484743 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.345090634 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.351024508 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.912432178 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.344897807 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.342056589 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.344630474 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.341984333 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.382577803 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.345099032 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.343261392 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.342808752 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.459901564 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.345725627 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.342727769 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.345698491 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.342994267 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.34435506 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.34537125 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.34468405 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.342686464 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.345310685 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.369135766 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.345945334 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.345273655 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.345957937 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.345653861 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.395730709 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.346421624 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.343676596 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.343897788 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.400885003 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.352702073 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.346885304 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.342763034 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.346561116 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.343091391 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.504465829 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.394533158 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.347203937 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.392657589 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.346695455 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.346360782 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.346747931 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.345290257 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.401152514 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.347328206 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.394699341 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.344723779 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.500593761 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.37061397 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.348715438 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.34798259 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.350762606 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.347175732 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.340855853 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.353603806 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.344149187 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.349943751 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.354324604 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.345509773 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.345292071 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.451413804 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.45711669 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.345384355 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.360603668 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.35327137 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.345684039 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.402423414 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.349947491 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.346050078 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.401193022 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.463619029 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.40248855 seconds)
  done (took 154.375785521 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.353998717 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.357379608 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.350841212 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.36590734 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.34941166 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.350233952 seconds)
  done (took 9.388434585 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.351671474 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.350255084 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.350298647 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.349442652 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.349403397 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.351318081 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.350437633 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.352309476 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.353863383 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.350215022 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.349791737 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.35205321 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.351144631 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.351450022 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.350419237 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.348781872 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.349992236 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.348242208 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.349490816 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.349684814 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.445780604 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.350979442 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.350974186 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.351385413 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.35364066 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.350420433 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.358657022 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.349804768 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.350736624 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.358853169 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.37089342 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.351905194 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.353150016 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.357309371 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.354814885 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.3526616 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.354556483 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.352606067 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.34856873 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.352429085 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.354394893 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.352172649 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.35130133 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.353839667 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.353420044 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.35602009 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.356696374 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.359547811 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.35273366 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.354397231 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.354486319 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.352225779 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.352747561 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.354553272 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.355857474 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.373781771 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.35676336 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.352585474 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.355129376 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.355546479 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.353820112 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.35260655 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.355674805 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.357878021 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.35892222 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.354600603 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.356483017 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.357715773 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.353703826 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.354240897 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.354556185 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.350360235 seconds)
  done (took 99.812039973 seconds)
done (took 424.871274428 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.688463998 seconds)
  done (took 7.953363226 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.458556364 seconds)
  done (took 7.723897324 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.766567946 seconds)
  done (took 22.037922592 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.364105808 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.456158117 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.372253377 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.366519007 seconds)
  done (took 26.823165417 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.108114858 seconds)
  done (took 8.371738286 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.346677862 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.362415426 seconds)
  done (took 13.973555009 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.351495639 seconds)
  done (took 7.615606504 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.746553229 seconds)
  done (took 8.017448939 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.373489858 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.367592032 seconds)
  done (took 14.272440166 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.326931862 seconds)
  done (took 7.592321425 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.199287392 seconds)
  done (took 8.464317668 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.35750284 seconds)
  done (took 7.621979942 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.41236721 seconds)
  done (took 7.675110792 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.340600597 seconds)
  done (took 9.603852149 seconds)
done (took 159.010636777 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.346392055 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.355483566 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.35610577 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.35421781 seconds)
  done (took 26.676382301 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.388013248 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.387379372 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.38853557 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.39823047 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.390047805 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.38830618 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.386154417 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.380659916 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.398735032 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.390442108 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.390068471 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.390640716 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.388943496 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.379061633 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.390268773 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.388582816 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.398013764 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.389016297 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.380067717 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.389519006 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.354167824 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.397196042 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.389879592 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.355117844 seconds)
  done (took 34.542596452 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.876583499 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.425238647 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.508174013 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.40795978 seconds)
  done (took 7.482694749 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.405328274 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.407976393 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.41923119 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.459305019 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.483804294 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.417612626 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.381029208 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.375868278 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.363587446 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.408811071 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.48412606 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.422957359 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.491724644 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.355656838 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.54155443 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.355271149 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.355080644 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.407724355 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.458500379 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.478235107 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.355751927 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.40589992 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.410618174 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.425241848 seconds)
  done (took 35.337346951 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.370011899 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.362935016 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.355604387 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.353262158 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.376427082 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.356367333 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.356172722 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.356408818 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.356331843 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.361371984 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.355426729 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.367788136 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.353932353 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.354767595 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.361371699 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.357319343 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.363316682 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.355988883 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.35598171 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.359772706 seconds)
  done (took 28.458564158 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.351057096 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.287364434 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.701584568 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.607691106 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.352736761 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.359361839 seconds)
  done (took 28.927010509 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.428718017 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.578760038 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.357206661 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.712388231 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.804564966 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.374620097 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.358328665 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.599250952 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.91669224 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.907115877 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.423524655 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.426133203 seconds)
  done (took 20.155348493 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.359605648 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.359387926 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.359631191 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.393130504 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.413826589 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.378515407 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.36566442 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.353337492 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.421846722 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.434672543 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.380366494 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.414088335 seconds)
  done (took 37.905278291 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439441249 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.397724002 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.284615277 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.172806951 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.071612872 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.565408395 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.136450726 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.810494292 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.357695847 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627123016 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362613712 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453613749 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.608838942 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368119514 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.361961795 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.329712076 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.60594731 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.836462696 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364225967 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.322010001 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387274628 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.360392258 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.51085482 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.393125529 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.565367873 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.332164557 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.615277469 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.13368065 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.64332868 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.366872875 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366025325 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.355756573 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.629900965 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009941797 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468496298 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365959541 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.125452708 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.901320103 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.334624771 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.41573394 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.334671444 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.366379399 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365851514 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355701995 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.290715286 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.367764343 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.818632603 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.362114519 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.068663278 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.357125143 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.367600618 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450812009 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.360240634 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.927772506 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.448552655 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.361934927 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.35264447 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363252418 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930232143 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.840412436 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.367910459 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.30165574 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.811772887 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.419244307 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996694357 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.478258984 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.360809219 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.361174733 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.292542144 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.431024901 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.381286861 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504718526 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.382866833 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.008106518 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.080686435 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.384859935 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.297446146 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907039772 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.384298814 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.300983289 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.584364734 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.135218044 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.293753883 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.304842627 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.293117231 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.068515584 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374424935 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.726441495 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.373686317 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.813056767 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.368396387 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375907457 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381767981 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.581992324 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.237185851 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359424368 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.351669893 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512985011 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381348504 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.809618612 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.294002835 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.361895847 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.614981157 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.570441296 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.361414366 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.345357402 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.59984114 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368796396 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.381073274 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.360405025 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.378300568 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.937198613 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.39706351 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.839728231 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386817291 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.13726477 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088642501 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375699551 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.468038226 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.366443237 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.615869759 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.12045328 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.271550877 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428466289 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.362758919 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.361041598 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.451430675 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.219087271 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.520667184 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.358973227 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.367782918 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.380088329 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.362211383 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.310523653 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.358658989 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374866847 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.149228394 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.585885755 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.364964825 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646727953 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.29534514 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509603776 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.37015363 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.583776937 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.575563465 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.387480964 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.623031489 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365070046 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.382888407 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.381908546 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381884969 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460535582 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384915951 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.370228848 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.627742469 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.367576186 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.36662475 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.473302188 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.148526661 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367529907 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.371695148 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.270009951 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.943721437 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36743813 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.370818922 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.252408593 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.377397947 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430497901 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.368696556 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.374435094 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.192571774 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.277315918 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.368961897 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.370913795 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.59432551 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.373820039 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.466149527 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.453759938 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.573284669 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.948752575 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.402473088 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.297121024 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.076028481 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.057323699 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364511923 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.552705353 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.365998566 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37408641 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.377012991 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.958134264 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.944769331 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391872375 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.383300213 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.378515352 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.37733716 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.370106479 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365714457 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.178040629 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.891863669 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.378587826 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.386647873 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.509162637 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.379514957 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.300890217 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.883040748 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.370587473 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.366300219 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.14276495 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40022333 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.366928179 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.858701214 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.626364836 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.130493768 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.377251489 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.491608937 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.409289782 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.363374005 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.366387648 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377344706 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.395452107 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402503091 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.377913352 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.48071499 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.815101943 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936422562 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.098734352 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940731326 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.337976575 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.381743473 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.258076423 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.823178455 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.302394661 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.025999739 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.557582006 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.856200104 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.313599271 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.581599802 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.577638127 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.165594031 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.386265449 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.596745901 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.309854447 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.378229079 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.38936481 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.579376563 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402948138 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.370720532 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.306067904 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.886933755 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.632943647 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.368890144 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.458621391 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.823244833 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.369309677 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.175283518 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.36987592 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.698972796 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.572211368 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.915235727 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.756378221 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.377743304 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.379822489 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.878117314 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.377659168 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.895358036 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00272041 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.402750409 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.589736371 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.306158473 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.380828748 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.380347767 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.364202337 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.692428994 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.386838005 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.634880405 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.381172758 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.305604206 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.375634934 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911896922 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.253091387 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.377025129 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371643034 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.109182744 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.381591345 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.669779228 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.380943484 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.191320426 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401260918 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.306663133 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.306712737 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.063753242 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.374730704 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347213868 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873116223 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.812634049 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.445446262 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393748985 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.24418756 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.627803038 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.386092732 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.959637008 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.624574257 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.249888947 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395416756 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.473053793 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.381606603 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.364176468 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.274135085 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.609482858 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.281234381 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.596724995 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.291176456 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.281679912 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.371902054 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.58555229 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.272022174 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.374086614 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.625552366 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.103497846 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.373968411 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.099586887 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424909295 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.373259334 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.394271402 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.828221351 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.3819466 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445287719 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.384227627 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.383926225 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.383811837 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.549724989 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381922584 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385693144 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.389797095 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467975728 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.893901573 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.17749434 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.157134686 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.965825085 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.145627431 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.989368877 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.413778818 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.376426127 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385724697 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.311573784 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.523651113 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.900842967 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.648734771 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505949835 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.948709998 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397917041 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.387906297 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.385709643 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.595469379 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650854103 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.246539865 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378389167 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.044040328 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.258851613 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.386686091 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.588570703 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876638647 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948325526 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503908421 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.391810558 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.83671331 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65152495 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.468921938 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377422738 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.970970839 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.385703253 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.713334651 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.409496257 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384258948 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.53285247 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.387044891 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038635495 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.405766074 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.537581504 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.152680974 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.422635198 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.642105821 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.791840888 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.398269617 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.968873862 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.107486479 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.65011732 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448515127 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.389682101 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.480553487 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.524721858 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.378629328 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.270059009 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.378588879 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.223069582 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.090357537 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.388557132 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.967864993 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.66901755 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.377741119 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.38370347 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411856694 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.390289187 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.603564524 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.080354202 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.612069932 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.388570381 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.381886468 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.95216909 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.969124497 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.41927162 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31463394 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.383344176 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.621040103 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.634126179 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.405141367 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.834874807 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.091985358 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929427771 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.361254748 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401618974 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.380763511 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.105523109 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.972295762 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.201525584 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889514357 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.047749084 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38025302 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66357494 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.386689761 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.38477303 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.666311036 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.385105235 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.382362728 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.40171078 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.971118033 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.18204367 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.398924318 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.448665326 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.328920653 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.607590991 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.091626046 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319002988 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.392994681 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.56296709 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.381365811 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.512169445 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.399621094 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.395577108 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399875909 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.146325259 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.657169997 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.38719288 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.370175935 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.37237204 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.402565997 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399036455 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.648883313 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390217656 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.059487962 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.733821977 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.638713783 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.386622192 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.372047101 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.386705696 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384774744 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.102178381 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.352516275 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.99131858 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94847773 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.398942063 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.402841565 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.388186167 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.600746494 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.594806623 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.386579874 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.404436258 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396107913 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.407232119 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.284042903 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.150221947 seconds)
  done (took 1605.375679263 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.433894521 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.433565665 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.435519179 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.440487381 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.440563774 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.484953807 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.450435553 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.502024402 seconds)
  done (took 52.920934903 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.38432868 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.547684295 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.417159203 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.398018453 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.403583294 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.393057283 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.861785315 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.411386558 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.394985185 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.395941155 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.395219813 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.398735003 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.0554149 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.40295268 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.388404061 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.390919571 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.401937534 seconds)
  done (took 66.346063942 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.387259777 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.408447783 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.485293848 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.388694352 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.522284276 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.411481279 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.311630403 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.445303855 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.395636094 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.39551253 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.060243757 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.416138919 seconds)
  done (took 84.930122154 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.395227434 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.397275153 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.395990043 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.395795107 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.394622107 seconds)
  done (took 8.280235101 seconds)
done (took 2038.602532536 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.631646424 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.081887785 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.029645205 seconds)
  done (took 5.412980971 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.535259611 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.584006262 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.702753054 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.709518499 seconds)
  done (took 7.833212297 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.686452509 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.778400902 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.583203838 seconds)
  done (took 6.349828117 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.797753244 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.40238798 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.536219683 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.387402407 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.395812231 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.395476992 seconds)
  done (took 20.481240014 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.390829497 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.393644654 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.391688256 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.393910122 seconds)
  done (took 6.872552442 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.368615319 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.083858162 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.377313269 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.390951838 seconds)
  done (took 18.522168735 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.138151859 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.149147421 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.135094535 seconds)
  done (took 7.722900046 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.388759462 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.2335756 seconds)
  done (took 9.925841428 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.678987634 seconds)
  done (took 2.982279938 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.523920999 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.718260059 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.428062471 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.357526726 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.510871637 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.257050585 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.042317353 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.626356529 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.323581101 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.581965164 seconds)
  done (took 28.673803012 seconds)
done (took 128.446141579 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.228411869 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.766511829 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.595698832 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.239193096 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.621958287 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.596650193 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.594054402 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.202699545 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.709717272 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.696386288 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.238710944 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.623120968 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.749073374 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.768121381 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.753738162 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.76611618 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.623312044 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.274823092 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.883180835 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.115480571 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.59459841 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.832358088 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.068368828 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.853442245 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.620502643 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.545898239 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.412974246 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.774926637 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.052508912 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.433717733 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.546178488 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.288755026 seconds)
  done (took 193.376455385 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.392164169 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.408124246 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.3920277 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.391550365 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.407145041 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.418908661 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.394658711 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.420235129 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.392198306 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.400452452 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.409941178 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.402823509 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.395213702 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.392875729 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.390903861 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.391374042 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.396930277 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.409011951 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.392756515 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.392100337 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.392172744 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.414999951 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.393025235 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.40724086 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.402419019 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.41042365 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.40558332 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.393195591 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.410148115 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.412512253 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.402777987 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.402928206 seconds)
  done (took 206.144765885 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.395336093 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.393600164 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.426783123 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.394354015 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.393421301 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.429414649 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.392785498 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.394242906 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.410460122 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.412194742 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.402598517 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.394113358 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.394895302 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.419924377 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.397009303 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.394860562 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.411430453 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.42049154 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.39479907 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.394845638 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.412273821 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.395047926 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.405769304 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.408926997 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.408603504 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.401928444 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.406676709 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.394524857 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.412049767 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.39522327 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.422255379 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.420659878 seconds)
  done (took 206.261436399 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.590611048 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.401979601 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.402204948 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.335016937 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.403966501 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.402651121 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.397294288 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.599848501 seconds)
  done (took 14.843697473 seconds)
done (took 621.928496319 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.693448744 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.423350505 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.612437052 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.424224462 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.181536794 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.45007317 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.422815066 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.5972669 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.335257933 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.612317246 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.628232751 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.437935343 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.76782364 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.421179549 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.679101042 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.525724919 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.314800249 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.443804696 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.747044849 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.946994839 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.696435845 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.897232529 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.616481949 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.327865612 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.791095519 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.909581139 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.126249101 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.315687253 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.449146746 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.745921585 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.090545907 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.380729586 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.493975633 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.484812569 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.544488522 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.522687513 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.346855274 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.492004292 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.626198497 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.659263506 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.964868393 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.156206892 seconds)
  done (took 94.614531496 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.387341805 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.38834226 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.386857353 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.387671359 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.388950908 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.389315645 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.388348707 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.38816181 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.388175088 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.387761157 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.388045452 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.390765943 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.386385421 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.388334938 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.388639482 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.387588987 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.388666539 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.390837538 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.387944486 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.389135312 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.388794813 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.389865332 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.388225959 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.387828688 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.388471272 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.389938902 seconds)
  done (took 37.413816236 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.408256577 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.658435041 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.824795732 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.422246593 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.406770383 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.412816522 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.485894685 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.416900558 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.411235185 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.411585302 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.580404562 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.410248761 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.440852239 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.848176518 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.419170131 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.408121437 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.415666687 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.406813248 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.669838182 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.42669232 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.508060536 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.417565508 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.488316171 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.417910033 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.43300468 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.409213029 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.414328194 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.92629965 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.437254776 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.581650487 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.22147703 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.494069452 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.885902005 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.848165847 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.217565549 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.420688794 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.408489542 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.583019716 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.412332433 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.410424693 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.486452265 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.420106562 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.828932368 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.038075008 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.439232855 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.411733007 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.947720162 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.609363097 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.656339366 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.428657951 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.853157112 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.422882738 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.411296789 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.412539348 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.655837489 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.426916887 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.409674231 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.950786046 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.4442042 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.489025929 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.42076289 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.412091683 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.678178679 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.421364127 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.667843221 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.421631676 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.420876524 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.431338893 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.82997474 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.424654067 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.051119559 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.439608594 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.412634783 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.580844476 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.668714086 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.994528041 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.443066161 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.683700739 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.90329509 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.516428061 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.426622971 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.91889817 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.517626978 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.426140888 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.415073253 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.414239075 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.411352339 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.460183505 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.489620499 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.988226928 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.068047812 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.973555506 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.522421947 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.433777593 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.414418729 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.948019046 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.442551592 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.415129167 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.826497005 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.061517545 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.443065485 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.421274429 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.052378758 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.444994246 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.493208998 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.428376431 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.837542955 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.425905789 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.460437747 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.414767631 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.422085919 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.437464543 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.493746855 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.426678536 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.41498447 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.021195184 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.619651112 seconds)
  done (took 185.535831277 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.409103783 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.408561133 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.408111103 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.42501492 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.407464147 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.417049177 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.409258546 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.409432155 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.413707281 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.409164519 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.409730363 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.407635197 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.410162561 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.414909713 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.439979 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.415667717 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.020617863 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.410370339 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.41015267 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.41045868 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.204722885 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.419513463 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.410115302 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.409627799 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.41091535 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.413437902 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.410951696 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.431090233 seconds)
  done (took 154.298477131 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.416979043 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.988828432 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.444838613 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.549321332 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.44663063 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.415712737 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.548562542 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.485295695 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.43619933 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.415051717 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.415850191 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.722408146 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.427806111 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.940558808 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.618846611 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.576027454 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.940146953 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.443822598 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.415451575 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.414116721 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.549828798 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.421778961 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.721926311 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.987771564 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.437319996 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.978902752 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.401968684 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.419676469 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.417316856 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.981178382 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.433996818 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.719481356 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.496363134 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.487149124 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.000314673 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.954215486 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.968252398 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.576263119 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.41901495 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.416007194 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.416399905 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.401374207 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.98145975 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.439347913 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.418293977 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.973389754 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.439941939 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.417397098 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.425060865 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.417038471 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.47933269 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.496858132 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.742852064 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.988587474 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.516394433 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.431463871 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.55127877 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.792713056 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.431513545 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.944292593 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.412440693 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.989928468 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.440648941 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.403613756 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.420432746 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.424467481 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.57225295 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.552913454 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.946102017 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.447795841 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.941152891 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.599189627 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.419984729 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.418940632 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.422775144 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.989715037 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.953413887 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.590133307 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.556594674 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.615826854 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.414846807 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.419452019 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.405783675 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.500050128 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.428212921 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.989975876 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.964035062 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.448206758 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.42141726 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.42208049 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.422457507 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.598908412 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.017984712 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.517599971 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.941590116 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.753683855 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.726277682 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.421950908 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.482492537 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.439209084 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.72803149 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.425627989 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.480795158 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.858356563 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.73634957 seconds)
  done (took 168.967699678 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.670103137 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.611154972 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.524206153 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.552684001 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.016613615 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.987646368 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.629073487 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.561515489 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.535089063 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.682473517 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.577419528 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.510791649 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.592717075 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.497171976 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.173771427 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.51904904 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.532885986 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.563513663 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.537669369 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.415679162 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.061680266 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.717549603 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.602818047 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.331807122 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.517862889 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.18314517 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.992591764 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.953466743 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.60399388 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.725561929 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.959546962 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.556013001 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.379301147 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.115557454 seconds)
  done (took 67.721752179 seconds)
done (took 709.860426251 seconds)
SAVING RESULT...
DONE!
