cset: moving following pidspec: 24268
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.33330289 seconds)
loading group "string"... done (took 0.500292305 seconds)
loading group "linalg"... done (took 7.820022381 seconds)
loading group "parallel"... done (took 0.174239036 seconds)
loading group "find"... done (took 1.1894186 seconds)
loading group "tuple"... done (took 2.144533627 seconds)
loading group "dates"... done (took 1.353188766 seconds)
loading group "micro"... done (took 0.2489697 seconds)
loading group "io"... done (took 0.689196099 seconds)
loading group "scalar"... done (took 41.601407695 seconds)
loading group "sparse"... done (took 12.861073893 seconds)
loading group "broadcast"... done (took 1.136900536 seconds)
loading group "union"... done (took 14.408259544 seconds)
loading group "simd"... done (took 4.89940795 seconds)
loading group "random"... done (took 9.85475492 seconds)
loading group "problem"... done (took 2.045943885 seconds)
loading group "array"... done (took 22.903597991 seconds)
loading group "misc"... done (took 1.466012101 seconds)
loading group "sort"... done (took 3.665955951 seconds)
loading group "collection"... done (took 19.914329218 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.548486639 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.150254596 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.157392237 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.160622906 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.196312548 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.157465548 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.164362773 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.116687606 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.02795327 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.191614405 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.159636928 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.52110256 seconds)
done (took 5.29474306 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.232551791 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.098372359 seconds)
    (2/2) benchmarking "String"...
    done (took 0.110577858 seconds)
  done (took 0.892957699 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.080464008 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.151075152 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.098129492 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.097321429 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.082437361 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.09939945 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.082084459 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.097648097 seconds)
  done (took 1.394869069 seconds)
done (took 3.293277622 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.733406662 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.289359241 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.226366264 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.489552827 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.183837175 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.217824168 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.685760335 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.372691673 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.271400188 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101892552 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.152928257 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.414284911 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.138117302 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.678334088 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.093381286 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.131139282 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.180912444 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.463267252 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.085875044 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.113177693 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.119765458 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.144088769 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.133176938 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094385487 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.190490519 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.100677437 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.193273228 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.11128673 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.083941529 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.290694244 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.205577507 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.701232459 seconds)
  done (took 11.116147893 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.120578779 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.142200842 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.100889111 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.15871833 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.14205756 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.087478271 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.103738984 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.083436812 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.127821273 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.182707946 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.136992027 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.14619735 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.096107518 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.087292494 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.124157462 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.250201107 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.124578001 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.110221336 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.103673175 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.107634356 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.127054951 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.117851793 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.114409042 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.112585279 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169814642 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.210705174 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.115032227 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.129212652 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.099383142 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.117354407 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.147226821 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.148044301 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.098736915 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083460251 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.17845775 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.128429569 seconds)
  done (took 5.333400808 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.194312958 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.126072385 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.176334222 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.165401635 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.162013013 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.146372532 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.18116039 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11941977 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.243176291 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.119890727 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.09948643 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.181914524 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.147919166 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103553799 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100712118 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.087590117 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.099431475 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.762964774 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.170207209 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.138437867 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.107289293 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107791671 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.106352773 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.368563838 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.090820261 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.09986719 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085477089 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.084917548 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.167151844 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101817111 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.181270093 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.12426659 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08548612 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.138395778 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.217683143 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.132281062 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.138512893 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083791947 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.098679016 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.181829583 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.091185783 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.101056005 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.128045143 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137894419 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.124921145 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.102525635 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.102768072 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.213973325 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.100725305 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100373888 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.986386277 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.183640262 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.096986042 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.099334621 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.345537643 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.100797385 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102304629 seconds)
    (58/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.098033132 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.081110175 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.278021137 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.141842018 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.085374956 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.100302616 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082833828 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.106543903 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.397751735 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101375835 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.900668818 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.086056226 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.109724471 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10188344 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085244222 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.108133658 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089697123 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.118641063 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.098989627 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.085290701 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.099824944 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.082475682 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.102736177 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.109802515 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.089249853 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.100743663 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.079819841 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.169385396 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.083255699 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.117584877 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132254471 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.103596096 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.083513854 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136523991 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101858782 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.085456613 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.140871896 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102637929 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.093894335 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102806729 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.14632823 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.102457206 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.196926157 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.08172766 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.129155139 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.104118768 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132945628 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.115035014 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085356349 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.105876101 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.08144021 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.099553786 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165339646 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.084455023 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.100723348 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.085699361 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.114788727 seconds)
  done (took 23.499875222 seconds)
done (took 40.634996636 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.348055463 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.105018195 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.105675452 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.105621413 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.104191443 seconds)
  done (took 1.527679143 seconds)
done (took 2.260877786 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.293151061 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.181371953 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098662844 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.175200136 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.097235889 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.182591896 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.1836442 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.099029386 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.208928811 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.08098978 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.188020165 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081259097 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096793262 seconds)
  done (took 2.725504852 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099407145 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.120544254 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085699701 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114784511 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.096410677 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099724672 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113712619 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104427868 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.114505487 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.104991348 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080179815 seconds)
  done (took 1.863751553 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098099622 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118414584 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085622257 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113928795 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079850534 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.11463418 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113078779 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103952082 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113819585 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.106422419 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080172846 seconds)
  done (took 1.858924539 seconds)
done (took 7.17257246 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.098445458 seconds)
  done (took 0.825571638 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.044483883 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.111603787 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.120064915 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.16152751 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.335865105 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.190442137 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.596079572 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.132789049 seconds)
  done (took 15.639949053 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.137761366 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.088239538 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.122397928 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.090132177 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.105825366 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.105646786 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.087360121 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.106292444 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.105810683 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.088394526 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.107407904 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.107304783 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.089823516 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.104133569 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.086595815 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.103395082 seconds)
  done (took 2.428294534 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.140887248 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.141351279 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.093553725 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.112502134 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.109545609 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.091198374 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.111992196 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.110923317 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.090361014 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.107517747 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.111260519 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.110292205 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.091389254 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.100725699 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.109971121 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.09574507 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.106521218 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.110419176 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.111288067 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.094709341 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.112089822 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.100178946 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.090212264 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.110938217 seconds)
  done (took 3.38616822 seconds)
done (took 23.014031623 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.169027119 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112981184 seconds)
  done (took 1.017507397 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.106518813 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.123862362 seconds)
  done (took 0.970643377 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.112215018 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.098379874 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.14192573 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.120619288 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.101207568 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.083710455 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.137064984 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.100296781 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.083827397 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.100131774 seconds)
  done (took 1.822759541 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.09006976 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.119156506 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.111937802 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.124046418 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.097013592 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.10537996 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.116738571 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.090148211 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.122168428 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.102671417 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.094531572 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.119680789 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.110332791 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.122329752 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.116120275 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.093440076 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.112572224 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.110018814 seconds)
  done (took 2.704338215 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.083301852 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.105660955 seconds)
  done (took 0.933722195 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.089030493 seconds)
    (2/7) benchmarking "second"...
    done (took 0.101341808 seconds)
    (3/7) benchmarking "month"...
    done (took 0.088793967 seconds)
    (4/7) benchmarking "year"...
    done (took 0.104480228 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.101593452 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.085272727 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.100527543 seconds)
  done (took 1.415722511 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.492164769 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.139262797 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.26355146 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.10586922 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.127378684 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.332974865 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.083741418 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.106821665 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.107059246 seconds)
  done (took 2.542975924 seconds)
done (took 12.147503674 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.096412929 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.1227741 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.137140387 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.480066898 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.124193068 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.083833072 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.163882185 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.266956218 seconds)
done (took 2.22257609 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.155129085 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.335032743 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.119566137 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084041001 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.083881785 seconds)
  done (took 1.374668154 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082958396 seconds)
    (2/2) benchmarking "read"...
    done (took 0.10395481 seconds)
  done (took 0.935840712 seconds)
done (took 3.21440968 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083174602 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.134507414 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.099231907 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.083400449 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.099787298 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.084090072 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.099356307 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.081172525 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.100366246 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.084262901 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.100905041 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.083681269 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.100338619 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100982057 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080710589 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098633614 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083481766 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.097519428 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0817434 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097445174 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084561483 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.097421597 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.09871659 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.083298682 seconds)
  done (took 3.019233433 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.114434869 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.102127444 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.108140686 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.092457038 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.106124718 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.108060837 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.09065986 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.102348644 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.108406355 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.087295936 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105228286 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.106338476 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.086745989 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.10585406 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10419414 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.088549711 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.10815229 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10240736 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087310364 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.10594485 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.107630727 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085969585 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.106942766 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107998982 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.089347623 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104973486 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.104213905 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.084698599 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10794811 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.105658419 seconds)
  done (took 3.778519072 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.088905156 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.098299327 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081825186 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.106547377 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.082199265 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.103974378 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.099924425 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.082368069 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.099708712 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.08134854 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.101728198 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.08167801 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.099305594 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.083398266 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.101198088 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.102820812 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.095868316 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.100116536 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.082855009 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.100317413 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.086060103 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.099312923 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.103252424 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.082868999 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.099155388 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.081301707 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.100349457 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.082542941 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.100308143 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.099537993 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.084452197 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.103488275 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.081839926 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.106651395 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084948035 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.098764002 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.086086804 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.098790038 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.099753988 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.081560359 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.098935216 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.081900602 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.099312194 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.088426851 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.102663797 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083744464 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.098794805 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.10193508 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.08195067 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.102049839 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.08248939 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.098945821 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.08408365 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.100700604 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.103336008 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.081135957 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.100459299 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.082495159 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.099820483 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.08247889 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.098031178 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.099121663 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.085054198 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.099810267 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.097394547 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.105342469 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.082937617 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.100530626 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.104204303 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.084159288 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.101068559 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.096864385 seconds)
  done (took 7.498389376 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.086494315 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.110465219 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.085326052 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.101345694 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09788468 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.083381618 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.103520991 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082892101 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10106273 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118391034 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083103507 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101330593 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101016222 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.086136345 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099905943 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.084481779 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.110145573 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097688196 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.082551248 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103390621 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.083308867 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.10349842 seconds)
  done (took 2.86767245 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.223557863 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.1097764 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.148232876 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.126792237 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.119899739 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.099723376 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.106225298 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.108104086 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08924689 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104339972 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105052255 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090113695 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108944108 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104504417 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087580091 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.106378073 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107427002 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088959902 seconds)
  done (took 2.794395343 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.098108401 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.103734433 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.125309018 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.085334971 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.102674692 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.089368623 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109442985 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.118291557 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.104559925 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.085303009 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.112818004 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105707279 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.087500204 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103276808 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08817557 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10309764 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.104886696 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085201856 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112778291 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109383178 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.091733357 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113270114 seconds)
  done (took 3.0038349 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10243694 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104671433 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.123853906 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088614524 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.102293163 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.086949103 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.111007872 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.102404437 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.094164557 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.104367529 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102806633 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086691003 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.110399876 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103669581 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.090685557 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102937979 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.088048234 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.102609031 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105148552 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.084819076 seconds)
  done (took 2.763314111 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.234805605 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10444976 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.103874277 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110942692 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.105211786 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.104019685 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.128339204 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.086658973 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104066936 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.131339659 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.088177489 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.104445749 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.129111816 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.125338428 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.088655575 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128340775 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128089201 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.128253556 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087173893 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104002396 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.130775934 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104829012 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111144258 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.103570127 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.10488554 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086983248 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104047516 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.124831204 seconds)
  done (took 3.961407167 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084841904 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103871883 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.08302004 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.100289338 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.081983293 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.100113226 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.083260814 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098989499 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085251839 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099936076 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.102198614 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.085101286 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.1032169 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.085204784 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101673189 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.084990048 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10461652 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.082910571 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098984869 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099864547 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.084521318 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102422864 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.085059724 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.099908801 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083195009 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.102792774 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082426184 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099944425 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103082122 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.082731421 seconds)
  done (took 3.56231556 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.095129589 seconds)
    (2/2) benchmarking "in"...
    done (took 0.110742324 seconds)
  done (took 0.974834353 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.083414123 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.120244228 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082877078 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.106987179 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.110074066 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.08658242 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11314995 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109459681 seconds)
  done (took 1.580046093 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.10384908 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.12177113 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.091408623 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.122774674 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.117581464 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.120499304 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.16801844 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.091058773 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.110180586 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084163716 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.119706633 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.102764371 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090839187 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103836061 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091630707 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109118792 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.104343857 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.10015545 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.110382229 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.084712424 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104394922 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114646845 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088504847 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.100154376 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.105165449 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.09683297 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113009776 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.104996434 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089111349 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.112962908 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.09095931 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.096877523 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.104465115 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.090906307 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.104971805 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.100562935 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115679294 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106943415 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.094492323 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109534254 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.130761397 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.084068217 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.109130181 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.110233881 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096132752 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.109051504 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.10944537 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.083846604 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.101254553 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.088355179 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.102359408 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086293915 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.097881173 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111507459 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091069218 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118254513 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.104905208 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087318166 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.106916197 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089249388 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.109817267 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.105394907 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088783592 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.103204816 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093687173 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.107940447 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110969699 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.083669252 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.09798684 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.088219208 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.11335896 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.126731421 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.095665729 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.108962829 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110186581 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.087407739 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.1077879 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092457747 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110602177 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.11270151 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.091423035 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.125634782 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111938027 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086585549 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.106488403 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.118342401 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.084586826 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.107960113 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.083664444 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119719676 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.102426381 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.086575425 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.100969064 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.113451975 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089971896 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.103857984 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082977511 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111540837 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.07916148 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.109602986 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108937952 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086541796 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.113962357 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.116358873 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097628147 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.111797566 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.115452401 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08558359 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.107905272 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.083277653 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.109184363 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.106110863 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.093571638 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.097229226 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089468211 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.105538555 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.10946208 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.09413005 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.101876789 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.090678903 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112107679 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.111145549 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.085011175 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.100433894 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.107082157 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.090752001 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.112906377 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093980482 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.102414099 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.10253057 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.084056652 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.108705623 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.090547966 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.10922362 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.115877285 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089249254 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.098312923 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.087324648 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.113489022 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.112463492 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.0862369 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.103916575 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.109493545 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.086722796 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.102940133 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.092420623 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.106079212 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.103814631 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.091036435 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.106140891 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.085193717 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.113870487 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.107151551 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.085522476 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.1074489 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.094776457 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.10751324 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.108811462 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085342787 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.110483686 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109588174 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.08489334 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105003808 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.084796963 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.114831593 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.106793006 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.084630065 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.102091817 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.099026931 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.102094341 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.10825519 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.085376514 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.106905794 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.091828623 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.104820654 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.104331454 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.088355748 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.136226516 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.11811685 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091411887 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.110722606 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.0970934 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.109443232 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.106617202 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.090916894 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110642279 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.091794711 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.113025378 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.110369738 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098682547 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.108521294 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.101979795 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092708922 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112978334 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.086409273 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.106621475 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.1048233 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.091002177 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.112790796 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.110034829 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.091404043 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103290177 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087779096 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.113418346 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.108040107 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.091039642 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.103449848 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.091738337 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.105353141 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.116814353 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.092387514 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.114513782 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10857872 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.085204759 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.1150035 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103653585 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092612777 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.103356418 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.083517653 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.10385468 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.091927405 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.104320022 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.108401551 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.08027462 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112922801 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095542795 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.104732578 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.104157511 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.090786419 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114322062 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.088414422 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.107603023 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.109321692 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092983388 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119967092 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.104394768 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.089345498 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.115029348 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.091241792 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.099174121 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.111567808 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.084776882 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.104490843 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.087174831 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.103364164 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108888129 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102205729 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.11031036 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.080363302 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.107314101 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.104297939 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.085661856 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.103551291 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.094330172 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.108193376 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.108574591 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097490271 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110683908 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.110199231 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09066768 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.108953747 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.092771618 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.110710296 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108624581 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.091991665 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.108075787 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.086677795 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.107524276 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.104320856 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.087914534 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.106154597 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.091467011 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.105466901 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110923922 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.08886437 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106131536 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.089868258 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.11155813 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106173472 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.087469781 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.104339605 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090458783 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106123052 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.10576856 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088827827 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.103926052 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094650192 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.109337712 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113466868 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.086808329 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.102364487 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.092909044 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.107730854 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.115572651 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.092071401 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.109959037 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.089008451 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.108457755 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.108285616 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097241023 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.10219038 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.1151459 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093933337 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105102329 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.089964932 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.105551439 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.107222898 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.086213949 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.107245625 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.092509865 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.105819203 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.105104185 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.092447828 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.108243576 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.087218818 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.106864652 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.111760214 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.087378968 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.107683944 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.081770071 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.104640427 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085623509 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.109519245 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114061622 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.09251321 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.107521342 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.08609034 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110810023 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.105182624 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.083764015 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.12131234 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.121113282 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.092667128 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114145642 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.104672539 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.088626762 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116337269 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.08165657 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.103634318 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.10629342 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.084700851 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113090497 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.092608765 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.114812482 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.10521153 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.086524362 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.102407649 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.093072787 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.10395864 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.08946697 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.10705242 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109558099 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.090166447 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104311106 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.092130487 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.108086037 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.111098612 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09519617 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.105141617 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.088734803 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.111694918 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.103086215 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.086262365 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.104655291 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.090429132 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.111350306 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.103773935 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.084798513 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.10963892 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.090318549 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.106763147 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.087566659 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.107245696 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113507157 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088142128 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.108691601 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.116004184 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.081893209 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.1102864 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.087495502 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.110328071 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.085682292 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.110274467 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109540384 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093744187 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.113022201 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.110172587 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087870614 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106087692 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.087941724 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.110444357 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.109236118 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.091345124 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.104376441 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.092842441 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114396801 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.10669449 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.089216315 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105365446 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.088255461 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.111493034 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.112027165 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.089192543 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.120139899 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.090614686 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.107955483 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.112945673 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.091388343 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109731156 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111606041 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.088827003 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112958617 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.086074746 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.115064228 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.105991204 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.093093373 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.108391302 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.085240891 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105602406 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.106322749 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087169002 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.111800879 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.092674538 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.105234387 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.104865775 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.088353371 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.10818937 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.097386495 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114385322 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.108278058 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090408143 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.104306925 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.085268155 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111774455 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.102991368 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.089028646 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.109171899 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094149646 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.108957049 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.107187911 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.086256284 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.113663996 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095834344 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.111829397 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.105089897 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.092821656 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.111399908 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.108365924 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.088667632 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.105766339 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089456528 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.111760735 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.107985309 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.087115347 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114744232 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.091923619 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.112126154 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.107920996 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.087283355 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.106604048 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.08621686 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.111077297 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.108408678 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094787597 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.109078063 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088262329 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116567501 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.106377173 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.087655971 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.114878048 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086853235 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.114208804 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.104194415 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.088626927 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.113589454 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112011738 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.085789901 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.105142802 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.084982548 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.108865194 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.086672823 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.106026534 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116738406 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.095324749 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.109384177 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086268134 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105128257 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.10477857 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.086499017 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.105660426 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.094170732 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.108699453 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.11640053 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.086601858 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.105938629 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.087406293 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107329442 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10978638 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.092011388 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.105011518 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.087022695 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.105843772 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.090074954 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.114655511 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104941572 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.091456128 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109655244 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.090289198 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.106821063 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.115671363 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.084106921 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.110320994 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118308547 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.093084522 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106749089 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.093756556 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.1155613 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.111131801 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.086137531 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.111842577 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.089850207 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.107759211 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.112099881 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.08969673 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121630796 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110327192 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.086130726 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.105955987 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.090675957 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.106289726 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.114391131 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.094305905 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.112533704 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.093626214 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.108591405 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.121624724 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091238798 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113399485 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.108975246 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.090603022 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.106426957 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088473405 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.10535998 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.1051725 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.090579258 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.112460362 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093456247 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.120615509 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.106337138 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098491695 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.116410481 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.112523557 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.084915028 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.106461494 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.087896153 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.106227842 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.113018706 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.086369582 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.104953264 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.086575081 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.105607177 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.087931688 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113367557 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.109613684 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.095281801 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.107992469 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.082042694 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.109037319 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.109730244 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088687625 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.103822809 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.093105769 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.113336889 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.114580732 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.098587242 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.107073755 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.089250942 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.109009138 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.108015121 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.086569283 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.113348657 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087553682 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.109620546 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.086866373 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.108091931 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.112742202 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091960922 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.118997851 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.110693116 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.09067017 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.116534494 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.114825545 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.085361628 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.104648686 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.094840612 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.108113554 seconds)
  done (took 61.391654771 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.15402837 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092977248 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10288866 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08329021 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121678216 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107279654 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083543318 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107489264 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.107812592 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090491548 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.102803263 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0838097 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117689732 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.132714363 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121762676 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112191017 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0832068 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10770694 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083003406 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107275606 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.117966759 seconds)
  done (took 3.040011321 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.110734648 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.121738666 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.120082102 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.125229995 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.113416982 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.101579247 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.12026993 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121415275 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.124835754 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.115378781 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.105670726 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120943132 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.114904989 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.114878454 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095774146 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11948732 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.124890339 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.114053052 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.102801595 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.119460562 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.117236035 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.119444956 seconds)
  done (took 3.365597985 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.096947443 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.109707193 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.092985278 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.101853161 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.087975454 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.102350882 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.116805878 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.085916037 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.111391731 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.086001534 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.105636745 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.085633845 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.111996926 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.101772164 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.087151576 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.104309453 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.158681857 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.111746658 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.092091835 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.108115104 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.086613437 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.109674136 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.105269856 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.087131779 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.106118023 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.101298313 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.108393845 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.088862666 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.106609061 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.105277924 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.091335021 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.104955752 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.090300094 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.108287036 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.08671259 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.106318106 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.107101719 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.091933628 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.10501062 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.089243172 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.108112972 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.087778536 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.112341184 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.108627663 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.08976041 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.104610864 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.089522951 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.107678139 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.082976469 seconds)
  done (took 5.76160157 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.121347647 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161347501 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089668517 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.130530373 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.126698751 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.12156244 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.112161138 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.150833669 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.085923804 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.111111225 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.128314245 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.126434956 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.092370685 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.116094662 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.11524357 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.092365166 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.113420556 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.106672417 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.116573154 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087421603 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.116954332 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.115176211 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.105828598 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.123653218 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.116596876 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.109885582 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.088951556 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.117105874 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.122554849 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.117156347 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.096580463 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.118070686 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.1268132 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.113259806 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087948417 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.114245092 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.127760853 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.112108538 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09393631 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.106071751 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.094428701 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.117361971 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.116369531 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.129622087 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.092403475 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.11343363 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.1124833 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.086274583 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.123397414 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.114016476 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.121024862 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.125689337 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.096873685 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.113210912 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.116730706 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.125492918 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.092436258 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.110546032 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.094910494 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.123980712 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.105321161 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.116195141 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.105547737 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.114466741 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.121545173 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.125350618 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.094320685 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.115074349 seconds)
  done (took 8.643245132 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.120417883 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.120023253 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131244476 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.131667157 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119168609 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.100632567 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.119776636 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.119203902 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.118678404 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105334273 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119476794 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.167748189 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.113683565 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.124073397 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.09997447 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.119925244 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.120493029 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120333954 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098934077 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118960741 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.119404197 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.130205185 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.119304028 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.129545131 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.10920069 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.11329749 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.119125195 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.118806168 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.130074607 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.099685222 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.129560516 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.120057133 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.119875366 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.130521203 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.129927824 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.099264462 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110682575 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119848253 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.100028575 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.120232658 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.113589708 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130856186 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.099988372 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.114458508 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11950982 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119036226 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.131366154 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.109338198 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.123613496 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.126478195 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.11913006 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.130516847 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120485203 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099999999 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.131259397 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.137034064 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131160857 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.130893634 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120980796 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.130784788 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.131247946 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.136141005 seconds)
  done (took 8.301681289 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.141902919 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103333457 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.130912381 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.10449962 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086760673 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.117556672 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.106376617 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.086839258 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.123167944 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.123362047 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.125409376 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096450304 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.121457429 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.125390348 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.116509346 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.121286416 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096090573 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.117246408 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.12348698 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.117813239 seconds)
  done (took 3.120313172 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.09844843 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.130652361 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.110163408 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.097817095 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.113648218 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.11686295 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.091263666 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113344284 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110265747 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093534124 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.122528564 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.12252438 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090002015 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.11684275 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.122499318 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.117241915 seconds)
  done (took 2.603767365 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.102485033 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.131334648 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.129369966 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.110289751 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.087367693 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.106060229 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.091707572 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.10593414 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.105545612 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.105716022 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.110528914 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.114991448 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.092887539 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.108236495 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.086723598 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.115352517 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.104630386 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.087567413 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.112584021 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.131128589 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.100605565 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.109060068 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.113792897 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.091733846 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.109392543 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.116176367 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.089935458 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.108509962 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.088127471 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.113307585 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.109302073 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.097714129 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.106649682 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.107106661 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.086948947 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.105867579 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.091624427 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.111892064 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.115315738 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.091957048 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.107506166 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.108562901 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.092860823 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.110308653 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.084963259 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.113656036 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.104835474 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.09556425 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.107888322 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.111017582 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.092343931 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.1119599 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.090969763 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.121819441 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.11274447 seconds)
  done (took 6.610613125 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104469146 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.113833241 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084141175 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.107544232 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.112757402 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.09175197 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.1134701 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091640849 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111787262 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.107376827 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091712865 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.114442774 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111650685 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.093911473 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111557686 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093528177 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.10461298 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111398581 seconds)
  done (took 2.715078215 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.096168374 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.110187981 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.097582799 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.110562102 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.109930526 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092443889 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10491114 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.08809609 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10849604 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089187574 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110596132 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.111954093 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087369351 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.112775707 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088919534 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11106105 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.111348438 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088601385 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.11002205 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084905224 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112609333 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10887513 seconds)
  done (took 3.090044379 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.12630418 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.129440805 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.117843458 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.219453594 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.107306621 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.137756238 seconds)
  done (took 1.682282428 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114946044 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.149336705 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110387217 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093225518 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123727653 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114978884 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094107898 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115683343 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127110577 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128816119 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116768643 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107161626 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128240727 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126272207 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123528982 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123153621 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09587566 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116035678 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11042383 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137991208 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094941035 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128010846 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11596197 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115091474 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095877575 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126216304 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128614194 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129049773 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115949872 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127041781 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102408745 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115762447 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1286232 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129046123 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093592921 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128986235 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115866228 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136855024 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12335349 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126975379 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.093408078 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124019683 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127781826 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123121419 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1069428 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117458513 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12235656 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116392057 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096553203 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142032741 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123422039 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12716383 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123904928 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127416751 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108014101 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.163318848 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12875514 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107185432 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125173088 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128879832 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128157088 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12370324 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126864884 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129100579 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1029771 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125974206 seconds)
  done (took 8.759544274 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130406677 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.112465226 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115791846 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129520905 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127291022 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094441079 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116255911 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115803675 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095319606 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112067917 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.160617072 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115874199 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127521089 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12709931 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096229615 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116168702 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116024709 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127483318 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092407102 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14340968 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116776104 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127208824 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127439127 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12697197 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128345458 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103529396 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116217978 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11574947 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09625618 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116569889 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122901737 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116228879 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128594081 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091167309 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128470325 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117027345 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0961051 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123122943 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116007421 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123542747 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126872906 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136066865 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096214004 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116611884 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12996746 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116902209 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096442498 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112383137 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115957338 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091627329 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129021102 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128928962 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130067526 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127461751 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116174898 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096633088 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116935115 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11629607 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097031801 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124306974 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1272439 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116630766 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143915315 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117147674 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096423033 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127760211 seconds)
  done (took 8.617134923 seconds)
done (took 164.252865284 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.105787364 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.144163035 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.125428889 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.151994447 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.110749669 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.123244052 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.143702909 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.12535221 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.089623536 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.110357943 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.089794513 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.112206598 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.153680238 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.111087136 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.11051386 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.092022806 seconds)
  done (took 2.753407923 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.207324668 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.27890902 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.12929064 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.087952334 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.115737014 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.089943462 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.109361214 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.118561682 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.091362347 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.109258658 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.090409499 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.111943846 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.089448189 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.111686868 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.111512229 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.089667134 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.109808694 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.091019223 seconds)
  done (took 3.005939251 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.118503414 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.152441867 seconds)
  done (took 1.135253913 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.124781349 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.18906848 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.307406875 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.160374112 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.145700769 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.132035464 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.159952241 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.11659329 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.22610963 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.10736737 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.129247885 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.122851278 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.147174601 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.121216451 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.098946927 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.122304415 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.149382014 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.097774044 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.119617364 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.122484803 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.144059075 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.089519856 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.121504241 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.096984794 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.210232352 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.10423944 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.110229136 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.089324392 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.12207887 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.118899406 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.095850244 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.133037385 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.12497587 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.164638556 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.129731613 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.185552729 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.102996694 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.117387023 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.118764623 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.095387986 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.12614176 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.124070896 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.130543967 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.102608473 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.112391793 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.123639766 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.08988096 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.109540946 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.098190924 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.125750394 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.118394085 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.096937027 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.185666385 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.124100817 seconds)
  done (took 7.903947272 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.82643052 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.159269196 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117238742 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.924484518 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121044886 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.132146811 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.816752366 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.138371883 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.241890948 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.811784983 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.136620785 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.104209656 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.24056562 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.265989732 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.940959913 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.32215786 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.698571695 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.13021718 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.142860979 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.160720403 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.100239916 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.142190312 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.135081752 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.438113175 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.119443205 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.114819056 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.099842491 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.124402001 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168252178 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.115626855 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.09642168 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.208167146 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.255558409 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.214311454 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118970404 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092833058 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115156978 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.177610547 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.278293649 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.224578465 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.184778884 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110915568 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.093314718 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126347803 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134506362 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090034927 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.194124922 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.183252983 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.199754086 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097163431 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.124662519 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.123486281 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.102510696 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.194591577 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.126128868 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.324376438 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.326761189 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093204393 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124223465 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.130504683 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.250720761 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127927069 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.23687556 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142071099 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.222073028 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.093171157 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.80240508 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.198068892 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.093412004 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121710501 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121600849 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099158797 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.124932428 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.175307473 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.401111138 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128911628 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.118150453 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093757785 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.234742854 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.094184603 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11586565 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.170580674 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119261689 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122103331 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107370541 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12638669 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.177060302 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.259517915 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12734676 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.102543075 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.120074042 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127945216 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.097253251 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.241975909 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.231354612 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.1720693 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.220802856 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125903561 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.194443174 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.176657981 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124332171 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.181266042 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121698481 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130188941 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104621171 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.227068299 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.151810226 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.128663722 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.119021419 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.100654524 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.174629565 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.096856222 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.121666493 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.178694835 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.488972296 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.177053754 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.111686285 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.097746726 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123567403 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.16973026 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121305376 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266716674 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124064528 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.180265397 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122638669 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.091126079 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122906797 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.172789335 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126636292 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123352428 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124669803 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101139932 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.261232913 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.206225888 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128272144 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.247740004 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.187858067 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121982274 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.182032514 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123096659 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.175846277 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123217259 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124695565 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097932798 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.802237468 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.127390392 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.12212233 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098467954 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.194603404 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114901199 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.128602029 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.094561527 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11166672 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.761375921 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.118556401 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.127181939 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.129408375 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100720562 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122474062 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120561334 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.09799738 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.19163919 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.24242015 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10370176 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122078433 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.116426804 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.169978403 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.118715871 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.094009042 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.115837618 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.094267224 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123956218 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.118488495 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.129753675 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.178669168 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.170538042 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.231626329 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.567718195 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.115662252 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.094284221 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.238985211 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115469269 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.299493009 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102254127 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.235479314 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.19520612 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.104057344 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.323540683 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.1959643 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.195920353 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.096921406 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.203995613 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090269601 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.121699755 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.172944966 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.115224172 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122365717 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.172108394 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.129255293 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.127233641 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.94933062 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.115863007 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.233360878 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.112716316 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.180017546 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12041411 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124905326 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.301982232 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.0938759 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.133116562 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.17250868 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11897735 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.115658584 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.706583111 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.116159099 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124904185 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101008838 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.233953865 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.192872072 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.101368457 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123498994 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.125612139 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.172670756 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.216366793 seconds)
  done (took 45.35492079 seconds)
done (took 61.011684227 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.291396104 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.220328646 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.264034689 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.174152021 seconds)
  done (took 1.915428608 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.185087867 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.153427058 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.152379592 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.088959867 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.158465667 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.111383605 seconds)
  done (took 1.743038927 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.385232027 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.289262201 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.249759486 seconds)
  done (took 1.813346708 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.256100364 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.276029899 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.334374588 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.4312935 seconds)
  done (took 2.292809987 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.212176775 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.130724793 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.105447306 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.14589858 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.175682162 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.215080223 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.14840462 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.159113175 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.134869902 seconds)
  done (took 2.361047651 seconds)
done (took 11.02244319 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.129084721 seconds)
    (2/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.139563253 seconds)
    (3/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.299743908 seconds)
    (4/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.135684114 seconds)
    (5/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.268512482 seconds)
    (6/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.190632359 seconds)
    (7/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.265725175 seconds)
    (8/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.176561422 seconds)
    (9/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.121825053 seconds)
    (10/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.143902091 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.111633169 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.127963002 seconds)
    (13/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.139465913 seconds)
    (14/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.168328793 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.121864227 seconds)
    (16/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.119664321 seconds)
    (17/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.25659803 seconds)
    (18/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.187718002 seconds)
    (19/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.243445757 seconds)
    (20/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.103096755 seconds)
    (21/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.125678148 seconds)
    (22/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.129364153 seconds)
    (23/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.093983253 seconds)
    (24/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.19570757 seconds)
    (25/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.190563263 seconds)
    (26/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.198062843 seconds)
    (27/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.220925309 seconds)
    (28/286) benchmarking ("sort", Int8, false)...
    done (took 0.213629474 seconds)
    (29/286) benchmarking ("sort", Int64, true)...
    done (took 0.238060629 seconds)
    (30/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.228208152 seconds)
    (31/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.122343309 seconds)
    (32/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.241803499 seconds)
    (33/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.094948171 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.122733909 seconds)
    (35/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.080338099 seconds)
    (36/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.069112478 seconds)
    (37/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.141794634 seconds)
    (38/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.125621234 seconds)
    (39/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.097015553 seconds)
    (40/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.115158345 seconds)
    (41/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.185725921 seconds)
    (42/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.118012944 seconds)
    (43/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.207957552 seconds)
    (44/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.119489169 seconds)
    (45/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.101625396 seconds)
    (46/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.12118083 seconds)
    (47/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.182306885 seconds)
    (48/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.163001123 seconds)
    (49/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.199168543 seconds)
    (50/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.192038214 seconds)
    (51/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.120631517 seconds)
    (52/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.12605027 seconds)
    (53/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.14795345 seconds)
    (54/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.11866523 seconds)
    (55/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.143669965 seconds)
    (56/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.229552964 seconds)
    (57/286) benchmarking ("sort", Float64, true)...
    done (took 0.246494531 seconds)
    (58/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.123072502 seconds)
    (59/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.120828373 seconds)
    (60/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.117224033 seconds)
    (61/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.212990005 seconds)
    (62/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.097777937 seconds)
    (63/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.180578369 seconds)
    (64/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.188129061 seconds)
    (65/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.120059887 seconds)
    (66/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.097175041 seconds)
    (67/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.191521733 seconds)
    (68/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.133696155 seconds)
    (69/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.1251753 seconds)
    (70/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.162897823 seconds)
    (71/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.14033062 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.11752206 seconds)
    (73/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.101206611 seconds)
    (74/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.17189696 seconds)
    (75/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.130115694 seconds)
    (76/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.196397591 seconds)
    (77/286) benchmarking ("sort", Int64, false)...
    done (took 0.089809891 seconds)
    (78/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.175288946 seconds)
    (79/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.12722404 seconds)
    (80/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.099028098 seconds)
    (81/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.093582578 seconds)
    (82/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.127643731 seconds)
    (83/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.18419317 seconds)
    (84/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.182962316 seconds)
    (85/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.072555502 seconds)
    (86/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.095066898 seconds)
    (87/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.07109419 seconds)
    (88/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.117610205 seconds)
    (89/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.076014891 seconds)
    (90/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.073043659 seconds)
    (91/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.192052147 seconds)
    (92/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.092735889 seconds)
    (93/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.12504826 seconds)
    (94/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.172579808 seconds)
    (95/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.126586915 seconds)
    (96/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.117954552 seconds)
    (97/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.12122015 seconds)
    (98/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.119555341 seconds)
    (99/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.071971608 seconds)
    (100/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.080507573 seconds)
    (101/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.128846477 seconds)
    (102/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.176971498 seconds)
    (103/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.125700329 seconds)
    (104/286) benchmarking ("sort", Int8, true)...
    done (took 0.235418799 seconds)
    (105/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.097433799 seconds)
    (106/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.070181574 seconds)
    (107/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.143093967 seconds)
    (108/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.179145948 seconds)
    (109/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.091028202 seconds)
    (110/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.173823678 seconds)
    (111/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.138094318 seconds)
    (112/286) benchmarking ("sort", Float32, false)...
    done (took 0.186575076 seconds)
    (113/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.122840405 seconds)
    (114/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.17761176 seconds)
    (115/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.12506081 seconds)
    (116/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.188665213 seconds)
    (117/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.092645602 seconds)
    (118/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.12463791 seconds)
    (119/286) benchmarking ("sort", Bool, false)...
    done (took 0.194550942 seconds)
    (120/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.124558654 seconds)
    (121/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.162688735 seconds)
    (122/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.122683863 seconds)
    (123/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.144896626 seconds)
    (124/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.072805647 seconds)
    (125/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.119377264 seconds)
    (126/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.103913898 seconds)
    (127/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.120555456 seconds)
    (128/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.195552418 seconds)
    (129/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.086570751 seconds)
    (130/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.123734865 seconds)
    (131/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.097268215 seconds)
    (132/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.122866516 seconds)
    (133/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.126404023 seconds)
    (134/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.070320753 seconds)
    (135/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.070732576 seconds)
    (136/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.093694301 seconds)
    (137/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.090332562 seconds)
    (138/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.121560384 seconds)
    (139/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.086557895 seconds)
    (140/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.092324569 seconds)
    (141/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.085458277 seconds)
    (142/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.126015802 seconds)
    (143/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.123330862 seconds)
    (144/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.129115433 seconds)
    (145/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.106573119 seconds)
    (146/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.113429211 seconds)
    (147/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.122983036 seconds)
    (148/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.09325764 seconds)
    (149/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.094454583 seconds)
    (150/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.112188255 seconds)
    (151/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.113138126 seconds)
    (152/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.093120974 seconds)
    (153/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.117148891 seconds)
    (154/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.078666314 seconds)
    (155/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.092498697 seconds)
    (156/286) benchmarking ("sort", Float64, false)...
    done (took 0.183124454 seconds)
    (157/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.142910747 seconds)
    (158/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.119996597 seconds)
    (159/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.081008783 seconds)
    (160/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.093038089 seconds)
    (161/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.07075692 seconds)
    (162/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.119732949 seconds)
    (163/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.090855911 seconds)
    (164/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.128054092 seconds)
    (165/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.073094646 seconds)
    (166/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.157558295 seconds)
    (167/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.126615509 seconds)
    (168/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.12301574 seconds)
    (169/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.08115863 seconds)
    (170/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.121732843 seconds)
    (171/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.101022364 seconds)
    (172/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.166912499 seconds)
    (173/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.093132574 seconds)
    (174/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.164284731 seconds)
    (175/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.121716184 seconds)
    (176/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.34229258 seconds)
    (177/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.078818895 seconds)
    (178/286) benchmarking ("sort", Bool, true)...
    done (took 0.236619156 seconds)
    (179/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.120464193 seconds)
    (180/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.105424431 seconds)
    (181/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.11248732 seconds)
    (182/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.073974087 seconds)
    (183/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.126322932 seconds)
    (184/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.091445762 seconds)
    (185/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.122638195 seconds)
    (186/286) benchmarking ("sort", Float32, true)...
    done (took 0.24472252 seconds)
    (187/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.121053242 seconds)
    (188/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.089842587 seconds)
    (189/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.114695211 seconds)
    (190/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.136147041 seconds)
    (191/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.124286426 seconds)
    (192/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.170801717 seconds)
    (193/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.099000083 seconds)
    (194/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.114742024 seconds)
    (195/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.090025176 seconds)
    (196/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.113087434 seconds)
    (197/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.116022985 seconds)
    (198/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.104258327 seconds)
    (199/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.121198276 seconds)
    (200/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.100262761 seconds)
    (201/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.113957866 seconds)
    (202/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.160270399 seconds)
    (203/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.072884701 seconds)
    (204/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.070166277 seconds)
    (205/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.093043987 seconds)
    (206/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.097641642 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.112734393 seconds)
    (208/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.092388103 seconds)
    (209/286) benchmarking ("sort", BigInt, true)...
    done (took 0.27282079 seconds)
    (210/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.093604683 seconds)
    (211/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.113081392 seconds)
    (212/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.099998407 seconds)
    (213/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.112391256 seconds)
    (214/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.090187202 seconds)
    (215/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.09255056 seconds)
    (216/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.079479611 seconds)
    (217/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.072261318 seconds)
    (218/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.095436815 seconds)
    (219/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.092361274 seconds)
    (220/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.093817705 seconds)
    (221/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.103118019 seconds)
    (222/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.169747967 seconds)
    (223/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.097158529 seconds)
    (224/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.116819395 seconds)
    (225/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.175452307 seconds)
    (226/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.121241221 seconds)
    (227/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.090412267 seconds)
    (228/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.093428942 seconds)
    (229/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.09075892 seconds)
    (230/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.192856549 seconds)
    (231/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.090546265 seconds)
    (232/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.11993531 seconds)
    (233/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.069527402 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.113435592 seconds)
    (235/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.06999252 seconds)
    (236/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.120242214 seconds)
    (237/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.097407914 seconds)
    (238/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.09648286 seconds)
    (239/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.101586802 seconds)
    (240/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.118619518 seconds)
    (241/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.069923826 seconds)
    (242/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.115661167 seconds)
    (243/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.091055746 seconds)
    (244/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.095902129 seconds)
    (245/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.090588886 seconds)
    (246/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.172643982 seconds)
    (247/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.142706051 seconds)
    (248/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.096664852 seconds)
    (249/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.116159897 seconds)
    (250/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.115493422 seconds)
    (251/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.090576215 seconds)
    (252/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.132542244 seconds)
    (253/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.070572298 seconds)
    (254/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.094271283 seconds)
    (255/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.25119555 seconds)
    (256/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.098867587 seconds)
    (257/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.113240427 seconds)
    (258/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.089411601 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.113053609 seconds)
    (260/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.090017736 seconds)
    (261/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.095803958 seconds)
    (262/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.070890212 seconds)
    (263/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.121535889 seconds)
    (264/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.073316015 seconds)
    (265/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.09909197 seconds)
    (266/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.091241184 seconds)
    (267/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.069399199 seconds)
    (268/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.13821429 seconds)
    (269/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.11592071 seconds)
    (270/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.090215153 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.119473097 seconds)
    (272/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.070257233 seconds)
    (273/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.092882327 seconds)
    (274/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.091279095 seconds)
    (275/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.097076839 seconds)
    (276/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.07132457 seconds)
    (277/286) benchmarking ("sort", BigInt, false)...
    done (took 0.233061858 seconds)
    (278/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.119986122 seconds)
    (279/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.090901796 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.120568086 seconds)
    (281/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.070874832 seconds)
    (282/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.102569973 seconds)
    (283/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.161812737 seconds)
    (284/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.161740568 seconds)
    (285/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.093845473 seconds)
    (286/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.094128449 seconds)
  done (took 37.777502158 seconds)
done (took 38.673113183 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.104643371 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.15512169 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.124191939 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.120924484 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.127745961 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.118263842 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.098921124 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.125779077 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.104890955 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.129838268 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.125753078 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.072529778 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.12510972 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.101029006 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.124652661 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.147249422 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.104370076 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.121173286 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.123711764 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.089653763 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.122657501 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.091263369 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.115234869 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.073097827 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.124999815 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.099273358 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.119781074 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.124441672 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.09100572 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.114335701 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.0937341 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.121900742 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.089634638 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.129910454 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.120177295 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.099190934 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.125914281 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.101030564 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.118156014 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.114153292 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.099351904 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.114212394 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.098492301 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.12176935 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.096918405 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.118867791 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.122720024 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.104597309 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.146392781 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.1197894 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.099257084 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.125447938 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.101052223 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.121957123 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.094631373 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.124189951 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.120114376 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.122922731 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.124172938 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.120401194 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.098876623 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.122882711 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.096325859 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.1227031 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.123377026 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.101279098 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.125571845 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.09585221 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.124585079 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.119775424 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.091018268 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.122952282 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.094734329 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.113732935 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.101198781 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.125129009 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.090278622 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.119550558 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.121117881 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.097127976 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.11338904 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094032454 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.115573971 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.097897664 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116903801 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.072943685 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.118737236 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.097092331 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.113448272 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.124163176 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.096914683 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.121708981 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.092837168 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.126831602 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.090056495 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.120453463 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.115158262 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.0914289 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.116423136 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.095084064 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.114052182 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093687737 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.122838455 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.092584283 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.121460768 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.127601333 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.091311964 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.120705546 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.091119411 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.114373698 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.129626372 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.1022721 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.114520228 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096461801 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.114241427 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.099312262 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.114052832 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.091093337 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.11336172 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.114678527 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.096934213 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.113896069 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093825977 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.121591939 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.105832512 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.114021579 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.094032471 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.117527203 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.115060434 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.097264518 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.115171798 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.091782425 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.116452602 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.081700758 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117560192 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.091917771 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.1223383 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093866396 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.124000281 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.11705306 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.1010309 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.118776827 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.097347633 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.120262092 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.090913214 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.1003195 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096615695 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.117347872 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.093264217 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.114526638 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.116425744 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.090976464 seconds)
done (took 17.699521103 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.090976815 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.191223673 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.160906869 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.150287806 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.137206762 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.092423298 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.126489374 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.149631848 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.094625488 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.148046692 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.139028563 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.136405387 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.131485057 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.114222669 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.115135871 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.095165822 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.117342997 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.108260871 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.153956937 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.136731253 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.172155054 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.114646937 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.127257948 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.141127329 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.125275101 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.134149356 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.092423177 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.119310536 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.095644372 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.141181399 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.136358425 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.095350856 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.116317598 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.113667182 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.13250351 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.125608329 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.092320268 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.122664489 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.092741722 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.115740355 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.147489981 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.138558412 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.097725794 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.121878131 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.095293389 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.124554739 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.093718613 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.124668071 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.127457427 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.096190069 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.131303436 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.163287508 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.119219498 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.109247339 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.114436939 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.126734109 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.108193817 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.123498006 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.09181626 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.123060684 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.114934436 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.095140006 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.131696297 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.14771037 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.096766134 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.131303987 seconds)
  done (took 9.035594591 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.109553745 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.146648229 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.135762511 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.111484186 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.115647089 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.092049865 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.116405609 seconds)
  done (took 1.783129763 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.092572889 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.142909344 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.136401586 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.143454182 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.140186383 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.119101366 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122861678 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.117278348 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.113947794 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.117521116 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.143234718 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.134230468 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.11858533 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.125581844 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.120788588 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.116958215 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.144062157 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.091736593 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.120532961 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.120193812 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120436623 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136297999 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.095173891 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.117083865 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111279825 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.117788711 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.166750317 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.098528852 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115219461 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.120293821 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091108995 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.157157496 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.135955006 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.101040312 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116767624 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.112473665 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.13609356 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115274962 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.110320458 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.122957853 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.134938682 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.093480443 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.118516994 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.091454119 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.122699563 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.106727712 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.122526981 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.093707501 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.121018158 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.141453988 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.093486315 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.134877933 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.094083248 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.121454622 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.118754704 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097520006 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.128993098 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.094198202 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.140893851 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115232902 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.113895638 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.137455212 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.135139104 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.113335694 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.120671847 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.111380099 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.135790125 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.120511654 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095275279 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.121874651 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.114371526 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.116129816 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.095244742 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.13152586 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119859355 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.121602988 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.14429744 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.120492031 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.103745971 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.118455844 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.094082153 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.119397671 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.146917915 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097546649 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.120548901 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.097366229 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.12110119 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.09153115 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.116900618 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.121006356 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.092327525 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.119692079 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.097384692 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.118844362 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.096466405 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.138769253 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.118587854 seconds)
  done (took 12.429830068 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.094063853 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.117898438 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.099511424 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.119173898 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.094727014 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.118204706 seconds)
  done (took 1.612507456 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.123417527 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.121967856 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.133427455 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.101302433 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.161555093 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.137449864 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.113271256 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12813116 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.139683454 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.107046362 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.137842892 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.137807975 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.143726033 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.100811458 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.136073055 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.124672495 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.113631817 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.129698287 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.131336928 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101021948 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.143208001 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.125744675 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.101012754 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.139580825 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.123122203 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.100542777 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.130069995 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.133083193 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.107524467 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.128110069 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.124380077 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.097748572 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.125642621 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.127646152 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.113290088 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.125333857 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124515192 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.099357907 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.131003622 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.122637847 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.114625195 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.126204874 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.132118865 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.099031459 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.127411877 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.126171934 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.099085172 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.12982297 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.138008101 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.098911974 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.123209498 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.099629569 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.122914271 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.123266838 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.100919359 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.128352698 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.123134816 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.113052173 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.126159435 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.126437968 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.097791253 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.122715235 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.12826933 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.098113705 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.134678639 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.122813214 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.1010908 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.12597332 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.126677456 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.100764771 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.123162001 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.121524412 seconds)
  done (took 9.701437168 seconds)
done (took 35.515777804 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.697651668 seconds)
  done (took 1.665412388 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.826419042 seconds)
  done (took 1.796139565 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.072901833 seconds)
  done (took 18.076055841 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.486735005 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.554588827 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.012633658 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.173277177 seconds)
  done (took 3.198718767 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.950487827 seconds)
  done (took 1.943083153 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.289433104 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.263164957 seconds)
  done (took 1.53062791 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.783468752 seconds)
  done (took 1.767536694 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.472691083 seconds)
  done (took 2.455174844 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.334230925 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.192495548 seconds)
  done (took 1.519513434 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.570354353 seconds)
  done (took 1.557247823 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.317096519 seconds)
  done (took 11.307992827 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.273960275 seconds)
  done (took 1.272983933 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.308220324 seconds)
  done (took 1.298468399 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.520842686 seconds)
  done (took 4.513069252 seconds)
done (took 54.876281545 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.103530006 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.132068772 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106958355 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.128615261 seconds)
  done (took 1.45626461 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.109995634 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.125226353 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.109090813 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.124739728 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.135372461 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.100937901 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.128372336 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.13180884 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.100129276 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.126956088 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.125721612 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.099998806 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.128469099 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.102352308 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.122873515 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.128237175 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.108699636 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.125624445 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.130122527 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.102150125 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.123498061 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.102818387 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.129936974 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.123226272 seconds)
  done (took 3.840038155 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.10491505 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.1233708 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.102401942 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.122266926 seconds)
  done (took 1.443109189 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.104813043 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.136164032 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.111045495 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.13081768 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.137687824 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.110673352 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.121518385 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.095679485 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.12393511 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.129464118 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.095441862 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.146380844 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.136647354 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.104136687 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.131907743 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.093962341 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.121553705 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.1367414 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.104545952 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.130648849 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.096897816 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.129632425 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.120800443 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.113773081 seconds)
  done (took 3.859715129 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.176639779 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.13218159 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.143596211 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.099222119 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.165088434 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.145864972 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.092162306 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.145770506 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.11761656 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.109569121 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.123499773 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.165600736 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.108211499 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.118651031 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.117565199 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.093090803 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.131840868 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.10729286 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.121039368 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.132210542 seconds)
  done (took 3.547440685 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.102622126 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.121750158 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.092515338 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.121090708 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.103342271 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.126065398 seconds)
  done (took 1.664117256 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.101250755 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.118935034 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.098231564 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.12025936 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.099553773 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.118012813 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.09277519 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.119422238 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.1195064 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.094018609 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.119926561 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.093010958 seconds)
  done (took 2.293755975 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.525259717 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.125027493 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.125250884 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.09210998 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.129045476 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.118370126 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.109702609 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.123065849 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.148349643 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.092257176 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.11852736 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.096362133 seconds)
  done (took 2.80709003 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212524561 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103456402 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270989224 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.387235707 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173464143 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167931119 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.290516859 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167351512 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.21078107 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147022045 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201618806 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166910465 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15954185 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186016026 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145381542 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.121996219 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211210928 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203952218 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157346298 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21255986 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169778813 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197707431 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184580145 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156758202 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118269815 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173586716 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.125713935 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134664586 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182932023 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176297024 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183678788 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161140599 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156707183 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.457182775 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21149441 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214813238 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.292716882 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138782748 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.148313305 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.169583445 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257333479 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145476312 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20083929 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161928958 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136524242 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18981044 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.344233882 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.185943323 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.141863347 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121219322 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216315468 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188174654 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.181636406 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146175244 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.33299605 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134633184 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.153480812 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226309788 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215076405 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200664239 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202041701 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.098713176 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.222022971 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194416272 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194713126 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.151264777 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.170965683 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138712269 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17794002 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197420374 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207492014 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174618444 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.18916355 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145615567 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175196529 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176231039 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16500105 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190217933 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169470939 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.127551482 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159713847 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151598891 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112156734 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.200833195 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129784863 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213143351 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146782337 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.16562921 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216790715 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163753962 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16554491 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201236634 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179156145 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152653295 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.08807244 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155049219 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.157631248 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167218682 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143177469 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161644286 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127442043 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.136282822 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161987169 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.128693347 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168687039 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.094311729 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.358325423 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174574213 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.132113062 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167603303 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127634585 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.156047535 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175334274 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225672212 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147037925 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112848615 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234802079 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16922013 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.115601307 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.207706584 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.205453461 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.148881265 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15190399 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183792198 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218402176 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147593427 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200909389 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152134271 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140922654 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.137968663 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173417305 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164158415 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.166453786 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113837101 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.16183556 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227272471 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.102890743 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145808886 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181107062 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139250201 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136722167 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150118491 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150048821 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.11403639 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.146749799 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.146599058 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165442207 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168615509 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160421704 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161310186 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15118238 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198511093 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14757325 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.155558701 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152414417 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.099043324 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.178721077 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224332855 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108361262 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232720872 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.173194815 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235548242 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175215249 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112181248 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182313833 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135918288 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.124978342 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178035516 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170457137 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167873396 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.192903417 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234535437 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.168985814 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.161532745 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159098597 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17294795 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.170626772 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157411688 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.115288154 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166510276 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162198441 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.128886852 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.137005217 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.139898026 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12173284 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145162896 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141248229 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19044139 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172922989 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.225669548 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165687246 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149663308 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186159556 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.107159506 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197862547 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.40481641 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120849166 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.220581397 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192577631 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176408611 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146379197 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183919782 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.125495755 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103248678 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.14722458 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170042199 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141655034 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140451864 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161670696 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186887816 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.327700843 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160976598 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246377882 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171992852 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196290398 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.127919702 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.175002141 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177956667 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169136834 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.157041696 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140627152 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.155323537 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183379789 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155230406 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238365378 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174684227 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181432895 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200809916 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.154593219 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138463005 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154405075 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174477906 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154599352 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168529083 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151527427 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116658404 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.339757672 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.10602501 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13906573 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180684138 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154353767 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210493357 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.125773233 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202748505 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105683558 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161560119 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163941111 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157146686 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.111865917 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.330578313 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189873299 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150915615 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.342932096 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181074727 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109893189 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.343674005 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201639381 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.360475638 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115082598 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156357466 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165689499 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16744141 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.345785541 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184406386 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163086664 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194741731 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161709041 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.141304415 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116572947 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154207313 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157230624 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.138672053 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.144874998 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.164152235 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.113310419 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210163718 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122043669 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16197551 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207902561 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.128761886 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.150199274 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151646242 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213317077 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168122182 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214231813 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.126021994 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.171727181 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235016422 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103965856 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137015755 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.138992831 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185157389 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141260308 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173138874 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.195010567 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23527048 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173198953 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175003251 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145447212 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.097250481 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165811429 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158761263 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238462406 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149651725 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.119629553 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222864965 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.112492557 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138932145 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166115966 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300031857 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148134718 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184798519 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.111315997 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.29165625 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131473637 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111619583 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167963732 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183933021 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.141791778 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.180121969 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175992287 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155262855 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166918602 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152536318 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199975583 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248258654 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186664868 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178794828 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.137753221 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163266691 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.318517241 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184981283 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158217782 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.141345083 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176332621 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19451604 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.187127109 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.147996658 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175840377 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174739724 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165358813 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176155632 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143465436 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23487301 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112498303 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178276539 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15257621 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14064019 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168620042 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.19650833 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144016939 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180523867 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168067881 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141044562 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139800913 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161946258 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16999206 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152738257 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.104114453 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206945587 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.102647819 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175423538 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190697596 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141332217 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161867749 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152613254 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142202156 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155442822 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156421654 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115661174 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.169855594 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192563623 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.139151654 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186751871 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184471921 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17176115 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.343307493 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147956898 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.713730838 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.108312991 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221697408 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126036243 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213877874 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127591815 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208077476 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137735935 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159499664 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207763991 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129851137 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.238089862 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205338977 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.168324523 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10972017 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158162754 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151518159 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.146034156 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158570171 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174570981 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15090421 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.115564158 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.194373972 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131918091 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.140309224 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145713588 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198977544 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154344425 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182242031 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185350914 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145259411 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179445274 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175886391 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138965389 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.168434404 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184788543 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148212908 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155282411 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.143290868 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.145808119 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19423061 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.102218041 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173575674 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170543456 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166548323 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173501803 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.142481724 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176733941 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157937461 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172535555 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141559381 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160462479 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163581452 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147285244 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.107026673 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160992493 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162864922 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.156805447 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14034188 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.146543264 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216972133 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.101702478 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148165191 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296865255 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163884816 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248058053 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.14007131 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112866162 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154139524 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15321515 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.164749031 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171988463 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.142242329 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111966404 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.141040712 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.159732041 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.138970017 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135050239 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230347035 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.318897104 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206781173 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.143263243 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.287778785 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145824826 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160827489 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.092449312 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.139268701 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150865022 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14812253 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153988121 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202126368 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193737874 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.153447295 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.138818045 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112452793 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.131197232 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140917853 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166588294 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160185067 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168650151 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119313064 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.111113957 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158373229 seconds)
  done (took 83.746742377 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.153712035 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.139548832 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.153741059 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.208257921 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.18500251 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.299290504 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.215409921 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.262155702 seconds)
  done (took 2.704949901 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.097171965 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.148178501 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.161254472 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.139228593 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.096809686 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.123306542 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.336329534 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.139301425 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.121721826 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.15462879 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.137604302 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.121879516 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.640212044 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.094726231 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.124817695 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.181806717 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.096154359 seconds)
  done (took 3.997267007 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.195314603 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.497952031 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.053264841 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.198368265 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.163065963 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.120408179 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.714104852 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.122896781 seconds)
  done (took 12.158013856 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.128144636 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.150397823 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.167836476 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.14083461 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.1580352 seconds)
  done (took 1.840842222 seconds)
done (took 126.34339099 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.103107185 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.132949901 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.103765345 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.134164574 seconds)
  done (took 1.556412685 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.100444618 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.07291146 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.104650849 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.077833806 seconds)
  done (took 1.450414722 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.198269968 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.174761866 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.403208932 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.074162848 seconds)
  done (took 1.602679578 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.119391053 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.13803041 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.13756615 seconds)
  done (took 1.497562694 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.11086078 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.133128983 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.107036247 seconds)
  done (took 1.443168641 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.111176812 seconds)
  done (took 1.210887582 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.116030266 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.145451092 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.116314922 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.143249765 seconds)
  done (took 1.620203377 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.102880996 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.131020045 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.116664262 seconds)
  done (took 1.450813852 seconds)
done (took 13.300219287 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.110826561 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.435029583 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.422491389 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.114481844 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.732229323 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.412365525 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.013776059 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.151091834 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.174740851 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12492621 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115497864 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.707495172 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.070967334 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.349781977 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.059010432 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.473901517 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.678816971 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.124269684 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.096392531 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.125591398 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.997778805 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.123843096 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.125704687 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.096202168 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.708374531 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.430758481 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098885339 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.47528559 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096932238 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.133817102 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382840719 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.126872834 seconds)
  done (took 17.376514571 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102012917 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.185707723 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.135541399 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.098488621 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.132459852 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.097677461 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.128661106 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.125114819 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.189268023 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097822057 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.144727603 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.096446371 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.131565177 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.126660354 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.119302906 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.12507842 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125909435 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096940835 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.124355209 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098413311 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.144789058 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096831203 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.126626378 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.12346924 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.098174598 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.139618524 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.126053706 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.096665371 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.12462189 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.106201523 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127801957 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.099640949 seconds)
  done (took 4.995182803 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.148377073 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.195369733 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.137037173 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.159811081 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.179592236 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098981023 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.205271636 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.152477709 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.193228831 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12687467 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.116473282 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.124977991 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.160744504 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.09989157 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.147624014 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097905643 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.12651575 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.124958699 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.097896641 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.126981308 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.117000188 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.124422965 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.125705837 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.097039253 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.12666082 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.141688621 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098980965 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124440598 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097311227 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.134488384 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127401599 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.100325777 seconds)
  done (took 5.343004553 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.101772877 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.130159261 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.113040101 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.143122793 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.127624075 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.100838479 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.129650271 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.100178887 seconds)
  done (took 2.05520685 seconds)
done (took 30.869832016 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.116411684 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.131081703 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.1115882 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.139174123 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.134940532 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.110644043 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.124095569 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.108849598 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.138793637 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.105565296 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.142469944 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.123844235 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.09869851 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.124873999 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.111193935 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.131216721 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.138678037 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.107424162 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.139912063 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.1109526 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.126995924 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.137301435 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.107283008 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.139401929 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.111466681 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.140237404 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.141453764 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.103229519 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.126557645 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.09909538 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.129956688 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.10954129 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.127515442 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.140916047 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.102670257 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.130144444 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.098580409 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.131037003 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.138131028 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.109654155 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.133335337 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.109263358 seconds)
  done (took 6.239869929 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.11472869 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.146520989 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.111065168 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.113691074 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.091260193 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083155683 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.144359869 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.081680326 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.113586722 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.114370552 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.105626767 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.080193125 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.109422072 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.0762788 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.07900133 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.107228642 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.083034858 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.078154407 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.108250087 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.079870775 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.111687115 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.076320821 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.082704143 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.111107703 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.078668132 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.111615369 seconds)
  done (took 3.710047799 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.105024636 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.141860942 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.117783278 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.180683528 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161698311 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.13346508 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.105976399 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.145075576 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.112907625 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.126270335 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097646595 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.155308928 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.143857965 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.103991497 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.129640712 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.140850966 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.111486155 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.128219918 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.102280004 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.146672284 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.142030825 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.107380839 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.145400948 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.107999039 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.125929474 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.127676231 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.102698993 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.137645337 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.10414011 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.13444574 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.131884476 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.101161255 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.126909919 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.108457115 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.13238602 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.127089965 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.116990146 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.136149682 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.106352112 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.128195717 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.104833888 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.12946515 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.148014751 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.13768687 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.126733426 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.133546076 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.101035452 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.136678859 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.098152313 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.144874586 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.13558131 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.097571433 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.129334603 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.098319949 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.127239016 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.112643886 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.128429438 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.12753991 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.109141243 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.131504232 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.109673645 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.130880887 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.140250303 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.097974564 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.13164591 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.099094592 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.126563967 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.095561219 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.150021406 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132486751 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.138421893 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.127363115 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.126661615 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.1051861 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.132130408 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.103269866 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.126587444 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.140019522 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107192234 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.129390178 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.108877183 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.128867567 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.099794034 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.145239884 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.128663095 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.098747938 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.12636753 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.104239862 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.129175645 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.098298499 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.141029965 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.125034242 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.100308124 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.1415204 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.097517696 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.127959488 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.134272247 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.102857251 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.126039049 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111627233 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.132988714 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.126184304 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.108752215 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.126830197 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.100753325 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.13684507 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.131144348 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.097540762 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.131642041 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.104831604 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.127946819 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.101076744 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.129787852 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.128229954 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.107160105 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.133616477 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.101305139 seconds)
  done (took 15.468499434 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.237241558 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.223518594 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.19581452 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.307096047 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.139390042 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.152496472 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.220275606 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.133339629 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.127948038 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.166008461 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.177231128 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.190290304 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.177936387 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.188199055 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.177103942 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.126365737 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.116873616 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.173712403 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.222461511 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.299994385 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.147519962 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.105344409 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.168075729 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.173779774 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.141899611 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.137210851 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.146869359 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.110295021 seconds)
  done (took 6.012830026 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.114424602 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.160341888 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.133256444 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.120242924 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.156299067 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.12713278 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.10296412 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.128315997 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.111140823 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.142778483 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.126425878 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.105052587 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.135021147 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.137387277 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.098387813 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.137144056 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.107722555 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.129277734 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.129922509 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.102716085 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.138111166 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.106564404 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.130903766 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.096536101 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.137331724 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.125870669 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.091196963 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.149232202 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.126424134 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.119427076 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.126009839 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.105196306 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.140581556 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.127132555 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.097660087 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.129658457 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.099481801 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.129395702 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.099102953 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.125625953 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.125691159 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.081241888 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.095771959 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.142506976 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.133981225 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.084431412 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.13465339 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.103328644 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.128479076 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.12401684 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.100276636 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.129852764 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.100490939 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.134826201 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.100028453 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.128515915 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.100587872 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.118961081 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.103151167 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.129605437 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.087071888 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.126452984 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.132762553 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.092682811 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.136409464 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.102300724 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.127042547 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.099570676 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.132297632 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.133513125 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.100699774 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.133060009 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.095267028 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.129853112 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.100831061 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.132793671 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.100153528 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.125424991 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.126977682 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.099149744 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.107530017 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.097526958 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.076444945 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.130476479 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.125004702 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.096763068 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.129714374 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.104967908 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.144440732 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.127878604 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.10654076 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.127982361 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.097274457 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.130621492 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.086477445 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.130986351 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.144163116 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.118397922 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.127509955 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.126137232 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.113323148 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.129957231 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.096890755 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.109755945 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.107286259 seconds)
  done (took 13.552032764 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.135645597 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.159454862 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.130335982 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.116506973 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.162925038 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.163293366 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.105311086 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.135439368 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.128037976 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.116958884 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.127426352 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.107175898 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.128121776 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.112505106 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.162104572 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.139233381 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.09909421 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.143189967 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.132119136 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.175239404 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.116515515 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.147344663 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.116027467 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.128436813 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.133452484 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.116242428 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.166645151 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.142513052 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.112303728 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.148043947 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.112792881 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.165504096 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.148774379 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.102841931 seconds)
  done (took 5.683621899 seconds)
done (took 51.775258203 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.220170234 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.43039816 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.203498891 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.09215916 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.247688952 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.250452351 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.215920771 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.202319931 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.303086301 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.206541345 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.456459158 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.742750847 seconds)
done (took 58.70136744 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.252378826 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.365563087 seconds)
    (2/2) benchmarking "String"...
    done (took 1.502652314 seconds)
  done (took 3.995052463 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.901691698 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.151755825 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.467036181 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.230573528 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.207788587 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.503171302 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.916745893 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.609755145 seconds)
  done (took 28.215163457 seconds)
done (took 42.493590558 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.21269556 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.250186056 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.241435972 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.192751998 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.319040237 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.231988603 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.559275645 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.290352907 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.221246684 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.191562623 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.209379486 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.217135444 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.221345937 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.467651913 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.21650241 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.208026187 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.25001169 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.794506647 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.608563684 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.218848633 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.244558858 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.254966122 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.22610193 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.210835151 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.253373609 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.206878442 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.218651006 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.209809165 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.795233477 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.212499827 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.217629813 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.711727644 seconds)
  done (took 191.01309051 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.206738222 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.257473381 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.341571745 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.253257679 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.693479871 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.406621324 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.330555417 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.777156667 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.227690582 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.238672967 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.529778272 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.207065994 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.588552941 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.177470338 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.236317106 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.273613392 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.51652388 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.5718487 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.244280847 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.366626039 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.215889269 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.433869829 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.327688597 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.45732893 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.23632374 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.257308823 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.217757796 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.229432883 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.390418157 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.438216554 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.270469046 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.246631997 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.833182212 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.063325502 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.23089109 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.245617768 seconds)
  done (took 150.668973064 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.209281022 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.208230814 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.208654521 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.241294712 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.208592327 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.208161083 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.785445538 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.793716582 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.73191232 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.487849362 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.213966439 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.596976929 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.492455222 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.211646591 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.304058641 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.223445626 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.213588375 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.225403491 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.251681621 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.212688722 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.209324902 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.793769515 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.225388914 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.344857448 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.402000426 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.226989753 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.242194518 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.598177676 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.209732127 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.242945753 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.543934736 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.259940768 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.210376344 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.610233156 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.056057847 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.325710193 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.212373954 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.24307825 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.21122274 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.491796771 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.210311871 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.211397639 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.213692491 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.912124902 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.214008419 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.789651185 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.213558018 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.187431346 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.214256067 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.21091584 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.54271942 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.899593015 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.230523617 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.210698053 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.214190227 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.210916798 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.211424701 seconds)
    (58/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.212124579 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.243945217 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.45470591 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.308122154 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.229371261 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.215939763 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.244830213 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.212019007 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.280131236 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.227730257 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.625572116 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.287089556 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.322226646 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.797634718 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.216702036 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.312508463 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.334519376 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.21299206 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.213732376 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.212658526 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.21201162 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.324412509 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.212471679 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.625744929 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.389823185 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.230865043 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.212472928 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.603176758 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.31413811 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.214032994 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.639603548 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.216509818 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.214186475 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.961344532 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.311222298 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.213871695 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.213443838 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.21428924 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.626812829 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.798044294 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.481034838 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.217557405 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.536456506 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.217296103 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.646810106 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.770505081 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.906356127 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.217412259 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.326815839 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.391493167 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.231705616 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.214817199 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.610400599 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.217342729 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.271405449 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.218155298 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.612507229 seconds)
  done (took 367.725824767 seconds)
done (took 710.538435446 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.81665718 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.812185873 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.922426128 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.809038189 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.760192031 seconds)
  done (took 10.25748157 seconds)
done (took 11.396839668 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.40276916 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.404709139 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.275136976 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.403464367 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.247206786 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.418754094 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.383027197 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.238103592 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.315820086 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.294845702 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.315155659 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.265941599 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.24786116 seconds)
  done (took 18.351129895 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.530598935 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.53469753 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.279021774 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.521172862 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.253256338 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.533355845 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.435387134 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.424796783 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.426676216 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.24539198 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.225457946 seconds)
  done (took 16.547783624 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.540841454 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.533516183 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.280885608 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.551942952 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.253586569 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.546170587 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.421225679 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.429512871 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.431013201 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.244592211 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.225985165 seconds)
  done (took 16.594977141 seconds)
done (took 52.633772123 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.220243087 seconds)
  done (took 2.356964712 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.255827542 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.418708339 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.240796324 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.226223253 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.22205917 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.225435668 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.227000487 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.222480508 seconds)
  done (took 11.174834126 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.219570034 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.219769032 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.221415287 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.220351612 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.219376819 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.220293938 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.217577276 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.219946783 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.220257195 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.218454154 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.221006175 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.220394325 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.221087138 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.217446141 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.217890015 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.217642581 seconds)
  done (took 20.648743069 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.219926016 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.217556256 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.218038477 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.219269689 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.21875237 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.218313143 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.220245436 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.219173514 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.218705679 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.219257772 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.2203986 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.219492669 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.219358623 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.218676167 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.219291359 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.219872611 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.218347812 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.220180502 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.223728259 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.21923016 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.221047893 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.219191965 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.219021494 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.219524122 seconds)
  done (took 30.403146735 seconds)
done (took 65.719709805 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.833889271 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.846492633 seconds)
  done (took 6.816963671 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.279013806 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.284725779 seconds)
  done (took 3.703307481 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.222156461 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.220846769 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.222482596 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.221651178 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.222219439 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.221947606 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.221979348 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.221547092 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.221585001 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.221362906 seconds)
  done (took 13.355259167 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.222690129 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.222383175 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.219708303 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.22268842 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.223330458 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.220281714 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.222245547 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.222817795 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.223291282 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.219877617 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.223299767 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.221173383 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.22240873 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.221392335 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.223429875 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.220235399 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.220882245 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.222289459 seconds)
  done (took 23.131723184 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.22505431 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.244988042 seconds)
  done (took 3.608582905 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.350290655 seconds)
    (2/7) benchmarking "second"...
    done (took 1.262415062 seconds)
    (3/7) benchmarking "month"...
    done (took 1.332104544 seconds)
    (4/7) benchmarking "year"...
    done (took 1.31904723 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.263590521 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.241461815 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.263751954 seconds)
  done (took 10.171053081 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.224671197 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.406197239 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.510334648 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.832105696 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.22583193 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.228331878 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.09590297 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.228729802 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.22923391 seconds)
  done (took 14.120238241 seconds)
done (took 76.045641524 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.221345741 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.234089939 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.480456956 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.226378797 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.252133669 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.517750902 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.242791331 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.354561403 seconds)
done (took 37.671082046 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.225679053 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.207984246 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.000756464 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.217579643 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.286407468 seconds)
  done (took 18.853116011 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.260360056 seconds)
    (2/2) benchmarking "read"...
    done (took 1.554078769 seconds)
  done (took 4.954830001 seconds)
done (took 31.174656155 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.225177089 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.223263475 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.223217025 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.226091315 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.224226652 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.226646401 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.222487721 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.223688836 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.226102935 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.226655213 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.227089236 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.225794988 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.225727067 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226022506 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.223124372 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224746001 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226556698 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.223764707 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223041012 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.224767955 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.226715576 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.223974126 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.224273885 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.226702164 seconds)
  done (took 30.541517724 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.226791125 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.224227524 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.226827307 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.229528279 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.225462705 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.228266908 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.227435072 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.225377488 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.226311546 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.227722242 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.225029909 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.22519334 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.227950891 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.225736022 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228434243 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.225270762 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.22880524 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224816005 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.2278363 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.225878544 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.227839707 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226168561 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.226390651 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.228495789 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.226082777 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.226490915 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.22882283 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.226390365 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.228638443 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.22786637 seconds)
  done (took 37.947800481 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.233705585 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.236044822 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.228661555 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.228758743 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.229398509 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.229772113 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.229447846 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.228523423 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.22946144 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.228476945 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.229006961 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.228968874 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.228841544 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.229356496 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.229153375 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.22999904 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.230201333 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.229897794 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.229807995 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.231701458 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.229899317 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.229917448 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.229428964 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.229868948 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.23066634 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.231016219 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.230807859 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.231209338 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.23169196 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.231076993 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.231197192 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.229588385 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.230726597 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.23063175 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.231818489 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.231512344 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.236351746 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.238054877 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.232692697 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.230995482 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.231702944 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.231086557 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.232674071 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.23213969 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.231412717 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.232077409 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.231424466 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.231740527 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.232136783 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.23205845 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.232325246 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.232505604 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.232373551 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.232633979 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.232537346 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.232903285 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.233624343 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.232443395 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.233303471 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.232089816 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.232237049 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.232686981 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.232689772 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.232084813 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.232844675 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.233076427 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.232305948 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.232663593 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.233152473 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.233151459 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.232947603 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.231999186 seconds)
  done (took 89.811214588 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.233530127 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.229918031 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.230161216 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.229737814 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.23099996 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.233373469 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.231626763 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.233006665 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231422074 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.233615628 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233814634 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.231897939 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.230798897 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.233738134 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.233171863 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.230794778 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.234674204 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.231544751 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.234013626 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.234265333 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.234291387 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.23249035 seconds)
  done (took 28.260541934 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.234474099 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.236297658 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.231973223 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.236759244 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.233753397 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.236113143 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.234557943 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.23740975 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235400112 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.232056071 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232517857 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235593351 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.234648922 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232483994 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.232238709 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.234134635 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.235503311 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.233724267 seconds)
  done (took 23.368240225 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.238047917 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.232886036 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.235600903 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.233322562 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.232926201 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.235337777 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.232384067 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.235839095 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.235447564 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.234192562 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.237904547 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235483926 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.237935696 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233758382 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237477736 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.234105026 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.236342115 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.234731466 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.237716817 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.233521505 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.235055353 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.238543483 seconds)
  done (took 28.329109271 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.237546741 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.237128605 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.235241995 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.236091055 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.234251554 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.237585511 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.237295765 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.23386238 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.238680276 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.238558584 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.236126497 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.236784954 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.236892234 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.236078738 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.235454426 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.235944102 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.238028489 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.236204485 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.238419567 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.235437555 seconds)
  done (took 25.883189212 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.238720269 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.239315392 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.23950731 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.240064832 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.238596467 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.239425466 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.239787912 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.239607045 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.238927011 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.239694994 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.239185496 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.239327184 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.239827708 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.239904819 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.23970104 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.24098246 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.240540369 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.240595878 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.240790419 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.240426273 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.240081193 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.240476349 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.241202926 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.241376734 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.240201378 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.239825275 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.241020068 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.241157846 seconds)
  done (took 35.873005265 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.241131461 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.240528807 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.238059913 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.237138551 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.238181904 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.237706626 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.239349295 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.238745005 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.24126226 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.237665158 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.240977392 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.24110079 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.241197443 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.240320862 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.240538036 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.241206776 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.241476527 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.239190978 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.238205957 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.239247636 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.241590069 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.241677765 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.242546548 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.238066484 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.239614208 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.242878723 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.239733967 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.23999813 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.242733643 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.239109576 seconds)
  done (took 38.355144918 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.262061558 seconds)
    (2/2) benchmarking "in"...
    done (took 1.261020616 seconds)
  done (took 3.67924101 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.239265952 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.242719355 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.243385463 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.24097517 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.240947888 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.243644121 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.243338558 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.24121833 seconds)
  done (took 11.091214131 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.242951858 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.244392088 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.243642965 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.243127383 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.243236103 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.244663682 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.252295253 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.262805121 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.244158781 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.245079696 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.252079778 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.251839487 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.24604309 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.245054101 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.244475313 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.24636586 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.243741508 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.244762659 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.244881896 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.245895325 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.244575797 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.24693512 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.248054656 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.241919882 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.246516915 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.257973115 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.267228892 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.245343845 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.244603513 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.24807874 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.244972656 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.242168008 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.245290221 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.245689585 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.246393915 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.245817165 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.254662794 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.266621204 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.253574562 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.263962924 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.24687999 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.243190134 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.247143505 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.247134594 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.24803028 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.246434452 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.247021983 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.244146296 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.246536989 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.250130987 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.251133572 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.246574385 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.244798073 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.248542933 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.247482451 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.253798435 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.266233099 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.250409232 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.256733789 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.257810705 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.279993673 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.270369788 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.249715659 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.247231074 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.258050396 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.271819928 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.255099119 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.263549614 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.246025987 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.248410335 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.256316399 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.280570856 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.273884421 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.24805271 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.248188314 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.249195182 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.249062772 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.247802328 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.256433413 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.270178501 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.247706201 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.249702158 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.25848923 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.271878212 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.249072085 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.249095468 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.248461588 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.249137652 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.250477188 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.260796634 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.268480189 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.248750269 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.249278266 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.24921237 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.25139215 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.250194671 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.248901058 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.250919881 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.246729004 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.250883543 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.248937281 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.252083995 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.258544121 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.250510462 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.25131537 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.257322845 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.268588679 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.25019402 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.257279533 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.269113046 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249595858 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.251846053 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.257115574 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.248730961 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.253969416 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.25829604 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.2509264 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.25126908 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.250526894 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.252220228 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.261078569 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.277684278 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.251712847 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.252719403 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.25691849 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.262834061 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.251652508 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.254993831 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.252383645 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.249576033 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.248155036 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.253494718 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.253118384 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.252867871 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.252319095 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.253160869 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.250008553 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.251221666 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.252726086 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.25297838 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.253404202 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.253105206 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.253204154 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.253795687 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.251979484 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.253596518 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.26037527 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.273063382 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.254018673 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.254162041 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.250035601 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.253258685 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.252945722 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.252955089 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.254527895 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.253768751 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.253784731 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.252893161 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.254056395 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.254084188 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.253463191 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.255380556 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.259124523 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.253716912 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.256985606 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.254277341 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.251937187 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.253895292 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.255385721 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.254988764 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.255003423 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.253003524 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.258139461 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.262635721 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.255308456 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.254281551 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.257162584 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.254668114 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.254412906 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.255323509 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.25819065 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.263663166 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.254123944 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.263543727 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.27472242 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.256153943 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.255826434 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.255030286 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.255537634 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.25570372 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.258962802 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.263818539 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.267955592 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.28248418 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.257931626 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.260209584 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.256104138 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.26007135 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.259049458 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.255903997 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.256870473 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.255397744 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.257246105 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.25543901 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.258207419 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.256169231 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.256413057 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.257098127 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.256963503 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.256577688 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.257577039 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.257529614 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.25843826 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.254956753 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.258145259 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.257003735 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.257862217 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.255287567 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.256421508 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.25766295 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.257995523 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.257562707 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.264108747 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.275220629 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.259217605 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.25922664 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.25870659 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.256890876 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.259243474 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.259520567 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.258741948 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.265293635 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.276278242 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.260117108 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.265457068 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.277785747 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.258014407 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.261910888 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.259438325 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.256478673 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.262685616 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.266757892 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.259542053 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.259312281 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.258824477 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.259596621 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.26001755 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.26690628 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.276519217 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.258671608 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.259765554 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.260579549 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.257427823 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.261173997 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.259926106 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.260436268 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.261279955 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.260451328 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.260236184 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.260864551 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.260168153 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.259754205 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.261203745 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.263049692 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.267937849 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.266626858 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.28091705 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.262373663 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.261584671 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.265042371 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.261059618 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.260792617 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.260640676 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.273645102 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.286775115 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.268165306 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.280863801 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.261389938 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.266683387 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.279760707 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.265815791 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.262551283 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.263111943 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.261755082 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.261947991 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.25875909 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.261961912 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.262989195 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.264291684 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.264681884 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.266973115 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.262484272 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.263020298 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.263526382 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.262569849 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.262714953 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.262403406 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.262973605 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.2647956 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.265254074 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.262406688 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.262777304 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.269703441 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.283011442 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.264462459 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.264099898 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.262937685 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.262982464 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.264968782 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.263302682 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.267480069 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.270697258 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.267001626 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.271430878 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.265492491 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.274525829 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.284928832 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.267640122 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.271510488 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.261846917 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.263963092 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.264840292 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.26544998 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.271548772 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.282934903 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.26586314 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.268491645 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.265431092 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.264765355 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.266508445 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.266422446 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266348522 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.264443769 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.272283548 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.286551929 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.269645707 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.268445746 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.262509352 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.265416622 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.265949354 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.264053976 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.267987396 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.265930274 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.266438185 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.265907139 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.264113087 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.267251402 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.264819509 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.266848283 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.263877356 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.266831702 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.271845975 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.287805584 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.269740204 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.266081637 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.272665928 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.285603616 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.273566566 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.285537863 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.266761822 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.266370407 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.266330153 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.268322698 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.266801027 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.267637313 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.267601342 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.2682115 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.270771896 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.266680281 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.268910128 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.267520838 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.268022397 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.266611128 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.277155934 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.291230742 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.26891998 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.272609813 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.265709869 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.269967742 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.27237994 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.267676315 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.266881596 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.27139644 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.27925911 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.275642151 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.270708953 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.268989328 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.269900415 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.268554178 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.268486911 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.270250897 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.268124308 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.269394712 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.26983932 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.268708544 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.270758472 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.269064884 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.270346578 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.271107762 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.270883944 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.28148629 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.290278373 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.269947868 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.270002675 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.270227625 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.270848877 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.269625984 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.269928033 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.271458463 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.270116472 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.27202696 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.276289662 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.277742278 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.273079984 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.270535728 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.269832805 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.269643812 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.270970232 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.271126124 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.26894156 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.270926741 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.271799221 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.269577231 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.27113307 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.269842032 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.271201332 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.27148588 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.270921907 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.27353613 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.27797086 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.27144276 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.267761127 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.271157117 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.272359638 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.269778739 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.270986831 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.279922955 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.29537321 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.281654874 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.280710943 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.275896168 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.27184926 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.274855985 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.280625485 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.271174369 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.273324963 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.272550333 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.272331959 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.272826635 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.275845577 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.274327928 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.279773411 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.292715663 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.272791334 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.281983444 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.29450023 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.27377031 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.273979761 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.276488852 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.273297756 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.27174562 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.274171807 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.273298703 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.28021437 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.293453875 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.273749851 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.275199644 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.274539699 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.276072265 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.277895467 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.273786713 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.274628191 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.271221957 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.274348578 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.274392672 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.274287122 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.271909723 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.274401643 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.274865198 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.278285645 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.280959939 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.272451289 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.277252879 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.274738797 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.274808894 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.2752278 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.274791142 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.272033039 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.273261201 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.274551744 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.275283845 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.275585147 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.278653612 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.274951422 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.276492915 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.276789516 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.276227074 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.277863905 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.285423188 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.283726914 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.273421991 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.276461112 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.276542941 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.278690666 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.274944407 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.276724108 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.277089984 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.277030907 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.275799686 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.276733366 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.276174229 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.279798504 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.29229969 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.297764621 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.277913056 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.277283895 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.279781303 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.277648541 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.274741621 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.276329664 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.279526227 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.280866381 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.284596601 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.276115051 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.285693389 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.296803444 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.277583068 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.281931345 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.280466391 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.285022599 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.2807409 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.277585346 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.276899333 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.282516256 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.294426518 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.299378584 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.288063723 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.307974248 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.296893114 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.278554741 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.279315403 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.277958682 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.27808608 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.279652988 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.278577883 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.278778923 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.279576015 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.278406178 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.28088865 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.284965288 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.279347633 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.281120037 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.279839978 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.278402651 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.280663389 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.276639671 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.280117557 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.278598557 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.280191671 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.280819321 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.279695473 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.278753183 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.29288861 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.308138508 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.280596523 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.280120356 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.277906818 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.283926388 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.284039312 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.291322725 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.288800445 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.27968175 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.280679408 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.282130209 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.279823298 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.28010509 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.279940228 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.281878973 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.281148687 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.279062894 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.294596062 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.307014007 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.285429356 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.302141791 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.282237448 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.281879932 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.281751094 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.282625399 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.281239187 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.28191611 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.284203642 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.284604636 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.281667235 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.281851527 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.285979041 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.289064648 seconds)
  done (took 755.731861727 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.279329952 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.279515702 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.279205968 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.278762492 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.280932246 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.279655476 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.279500078 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.280272866 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.280045863 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.27934844 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.280370619 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.27899875 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.280420666 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.280263038 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.280397685 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.280638436 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.280540412 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.280521876 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.280865616 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.28146337 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.281259492 seconds)
  done (took 28.07516661 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.283269619 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.281434207 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.28125016 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.285078366 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.28113604 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.285101766 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.281658565 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.283873917 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.284317371 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28142967 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.284719091 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284260386 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.281944529 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.282181492 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281915732 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.285902246 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.284338642 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.281577967 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.285173918 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.282910502 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.285210533 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.283053998 seconds)
  done (took 29.426193585 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.285531252 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.285358637 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.284852982 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.282640663 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.285884328 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.283126315 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.285767971 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.28540469 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.285815971 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.285101475 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.284047105 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.286822451 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.292485572 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.289945677 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.28772242 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.285725848 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.428834854 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.285018733 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.285046758 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.286285322 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.282844991 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.291090482 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.303053495 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.283677275 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.285068544 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.286897495 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.286960286 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.286115499 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.285777694 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.288477608 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.289959132 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.287120301 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.286461674 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.287850885 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.28647797 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.287558673 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.290997798 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.286706198 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.28376904 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.286864579 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.29766377 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.307144365 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.287213128 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.294064699 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.308034897 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.287719129 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.291351053 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.294749787 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.28484171 seconds)
  done (took 64.464570358 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.288021629 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.288478116 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.285169222 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.288199166 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.28837397 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.288121819 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.288450676 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.287668712 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.287205674 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.28578839 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.288209259 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.28755679 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.286880968 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.288801809 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.289700758 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.285878638 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.286501138 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.287322544 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.287815314 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.286851076 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.286803337 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.289767103 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.290112829 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.287316321 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.289467954 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.287461097 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.287792157 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.289336804 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.286669752 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.286642758 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.289457238 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.290053376 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.29049167 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.287945242 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.286124188 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.289859775 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.289835141 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.289145329 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.290535241 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.286623472 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.290787941 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.290304526 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.290144824 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.291860467 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.287640676 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.287468789 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.288114109 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.289154446 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.288932866 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.290643558 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.291176535 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.288455325 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.29073677 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.287690679 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.291229083 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.291690984 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.28919116 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.289326773 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.290626716 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.288215097 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.288762164 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.290838006 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.288900189 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.292333967 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.292474042 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.289528481 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.288549301 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.291742838 seconds)
  done (took 88.838325424 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.291132832 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.291308226 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.290875682 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.290830324 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.291371744 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.292567213 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.291648531 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.291910899 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.292186614 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.291266112 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.29182924 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.291809819 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.292079084 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.292844021 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.290855898 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.292638911 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.293217242 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.292493282 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.291874325 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.293127642 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.2933316 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.293791316 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.292695519 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.293065006 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.293603524 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.293054994 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.293085256 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.293804206 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.293452951 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.293341271 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.2937159 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.292898636 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.293437587 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.294684742 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.294055936 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.294395641 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.293589743 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.293690146 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.293559288 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.293884477 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.294074796 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.294517937 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.293894668 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.29453122 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.294222346 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.29405544 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.29348205 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.293984451 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.294541327 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.295315831 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.294557003 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.293898285 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.294901519 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.294999864 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.294479161 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.295084416 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.295686787 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.294160269 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.295523476 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.294962478 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.295302735 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.295111481 seconds)
  done (took 81.394259594 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.296076043 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.296333747 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.29371206 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.293310719 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.296791901 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.294455465 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.295704153 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.296482202 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.297396653 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.297613148 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297789482 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.29448617 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29612117 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297862872 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.295455776 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.296479625 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.294643891 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.295472823 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.29690034 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.29630052 seconds)
  done (took 27.124669105 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.294816854 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.29814482 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.294440937 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.295025502 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.298490775 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.295592575 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.298543971 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297746038 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.295005237 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297053213 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.298078245 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.298428494 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.29634359 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.296509734 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.298824166 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.296438437 seconds)
  done (took 21.956049136 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.295972178 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.298424454 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.297939146 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.298394738 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.296231346 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.29674427 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.299199015 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.297703048 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.296961337 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.298847196 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.299637179 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.29957536 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.299186096 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.298906251 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.297215711 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.299678672 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.296585423 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.297289416 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.299628314 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.299058041 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.298317628 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.298084939 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.300178812 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.299843698 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.296717102 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.297141094 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.297130923 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.297669585 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.297511049 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.300890221 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.296628876 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.296770149 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.297518743 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.297039056 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.301517742 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.297680447 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.300498587 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.300407077 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.30032704 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.300601779 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.300579593 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.298390322 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.301516721 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.30128859 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.297900885 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.300226016 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.298612948 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.298438068 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.299480475 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.29939368 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.301677133 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.301713088 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.301549802 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.300972729 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.303453804 seconds)
  done (took 72.650250569 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.301169101 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.302504794 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.299307538 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.302146352 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.302957642 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.299392286 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.302697771 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.300669897 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.299764505 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.30129626 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.301472946 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.303421988 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.299216576 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.302268468 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.300275354 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.302993469 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.299142089 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.299783152 seconds)
  done (took 24.630332021 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.301012596 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.301030018 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.30226539 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.300560254 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.300253733 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.303517102 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.299798382 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.3023394 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.303367322 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.300376874 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.300961079 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.304175079 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.303143897 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.304039018 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.302450805 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.300295962 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.304990587 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.30318708 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.300999908 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.300681889 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.304715619 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.303616291 seconds)
  done (took 29.859844074 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.303155916 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.303783973 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.303243427 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.319698925 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.321619227 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.326623265 seconds)
  done (took 9.090821538 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31095936 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305276563 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.302254223 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305551397 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305279008 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301601106 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302197817 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303351051 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305983625 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302850132 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302507493 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305765681 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305662681 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302259248 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306812399 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305046146 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304102748 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303680398 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30390505 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305712416 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303366228 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305490493 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303534658 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302750395 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304739416 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303454304 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307046212 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304193247 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304904696 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306803941 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306204016 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304531779 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307569319 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304871002 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307253626 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307138148 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304769265 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307203935 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306674784 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305127915 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.30797878 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306880615 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306479627 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304607821 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309181498 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304981705 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305829127 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304923159 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305213438 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309416255 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308404387 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305960616 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307763125 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30922089 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3073067 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309413876 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30556921 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305323108 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309236986 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306168681 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307215752 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30888412 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30491609 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305820425 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309622793 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308018604 seconds)
  done (took 87.420160201 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305637748 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.306491924 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307282627 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308256414 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306710143 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307084804 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307447574 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307164588 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306193484 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306280399 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308402396 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308184137 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308094981 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307097177 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306584885 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306478068 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307548738 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307580773 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306974995 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30960779 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307239672 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307299297 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307503891 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309259194 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308427419 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31046545 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308964752 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307551331 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30850376 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307676866 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308424781 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308286184 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308013323 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.309467691 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308279011 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308820232 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30805279 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308083783 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30840653 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312461232 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30864484 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311628212 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309418994 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310928281 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309983615 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308828853 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312506837 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309258682 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310276398 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310124247 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310864538 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309684407 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310596101 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310043661 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31024358 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310812847 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311433484 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310057931 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310528507 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313149153 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311323976 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311303874 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313449173 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310098661 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311849904 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311929793 seconds)
  done (took 87.614214204 seconds)
done (took 1762.559080491 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.476530818 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.430019636 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.313415379 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.312697093 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.313691622 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.330056813 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.328440799 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.313146832 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.312596352 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.313458052 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.314299938 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.50126968 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.312864883 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.313691014 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.313560825 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.408288704 seconds)
  done (took 42.830918285 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.343552647 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.319391019 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.438340933 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.342010314 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.342115349 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.511983107 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.376699484 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.319596937 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.502140319 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.365711315 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.030897844 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.347183315 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.319036974 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.536936359 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.342083871 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.510017686 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.584941065 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.044480702 seconds)
  done (took 30.80105575 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.796743828 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.325609897 seconds)
  done (took 9.346740784 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.339904163 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.319761034 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.320482231 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.319124514 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.310717951 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.311637054 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.317921386 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.313427559 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.172487103 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.452952476 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.344660099 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.329229932 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.339101833 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.320029338 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.316933431 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.359153945 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.478407447 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.318265784 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.315443743 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.325234736 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.320258738 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.40711777 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.381083184 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.322950013 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.451178133 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.206153984 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.326781092 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.327649321 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.478304598 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.319662535 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.319500239 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.321302513 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.321881951 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.237264845 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.843867155 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.315048939 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.366623975 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.329901003 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.318913926 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.479285678 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.321461055 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.32766817 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.32866029 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.840975031 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.48006359 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.447413132 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.636733486 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.344823425 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.324252723 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.38526428 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.32297887 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.323571702 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.366776962 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.142767917 seconds)
  done (took 111.850195513 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.363637881 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.710757274 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.483943971 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.335430332 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.971506074 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.940388537 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.3356907 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.623833969 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.37473252 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.315816669 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.604041732 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.84514186 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.338733985 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.340368697 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.327679132 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.393199371 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.316113475 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.081936228 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.337839083 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.317534463 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.833954427 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.322295483 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.34004459 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.499125954 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.355553149 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.784936944 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.83621552 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.807732123 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.335188888 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.315561772 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.803401414 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.338812619 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.373339445 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.321000805 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.585193741 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.700481106 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.689220167 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.336188595 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.370292539 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.319906371 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.333982892 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.78080931 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.704516869 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.338812719 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.322133796 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.802415402 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.339331179 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.321728001 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.31987311 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.518987229 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.243095776 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.317688941 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.870222141 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.320165237 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.679715701 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.326441016 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.355762189 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.829385548 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.337891881 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.454022568 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.382837222 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.319036713 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.323932404 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.32323917 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.339052935 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.68115856 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.660714491 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.326691673 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.679037841 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.818965977 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.341493892 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.882808291 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.193995509 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.348929415 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.373529322 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.318665189 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.918152806 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.827844059 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.344214991 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.320013909 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.666618887 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.341134738 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.608085349 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.337441949 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.342207042 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.844852513 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.326471167 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.359501401 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.31981998 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.324022113 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.001445592 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.339606532 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.599594237 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.347363852 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.320642862 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.321070806 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.360527282 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.321357937 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.343216327 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.322354126 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.860015975 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.340180307 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.472908422 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.346978962 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.320950347 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.342987992 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.320779981 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.32384569 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.53948148 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.81024981 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.34762682 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.320894079 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.322179955 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.347781564 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.482474826 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.324253203 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.641665314 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.342908456 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.322687449 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.324450405 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.927749572 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.388216757 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.322127953 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.34388561 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.205906002 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.534402192 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.341978321 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.325610559 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.323547511 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.340550549 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.686157405 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.349070236 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.359273024 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.326147223 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.044000893 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.343928688 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.360204172 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.883717294 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.324287132 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.323407872 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.328334653 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.323302261 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.628198672 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.596930972 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.587787284 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.323352845 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.345526542 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.013114696 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.368187537 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.462799447 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.343840144 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.38502057 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.522548543 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.450350659 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.325789731 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.965443551 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.323036453 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.538086809 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.330072766 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.62255551 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.823475235 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.340848433 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.33137818 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.042598101 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.061784136 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.950125234 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.325153538 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.608021772 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.291732063 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.805376515 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.324779429 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.325412321 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.780657679 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.327154334 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.331934111 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.32527783 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.326596186 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.357592773 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.499185529 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.975068447 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.333462681 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.790310234 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.382210022 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.326630955 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.350604571 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.327625472 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.675536691 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.367114565 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.327142767 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.372098684 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.327890088 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.325685625 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.811852497 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.22007333 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.330968036 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.479243741 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.976527005 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.349204724 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.327812183 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.962206645 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.641836194 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.852048908 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.394076674 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.648128682 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.346270255 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.36589474 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.910826624 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.404371616 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.813208768 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.348904975 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.333344046 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.930383036 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.344979264 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.392130832 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.328621082 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.329766357 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.877424031 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.344300021 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.334259353 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.700667117 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.350213257 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.600484204 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.331983522 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.353109788 seconds)
  done (took 1109.941282616 seconds)
done (took 1305.992015929 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.328285603 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.336031286 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.313677059 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.334608396 seconds)
  done (took 26.554339965 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.346686692 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.3344587 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.337587757 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.335680328 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.338203605 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.336183801 seconds)
  done (took 9.271757017 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.462463595 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.33439544 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.333679955 seconds)
  done (took 19.373126871 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.557757014 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.663801058 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.682746783 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.63571952 seconds)
  done (took 10.783152934 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.339021757 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.338068648 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.338284227 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.339963527 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.35065057 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.35163591 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.342756753 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.342269235 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.351658919 seconds)
  done (took 13.337297594 seconds)
done (took 80.563416053 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.396922683 seconds)
    (2/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.392781359 seconds)
    (3/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.311019788 seconds)
    (4/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.432487579 seconds)
    (5/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.418194805 seconds)
    (6/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.216419214 seconds)
    (7/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.033100758 seconds)
    (8/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.366266008 seconds)
    (9/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.359855652 seconds)
    (10/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.332994175 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.591869965 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.391553438 seconds)
    (13/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.965581012 seconds)
    (14/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.426346122 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.359759673 seconds)
    (16/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.359595991 seconds)
    (17/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.312081747 seconds)
    (18/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.334279305 seconds)
    (19/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.712484982 seconds)
    (20/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.365815027 seconds)
    (21/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.434468132 seconds)
    (22/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.374804742 seconds)
    (23/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.451568389 seconds)
    (24/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.321044317 seconds)
    (25/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.732661384 seconds)
    (26/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.860589748 seconds)
    (27/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.312691596 seconds)
    (28/286) benchmarking ("sort", Int8, false)...
    done (took 4.357409419 seconds)
    (29/286) benchmarking ("sort", Int64, true)...
    done (took 6.357671796 seconds)
    (30/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.316724269 seconds)
    (31/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.334610618 seconds)
    (32/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.315862738 seconds)
    (33/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.421009149 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.464076113 seconds)
    (35/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.545634262 seconds)
    (36/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.031845081 seconds)
    (37/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.872629201 seconds)
    (38/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.426267459 seconds)
    (39/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.442653793 seconds)
    (40/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.432319668 seconds)
    (41/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.315445778 seconds)
    (42/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.908272156 seconds)
    (43/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.317336716 seconds)
    (44/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.472732643 seconds)
    (45/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.355006584 seconds)
    (46/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.453523514 seconds)
    (47/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.582872125 seconds)
    (48/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.720698942 seconds)
    (49/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.829906286 seconds)
    (50/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.086592436 seconds)
    (51/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.234322225 seconds)
    (52/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.477185254 seconds)
    (53/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.374354862 seconds)
    (54/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.33490639 seconds)
    (55/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.871336571 seconds)
    (56/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.320234537 seconds)
    (57/286) benchmarking ("sort", Float64, true)...
    done (took 6.35750877 seconds)
    (58/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.444438221 seconds)
    (59/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.35891118 seconds)
    (60/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.398063915 seconds)
    (61/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.795205014 seconds)
    (62/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.386897457 seconds)
    (63/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.313670263 seconds)
    (64/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.158461339 seconds)
    (65/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.836496577 seconds)
    (66/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.598408395 seconds)
    (67/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.62418072 seconds)
    (68/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.706603242 seconds)
    (69/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.385389304 seconds)
    (70/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.786271728 seconds)
    (71/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.360094388 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.697120657 seconds)
    (73/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.971851771 seconds)
    (74/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.816292393 seconds)
    (75/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.348212733 seconds)
    (76/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.35637321 seconds)
    (77/286) benchmarking ("sort", Int64, false)...
    done (took 5.6033031 seconds)
    (78/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.689623315 seconds)
    (79/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.074255524 seconds)
    (80/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.486263297 seconds)
    (81/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 3.046997561 seconds)
    (82/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.320097825 seconds)
    (83/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.337981669 seconds)
    (84/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.236741745 seconds)
    (85/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.515639209 seconds)
    (86/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.377088315 seconds)
    (87/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.262877611 seconds)
    (88/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.330402247 seconds)
    (89/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.331752503 seconds)
    (90/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.323687307 seconds)
    (91/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.316623253 seconds)
    (92/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.582238859 seconds)
    (93/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.855784833 seconds)
    (94/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.320755208 seconds)
    (95/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.409093694 seconds)
    (96/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.348605088 seconds)
    (97/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.368259294 seconds)
    (98/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.356900987 seconds)
    (99/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.318427217 seconds)
    (100/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.562593094 seconds)
    (101/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.448177128 seconds)
    (102/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.316413186 seconds)
    (103/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.988031126 seconds)
    (104/286) benchmarking ("sort", Int8, true)...
    done (took 6.343800193 seconds)
    (105/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.335602317 seconds)
    (106/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.423844485 seconds)
    (107/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.398050405 seconds)
    (108/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.319230003 seconds)
    (109/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.318610854 seconds)
    (110/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.128863283 seconds)
    (111/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.573797634 seconds)
    (112/286) benchmarking ("sort", Float32, false)...
    done (took 5.34109375 seconds)
    (113/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.362065898 seconds)
    (114/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.319775758 seconds)
    (115/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.354669539 seconds)
    (116/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.332649188 seconds)
    (117/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.386570444 seconds)
    (118/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.348866375 seconds)
    (119/286) benchmarking ("sort", Bool, false)...
    done (took 1.86773259 seconds)
    (120/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.385219856 seconds)
    (121/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.156896601 seconds)
    (122/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.618180219 seconds)
    (123/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.07575051 seconds)
    (124/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.31915099 seconds)
    (125/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.19406593 seconds)
    (126/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.782496847 seconds)
    (127/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.602140394 seconds)
    (128/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.87881925 seconds)
    (129/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.473050371 seconds)
    (130/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.026882568 seconds)
    (131/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.367838707 seconds)
    (132/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.452253808 seconds)
    (133/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.356500917 seconds)
    (134/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.869078774 seconds)
    (135/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.322397654 seconds)
    (136/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.319252432 seconds)
    (137/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.180492754 seconds)
    (138/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.37259416 seconds)
    (139/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.080940197 seconds)
    (140/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.777317804 seconds)
    (141/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.320559749 seconds)
    (142/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.350696742 seconds)
    (143/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.216287543 seconds)
    (144/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.778657154 seconds)
    (145/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.944870483 seconds)
    (146/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.766134288 seconds)
    (147/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.382997129 seconds)
    (148/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.342034455 seconds)
    (149/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.358108666 seconds)
    (150/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.960552443 seconds)
    (151/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.339369282 seconds)
    (152/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.347570366 seconds)
    (153/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.485713115 seconds)
    (154/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.917430972 seconds)
    (155/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.605594311 seconds)
    (156/286) benchmarking ("sort", Float64, false)...
    done (took 5.652089928 seconds)
    (157/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.61760917 seconds)
    (158/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.20795918 seconds)
    (159/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.286351512 seconds)
    (160/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.995169394 seconds)
    (161/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.326172632 seconds)
    (162/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.850332785 seconds)
    (163/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.948298734 seconds)
    (164/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.489106491 seconds)
    (165/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.349016611 seconds)
    (166/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.721236706 seconds)
    (167/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.730807947 seconds)
    (168/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.371006866 seconds)
    (169/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.375244307 seconds)
    (170/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.391164607 seconds)
    (171/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.385830608 seconds)
    (172/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.361485611 seconds)
    (173/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.200012122 seconds)
    (174/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.34425246 seconds)
    (175/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.244433488 seconds)
    (176/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.364862551 seconds)
    (177/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.165937817 seconds)
    (178/286) benchmarking ("sort", Bool, true)...
    done (took 5.400911266 seconds)
    (179/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.48526535 seconds)
    (180/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.816488905 seconds)
    (181/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.408048504 seconds)
    (182/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.322320178 seconds)
    (183/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.37488259 seconds)
    (184/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.295066973 seconds)
    (185/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.357567116 seconds)
    (186/286) benchmarking ("sort", Float32, true)...
    done (took 6.347341412 seconds)
    (187/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.268523029 seconds)
    (188/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.293063138 seconds)
    (189/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.34574994 seconds)
    (190/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.769748133 seconds)
    (191/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.771933646 seconds)
    (192/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.340640237 seconds)
    (193/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.473470658 seconds)
    (194/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.353142653 seconds)
    (195/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.015037818 seconds)
    (196/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.352085224 seconds)
    (197/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.472906998 seconds)
    (198/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.081341249 seconds)
    (199/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.586800118 seconds)
    (200/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.400587633 seconds)
    (201/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.35002533 seconds)
    (202/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.326426101 seconds)
    (203/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.326671743 seconds)
    (204/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.327962683 seconds)
    (205/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.690511809 seconds)
    (206/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.371826243 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.02398072 seconds)
    (208/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.396126481 seconds)
    (209/286) benchmarking ("sort", BigInt, true)...
    done (took 6.352485463 seconds)
    (210/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.412152537 seconds)
    (211/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.385895827 seconds)
    (212/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.370815692 seconds)
    (213/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.428535954 seconds)
    (214/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.834524614 seconds)
    (215/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.500584881 seconds)
    (216/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.786649697 seconds)
    (217/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.591831502 seconds)
    (218/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.34444997 seconds)
    (219/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.347267212 seconds)
    (220/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.638497794 seconds)
    (221/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.492829388 seconds)
    (222/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.362984928 seconds)
    (223/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.882260284 seconds)
    (224/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.368154189 seconds)
    (225/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.333282688 seconds)
    (226/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.45058628 seconds)
    (227/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.429921455 seconds)
    (228/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.067439572 seconds)
    (229/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.842940659 seconds)
    (230/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.441769672 seconds)
    (231/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.566563074 seconds)
    (232/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.389991879 seconds)
    (233/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.996867424 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.764975327 seconds)
    (235/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.257569839 seconds)
    (236/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.379256398 seconds)
    (237/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.373503301 seconds)
    (238/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.32605599 seconds)
    (239/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.740013765 seconds)
    (240/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.453301173 seconds)
    (241/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.016568874 seconds)
    (242/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.433705136 seconds)
    (243/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.365329237 seconds)
    (244/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.378122392 seconds)
    (245/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.732890792 seconds)
    (246/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.366661413 seconds)
    (247/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.434689064 seconds)
    (248/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.374559303 seconds)
    (249/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.456176479 seconds)
    (250/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.350407813 seconds)
    (251/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.139464891 seconds)
    (252/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.756403615 seconds)
    (253/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.890670984 seconds)
    (254/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.337045083 seconds)
    (255/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.349390277 seconds)
    (256/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.433289816 seconds)
    (257/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.56830024 seconds)
    (258/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.449007462 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.45974135 seconds)
    (260/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.765967166 seconds)
    (261/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.351245389 seconds)
    (262/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.138368594 seconds)
    (263/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.172709612 seconds)
    (264/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.331273311 seconds)
    (265/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.333406092 seconds)
    (266/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.365026432 seconds)
    (267/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.605853067 seconds)
    (268/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.076961478 seconds)
    (269/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.461101377 seconds)
    (270/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.195578412 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.39688807 seconds)
    (272/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.539799243 seconds)
    (273/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.319086979 seconds)
    (274/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.379489067 seconds)
    (275/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.333508261 seconds)
    (276/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.349930031 seconds)
    (277/286) benchmarking ("sort", BigInt, false)...
    done (took 6.355451327 seconds)
    (278/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.394818906 seconds)
    (279/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.161842504 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.375920605 seconds)
    (281/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.953262855 seconds)
    (282/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.225449601 seconds)
    (283/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.457502846 seconds)
    (284/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.446364902 seconds)
    (285/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.539431566 seconds)
    (286/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.440079069 seconds)
  done (took 951.722215851 seconds)
done (took 952.969053961 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.383128945 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.387351607 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.361695311 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.383835185 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.480436777 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.384871751 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.372255073 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.364867376 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.409084083 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.411409347 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.367782244 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.382962008 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.370673658 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.370021619 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.36229763 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.383954049 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.515406716 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.375078636 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.384353278 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.374619835 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.385847883 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.367572038 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.413381947 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.383468614 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.366724366 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.365653848 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.373588796 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.389636721 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.481345472 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.374243446 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.365399363 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.381063403 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.514413604 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.364925751 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.35823895 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.390331327 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.380673663 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.373365776 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.367382201 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.402149457 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.962533665 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.391829595 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.372008211 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.364601127 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.366034873 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.367845686 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.372460536 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.371074314 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.38542662 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.387425416 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.970772941 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.411095109 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.374692091 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.366501735 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.376649187 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.372242955 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.370045239 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.388794032 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.391587809 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.390635922 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.505885875 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.376730147 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.36735131 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.390215757 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.379980352 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.010634458 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.382109128 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.373287587 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.963415435 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.391811462 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.020341504 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.403933883 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.367847196 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.387047346 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.40590676 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.517885984 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.364556793 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.365147135 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.379390439 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.371185975 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.377371387 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.38846852 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.372723076 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.367696091 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.3881464 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.389795296 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.377979382 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.374710673 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.37666474 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.393100601 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.380860474 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.384461874 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.370832495 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.363342177 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.37768692 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.371566613 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.377247861 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.375835904 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.373039107 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.378215484 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.952847553 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.414011612 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.365561807 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.365922618 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.36743093 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.388859623 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.899719983 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.394563948 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.391096261 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.41677294 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.371228065 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.508847985 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.38214277 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.393708948 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.380585721 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.372706139 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.365329639 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.511897672 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.991435621 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.414791408 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.372259487 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.375586108 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.395314402 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.372175709 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.366552563 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.529037646 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.374987888 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.391064762 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.49748146 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.380219506 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.408540367 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.375707056 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.373857602 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.396253227 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.395807949 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.408823182 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.372821655 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.396063179 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.392353258 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.366393454 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.38705158 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.380075627 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.372263285 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.375175531 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.365401715 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.397469028 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.391305638 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.392993683 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.391991919 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.499233361 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.369229215 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.522208223 seconds)
done (took 233.369399144 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.429123941 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.365221815 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.452411146 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.368493466 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.468988337 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.467388772 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.364556869 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.365732048 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.366335306 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.746371026 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.364925242 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.366167476 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.360013071 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.366928702 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.449488339 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.368938402 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.36722934 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.710146526 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.369127177 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.438462434 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.369266078 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.366423434 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.369227769 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.747605238 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.364464108 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.363284007 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.438927583 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.370653964 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.714348863 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.362122701 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.365179214 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.714405002 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.457130798 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.386872102 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.380058148 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.376521539 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.470738784 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.389318989 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.451399618 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.45096216 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.453791197 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.408116444 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.36619069 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.363129394 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.371604191 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.371707132 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.367509619 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.406974889 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.362771647 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.369577732 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.712330568 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.380430661 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.369494032 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.371168735 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.369758327 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.400047171 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.368923374 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.372702471 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.460115465 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.372031098 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.433949306 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.752473316 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.751335156 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.371667698 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.369185151 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.369630763 seconds)
  done (took 150.8050865 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.438251162 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.444465811 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.488145965 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.390603166 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.423035342 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.491840592 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.39036578 seconds)
  done (took 11.342309746 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.377706706 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.373446703 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.422628842 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.422397959 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.373414365 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.551158886 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.373753392 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.383439759 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.369739378 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.424995916 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.374608656 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.374031257 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.38027478 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.365560997 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.421012444 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.384881274 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.487588895 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.374419664 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.375044847 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.533825575 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.380394779 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.37210921 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.42603304 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.384813506 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.375817269 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.379261713 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.189949529 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.374383684 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.37098616 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.374218078 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.371055007 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.449551298 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.376211507 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.372193194 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.372360722 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.488042708 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.374660613 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.372267337 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.375893261 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.372742935 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.376092954 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.376116024 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.376980753 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.374013391 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.375691681 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.398267135 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.377000759 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.376297937 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.376384563 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.377474486 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.426380882 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.375709859 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.374129464 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.372550199 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.429583364 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.383105075 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.376684623 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.374237608 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.378346763 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.374249305 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.536512338 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.423672847 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.376199271 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.42453319 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.377067395 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.378135439 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.377607527 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.376124677 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.430873792 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.377182311 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.425054128 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.373582301 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.556500773 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.399018136 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.378481618 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.380895303 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.380070549 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.377257465 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.369925151 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.382921499 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.375775527 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.378733701 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.382197252 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.374834952 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.375211044 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.542491601 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.483036564 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.375414265 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.38901025 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.38473322 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.375910373 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.429775409 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.378422187 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.375551269 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.430285493 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.492421176 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.428230394 seconds)
  done (took 157.699371493 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.382449231 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.385774612 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.381507028 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.401304249 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.398541566 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.378078667 seconds)
  done (took 9.608502381 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.380702633 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.381118632 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.380465192 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.38094861 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.379421606 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.380559894 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.379922215 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.38060243 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.384420793 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.378904645 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.382044574 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.38354426 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.382307683 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.380080471 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.380741759 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.380507747 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.380140438 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.378185984 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.381822949 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.380616942 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.491240479 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.381567041 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.380211878 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.382468682 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.38776198 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.381493389 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.38943588 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.38159455 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.382126843 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.387119666 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.400721494 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.382221778 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.382046789 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.387847817 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.385300928 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.38276553 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.387159145 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.384971912 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.379787478 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.383949388 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.385742669 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.381215744 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.382723663 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.38594734 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.383372027 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.388682396 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.390861928 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.3902787 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.382473333 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.386794308 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.386968831 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.383091548 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.383352799 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.387420753 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.384974079 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.405070696 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.3906749 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.383944248 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.383292473 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.383698161 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.385157342 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.383721797 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.386426933 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.387681657 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.381381415 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.388671851 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.384730513 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.388576434 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.384300767 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.384349556 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.387783116 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.380467473 seconds)
  done (took 102.057654984 seconds)
done (took 432.785053233 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.47560994 seconds)
  done (took 7.761872326 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.531080307 seconds)
  done (took 7.820897825 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.110914433 seconds)
  done (took 24.398975973 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.425699679 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.44689739 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.403510568 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.382455532 seconds)
  done (took 26.942887542 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.947063061 seconds)
  done (took 8.231175703 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.373817859 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.396488858 seconds)
  done (took 14.055911565 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.524027898 seconds)
  done (took 7.808590617 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.430927424 seconds)
  done (took 7.720556552 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.38204807 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.3956173 seconds)
  done (took 14.07633598 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.352869745 seconds)
  done (took 7.639219919 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.048804361 seconds)
  done (took 12.338045831 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.376171747 seconds)
  done (took 7.666624535 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.383333803 seconds)
  done (took 7.672149646 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.088456162 seconds)
  done (took 10.375945602 seconds)
done (took 165.798283312 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.378373165 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.384814989 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.383634131 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.382342487 seconds)
  done (took 26.818065079 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.420678235 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.420761682 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.421592362 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.430213427 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.422856236 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.419644684 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.421922614 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.413166593 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.431157228 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.423695949 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.421983688 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.422721955 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.421344588 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.413557246 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.423260968 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.423420289 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.431824133 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.422946327 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.413187571 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.425403629 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.389806718 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.432023489 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.424089474 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.38905594 seconds)
  done (took 35.371043773 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.912911811 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.461141569 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.544665196 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.441660106 seconds)
  done (took 7.65066715 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.439964485 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.440536189 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.455127378 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.493054521 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.519938947 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.450928212 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.416919587 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.410134965 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.396564548 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.442866884 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.5182413 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.458275161 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.525817619 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.389550327 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.576352277 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.388763132 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.387988353 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.441222491 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.492427239 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.508054288 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.390803948 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.441348909 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.444881811 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.458709548 seconds)
  done (took 36.179364816 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.390489293 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.406553988 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.389577768 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.38776 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.3975238 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.390346175 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.38964534 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.390166986 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.388921574 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.395195329 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.388443804 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.401932059 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.38942875 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.38908531 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.395665017 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.390134297 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.396020468 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.390153718 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.391277198 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.396846638 seconds)
  done (took 29.147632787 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.384688591 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.336458696 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.735616153 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.64020233 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.385379774 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.384351688 seconds)
  done (took 29.159690798 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.467973063 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.625457075 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.390487124 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.788989765 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.890703456 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.413602281 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.391410326 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.654999564 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.016296576 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.998775095 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.457145035 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.46347162 seconds)
  done (took 20.854798469 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.390863081 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.388932834 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.390673116 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.403367805 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.450737853 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.412985838 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.398398305 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.385355054 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.454120825 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.472988902 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.413444671 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.451859433 seconds)
  done (took 38.308782965 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474427651 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.440711098 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.475354928 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.413321794 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.11344338 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.599280278 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.488387717 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.136292732 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.411576937 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659891716 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386497498 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500428381 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.64439507 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398016779 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.393425811 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.445294026 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.639438379 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891670744 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388672698 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.919072163 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418357174 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.398089294 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.875979211 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.647282032 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.623738321 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.370426071 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.647697195 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.16401032 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.695713224 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.401238734 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398603312 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387149057 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662590293 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.433804237 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485293627 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.623298729 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418787302 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.937675476 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.39627388 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.76099126 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393903936 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.394882796 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399532393 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39017228 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.323445889 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.390786212 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.569670869 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.39490022 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.101008889 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.389490476 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.673572398 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485790509 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.392101733 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.962450466 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.472991765 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.417320566 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.393736859 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.486477683 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979451344 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.062585196 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.408152412 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.330418053 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.391651095 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.782714785 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045182512 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.413964868 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.393363853 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.394114123 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326167834 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.766270566 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.411426965 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.558288499 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.41448685 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.052281944 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.130680144 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.419096169 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.327687305 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959904555 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391909026 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.351747422 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.619938395 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.16657903 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.332050577 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.337685806 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.32694137 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.127614566 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401172387 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 5.055279405 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416977409 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.165287028 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.647289789 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435246318 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415593184 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.617530736 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.268515737 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392704029 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.391268221 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511657501 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414953507 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.16404731 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.351376667 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.396327429 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.651013148 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.603841366 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393438797 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.467533907 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.306483147 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392128582 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.429130569 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.393276541 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.634193286 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.03463853 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.428210967 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.078378619 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415007857 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.169914757 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.170031227 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40708943 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.403917946 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.394353834 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68127108 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.19488115 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.278108556 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461780981 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40006007 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.394379098 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.80884686 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.254158468 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.276877309 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.611370802 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.434282722 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.410047348 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.395476267 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.362406595 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.391933123 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419407929 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.194070264 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.620185325 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406550122 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673170551 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.329096897 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.533327935 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.410991748 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.619894012 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.674331412 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.419247369 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.657906957 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395695535 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.403013985 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.410379684 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415524834 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496178353 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418605053 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.39654792 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.657253906 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.400287713 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.400370921 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.815741932 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.182376725 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403057155 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.40256726 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402093476 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.034386988 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386337936 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.401293409 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.345231064 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.4103362 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464308246 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.403060682 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.634682358 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.822489744 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.438875681 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.402336917 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.400627865 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.625813925 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.407387996 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.779060072 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.480480664 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.93262616 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.045247632 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.430859605 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.333056198 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.110013484 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.091178543 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399501626 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.599940606 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.399294818 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.633348845 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.43591516 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.399482365 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.02060547 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419001779 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.049559952 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.407967815 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.411210978 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.718653997 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419544728 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.80370785 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.111521415 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.404034168 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.413726896 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.542416855 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.412909912 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.333044575 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.917728294 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.406141945 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.40104567 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.176175246 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433003891 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.798129587 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.687052636 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.686759357 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.400243726 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.685233613 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.898259544 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.438165851 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.402524422 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.413252878 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409633289 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.413592782 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408921371 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.412310011 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.993139622 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.852351803 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967766718 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.177869573 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.979343784 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.863119033 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.433602071 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.287528232 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.204527048 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.359668995 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.062021669 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656030332 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.207255447 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.380570115 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.317897489 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.681925947 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.263906111 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.692393388 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.631947761 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.843792727 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.442993577 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.691905352 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.61518446 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436232355 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.404588512 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.334917089 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.682511492 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.564047092 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.412084548 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.483783966 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.576912877 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.402834835 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.183826327 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.455261458 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.244227238 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.196715328 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.950879506 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.834262402 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.403994085 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.408311888 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.7754761 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.43381733 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.936701955 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055323085 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.431926927 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.940493495 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.368909682 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.642210757 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.900528237 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.399965585 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.171960214 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.436309088 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.662508225 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.689577507 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342779534 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.417770741 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975183151 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.281947588 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.409601943 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404322179 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.179860032 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.418865803 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.716045015 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.412526359 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.822834351 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.429890728 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.338990905 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33822855 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.098636488 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.415081853 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373908366 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911713861 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.426855163 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410716074 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.437873036 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.257819732 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.661843065 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.419159654 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.034834446 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.65128763 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.405384795 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431510686 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.40854925 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406142467 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.3893238 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.288367991 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.642502728 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.44249977 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.652196459 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.50071826 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.403976743 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.442265875 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.618096982 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.287752193 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.406379997 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.679578919 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.139920632 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.429924782 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.156563805 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450555702 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.412955837 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.427973585 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.42464832 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426865337 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498729249 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.644159939 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.44108833 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.417381424 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.185545007 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420958696 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.413204694 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.422073801 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.50101031 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.113675907 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.823121072 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.201875821 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.043005806 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.249960126 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.063892504 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.718422991 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.413228771 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409850813 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342743039 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.55822422 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.937524608 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.683071909 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.528130339 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.411803 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43173647 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.418523307 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.42229645 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.624642877 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.685420781 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.283767667 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425628789 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.075413341 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.29136145 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.419891234 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.620932147 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921837624 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985194386 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.795525966 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.421012243 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.208485039 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.709094484 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.502731253 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.41039581 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.00281291 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.420181011 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.251648003 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.418653951 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420173817 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560118549 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.698378137 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.526752916 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.42077131 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.564413308 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.181892011 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.834192383 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.670284275 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.958778938 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.651227835 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.066625202 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.194559365 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.678378649 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479119814 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.646386001 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.545761638 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.556215492 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.413375919 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.311375134 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.409628912 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.258298058 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.121004783 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.420966045 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.050847416 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.697506707 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.414362476 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.414947563 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437174725 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.420753307 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.634964117 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.184045066 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.63754623 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.421790542 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.419422482 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.983660488 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.04839788 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.723627259 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.349709813 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.414819247 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.658378398 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.67181274 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.436676694 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.865118927 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.122296345 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008230265 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.387538698 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433736896 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.417728146 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.178966459 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.055250975 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.859718005 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960966539 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.075617723 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.412413604 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.688871312 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.417708806 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.421810493 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.691092778 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.415389562 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.41726687 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.655264776 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.069731027 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.279240837 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.430794177 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.999074231 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.353413578 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.642235638 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.490841362 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.351107311 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.414561307 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.871726281 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.439759509 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.533181172 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.42506875 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.417964946 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.431861901 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.167936075 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.695703052 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.420770617 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.407674325 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.416781553 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.441884526 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.533055107 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.554043437 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419431138 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.088753714 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.767131428 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.672662768 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.426256408 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.397001071 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.418891158 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416268217 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.140835721 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.39302371 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.421404024 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992651032 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.425384398 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.429629758 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.418954957 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.632489391 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.627009277 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.425124554 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.659811183 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.45538428 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.43466147 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.314814989 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.189588683 seconds)
  done (took 1721.901722244 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.455208972 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.45704459 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.454666499 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.445407363 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.429330734 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.432876762 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.479071018 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.492763111 seconds)
  done (took 52.970039438 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.420069939 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.580961756 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.450385677 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.41951117 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.430135643 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.427690074 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.926842317 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.442395963 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.429582051 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.426438191 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.426307989 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.42622205 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.11578612 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.429413134 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.432664069 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.430430384 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.43046888 seconds)
  done (took 66.974942975 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.98964265 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.724245599 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.862227535 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.475215255 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.466793279 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.448760542 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.793407579 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.44523897 seconds)
  done (took 55.530504654 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.428206525 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.428678067 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.42936341 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.428955035 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.429190555 seconds)
  done (took 8.467877778 seconds)
done (took 2130.625796976 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.422395938 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.424579142 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.422519216 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.426215607 seconds)
  done (took 7.020208333 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.397868378 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.088139964 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.398436033 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.418094524 seconds)
  done (took 18.627359398 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.430643586 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.451939238 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.196341396 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.106090096 seconds)
  done (took 5.628721443 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.169867678 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.181274512 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.16689218 seconds)
  done (took 7.845144519 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.419579271 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.423150942 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.421932493 seconds)
  done (took 20.588990602 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.723249555 seconds)
  done (took 3.04954194 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.560167395 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.618641472 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.775866879 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.764103723 seconds)
  done (took 8.045063247 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.813287712 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.793377517 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.612043777 seconds)
  done (took 6.543620591 seconds)
done (took 91.557965399 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.753457193 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.448831899 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.625050699 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.526558651 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.649452842 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.626817659 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.7465697 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.704132512 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.205589906 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.986760703 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.489337149 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.648236891 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.916676362 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.443230141 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.917800341 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.82365978 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.65144079 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.801727543 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.275381551 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.416472883 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.746149808 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.123402407 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.571653157 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.357048465 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.654510439 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.574883704 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.701670097 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.823231207 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.350189984 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.929821423 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.578200273 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.430990808 seconds)
  done (took 199.825794505 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.420727145 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.424356424 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.440028901 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.426757282 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.430382684 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.426387451 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.425835532 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.441734108 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.422593117 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.439675316 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.423128178 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.429984067 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.422594649 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.453359183 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.423390165 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.422668382 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.454261608 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.426899909 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.427352598 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.445846807 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.425357559 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.440356526 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.428969762 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.433658896 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.426144379 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.43373842 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.423105545 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.452293513 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.435748431 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.423024159 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.428639193 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.444788169 seconds)
  done (took 207.153356903 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.439346775 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.438960017 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.427193257 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.44491267 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.462464947 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.428442264 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.445622537 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.445604348 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.445366091 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.447053504 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.426309253 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.447952098 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.424803427 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.431360009 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.430627795 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.424684468 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.463659764 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.428556436 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.428768589 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.42983689 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.44903667 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.454756981 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.434429228 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.443146542 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.429172094 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.425721445 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.447155845 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.428779206 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.445424981 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.445840009 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.429683996 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.429148258 seconds)
  done (took 207.354861468 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.621210478 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.43250508 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.433718984 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.363604559 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.433746456 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.432314918 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.423945529 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.658209582 seconds)
  done (took 15.129848859 seconds)
done (took 630.790944806 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.918008785 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.613254319 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.641554936 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.455231941 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.304431352 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.477340769 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.453152937 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.640165726 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.409619386 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.653067974 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.777133621 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.473888287 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.927264855 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.455019233 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.731344071 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.561751304 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.361265879 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.476811051 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.798355636 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.070656284 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.73444496 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.014590278 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.66638501 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.399773546 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.941664171 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.014851737 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.266567589 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.344815941 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.474599487 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.806996033 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.222704591 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.556588619 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.503973201 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.520651034 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.57734757 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.558398361 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.495818355 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.522491994 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.659373141 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.720262231 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.031069431 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.201377941 seconds)
  done (took 97.767341371 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.416208906 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.417292675 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.415594982 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.416659351 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.417833785 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.416688128 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.415605853 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.415441407 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.417180413 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.416012733 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.416937306 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.418895877 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.417267903 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.418963761 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.416603664 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.417241952 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.419888913 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.420170184 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.416738958 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.418851424 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.417978561 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.417086606 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.41848603 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.416684034 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.417265541 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.418961624 seconds)
  done (took 38.188202515 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.438587428 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.697870299 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.887034968 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.448141596 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.437733833 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.442850406 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.524067282 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.442606494 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.441880426 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.442214434 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.59687765 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.441184819 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.4764968 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.912060757 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.446152932 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.439060505 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.439775199 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.438656791 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.703298726 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.447716507 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.546023497 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.443367599 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.527039243 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.450898741 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.464117755 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.439338336 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.443625166 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.015845972 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.463681772 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.600686837 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.307978761 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.525676076 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.970517435 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.918757993 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.314882577 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.446163529 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.441127944 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.602948365 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.442484472 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.440361889 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.527219995 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.44560066 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.894351813 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.141864989 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.464625227 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.441483721 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.035820396 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.624460663 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.716486333 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.453483444 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.923846392 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.447594398 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.442386935 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.443543994 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.71524284 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.453350534 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.441496069 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.079174163 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.470061271 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.528275158 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.447080184 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.442296171 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.709261634 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.442986319 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.699673282 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.444474692 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.451674846 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.465873168 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.90129793 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.448699297 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.165386961 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.46634399 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.444186589 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.604476106 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.70606179 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.072097224 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.466467659 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.717731026 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.986740959 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.547671949 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.452039504 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.011051521 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.551345704 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.450791755 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.446306156 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.445513459 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.444521029 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.494751022 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.527743988 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.097858024 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.179533742 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.108784706 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.557097874 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.45651277 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.445686234 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.080908102 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.467608825 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.445937318 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.894430967 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.169268535 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.469578549 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.453014809 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.172944265 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.471483134 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.534143665 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.454800244 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.90656449 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.450911358 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.497227088 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.446569536 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.453138703 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.472540009 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.532542278 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.453166012 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.447849895 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.140643958 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.634471942 seconds)
  done (took 190.72960797 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.439465728 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.439907293 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.440165364 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.438645851 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.439784952 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.449706237 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.439305163 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.439422822 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.445839815 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.438705979 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.440612614 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.438568518 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.44159101 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.446458483 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.452111344 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.448746048 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.052015379 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.441006437 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.441009209 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.440731837 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.261896344 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.445468658 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.441513766 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.449630591 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.441806401 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.442615636 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.44922491 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.443079997 seconds)
  done (took 155.173798119 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.448670234 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.086685924 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.469361799 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.591230075 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.470749626 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.446019806 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.589630453 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.510592186 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.46721046 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.445920851 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.446759292 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.789700668 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.45336927 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.034291228 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.664738653 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.613461624 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.032977599 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.471883664 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.446720638 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.44655086 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.592512342 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.450961931 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.775484744 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.061940274 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.469631073 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.062775559 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.432165748 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.450149636 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.448789977 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.063160775 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.466645895 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.776114909 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.532894286 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.514934019 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.083273799 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.050100077 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.051274706 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.616723386 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.452792389 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.448345877 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.448898956 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.431659775 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.064442057 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.470258555 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.450382638 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.050358086 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.470580479 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.45171945 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.454990795 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.448358882 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.514719651 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.53505048 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.800627751 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.091493569 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.556409829 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.462260075 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.597733644 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.836849061 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.453093628 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.033686442 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.434796071 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.068562848 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.47405738 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.431539714 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.449758082 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.45618282 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.616381939 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.603051056 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.041357856 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.475478349 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.034017396 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.63936936 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.454834824 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.450980705 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.45450525 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.070717676 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.045428868 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.639652598 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.603279016 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.670802652 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.438510469 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.452936114 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.435287632 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.537511327 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.451223902 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.071591311 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.049007919 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.476491184 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.453053755 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.454453741 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.455146822 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.648243796 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.098741861 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.559035137 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.002061171 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.804264067 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.785832677 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.455565108 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.517516798 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.469963983 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.78571836 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.45604051 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.516430411 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.900491756 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.788347992 seconds)
  done (took 173.878325552 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.721003159 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.694682935 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.548267554 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.607086444 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.074159238 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.051309502 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.806091936 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.597933498 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.570031543 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.72990189 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.691120456 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.564022081 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.679693322 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.534678399 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.223113202 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.547849482 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.568361457 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.608010038 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.621838436 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.507910872 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.152592537 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.75718817 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.659017399 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.441019326 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.553647775 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.314991251 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.059925333 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.016962549 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.635053161 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.817439299 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.018308103 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.617066694 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.477910773 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.188392538 seconds)
  done (took 70.010049651 seconds)
done (took 727.079475199 seconds)
SAVING RESULT...
DONE!
