cset: moving following pidspec: 29215
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.365045051 seconds)
loading group "string"... done (took 0.505649368 seconds)
loading group "linalg"... done (took 8.42280389 seconds)
loading group "parallel"... done (took 0.173543662 seconds)
loading group "find"... done (took 1.365643757 seconds)
loading group "tuple"... done (took 1.958063068 seconds)
loading group "dates"... done (took 1.338532452 seconds)
loading group "micro"... done (took 0.213416148 seconds)
loading group "io"... done (took 0.550840971 seconds)
loading group "scalar"... done (took 41.496644436 seconds)
loading group "sparse"... done (took 12.886435782 seconds)
loading group "broadcast"... done (took 1.042768815 seconds)
loading group "union"... done (took 14.069713623 seconds)
loading group "simd"... done (took 4.872688472 seconds)
loading group "random"... done (took 9.71962782 seconds)
loading group "problem"... done (took 2.057830606 seconds)
loading group "array"... done (took 23.300449693 seconds)
loading group "misc"... done (took 1.072435026 seconds)
loading group "sort"... done (took 3.511072979 seconds)
loading group "collection"... done (took 20.789994872 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.576203969 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.133308955 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.14515609 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.173308557 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.200059357 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.136069925 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.153625943 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.163567149 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.048788752 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.203090074 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.139550228 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.492836059 seconds)
done (took 5.314569206 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.223228485 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.081576423 seconds)
    (2/2) benchmarking "String"...
    done (took 0.126474569 seconds)
  done (took 0.90678497 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.072735293 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.171017902 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.091759077 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.108454797 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.10778562 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.091741793 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.107492059 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.106774344 seconds)
  done (took 1.486863159 seconds)
done (took 3.397674185 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.754840175 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.824987128 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.512234987 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.122230379 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.153828329 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.127286263 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.301947259 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.141324548 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.122410896 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.112102955 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.174512656 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.377014626 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.472903521 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.95110717 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.093288129 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.124373572 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.078920175 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.701448691 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080262163 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.114070517 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.506498475 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.105463886 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.112966124 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.12628858 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.204810074 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.112686928 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.180393005 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.106228894 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.669404921 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.101193709 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.180948739 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.095075759 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.157523302 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.208665066 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.091583163 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.090218373 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.677608959 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.18925302 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.107469999 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.091647269 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.67341432 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.078260724 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.195200416 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.104493227 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.108020234 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.18496577 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.100458506 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.091984792 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.081090725 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.101582927 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.154934813 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.454623365 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.104969112 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.140063086 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.091863313 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.692608952 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.093874975 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.155002375 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.12349889 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.10737687 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.079205029 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.104177193 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.15835533 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.097992574 seconds)
  done (took 19.47530346 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.113426799 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.137469513 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.091019962 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.13551233 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.136175117 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.077037847 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.098668327 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.074282207 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.122315073 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.181949293 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.132761682 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.141074536 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.072300656 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.093213029 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.097467052 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246757816 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.11825253 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.100861722 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.094265074 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088006138 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.137098211 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.090964873 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.106335353 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.106575795 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166128501 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.202155261 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.106956549 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122313225 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.093167247 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.09575855 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.138645888 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.159992503 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.073617283 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.090105051 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.176452231 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.103576564 seconds)
  done (took 5.039041636 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.192052095 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.099122971 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.19805713 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.16988302 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.146618666 seconds)
    (6/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.156278842 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.158110371 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097904348 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.260461609 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.171306883 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.077981081 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.177485543 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124903185 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.096441855 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090912441 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.078516046 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.074764551 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.723441187 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.1636304 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.141300897 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.101908221 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101546371 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.094938175 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.355942574 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09802595 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.075172072 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09949152 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.067341074 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.181702108 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080710961 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.187249928 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.118217814 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10299101 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111655478 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.206585487 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124974314 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.113178284 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099351368 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077363219 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.191575768 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104559208 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.073483916 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.119658195 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128332265 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.114867491 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096673868 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.103459121 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.22596906 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.096243675 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.095022638 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.01708789 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.196511178 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.093119306 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.092834575 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.330350827 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.093232911 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098805296 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.075484591 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.287501438 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.129925495 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.092541269 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.07603929 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098343461 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.07812471 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.092142006 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.388759057 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084623278 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.070595718 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.092506806 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.150119953 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09531765 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082884328 seconds)
    (73/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.093771391 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082057496 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080055866 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.115259576 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.07551454 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.094015032 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.075533118 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.092061045 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080118351 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.112215698 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.095576317 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.076881706 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.143378938 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.112481836 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.094309999 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124371572 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.097612177 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.074863467 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.125225507 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078148061 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.098976285 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.13534864 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082426593 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112195362 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.095081038 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.122752876 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.093947791 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.166063683 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.092735546 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.103016622 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098173645 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125078981 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.115413086 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076438822 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.09805686 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.074282321 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.093727798 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.143508022 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.090856187 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.076400878 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.095087468 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.089150343 seconds)
  done (took 23.007968837 seconds)
done (took 48.220273368 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.374543954 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.106278222 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.107022949 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.105379359 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.10519016 seconds)
  done (took 1.574608342 seconds)
done (took 2.32895503 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.310610683 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.19141912 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084046251 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.166473132 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.100823397 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.173238075 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.157222138 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.114194372 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.184567291 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.096759768 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.162409022 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.095182847 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084076982 seconds)
  done (took 2.699384812 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088040142 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111758971 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077692456 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08603638 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087397547 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086088346 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.102798961 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107678529 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102270903 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082405526 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086825659 seconds)
  done (took 1.769561266 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087324151 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.094573889 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094213882 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085366274 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087531593 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086561087 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.102556368 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097010248 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103346422 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081666953 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087760732 seconds)
  done (took 1.756983233 seconds)
done (took 6.970180251 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.06384434 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.453288167 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.118574408 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.166942214 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.304853321 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.210699972 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.594450709 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.130773626 seconds)
  done (took 15.985662867 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.123232794 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.094861999 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.074408473 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.094660335 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.079089782 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.095972691 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.076749288 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.094500251 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.07850059 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.075885915 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.091551557 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.076083422 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.092074114 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.075648756 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.090997521 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.078247577 seconds)
  done (took 2.205642629 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.110774482 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.109745157 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.098673557 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.084075236 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.097103413 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.079331781 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.099936106 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.080727915 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.095073667 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.079507921 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.100262386 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.082862378 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.097932785 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.078391043 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.098663852 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.084498138 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.095245041 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.097785362 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.082373984 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.098063852 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.082906984 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095781712 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.081532271 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.100124224 seconds)
  done (took 3.068552759 seconds)
done (took 22.01011652 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.160802188 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079873854 seconds)
  done (took 0.996980361 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096778596 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113898441 seconds)
  done (took 0.973646247 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.102899161 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.092760577 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.130922893 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.092920662 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.093455212 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.076699379 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.124576319 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.093722904 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.077838017 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.077359299 seconds)
  done (took 1.726537214 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.08148317 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.079534848 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101610253 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.113627331 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.088075142 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095730565 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.080496368 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.097630555 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.081427329 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.092064109 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.084702006 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.111929715 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.099135389 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.096052737 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.097571303 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.08171525 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.103039705 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097730647 seconds)
  done (took 2.447648842 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.076821003 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.077890172 seconds)
  done (took 0.915147066 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.079873606 seconds)
    (2/7) benchmarking "second"...
    done (took 0.075110969 seconds)
    (3/7) benchmarking "month"...
    done (took 0.094244916 seconds)
    (4/7) benchmarking "year"...
    done (took 0.095650478 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.075004958 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.074338112 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.092076479 seconds)
  done (took 1.349522983 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.459553907 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.177919459 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.318384343 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.109784122 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.129303133 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.337396901 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.128584364 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.108190225 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.089721932 seconds)
  done (took 2.662372119 seconds)
done (took 11.833000424 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.088217271 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.128049623 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.468186132 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.096590727 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.089438752 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.140955954 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.25156841 seconds)
done (took 2.032759161 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.334972964 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.117600326 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084095282 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.07508773 seconds)
  done (took 1.375736451 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.07612592 seconds)
    (2/2) benchmarking "read"...
    done (took 0.081385034 seconds)
  done (took 0.926249072 seconds)
done (took 3.073529716 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075235996 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.073601477 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.121888093 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.071171312 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.092069727 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.073589221 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.090436299 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.073484009 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.074325165 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.092347944 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.073880659 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.091071863 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074432413 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071085561 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088709469 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073648333 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.088720392 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071705477 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.191000043 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087727407 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074103507 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.087380282 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.071945775 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.074245437 seconds)
  done (took 2.858866062 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099711464 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.092453631 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.081648038 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.096471975 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.079177066 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.096741352 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.080458963 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.092250554 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.080466936 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.093195769 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077656703 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.095233863 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.076059308 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.096416092 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077388027 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.095338434 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.080868393 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091498447 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077342144 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.095531682 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.08009021 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091375062 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.078861254 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097141359 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.078790672 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094192046 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.076842433 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.092196939 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08094842 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.09459594 seconds)
  done (took 3.391947066 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.080102344 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.07154228 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.089216849 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.082781171 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.088422006 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.076268458 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.07147188 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.088993659 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.076719206 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.089389403 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.078276055 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.089481186 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.07175018 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.075916888 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.094007677 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.078919706 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.106797141 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.072740608 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.088896941 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.076575835 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.077334562 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.089260092 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.074284278 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.089530255 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.07201315 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.071643348 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.091277629 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.072272993 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.089001617 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.072791439 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.076936189 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.096141466 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.071111952 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.103483808 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.079540981 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.090006528 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.080139816 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.089484951 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.07689772 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.07175926 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.088913646 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.072402882 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.089879566 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.082935938 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.074493035 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.09197087 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.071990614 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.094347283 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.076325735 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.095932326 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.071853006 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.071901245 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.094884502 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.076510295 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.094295496 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.071698685 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.072981518 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.088522798 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.076753791 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.088640874 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.072181203 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.071273261 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.095765302 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.073012906 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.112121307 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.082881309 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.089272902 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.077534604 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.093354846 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.079937272 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.094340669 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.090762923 seconds)
  done (took 6.735159546 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.077150765 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100760011 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.074807524 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.074523607 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088376648 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071747775 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097468964 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071642934 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091051403 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.090758196 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089837102 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073941311 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074965173 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094120976 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072762581 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.091514666 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.083385601 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088333916 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.072907151 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.092867356 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07299196 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097049931 seconds)
  done (took 2.622758833 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.213727003 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101637923 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.136112621 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090541169 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110391022 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108277814 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.079634422 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099176031 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079495387 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10003795 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083706748 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098128396 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110054591 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08310366 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100256604 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084374327 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096424694 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084614805 seconds)
  done (took 2.638102604 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.087657877 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.092982199 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.098658661 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092849385 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.07792104 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.095677458 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081178718 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108012032 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.077586937 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093611696 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.086130796 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095573665 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.077412906 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092516408 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077313845 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.092417049 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.078126526 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074349049 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102989497 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099044794 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.082234461 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103538219 seconds)
  done (took 2.749433276 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091627946 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09430204 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.095596359 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096813231 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.075910766 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.094717696 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.083500151 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.093075595 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.08415791 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.094187207 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076517379 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.094498382 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.082897178 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092976299 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.08257854 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093006906 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077456025 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075755165 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095093701 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.075333033 seconds)
  done (took 2.531912289 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116160997 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106952907 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.089224842 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118949874 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092199206 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107874321 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119225869 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.08937125 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107757355 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.101231977 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107399712 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089395963 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118876275 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113913571 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.090167572 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119611151 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11763053 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101558048 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107754872 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.089334213 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.119722572 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089964112 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.118203953 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108304966 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.089418124 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107017461 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.090369346 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113801952 seconds)
  done (took 3.726181591 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075810455 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075328121 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090784111 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.072384825 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.073011167 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.090228016 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.073542025 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.091048376 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075904182 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072428855 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.092337406 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.074841001 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09243675 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.074569535 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074883528 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.091938085 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075123984 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.090249668 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072320157 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072110047 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.092442776 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075802253 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.09262876 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072809843 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072541234 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.092119163 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072902448 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08930086 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075051317 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07274437 seconds)
  done (took 3.195164403 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.084411595 seconds)
    (2/2) benchmarking "in"...
    done (took 0.097635917 seconds)
  done (took 0.970637279 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.073237756 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109733207 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.072619417 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.077933618 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097954454 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.074954567 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.103624197 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081215634 seconds)
  done (took 1.476957839 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.099327197 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.112870326 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08200628 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.105291604 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.094074315 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.110994876 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.154966828 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.081812795 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.100780674 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.076624917 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.11331702 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.075354218 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.08317887 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099068343 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.084378194 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10813766 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.076755755 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.103632362 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.083578781 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.095561649 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082589425 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108869051 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086272942 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.101355333 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.078593112 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.105115162 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.089499982 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.10554265 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.080550712 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106020426 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.083841569 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.088264049 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.080441805 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099384004 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.077364137 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.110868981 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093158855 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.098276404 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.085771495 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100182205 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08521365 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.09253162 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087902291 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.101732011 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087966386 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.100006095 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.081886424 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.092292996 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.077100903 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.080502443 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.09264941 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07959353 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.088014421 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086861776 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.102164466 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09470513 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.096482077 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.080924363 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.09755303 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.07977516 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.101089613 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.080236822 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104211654 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.079755617 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10334983 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.084694312 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.102160817 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.075302939 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.06929627 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.094551375 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.08621996 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.118354465 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.105970324 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.081746339 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100299479 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.077804871 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08116636 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100806545 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.084663067 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.104984391 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.081596023 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10196896 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.086262549 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098868449 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.080993798 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.100654313 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.078381936 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.096486807 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.076768653 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114959945 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.079286613 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.094671663 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.07724137 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.104368497 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.080985235 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.079399673 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.095649926 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.084944426 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.087855903 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.081705012 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099740049 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082639366 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.106124664 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.081846016 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.099719098 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.085054456 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.105460105 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081436489 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.097786281 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.073706373 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099883773 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.079368483 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.085314555 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.087743837 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081783173 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.098195137 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.082635276 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.104708655 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.07911859 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.098210027 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086597035 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.105720662 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.078972055 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.090712665 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.080212006 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.099337775 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085535901 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.106036354 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.07932517 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.093228203 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.074804829 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.084381334 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.0987637 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.082489317 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100063572 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.082398955 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.088511637 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.077501924 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.099473208 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.087369525 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.098470627 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.083468422 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.105651513 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.084215587 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.097387912 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.08667125 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.097414236 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.076541574 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.10392004 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.080940773 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.074501121 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104916479 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.097990354 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.078913655 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.081220983 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104137565 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.080408498 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.100492461 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.079257804 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.099311663 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083208397 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.095019558 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082311087 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.097658885 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.088500054 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.098883515 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.075188131 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.073716495 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.100755024 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.077085526 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.098834405 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.07666697 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.098730266 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.082980879 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.096375044 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.080086078 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.080541326 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112225794 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.1083425 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082645983 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.102518798 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.088859434 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.080767588 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.102529942 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.080625725 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101068447 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.083115398 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.104125814 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.084883134 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100006955 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.080687715 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.090536369 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.082859424 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104447798 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.076740195 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.077323373 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.09498796 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.080099178 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.10665765 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.080760057 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.100540436 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.078675868 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102189912 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087500519 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.098603563 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.080406776 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.094299666 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.081300419 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.104669294 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.082966487 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083300214 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.10656229 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.082439374 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.093293987 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086013983 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09719056 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.085871843 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.093404259 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.078162031 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.09590089 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.08298055 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.097426021 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.080210621 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.071386539 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103821812 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08689023 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.100126988 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.077656724 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.099905198 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090388935 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.097578725 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085427182 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.099388948 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.084784495 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113441028 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.078044091 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.099524467 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.090084086 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.099911292 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.071620207 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.102594857 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.079596995 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.093773312 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.089570557 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.078315346 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.100698042 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083146096 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.101995644 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.070165593 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.09959722 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.079599125 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.096010515 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.075669985 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.104237005 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.081841526 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.081131345 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109116158 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102383776 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.083062182 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08204704 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.098807792 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.083194042 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.101049478 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.082406993 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.101122543 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.080100734 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.095306703 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.081619638 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.095240336 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.077684358 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.099183167 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.082371771 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.082380975 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.1019882 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.080016578 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105125492 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.08217552 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100800417 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.118424929 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.078423806 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.096532748 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.082725834 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10278394 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.081035024 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.080702609 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.093954579 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086073187 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.100252554 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087541333 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.098958054 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.074273747 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.099950296 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.081131656 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.101404811 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.082821222 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101482018 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.080309336 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.079980123 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.099454344 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091600505 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.096465757 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.087834418 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103136927 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083948352 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.101608554 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.083314898 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.097887946 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.077833727 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.100065151 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.083915765 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.100971078 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.081162747 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.101935498 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.081798592 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.099624943 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.079866256 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.082377768 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.101047771 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.082521943 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.090271688 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.078052014 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.09529943 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.082379821 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104428297 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.082890687 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.09865884 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.080288774 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082683825 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.098916857 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.074245702 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.103624885 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084456897 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.101601181 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090168123 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.095580794 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.082115871 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.109425903 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.071999099 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.098125173 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.078752065 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.077534015 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105785541 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.083284473 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.106655677 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.082674392 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.0966603 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.074911063 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.102155143 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.079999767 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.089831051 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.078527239 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103292521 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.079875654 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.079549612 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.10105651 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.085168553 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103381483 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08513358 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.099486263 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.082359269 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.101031225 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.074682814 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.097296584 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.077616625 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.080767227 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102664815 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.078276442 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.093158521 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.082607606 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.100192247 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.083114428 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.098639014 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.079897778 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105104768 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081369736 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.08178389 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106044681 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.07160971 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.100426042 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.080121544 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.100380193 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.078447285 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.101114043 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.084778939 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102220255 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.087072309 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.100687272 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084774802 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100321464 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.078105074 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.081992516 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101605639 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.082572714 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.096969827 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084945053 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107048067 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.078517913 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.100404799 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084421341 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.098168977 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.083398397 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103149651 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.082613012 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103480782 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.082546545 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.082121849 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.104085158 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.081867822 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.102614071 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084256231 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.099272729 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.086460796 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.097055407 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.089591611 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.10184142 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.083790905 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.099849738 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.078690681 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09972317 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.081029839 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081341002 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.106199096 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.083149365 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.096514986 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.078106553 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.097556045 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.08244942 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106037869 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087239209 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.100935643 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.083352492 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.094402209 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.075072972 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102045782 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.078850384 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.080756384 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.1030228 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.085896136 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.101583884 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.079179087 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.098201378 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.086607368 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.104613901 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.085009945 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.098490814 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.084969127 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.102354167 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.082224392 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.098653004 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083170338 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102191008 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.084672899 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.081238625 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.097288617 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091773402 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.107002444 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084856617 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.100455351 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.085226413 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.10044024 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.076620062 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102368058 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.08396607 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.103620537 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.081750677 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100223163 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.091824617 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.096525616 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.08165118 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106459082 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081123488 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.106151246 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.077755071 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.101689881 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084036856 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101977132 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.076813171 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.078007866 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.098236783 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.08233059 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.096229255 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.075847032 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110732522 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.08804819 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.100927119 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081239061 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.0993681 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.076865766 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.07588476 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.096951694 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.083771686 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.099902704 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.089377211 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.097594063 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.078259124 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.095223645 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082135168 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10180806 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.083695467 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.07525961 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.095474222 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.078632919 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.101707988 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.089990106 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100622029 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.082455687 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102816417 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.082204385 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.09881506 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089218836 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.093317566 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.084564086 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112168193 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.084719928 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10289278 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.085172378 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10707794 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.08411099 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.094834166 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.084128827 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.082362503 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.10224133 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.083847573 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.102529049 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115585968 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083331522 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.077558061 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.099941706 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.082128281 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.096770061 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.089752069 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103365901 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084632458 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.10427294 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.081276413 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102627791 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088932545 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103096456 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.083453357 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.101815029 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.081200683 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099843335 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.081122427 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081032978 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103224463 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.083490187 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101452122 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.08395593 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.098096284 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092478639 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.107402586 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.084540161 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.093086221 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.078601525 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.097317003 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.077907366 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.083775353 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.095412567 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.080336168 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.098706416 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.080636042 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.103468505 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.084874209 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.101638301 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084686765 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.080527677 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.090765525 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.085558563 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.101889794 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084440453 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.0937372 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.082709646 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.102523066 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.087482773 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10722614 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.081039998 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.100678173 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.082006826 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103403193 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.076914321 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.085830186 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100039173 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.081435545 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.098489235 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082988062 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103259145 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.084967562 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10328794 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085899144 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.101731253 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.086345555 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105047946 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.0755593 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.074416979 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.1050349 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.079157115 seconds)
  done (took 54.983647002 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12259346 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102608526 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073851147 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09224698 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118729266 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078344114 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0722339 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09604926 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.077014209 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107214847 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.074018415 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09310202 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114348024 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.101099513 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118242234 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106111309 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074227222 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096547359 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073627646 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097608911 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09536756 seconds)
  done (took 2.822856929 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.097470533 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.110416788 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08917294 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.115453168 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103930925 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.092023328 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110487486 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11248076 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095332946 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104558373 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.11479121 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092499653 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.105317633 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.105206381 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085739233 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107139467 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.095371403 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104269536 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.112240972 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090047943 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107894472 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.109527428 seconds)
  done (took 3.100414902 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.087238899 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.081503063 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.10648298 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.073266945 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.100631341 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.072476244 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.107213351 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.075551846 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.084574955 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.101794576 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.078704537 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.102092799 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.086334007 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.092872902 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.080532824 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.094151247 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.085566372 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.080359883 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102253176 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.076332031 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.120353652 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.095524851 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.07698794 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.079468051 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.111041622 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.082804653 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.101061769 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.081895698 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.098185468 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.081939451 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.074677241 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.103558769 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.0846017 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.099335073 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.079246299 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101064058 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.082064719 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.095126092 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.079193022 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.08418384 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.096685439 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.082403848 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.108099484 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.078873002 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.094754273 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.083556251 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.10182104 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.073730953 seconds)
  done (took 5.140720532 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.112731412 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.129657028 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.101225193 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.140287576 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.115918326 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.090874171 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.102275703 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.138847689 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.076039504 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.079738894 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.120180525 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.115161568 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.081727752 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.107737822 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.103483926 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.082313829 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103337865 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.077995657 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.106227536 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.078248702 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107312983 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.084882812 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.115742207 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.112260975 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.086790574 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099679262 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.077986154 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107613708 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.113015843 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.088647714 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.106972204 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089556064 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.117783451 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.103364196 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.078974706 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.104098952 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.099885192 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.102463302 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.084043446 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.095461613 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.084773006 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107368504 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.084374488 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.117840091 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102165913 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.084817734 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.100699427 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.075854248 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.113562268 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.084839996 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.113004742 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.115486308 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.086425056 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.1017106 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.087930941 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.116135757 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.101328452 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.079879955 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.105727712 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.095809878 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.095245549 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.086146193 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.114856548 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.10365957 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.092157694 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.114330364 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.102668848 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.086916638 seconds)
  done (took 7.779955052 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110529687 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.107591026 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0980462 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11898417 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107153804 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.087736208 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105486722 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.086778861 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.106938049 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113386847 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08790253 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.153255946 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.083736851 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113998379 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.106083726 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.088963032 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.107101351 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.087614646 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.106034384 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087516539 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.107416461 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.118572291 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.088072235 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.119099127 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119934492 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08447055 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106324299 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.087859785 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119250082 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.105565199 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.09963441 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.106398801 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.086788477 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.119328418 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.120376042 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.106336517 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.081617373 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.087126499 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.107914998 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.10582527 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.084448749 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.117890986 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088156038 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104622469 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08821959 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.10868703 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.117430087 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.099501091 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114630859 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114488798 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.086940529 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11817358 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10662214 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.087239365 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.118316703 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.127686371 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098933391 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120093892 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106634497 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.098947216 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.11931143 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.127981376 seconds)
  done (took 7.349146865 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110400309 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.114162343 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118920779 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.074810503 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.096879909 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.086393743 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.095604478 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.076547697 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.112590905 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093374406 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115864643 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105554768 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091837248 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115821786 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084770416 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110248044 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106865928 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08664913 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113674123 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.105262416 seconds)
  done (took 2.866960073 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.087715063 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.118457836 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.08026663 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106526243 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.082098049 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.106184277 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.081142908 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10137076 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079540117 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101805016 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092846341 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.112352435 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079550536 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107018536 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.111344645 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.086734844 seconds)
  done (took 2.384763373 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.099357982 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119617134 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.123334077 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084604061 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.076459296 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.102165514 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.08080073 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.09537937 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.075048028 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107294479 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085160364 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.104639129 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.08206666 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.076204525 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.100285174 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.083794951 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.094629528 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083292328 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.100882718 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.103807956 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.104053938 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.081756644 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.102297997 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.081822241 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.101901806 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.083648972 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106416573 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.075459781 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.098024371 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.082412142 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.102468249 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.087292424 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.095567417 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.08391951 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.097994587 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.076422757 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.10110465 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.083202014 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.104698623 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.083214518 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.07658781 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.102856901 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.081606567 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.101034693 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.074417328 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.102214736 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.075533473 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.104985482 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.080949715 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.101179982 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.081571786 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107438064 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086150637 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.109611182 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089726847 seconds)
  done (took 5.945345584 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094135576 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103718135 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085881482 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.09649055 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083274605 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.086236263 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104682684 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.081561095 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102812123 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.076448907 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102387827 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.084293424 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101367842 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.083827231 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.101792802 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084458011 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.094151229 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.081701432 seconds)
  done (took 2.508544681 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084641906 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078114175 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.10776235 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.078593825 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.098727315 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082494969 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09504897 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.078090345 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076730449 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.099790973 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078958898 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.100860719 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078285944 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.100721102 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.078772289 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09883757 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.08226772 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076720814 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.09861957 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074773857 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10116434 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07784467 seconds)
  done (took 2.78913128 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.095701424 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.130466047 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.093241532 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.141355758 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.103762365 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.083291648 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.112681469 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.083234821 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.120867004 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.083989774 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.102717009 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.084379289 seconds)
  done (took 2.098515165 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10203129 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135914045 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.08083369 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102249231 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094019887 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105511618 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083636203 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104971564 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117241232 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09808068 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106447563 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118749878 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097106561 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117051427 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112327131 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092915825 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105320118 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083657604 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10109655 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12649384 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084859148 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118224794 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103768803 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08491872 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104504738 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095527619 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116868152 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117618488 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084161449 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1186835 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114014763 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083959048 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118956789 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118122129 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082707396 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117385221 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103371392 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107202139 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11447966 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116613338 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082061742 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112519794 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118877588 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091975948 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118134883 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08417236 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112762428 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104153315 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08453968 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133468102 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114799565 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116772023 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094257068 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120461056 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117782735 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13325521 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098300516 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116796446 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113410211 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097399545 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117795289 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113675937 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115708554 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096807826 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113201031 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115932899 seconds)
  done (took 7.896810124 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117693197 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102216438 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084630519 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122072034 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116757291 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084764296 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106390997 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083752112 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105704021 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080631352 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151859486 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105641109 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116392326 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097179112 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106640412 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104203416 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085932873 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117086096 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082033873 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132750788 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105731071 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096283665 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117406667 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117335884 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118687402 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093631956 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106342719 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084132692 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107401366 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08416403 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112873463 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105264102 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095860465 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103156726 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116480189 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084746215 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105068623 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092476568 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105664281 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114812271 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097026541 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128368913 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105068838 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085883053 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117864581 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084136287 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105988065 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081500337 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105810348 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101668914 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098623791 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119080738 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118025867 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117563235 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085301559 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105039777 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085430473 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105528658 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084669596 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115630515 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117858364 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086135269 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134260165 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105213512 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084584563 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117079029 seconds)
  done (took 7.732846102 seconds)
done (took 149.06609651 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098275339 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.134845123 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.093767111 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.163207631 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.080140016 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.135862835 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.115571932 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.115598471 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.080444615 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.079978994 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.101633306 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.082614902 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.166437953 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.080720772 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.101212804 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.083841129 seconds)
  done (took 2.579986942 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.176459282 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.280774469 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.100013488 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.107613103 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.087015356 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.104659054 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.086234745 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.107413816 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.082590486 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.11226514 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.083456025 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.103241388 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.093278954 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.103513342 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.08238947 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.102672909 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.091572766 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.103402143 seconds)
  done (took 2.883817438 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112771476 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.144431013 seconds)
  done (took 1.129614715 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.117567189 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.179391366 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.291358349 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.369333447 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.130935121 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.121949743 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.154791268 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.099906847 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.199739114 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.12607806 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.126711325 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.085911805 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.134025748 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.113641692 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.089223689 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.106906259 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.114129947 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.110604082 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.088275027 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.109521934 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.131579928 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.088245826 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.113136181 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.088834265 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.18167845 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.123211471 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.086758462 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.108155646 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.107424833 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.088441824 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.112828173 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.100367478 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.123303537 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.16332288 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.113255345 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.159591359 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.114411277 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.086168416 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.108669178 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.084483458 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.111619609 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.111176428 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.102279196 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.106517175 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.087342773 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.114133238 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.087425953 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.107526878 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.094676575 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.11624438 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.114329948 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.091949311 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.158678691 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.116359564 seconds)
  done (took 7.54604177 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.780704781 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.149308054 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.085859963 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.882310431 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11148818 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121876072 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.788491869 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.107232296 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.229056709 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.798413908 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.099306001 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.12127129 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.226094067 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.247451769 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.143703266 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.310230325 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.665379993 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.123212955 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.135583733 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.12349468 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.115492178 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133042241 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.102803779 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.448765206 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.109099082 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085357381 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.114448672 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.116743642 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158120898 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.087409939 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.109796698 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.176670897 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.26303762 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.203210829 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.086892147 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.083664491 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107604784 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.165699156 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264318266 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.192911507 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.172975899 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102878848 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.084394224 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.118563296 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.105649379 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.103695625 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.161493344 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.169556903 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.169198134 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11186321 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.095592458 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.116668814 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.117696518 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.158099927 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.084355369 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.334619429 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.335991628 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085174794 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114796249 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.101080574 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26166442 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084873516 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.223830934 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.134091628 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.18868528 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.10790995 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.756115296 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.185319751 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.085666208 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.113852738 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.091968518 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11225356 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.094885654 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.165519234 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.386129187 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121238997 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.088679744 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107058692 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.203908673 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.107202608 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.085593538 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160834205 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.108873798 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.093789943 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121129077 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097930467 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.188287995 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.246748678 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.098199793 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115554252 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.089970495 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12035636 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.108388893 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.207183935 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.193452085 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.178309096 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.209745124 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.096464845 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.182286095 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.163832041 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096491402 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.190866083 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.092577125 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123522995 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096765237 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.213403127 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.139126851 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086806048 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.113198029 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.092172338 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.141518158 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.110074822 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.091629726 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.164674846 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.503795478 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.163767004 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.081819252 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.111245796 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09394052 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.159485812 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116328013 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259696213 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094711338 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.165677119 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115310075 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.08156271 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.118275102 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.160910176 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121680971 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.094424434 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120775484 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.114289161 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.246500927 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.19637872 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11999767 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.213813647 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.174764707 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.116549396 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.170791023 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.116476562 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166130273 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.094290006 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118084304 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.086107277 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.77182229 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.120796596 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.092399601 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112806147 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.190509137 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.085425384 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086040317 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.107248277 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.081963529 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.809398512 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.088486784 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.105035836 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.08832105 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116132022 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.093743277 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.114106775 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.090129115 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.179835136 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.207375293 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118777767 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.091825358 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.107620219 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.157826476 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.109364012 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.086293172 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.085600113 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.107983616 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.094026395 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.111884907 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087425559 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167509613 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.178881293 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.194784356 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.574882025 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.084921853 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.108087792 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.206465674 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107635357 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.303129871 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094440617 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.223158576 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163961703 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.082034401 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.336517202 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.16510623 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.192846329 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.110573781 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.171050465 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.082371718 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.114145652 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.16055986 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.084754868 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114495088 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.155964694 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123716751 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.098261997 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.144797726 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.107335958 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.223813854 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.082753055 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.166686378 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.109577044 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097198709 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.305863593 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.084749927 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126193817 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.158401622 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112239369 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.085254743 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.72353915 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.086012662 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.1184664 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093932263 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.219884042 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.162777769 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116762899 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092733967 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119644259 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.158850784 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.207911754 seconds)
  done (took 42.85475181 seconds)
done (took 57.864639769 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.298788087 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.251788141 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.247379894 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.184093744 seconds)
  done (took 1.955163989 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.171433206 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.123366075 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.141836698 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.104081356 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.12588751 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.104476207 seconds)
  done (took 1.672161921 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.407165148 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.329873588 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.275722334 seconds)
  done (took 1.913466326 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.243648857 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.264482026 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.318314548 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.390796712 seconds)
  done (took 2.220221893 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.199263738 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.096917878 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.118563276 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.111039028 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.164813031 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.201037288 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.138917729 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.146562737 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.102449296 seconds)
  done (took 2.227498068 seconds)
done (took 10.892864357 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.275918254 seconds)
    (2/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.153739227 seconds)
    (3/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.103482577 seconds)
    (4/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.262507775 seconds)
    (5/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.306636391 seconds)
    (6/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.114320175 seconds)
    (7/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.17783794 seconds)
    (8/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.236754963 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.127390336 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.121974137 seconds)
    (11/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.250182317 seconds)
    (12/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.091109169 seconds)
    (13/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.117351121 seconds)
    (14/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.087270655 seconds)
    (15/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.205993442 seconds)
    (16/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.156980256 seconds)
    (17/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.17649196 seconds)
    (18/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.122622819 seconds)
    (19/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.121098422 seconds)
    (20/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.092600361 seconds)
    (21/286) benchmarking ("sort", Float64, true)...
    done (took 0.232799453 seconds)
    (22/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.119201802 seconds)
    (23/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.187440813 seconds)
    (24/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.194209895 seconds)
    (25/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.091059989 seconds)
    (26/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.153908927 seconds)
    (27/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.100045735 seconds)
    (28/286) benchmarking ("sort", Int64, true)...
    done (took 0.227205244 seconds)
    (29/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.194569429 seconds)
    (30/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.126965558 seconds)
    (31/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.243326513 seconds)
    (32/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.095352356 seconds)
    (33/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.207968857 seconds)
    (34/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.089246385 seconds)
    (35/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.204311343 seconds)
    (36/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.095282172 seconds)
    (37/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.205273817 seconds)
    (38/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.116101585 seconds)
    (39/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.115948547 seconds)
    (40/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.148698583 seconds)
    (41/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.12649171 seconds)
    (42/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.104279566 seconds)
    (43/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.084494757 seconds)
    (44/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.24158137 seconds)
    (45/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.091322831 seconds)
    (46/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.157809946 seconds)
    (47/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.175150132 seconds)
    (48/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.097542741 seconds)
    (49/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.114220473 seconds)
    (50/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.071449177 seconds)
    (51/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.135219498 seconds)
    (52/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.175163779 seconds)
    (53/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.088751527 seconds)
    (54/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.095666524 seconds)
    (55/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.154136168 seconds)
    (56/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.213876836 seconds)
    (57/286) benchmarking ("sort", Int8, true)...
    done (took 0.225730408 seconds)
    (58/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.156597578 seconds)
    (59/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.086848769 seconds)
    (60/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.194503191 seconds)
    (61/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.211684558 seconds)
    (62/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.1201368 seconds)
    (63/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.099384678 seconds)
    (64/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.114041903 seconds)
    (65/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.124301537 seconds)
    (66/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.192419644 seconds)
    (67/286) benchmarking ("sort", BigInt, true)...
    done (took 0.239321796 seconds)
    (68/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.087303126 seconds)
    (69/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.144122366 seconds)
    (70/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.187674403 seconds)
    (71/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.178408035 seconds)
    (72/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.195165402 seconds)
    (73/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.088183304 seconds)
    (74/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.119343007 seconds)
    (75/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.130894447 seconds)
    (76/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.113327799 seconds)
    (77/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.074861652 seconds)
    (78/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.143710869 seconds)
    (79/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.083185338 seconds)
    (80/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.200864916 seconds)
    (81/286) benchmarking ("sort", Int64, false)...
    done (took 0.106730109 seconds)
    (82/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.099779343 seconds)
    (83/286) benchmarking ("sort", BigInt, false)...
    done (took 0.224249533 seconds)
    (84/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.131981069 seconds)
    (85/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.138740721 seconds)
    (86/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.169286438 seconds)
    (87/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.094333234 seconds)
    (88/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.08985114 seconds)
    (89/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.118529438 seconds)
    (90/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.075711039 seconds)
    (91/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.177796326 seconds)
    (92/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.07190547 seconds)
    (93/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.187346887 seconds)
    (94/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.088291 seconds)
    (95/286) benchmarking ("sort", Int8, false)...
    done (took 0.210967637 seconds)
    (96/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.072956801 seconds)
    (97/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.132767561 seconds)
    (98/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.072276372 seconds)
    (99/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.180520782 seconds)
    (100/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.096665853 seconds)
    (101/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.109612521 seconds)
    (102/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.097778731 seconds)
    (103/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.139457083 seconds)
    (104/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.123642243 seconds)
    (105/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.075710635 seconds)
    (106/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.138681855 seconds)
    (107/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.102726172 seconds)
    (108/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.095254195 seconds)
    (109/286) benchmarking ("sort", Bool, false)...
    done (took 0.191724932 seconds)
    (110/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.096680741 seconds)
    (111/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.071267558 seconds)
    (112/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.119277612 seconds)
    (113/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.135661318 seconds)
    (114/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.091196868 seconds)
    (115/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.128585212 seconds)
    (116/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.089674031 seconds)
    (117/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.118663278 seconds)
    (118/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.095709266 seconds)
    (119/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.177417619 seconds)
    (120/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.087768735 seconds)
    (121/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.124295539 seconds)
    (122/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.180513325 seconds)
    (123/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.129507673 seconds)
    (124/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.123210366 seconds)
    (125/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.097153184 seconds)
    (126/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.110905286 seconds)
    (127/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.082681458 seconds)
    (128/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.117833129 seconds)
    (129/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.191630178 seconds)
    (130/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.144812384 seconds)
    (131/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.133669541 seconds)
    (132/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.080858062 seconds)
    (133/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.177368973 seconds)
    (134/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.138965005 seconds)
    (135/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.084126812 seconds)
    (136/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.091504001 seconds)
    (137/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.103109537 seconds)
    (138/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.089124861 seconds)
    (139/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.177428317 seconds)
    (140/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.094857832 seconds)
    (141/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.097641964 seconds)
    (142/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.072006507 seconds)
    (143/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.112860657 seconds)
    (144/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.072590805 seconds)
    (145/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.14566443 seconds)
    (146/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.090215476 seconds)
    (147/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.152850391 seconds)
    (148/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.095239787 seconds)
    (149/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.115278175 seconds)
    (150/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.071932271 seconds)
    (151/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.102536363 seconds)
    (152/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.124223932 seconds)
    (153/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.155576356 seconds)
    (154/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.074494937 seconds)
    (155/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.098169642 seconds)
    (156/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.203409046 seconds)
    (157/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.07489527 seconds)
    (158/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.190830949 seconds)
    (159/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.096248148 seconds)
    (160/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.116009957 seconds)
    (161/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.072199242 seconds)
    (162/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.100171366 seconds)
    (163/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.074998654 seconds)
    (164/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.071405805 seconds)
    (165/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.237981998 seconds)
    (166/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.157682287 seconds)
    (167/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.135486306 seconds)
    (168/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.110394023 seconds)
    (169/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.116003419 seconds)
    (170/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.091177183 seconds)
    (171/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.123432472 seconds)
    (172/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.072790158 seconds)
    (173/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.180744073 seconds)
    (174/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.097372537 seconds)
    (175/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.111740177 seconds)
    (176/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.07074494 seconds)
    (177/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.111906253 seconds)
    (178/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.089278306 seconds)
    (179/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.083789809 seconds)
    (180/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.160872904 seconds)
    (181/286) benchmarking ("sort", Bool, true)...
    done (took 0.226074865 seconds)
    (182/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.162655413 seconds)
    (183/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.087743361 seconds)
    (184/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.133911925 seconds)
    (185/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.089470969 seconds)
    (186/286) benchmarking ("sort", Float64, false)...
    done (took 0.171460914 seconds)
    (187/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.09843253 seconds)
    (188/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.172839099 seconds)
    (189/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.113043196 seconds)
    (190/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.073340663 seconds)
    (191/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.123525308 seconds)
    (192/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.097015119 seconds)
    (193/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.099045022 seconds)
    (194/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.089460228 seconds)
    (195/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.118605365 seconds)
    (196/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.071872256 seconds)
    (197/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.121597566 seconds)
    (198/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.073552376 seconds)
    (199/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.091332174 seconds)
    (200/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.116230953 seconds)
    (201/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.075006481 seconds)
    (202/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.13218734 seconds)
    (203/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.085128082 seconds)
    (204/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.096093418 seconds)
    (205/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.090646749 seconds)
    (206/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.103412415 seconds)
    (207/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.074617918 seconds)
    (208/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.107958835 seconds)
    (209/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.08621674 seconds)
    (210/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.111240604 seconds)
    (211/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.080616306 seconds)
    (212/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.088953993 seconds)
    (213/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.108508312 seconds)
    (214/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.095532411 seconds)
    (215/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.112459951 seconds)
    (216/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.086868749 seconds)
    (217/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.11646008 seconds)
    (218/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.107763281 seconds)
    (219/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.113680168 seconds)
    (220/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.167788052 seconds)
    (221/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.089202865 seconds)
    (222/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.11061094 seconds)
    (223/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.087962206 seconds)
    (224/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.077379682 seconds)
    (225/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.123241779 seconds)
    (226/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.183875914 seconds)
    (227/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.087733278 seconds)
    (228/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.099506044 seconds)
    (229/286) benchmarking ("sort", Float32, true)...
    done (took 0.237629995 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.08973543 seconds)
    (231/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.130001708 seconds)
    (232/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.1129928 seconds)
    (233/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.107900985 seconds)
    (234/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.072060337 seconds)
    (235/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.113068791 seconds)
    (236/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.088780595 seconds)
    (237/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.071982016 seconds)
    (238/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.115739639 seconds)
    (239/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.084726019 seconds)
    (240/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.110093434 seconds)
    (241/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.072515485 seconds)
    (242/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.121390554 seconds)
    (243/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.072742565 seconds)
    (244/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.113369935 seconds)
    (245/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.110887983 seconds)
    (246/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.136874898 seconds)
    (247/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.096818896 seconds)
    (248/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.11488153 seconds)
    (249/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.08986269 seconds)
    (250/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.097645857 seconds)
    (251/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.075440762 seconds)
    (252/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.083571849 seconds)
    (253/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.11500558 seconds)
    (254/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.090399532 seconds)
    (255/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.106986941 seconds)
    (256/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.081717144 seconds)
    (257/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.109842195 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.093855184 seconds)
    (259/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.132780692 seconds)
    (260/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.089707099 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.108220623 seconds)
    (262/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.076760851 seconds)
    (263/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.087908553 seconds)
    (264/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.104056787 seconds)
    (265/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.089048824 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.108125576 seconds)
    (267/286) benchmarking ("sort", Float32, false)...
    done (took 0.17063481 seconds)
    (268/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.092092984 seconds)
    (269/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.115756586 seconds)
    (270/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.073098404 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.097695667 seconds)
    (272/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.097942579 seconds)
    (273/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.073116909 seconds)
    (274/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.098691634 seconds)
    (275/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.089811525 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.110932149 seconds)
    (277/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.092587332 seconds)
    (278/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.121553552 seconds)
    (279/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.076506731 seconds)
    (280/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.1104319 seconds)
    (281/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.07183356 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.085517231 seconds)
    (283/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.114769648 seconds)
    (284/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.18552889 seconds)
    (285/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.088746658 seconds)
    (286/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.097523264 seconds)
  done (took 36.389028294 seconds)
done (took 37.301878674 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.097792982 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.149475977 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.093586749 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136195477 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.097122492 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.123801169 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.092510815 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.120549111 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.096666579 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.121927868 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.095756363 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.103251344 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.095307062 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.11763226 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.094125987 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139859472 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.098058455 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.114966512 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.087048246 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.109014768 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.086778239 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.110422813 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.087601795 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.101860562 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.094284865 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.115936159 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.08990598 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.118887178 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086812369 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.107961998 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.084889532 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.089821196 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.10971456 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.096890152 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.112951677 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.086396438 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.118260161 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.093014392 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.112487093 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087025983 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.115002984 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087649426 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.113358282 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.091824908 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.111358398 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.085865854 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.086934803 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.121246553 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.139585223 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.087452808 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.091834416 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.11837771 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.093574103 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.115238063 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.084892506 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.110849809 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.087832666 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139079978 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.086009054 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112485836 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.091532304 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.115454019 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.086496996 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.110412623 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.088365267 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.116971621 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.094368097 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.109661271 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.093625776 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.090100107 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.106857417 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.086643641 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.109424459 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.084575961 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.11659048 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.093824803 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.105887804 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.08712544 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.091313427 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.113398861 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.086590225 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10965436 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.087853416 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.111409803 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.085513817 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.10374828 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.085181533 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.112904127 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.08668246 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.087182358 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.113093664 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.090137395 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113011073 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.095239674 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.109985373 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.087560688 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111878736 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087409577 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.111963527 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.086609287 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.105874079 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085001724 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.090963797 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.109450469 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.087682006 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.120863771 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.085558721 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.114363358 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.085794527 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110212457 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.099818616 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.117627468 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.088039209 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113200935 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.084564059 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.115387108 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085547389 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.084582245 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.109050467 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.087297689 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.112132422 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.087375862 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.109911194 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.090198027 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.121777374 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.100986818 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.109192609 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08527552 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.087254194 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.113071893 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.087169393 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.108894045 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.085699075 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.105920142 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.085886565 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.10858159 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.089863936 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.109587005 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.086592962 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.087512618 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.111878233 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.088121586 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.113173984 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.088190309 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109532852 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.079947484 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11434618 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085625507 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.087173381 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.111999352 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.086279673 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.107021764 seconds)
done (took 16.310578188 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.094327148 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184599569 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.144859354 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.14815584 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.118899506 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.128342366 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123875268 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.117616322 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.119910688 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.141408298 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.11473588 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.133799376 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148143251 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.095084265 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.129907115 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.118564813 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.093308448 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.129141694 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.127337074 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.138084495 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.143913536 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.094450614 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.139707809 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.138773126 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.093741955 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.137635295 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.12167663 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.094435083 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.121736865 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.111780414 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.134460686 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.121850179 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.095887089 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.131701115 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.101903209 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118813254 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.105088134 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.115210797 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.09545394 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.119192901 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.133149249 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.106445173 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.115950777 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.101379807 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.119271252 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.121863148 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.093335662 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.117011038 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.09453962 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.11340608 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.098945348 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.138688137 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.092319285 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.120536506 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.11980626 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.094409186 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120293568 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.096945057 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.120346722 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.097299205 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.119326299 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.122080741 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.099398652 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.137145627 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092399076 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122337892 seconds)
  done (took 8.757497871 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.108139624 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.145870028 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.100427235 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.125413471 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.120435011 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.083283888 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.082753734 seconds)
  done (took 1.73755857 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.08487105 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.138085553 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.116417918 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.141879376 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.109655022 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.144185245 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125304272 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.085479407 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132587991 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.093981178 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.137798511 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163088496 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.085835472 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.12171315 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.118216503 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.109415358 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119218625 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.110174505 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092699777 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.142541908 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091783042 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.131997031 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.123592916 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.085088325 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.131267066 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.08688245 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.175269266 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095344392 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.108980957 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.090952907 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114821591 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.179980097 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.106224547 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.119993635 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.083106823 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.138421613 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.129648958 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089412981 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.134532739 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.089622016 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.131223771 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.091021549 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.117645943 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.090196978 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.116380392 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.099297226 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.12051162 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.092770056 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.115714732 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.1133457 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.120372654 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.106962318 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.111347809 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.089043312 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.120005237 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091019866 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.125057824 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090074828 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.138096588 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091291557 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.136498523 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.136284004 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.105688491 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.137071572 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.101831429 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.132680442 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.130713034 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.09005949 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092229826 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.116992352 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.13554173 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.08932532 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.120343478 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099680018 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118655295 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.111968345 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137485702 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089367203 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.123522087 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.089384884 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.11272031 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.086323864 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.138315659 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.088781844 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112960213 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.103192324 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.122466529 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.090196878 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.113715203 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.105909868 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.115815327 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.096922096 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.121345143 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.088348601 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126254563 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.138290194 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.095451977 seconds)
  done (took 11.979145287 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.087059412 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.086741638 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.116211401 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.086821045 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.111913505 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.087573538 seconds)
  done (took 1.559678611 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.115398702 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.114515213 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.100940658 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.118009931 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.129156831 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.134621862 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.135863311 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.094966956 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.13010227 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.099393398 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.134980914 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.111267193 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.141398225 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.11767395 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.109853379 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.11887365 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.110467528 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.114814759 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.098806877 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115198511 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.103741185 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.119225219 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.090156537 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.134420024 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.093973786 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.119400081 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.09351763 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.127207769 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.099026815 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.12156465 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.091990582 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.12008571 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.09329656 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.121140287 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.135511467 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.093247467 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114440906 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.095676625 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.119988708 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.094568359 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.136778118 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.089778941 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.124791575 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.096653311 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.121745044 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.093239699 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121473879 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.093032946 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.136064189 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.095468843 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121882767 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.093135886 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.11949847 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.095591862 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.120195793 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095679109 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.122145608 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.110431905 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.118283781 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.11913102 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.090663153 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094408744 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.121379877 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.11900981 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.094385208 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120986423 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.094535555 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.114608103 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.089895122 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.116992101 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.096476408 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.089310072 seconds)
  done (took 8.982285319 seconds)
done (took 33.984935031 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.666779799 seconds)
  done (took 1.643832603 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.829340668 seconds)
  done (took 1.808377067 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.41196289 seconds)
  done (took 18.419351196 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.460751111 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.549494829 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.964558268 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.161713476 seconds)
  done (took 3.115244678 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.941905076 seconds)
  done (took 1.941610857 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.289616627 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.231634245 seconds)
  done (took 1.50510034 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.865991358 seconds)
  done (took 1.85977496 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.494585204 seconds)
  done (took 2.483035805 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.333222535 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.1691738 seconds)
  done (took 1.502682639 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.560998545 seconds)
  done (took 1.561439601 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.936950311 seconds)
  done (took 15.936801803 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.236846404 seconds)
  done (took 1.245587937 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.291343877 seconds)
  done (took 1.287561176 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.587436185 seconds)
  done (took 4.586488459 seconds)
done (took 59.885912725 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.096070514 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.098921302 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.126150008 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.095856523 seconds)
  done (took 1.408554513 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100762514 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119715394 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.097408738 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.118837745 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.101388175 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.119317382 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.092216012 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.164276877 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.092955248 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.121507677 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.094396479 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118625741 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.096035491 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.119282586 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.091325027 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.121624931 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.096759293 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.119961441 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.095110533 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120713722 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.090814444 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.120349657 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.095459848 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.119006916 seconds)
  done (took 3.634376527 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.09680274 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.09056517 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.118850363 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.089835733 seconds)
  done (took 1.399583628 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.098657189 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.13175726 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.105794997 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125078139 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.106332462 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.13261686 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.088949679 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114032076 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.091255096 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.12579492 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090663407 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.135996133 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.105378158 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.11082099 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101782783 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114086906 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.086306146 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.132433486 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.099626473 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.12667509 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.088572171 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.12495532 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.096552068 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.12966311 seconds)
  done (took 3.672454333 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.169719249 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128364472 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.137815723 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.096320573 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.164052578 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.114272908 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.114893441 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.139690412 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088599214 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.126706231 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.092886402 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.167058507 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.098137843 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.117765003 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.089300022 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.122036406 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.097011553 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.125012742 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091233666 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128599215 seconds)
  done (took 3.416996792 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097554874 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.089634063 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.11119235 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.087311815 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.122603156 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.092121919 seconds)
  done (took 1.610930875 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.086254412 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.08553701 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.111657405 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.084337819 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.115157716 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.085705151 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.08384736 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.111550498 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.085589832 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.084531419 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.110707981 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.083627372 seconds)
  done (took 2.141809004 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.37193103 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.11459973 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.09059366 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.113211991 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.093392161 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.113838167 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.101001005 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.115805541 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.11877678 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.114918111 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.08839086 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.119004392 seconds)
  done (took 2.571133173 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203554265 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094936041 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260048973 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.34862946 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153466377 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162729808 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.276682487 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160755008 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.181452696 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134183113 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190374918 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127401622 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150491474 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174262302 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136976779 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.174646142 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172362876 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197144742 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118824125 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226179017 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160664014 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137119345 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17645528 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148244793 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134619897 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15527912 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.090842115 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125513446 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170383786 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1668241 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171527104 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146016469 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110185101 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22184756 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202879997 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177080609 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.299128257 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129489171 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.184697944 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.181226554 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223463682 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137407876 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192294142 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152360422 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100126773 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177709983 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154197605 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.178732907 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.128873605 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111179038 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208961132 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172437712 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.177386548 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107062969 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.325902498 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119127238 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145356028 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179026892 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183142121 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186976459 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165462605 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.117491077 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182281631 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176819209 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174953244 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.115302341 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.164581181 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122477619 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171903258 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191036109 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174874049 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161291897 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.208495808 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104315229 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161065431 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166317512 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149875924 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174688251 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130986107 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.119441236 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145962273 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106714128 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125762401 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.157683639 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120836476 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199037435 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134526241 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.186880158 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201196612 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153970459 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158106564 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131231798 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162608068 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144465568 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.117503661 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116008419 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.15857588 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154544552 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129554479 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126190673 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140269101 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.126360762 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121511801 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.12111703 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155665589 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.105189981 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16351076 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161899224 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.125663834 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133352092 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147224513 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.15529476 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166588029 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182096059 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101423695 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129647469 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190208693 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154416359 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103854975 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170043512 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180742335 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.161977355 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135764812 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163829015 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189734722 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140018001 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184980284 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110030739 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131530859 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.148533529 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156493229 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152933843 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.12672726 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128092419 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.149776985 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187386011 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.096420086 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134756035 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17193955 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096212106 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128421528 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139118927 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106057252 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.140857803 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.143950419 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.105847751 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154192049 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157830495 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149680559 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155342605 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111870573 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186056232 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130984306 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.158429778 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116099163 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.117329665 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.17482602 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180845389 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126692265 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193813828 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.164845128 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192570573 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162258348 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12894858 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145869476 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126257962 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.089331052 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160630235 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158755303 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159453387 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.178638511 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189547 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.161671087 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.149467223 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147851901 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16365337 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.170943451 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152674103 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.114448846 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159663594 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154148189 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.119953175 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.093952275 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.124253523 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110583461 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129008375 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102002891 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203339729 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132034372 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.211501635 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156213125 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111031409 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178306221 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.12388685 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161979937 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.169342891 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108723429 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.178899199 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177762496 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16456587 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140857235 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1707143 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.089447307 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121840667 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.102508578 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16179616 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131126049 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10251062 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139088224 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178447731 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171315354 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148257781 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19853123 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16160941 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187938381 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.119733097 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.133909574 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1665033 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154023379 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.181307099 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105416237 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.153556907 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173790159 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140022945 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184481224 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160421507 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165659044 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194878669 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.153026343 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098883089 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146818046 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162814331 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138382327 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162709882 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115765796 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134334542 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150719084 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.102987293 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123696342 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177779659 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141197939 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177122893 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.153532193 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170746329 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096408821 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141305092 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157081233 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114938254 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.115039979 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16695593 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183140539 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142493121 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155904915 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17229817 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099607067 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.306501037 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18343674 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179363963 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133962126 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138822476 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129049161 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156196621 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160520593 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174748534 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141373325 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175673208 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155691974 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.112328749 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133392846 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115101311 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147806195 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.149152551 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.129397936 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.12081756 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140526512 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179258649 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140951389 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155266968 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160989196 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.117471836 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.146353634 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111977778 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223647121 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126689996 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173630615 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.152539105 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.163382371 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194227677 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122538772 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09861192 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.125372252 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176302456 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100947178 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159255449 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.182598704 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218743331 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128375031 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162288616 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134703625 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.090065538 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156944815 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147307395 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194709449 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138885767 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.133965526 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186285628 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.118727299 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128288199 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160221751 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28173032 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11270314 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16882949 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.115097159 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.274878669 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094989958 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127103485 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156938724 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168108198 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.107333943 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.178807042 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160349768 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141863821 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128335896 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135873148 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186173746 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200808989 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165469411 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170243284 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.140959978 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154639875 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160365766 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17304398 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140779966 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.113189716 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160633273 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179824306 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.185434306 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.130175617 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131377659 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160415246 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156606012 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169891488 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131555349 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196841918 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10095434 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160036742 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138285239 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121879446 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126067117 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.208597425 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102251405 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172016823 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154024996 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129122273 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096347854 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150417368 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155425242 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110304194 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.127725243 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176395957 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.093882092 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159694246 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176898184 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128806558 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121745158 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144911397 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134963219 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110505946 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143388902 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133737143 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.142207868 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174985615 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.129170259 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171764069 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172398218 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160890432 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157453193 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112080618 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.66460603 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.126724921 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177677478 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114010048 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180731246 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146342522 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164285479 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157879248 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117438757 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163781663 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147860619 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.220491858 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161912191 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.154873069 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099694746 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143099273 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141190224 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.100113772 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149298789 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159276523 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108618824 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.135478817 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.155486907 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143258537 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.112986918 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136918636 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181085226 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114367426 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205958369 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147395662 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134885557 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164473691 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1721878 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127435909 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.15651076 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140097307 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139328239 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147789485 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.100288637 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.131853629 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176797446 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.09265732 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15762836 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15844863 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160096873 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160838419 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.102345002 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15718381 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141983028 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158498465 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09951968 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.152554572 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153934512 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101737659 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.126737555 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152611226 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156015135 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.126696341 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125206893 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.142349382 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173040457 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123620237 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10236904 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283601743 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150574019 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187556932 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.149902869 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132750927 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112094812 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145187501 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.15063325 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156595918 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.098154508 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130860572 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.098942534 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.180116186 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.15185732 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152739542 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181761102 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12823025 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22652267 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.103909559 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.266053531 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135966095 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123510741 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.127502015 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.097056997 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140110799 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131309749 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111695123 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212778742 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148010437 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.149058362 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.142220259 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095846176 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125365041 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101538131 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159835638 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150712659 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156210537 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138538446 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.08807025 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141251565 seconds)
  done (took 74.13736225 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.153216783 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.143649112 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.157252157 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.226577309 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188523777 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.258952912 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.250103594 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.241617302 seconds)
  done (took 2.716642393 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.099333481 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.15610197 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.13724929 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.121201487 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.089383132 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.327932344 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.135097683 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.12010266 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.116761893 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.134685223 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.114222554 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.520631162 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.119425726 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.092983754 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.109892225 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.112136717 seconds)
  done (took 3.600563828 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.22252295 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.530883603 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.078355784 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.226473852 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.219667143 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.171705473 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.723392632 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.178910976 seconds)
  done (took 12.447885526 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.120084147 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.10994395 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.160637672 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.161818161 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.117809948 seconds)
  done (took 1.774805333 seconds)
done (took 115.525461568 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.094412432 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.096123288 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.122091462 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.097273343 seconds)
  done (took 1.501026001 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.108074229 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.078630834 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.109372505 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.07746758 seconds)
  done (took 1.478748093 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.4151245 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.077296882 seconds)
  done (took 1.629728227 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113379213 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131468331 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104168567 seconds)
  done (took 1.45885875 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.100704773 seconds)
  done (took 1.206874024 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.09512959 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.097221969 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.138909146 seconds)
  done (took 1.436731225 seconds)
done (took 9.819307294 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.111423462 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.435397455 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.383274374 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135684863 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.752585241 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.405690556 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.007762 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.154087878 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165368377 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.088088818 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133788526 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.671046531 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.024113127 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.350516046 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.00998877 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.343568379 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.701941266 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.090329491 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12355745 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.089769598 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.018425136 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.088007658 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.118561108 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.090497078 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.669132156 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.421937165 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.089008804 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.38724594 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.088149316 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.122749722 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.3747029 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.116758127 seconds)
  done (took 16.856279505 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094298406 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17643705 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097366575 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.119497231 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.091867918 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.119255974 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.099631198 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.129714859 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179696042 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.088358369 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135914887 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.088823899 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.093674275 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.118713827 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.108353822 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.116815507 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.0913197 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.119732696 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095087971 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.119620818 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.108056842 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.117082123 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.091252367 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.090636665 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.11709752 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.10100222 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.118445691 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.101425438 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.117888175 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09483211 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.120141582 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.089984622 seconds)
  done (took 4.657639752 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139058836 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18576455 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.096967512 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.152170659 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.167158757 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.090910073 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.201674124 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.155429047 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182800515 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.088333519 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.136000462 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.087878181 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.153974082 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.088646216 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.138624128 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.087875973 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.121064197 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.090236511 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123671586 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.090409931 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.137370143 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.087561916 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.11939868 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09136 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.088604184 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.132232192 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.089376994 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.13090381 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.08871073 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.123806917 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.091736896 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.118932195 seconds)
  done (took 4.991826064 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.095402656 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.096779775 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133693946 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.13480641 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.090385747 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.09519739 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.126341265 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.091784158 seconds)
  done (took 1.974626769 seconds)
done (took 29.58503832 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.105980042 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.094005887 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.130860627 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.101131647 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.127333643 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.101824763 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.116761374 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.100010581 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.12852459 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.096815492 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.10367531 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.116975269 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.089123015 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.115369014 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.101402713 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.093759393 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132184308 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.097761909 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.138767758 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.103763183 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.118875746 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.099227667 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.126813518 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.10793678 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.142239355 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.109011635 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.13399062 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.095256847 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.118822684 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.088893042 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.132512115 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.11100043 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.120156229 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105728961 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.121410684 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.093270062 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.089577984 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.119472639 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.105036934 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.130321828 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.094164476 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.129543433 seconds)
  done (took 5.791308192 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.116602596 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.162013697 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.088469113 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.119038583 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.089729882 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.156690887 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.124011321 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.118727623 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.08991264 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.143024789 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.114362283 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.119050133 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.089164398 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.118339218 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.089974277 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.089078539 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.142571275 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.142877758 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.120604347 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.149483119 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.135255283 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.149811395 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.153356107 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.111689011 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.160653081 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.153722741 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.110417414 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.155748112 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.115513763 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.11759466 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.118660768 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.149455176 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.088757046 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.11764376 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.15891166 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.124735274 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.146710095 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.158879205 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.120560568 seconds)
  done (took 6.048079158 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.096944468 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.103263493 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.138855132 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.18206642 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.125598067 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.126757327 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.101033569 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.136284552 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.104483149 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.117324929 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.090844986 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.148937324 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.105465331 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129060642 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091121348 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.102825412 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.138591781 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.089850589 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.124317749 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10810921 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.137478132 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.101338754 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.131740815 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.099520069 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.118923555 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097779463 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.121124909 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.104381056 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.123057589 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.096331579 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.123188315 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.094288701 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.091729276 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.130503129 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.093691186 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.124841274 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.110945587 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127105587 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.096821454 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.119750518 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.101180148 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.123285424 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.110456579 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.158739908 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.088375795 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.125334733 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.095626268 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.126729951 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.088178681 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.136740389 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.098706968 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.089471838 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.133573256 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.11777582 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.088527893 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.103552818 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.11959788 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.091751433 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.125700533 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.095929911 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.1382636 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.093781873 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132102433 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.089918567 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.094649191 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.118479983 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.089470333 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.123511025 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.110086847 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122418434 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.128492729 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.119816095 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.094158716 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.127016299 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.09401551 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128246885 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.089579848 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.133035622 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099149964 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.094436863 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.128061452 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.092258452 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.122823569 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.10621205 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.132869055 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.09618312 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.12376982 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.095375733 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.122444472 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.089874089 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13201064 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091699164 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.123730912 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.105652129 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.089510301 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.121657561 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.096618758 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.123557635 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.089036923 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13139373 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.103045577 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.119893417 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.098908724 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.119849675 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.093942753 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.127248962 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.093345852 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.088907068 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.124063227 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.094856578 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.118302027 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.091886728 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.12175386 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.091897959 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131419586 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.096550229 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.090862651 seconds)
  done (took 14.199111576 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.2327311 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.214857512 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.189390198 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.297162481 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.110417918 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.146386156 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.212373355 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.163097627 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.089817873 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.158111238 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.177796237 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.185250531 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.17572992 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.18800649 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.171467333 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.090464133 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.107004101 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.1717293 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.216405782 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.294355461 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.109165784 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.134404737 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.161133824 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.159458264 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.108211905 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.136324953 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.110886934 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.139664639 seconds)
  done (took 5.788527201 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.105173893 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155975401 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097240645 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.146604792 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.146645517 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.091010985 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.09420156 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.120537233 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.102085338 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135297394 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.090369955 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.127732379 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.095662936 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.130910096 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.089655599 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.130120101 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.099701248 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.129436233 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.092056301 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.123073452 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.104210393 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.13826273 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.094150195 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.121907384 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.106280813 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122685658 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.091128985 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141002873 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.128565219 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115004913 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.116961466 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.098497798 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.103560143 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.119006547 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.092591845 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.122688564 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.092241069 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.122188771 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.092450356 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.087011933 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.119675101 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.081368568 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121771791 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.104027321 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.126284826 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.087765028 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.12450949 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.093718622 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.126400458 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.085925129 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.091074099 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.122810988 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.093255664 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131525038 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.093009168 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.126572206 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.093165587 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.091049183 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.128732407 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.092337856 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.1172043 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.091338143 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.126605702 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.094541335 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.128422097 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.094391016 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.120827706 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.092230284 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.094250467 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.127912247 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.092259336 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.128954224 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.086304525 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.121130513 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.1004144 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.127846589 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.094660865 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.091612414 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.123584368 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.089246658 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.109327907 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.089113022 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.076827158 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.124995221 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.088351281 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122157979 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.092511718 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.126448974 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.105891799 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.128830798 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.096896473 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.119575185 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.092816489 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.124726493 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.088955652 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.094768046 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.137496402 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140351611 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.088727973 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.086703416 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.135817547 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.090421494 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.119440775 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.081661105 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.130472949 seconds)
  done (took 12.630489456 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.131246502 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.170371232 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.121254206 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.109665976 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.155256725 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.130754839 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.128827783 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.097390257 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.121036046 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.108905876 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.124449501 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.098677026 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.09345737 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.134431633 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.161643461 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.099808496 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.121095608 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.104561293 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126497113 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.142696174 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.141013731 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.160215873 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.130022921 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125939469 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.095657609 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.157484291 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.165262594 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.103865206 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.13335921 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.131123241 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.134546745 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.164595476 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.131401087 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.127062692 seconds)
  done (took 5.533378713 seconds)
done (took 51.105873319 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.220451488 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.426933298 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.20289576 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.203270698 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.255521461 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.229067358 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.205110815 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.205393411 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.978712245 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.20430419 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.20252543 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.203832978 seconds)
done (took 27.677709897 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.317325293 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.364947301 seconds)
    (2/2) benchmarking "String"...
    done (took 1.499144455 seconds)
  done (took 3.999815434 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.206200478 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.204719785 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.454925051 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.206598362 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.2263394 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.225012868 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.21155049 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.206408815 seconds)
  done (took 15.871477402 seconds)
done (took 25.531647531 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.295078356 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.398716665 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.464511457 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.229045196 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.205070271 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.211010783 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.208767034 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.254298456 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.206567804 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.212993257 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.209660041 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.469380207 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.235066984 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.58196389 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.208486271 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.221276245 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.223654578 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.427291398 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.207921842 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.215471272 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.208949525 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.215402547 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.223564801 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.22666126 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.215601139 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.208820598 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.24390203 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.214102965 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.404155972 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.217358789 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.251878158 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.213181208 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.240172623 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.214087834 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.316408978 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.240086077 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.396620552 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.218560091 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.20455486 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.220707455 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.407395057 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.632541217 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.213561041 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.211864864 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.21534254 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.281166337 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.200568378 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.919534164 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.217104938 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.215348529 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.269027312 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.580312319 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.21273332 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.222876161 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.217742795 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.447609835 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.20946309 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.253551846 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.245948288 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.217584188 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.209012919 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.209516782 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.281481211 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.223049538 seconds)
  done (took 144.033689018 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.210068456 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.216508534 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.215565101 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.219953283 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.214170405 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.215008039 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.2088932 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.210448642 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.216113217 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.215442169 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.211481245 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.210111966 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.227925762 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.205663807 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.21224165 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.232580584 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.216137991 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.237968422 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.211306155 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.210456906 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.214531784 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.216725546 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.226889189 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.211002511 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.210099086 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.288386105 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.252780591 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.220124669 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.216577349 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.211721787 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.256899359 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.225899671 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.841982419 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.073425994 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.222881962 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.242505212 seconds)
  done (took 80.590336993 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.210161056 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.211398036 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.212991568 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.244161751 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.211872936 seconds)
    (6/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.211918908 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.781535798 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.802206174 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.928471362 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.312634614 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.21609335 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.615768694 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.488414527 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.212201777 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.307135813 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.227905115 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.213365217 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.227689787 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.239643768 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.211565198 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.211552772 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.802708566 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.230302597 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.323749867 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.3915131 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.229119342 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.245235836 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.612164721 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.213536256 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.245483942 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.550878101 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.262457454 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.212622459 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.587358053 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.807597937 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.332538465 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.217386267 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.246428835 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.215154622 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.49717351 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.213212247 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.214466363 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.216231438 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.883940581 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.214377763 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.785383621 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.215091174 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.16638448 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.216133118 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.214774542 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.628613004 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.953847499 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.21538064 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.215564593 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.217112472 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.214890331 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.213986575 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.247260654 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.738354655 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.314023375 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.216425699 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.218756246 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.24850529 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.215775493 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.216891853 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.23739644 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.215602294 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.554442638 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.274243258 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.327030229 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.807201035 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.219959299 seconds)
    (73/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.216029368 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.313850611 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.337506659 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.217347166 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.216463754 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.2159439 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.215702761 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.327112687 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.216313298 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.63505438 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.395210344 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.234085028 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.630162139 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.320796737 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.216248869 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.631469042 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.222516553 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.216836371 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.961614289 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.31546757 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.216546073 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.215526918 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.216862139 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.636867643 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.811092787 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.478321075 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.223600907 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.032177849 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.228992119 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.64832778 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.780685732 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.937202677 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.223916504 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.332981776 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.395191021 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.234683945 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.218426823 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.628166968 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.223158894 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.277949096 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.218012833 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.617299365 seconds)
  done (took 368.574349465 seconds)
done (took 594.334394098 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.864090775 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.859460898 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.96958904 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.850098434 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.814880389 seconds)
  done (took 10.505337482 seconds)
done (took 11.652130017 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.413832216 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.912387652 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.287553909 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.417547274 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.256299296 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.436996234 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.400339056 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.243726156 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.324974555 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.308272475 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.328544761 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.277788182 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.2593396 seconds)
  done (took 19.01597935 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.572939366 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.226231872 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.285668116 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.552198246 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.267357671 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.549077266 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.437666547 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.24155212 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.42281474 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.240505908 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.234761127 seconds)
  done (took 18.180383606 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.575588724 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.226627131 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.288670703 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.609087838 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.268596039 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.575538489 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.431980825 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.240793626 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.427919227 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.238248909 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.23376552 seconds)
  done (took 18.266971479 seconds)
done (took 56.611143761 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.264094337 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.395128887 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.249983194 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.23520454 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.229762388 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.231324841 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.237077992 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.229295445 seconds)
  done (took 11.223639778 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.229891496 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.228852051 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.227385601 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.227947151 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.228409399 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.228075679 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.226342453 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.229118009 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.229743204 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.226891189 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.228206135 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.226153731 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.22635963 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.225160104 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.226271384 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.228202035 seconds)
  done (took 20.79362778 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.227700914 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.226912751 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.226608853 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.225992473 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.226175299 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.226885704 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.225735886 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.22551239 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.227679466 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.226389593 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.226453555 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.227121952 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.226825994 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.22502238 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.227522738 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.227629099 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.226084213 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.227264286 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.231836505 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.225322281 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.225225784 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.225046139 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.225840243 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.226434745 seconds)
  done (took 30.590762006 seconds)
done (took 63.758343105 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.22099724 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.238271714 seconds)
  done (took 5.607949993 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.289375409 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.288441116 seconds)
  done (took 3.7277331 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.228825048 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.229939581 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.228923383 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.228476337 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.227119885 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.228465259 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.228624486 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.228718873 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.229852137 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.230857053 seconds)
  done (took 13.43899437 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.229001083 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.228242438 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.226030322 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.228354718 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.22912524 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.225968062 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.228203906 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.227077058 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.228048231 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.226258067 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.228682985 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.225433166 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.228666135 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.225188954 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.230543405 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.22563025 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.226653743 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.226062844 seconds)
  done (took 23.242292288 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.240427379 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.248345805 seconds)
  done (took 3.637874705 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.355183506 seconds)
    (2/7) benchmarking "second"...
    done (took 1.266313695 seconds)
    (3/7) benchmarking "month"...
    done (took 1.334629548 seconds)
    (4/7) benchmarking "year"...
    done (took 1.323734574 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.267866837 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.247117988 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.267455484 seconds)
  done (took 10.210264484 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.228949661 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.423809937 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.522153944 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.816404275 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.229397989 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.231958265 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.098441576 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.232942429 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.235849385 seconds)
  done (took 14.168732344 seconds)
done (took 75.183379653 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.220678892 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.237386251 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.230209581 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.255035413 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.564644699 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.23740048 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.226906639 seconds)
done (took 16.122160712 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.218741517 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.212148447 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.232687701 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.22723422 seconds)
  done (took 10.041025745 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.234969963 seconds)
    (2/2) benchmarking "read"...
    done (took 1.541786051 seconds)
  done (took 4.927156324 seconds)
done (took 16.118852626 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230339118 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.229060152 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.228106624 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.2283646 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.231658942 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.230645454 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.228287621 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.229699105 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.230783123 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.230918237 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.23105652 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.230812533 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229619762 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.228510746 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228104409 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23202399 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.229307411 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228017108 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.228417046 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.22844311 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.23162194 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.229394045 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.228494552 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.231084081 seconds)
  done (took 30.664359842 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.232648733 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.230396834 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.230929648 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.231659447 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.229097617 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.233364745 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.231545358 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.229596001 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.232860973 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.231921052 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229113979 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.230393054 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.231722822 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.229762606 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23178027 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.230807437 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.232654093 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228789665 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232144349 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.23055776 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.231845455 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229664788 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.230952096 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.232164152 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.230498546 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.230066225 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.233091622 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.230745337 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.233026495 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.230849376 seconds)
  done (took 38.087724776 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.238059902 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.240073516 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.232586996 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.232760508 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.233239174 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.23407032 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.233681343 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.232358645 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.23431031 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.233849612 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.233622515 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.233805879 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.232511358 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.233662153 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.234371494 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.23346911 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.234701453 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.234021009 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.233691468 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.233960292 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.234893276 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.234610613 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.235032893 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.235324107 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.235105706 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.235556586 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.235206941 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.234997994 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.234506149 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.235844417 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.234428 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.234359651 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.235498806 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.235381904 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.235829602 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.2351871 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.239713338 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.242274662 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.23587172 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.235347224 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.23471365 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.236200489 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.235083848 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.234784724 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.235306435 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.235861996 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.236131839 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.235229605 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.23533395 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.235496717 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.236372356 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.236376198 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.237320151 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.235816499 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.236492685 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.237181091 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.236143046 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.235743152 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.236535975 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.23677015 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.236651907 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.236430355 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.235662937 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.237031675 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.237605212 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.236757202 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.23764171 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.236413443 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.237663182 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.237446943 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.237323983 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.238160358 seconds)
  done (took 90.118063529 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.236590109 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.236490883 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.235081821 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.234614083 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.233652306 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.23746351 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.235278227 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23805365 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.236236095 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.236575247 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237451344 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.235477528 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.236395306 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.238696309 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.238823458 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.23532128 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.238286354 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.236404061 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.237369029 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.239509754 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.238189096 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.234882925 seconds)
  done (took 28.365533014 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.238559242 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.242361057 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.236246744 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.239996203 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.237527501 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.240539027 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.238890543 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.240181147 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.238496925 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.236580361 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.237940015 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240228527 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.239523504 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.236596988 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.237054224 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.239715759 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.240317898 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.239896237 seconds)
  done (took 23.459918799 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.237710564 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.238380489 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.238753394 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.236595939 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.239695165 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.240669636 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.237996989 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.241637917 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.240408205 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.238306872 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.240058273 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.240340705 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.240959224 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.238317342 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240888265 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.238511723 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.24039782 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.23815186 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.241321326 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.238451688 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.239261795 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.241253966 seconds)
  done (took 28.428268044 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.24034274 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.24075698 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.239024629 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.239402 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.238178434 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.241224674 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.241384706 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.239191462 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.24213459 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.240893283 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.238757941 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.241507016 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.242214455 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.239386333 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.23940781 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.239534101 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.241859791 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.240146904 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.242662412 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.239631023 seconds)
  done (took 25.970287991 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.241843826 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.243027114 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.243404833 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.242638109 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.242247557 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.243001902 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.244010181 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.243442035 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.242733303 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.243551075 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.243675124 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.243081619 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.243100854 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.244290307 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.244131065 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.244128244 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.244668078 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.244066129 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.244266124 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.243119873 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.243674195 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.244592059 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.244351001 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.243479102 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.244197702 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.244188066 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.244734152 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.244484924 seconds)
  done (took 35.985341156 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.244068742 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.245807043 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.241874993 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.242396009 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.241485906 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.243237134 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.242003105 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.242272922 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.245413816 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.242127323 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.245824666 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.245867687 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.245189317 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.245971594 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.245828241 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.246654618 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246783146 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.243422005 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.243081343 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.244796446 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.246013153 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245848066 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.245996985 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.243175593 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243785942 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.246676543 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.244479077 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.245158208 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.247560527 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.243486598 seconds)
  done (took 38.501256262 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.293606043 seconds)
    (2/2) benchmarking "in"...
    done (took 1.291004254 seconds)
  done (took 3.751439737 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.244312227 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.2475416 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.24693837 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.245058015 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.24450798 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.246083553 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.247373659 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.245541202 seconds)
  done (took 11.13390465 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.2451466 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.246761449 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.246499183 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.248490708 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.247132227 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.24611876 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.25341991 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.266392903 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.247955923 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.248724532 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.254586801 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.254439084 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.250483232 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.247323656 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.248126831 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.250595249 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.250283829 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.249713197 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.247905432 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.249091408 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.248857473 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.24975151 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.25019007 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.247151211 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.250042395 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.258999153 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.25166818 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.250477796 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.248184537 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.252427674 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.247980292 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.247488681 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.249585542 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.248818506 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.250372837 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.2498455 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.257470546 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.270722462 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.255847783 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.250785416 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.251664328 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.24806911 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.249457202 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.250762062 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.250931112 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.25013849 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.25120045 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.2489276 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.249084793 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.253756454 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.256638658 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.24918711 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.247993658 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.252407036 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.250810183 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.256065349 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.270448005 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.25343882 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.259965872 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.260792383 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.264564459 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.259880279 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.253062937 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.249492946 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.261660314 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.275502213 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.25715513 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.267325973 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.248936566 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.252249549 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.256928024 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.264790098 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.277097035 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.251107645 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.250901272 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.252923278 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.251836542 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.255054189 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.258470587 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.273034062 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.251607618 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.252196935 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.262802339 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.274630017 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.251313147 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.252808022 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.252092523 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.252177254 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.253346554 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.261950056 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.272235531 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.253049627 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.252100994 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.253758467 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.252137504 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.253401623 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.252190747 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.252885708 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.250119707 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.254386727 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.253983704 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.256531946 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.263028966 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.253543864 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.253108043 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.260826848 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.253878115 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.254456795 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.259398912 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.256221301 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.254693748 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.254977866 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.258893848 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.253177844 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.257883013 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.262784314 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.254747787 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.256233457 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.255712626 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.25645166 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.265740602 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.281486402 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.257122499 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.255986662 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.260592559 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.266700188 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.257311612 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.258649113 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.255670603 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.25416292 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.254489098 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.256448017 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.256071312 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.255847488 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.255699588 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.256938076 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.254227868 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.255503043 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.256399839 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.256364765 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.256135819 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.257367288 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.257592832 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.259000315 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.256708314 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.257050991 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.262268083 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.256104251 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.258287603 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.257195078 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.255236905 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.258626479 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.257836595 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.256735984 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.256669471 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.257011986 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.256712765 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.256992065 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.25791893 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.259430475 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.258385894 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.259600241 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.262157782 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.257381219 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.260575628 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.257885156 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.256434053 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.258868182 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.258290424 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.257643967 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.259588011 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.255280837 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.26289301 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.265403936 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.259025399 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.258469948 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.262302431 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.258782796 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.25909904 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.258901201 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.262387382 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.268040348 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.258538506 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.265116168 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.260915465 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.260946847 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.261732399 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.258795955 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.259296955 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.260433426 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.262670185 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.268027555 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.272400848 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.284451315 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.262539914 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.265086807 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.260807639 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.264063981 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.264941474 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.260438148 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.261056447 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.26064608 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.261235353 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.260750799 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.261671341 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.261874362 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.260250763 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.262164163 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.263030916 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.260038996 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.263452251 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.261550434 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.259537791 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.259246753 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.259044783 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.260432727 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.261106615 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.260210779 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.260240177 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.261797117 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.262276024 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.26115489 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.266701761 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.260042343 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.261831181 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.259759061 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.258870701 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.261427016 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.265599739 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.26321056 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.262666473 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.268910527 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.27918663 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.263451956 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.269233489 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.278389951 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.262252722 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.264970811 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.264367917 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.262010385 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.265361321 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.270780939 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.264822642 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.264853601 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.264166914 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.264290608 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.263637717 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.269295983 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.262545528 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.264408817 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.265825558 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.265635059 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.262405204 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.265019891 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.264707678 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.265207322 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.266510564 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.264886863 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.265662832 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.265590984 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.264507369 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.26520554 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.264503388 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.267521764 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.273298308 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.269150947 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.264121139 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.266176379 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.265832121 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.268623463 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.264158892 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.265458432 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.265069733 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.278016015 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.290901971 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.272587121 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.268056969 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.267083911 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.271131195 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.266678488 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.268385906 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.265546363 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.26523365 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.265108576 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.265599029 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.26425819 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.265775642 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.267601215 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.267870473 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.267478172 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.270834498 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.267576773 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.266055924 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.266159541 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.266848617 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.267777957 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.265806876 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.267652559 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.266852011 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.267784924 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.265188404 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.266210816 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.273991905 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.284293599 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.266686954 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.265160152 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.26656728 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.26618297 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.267859563 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.266774508 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.271049863 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.274795602 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.270749155 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.275648326 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.268478071 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.275067074 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.268026689 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.270633806 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.275151684 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.266376037 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.266956039 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.266913438 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.267901637 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.27593227 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.286668122 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.269051046 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.270993174 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.267706528 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.267506091 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.268357798 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.267845249 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.27015007 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.2679341 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.277013495 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.289831849 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.270824393 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.269307144 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.266677697 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.270984602 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.269525759 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.267007676 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.27045098 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.26993229 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.268608189 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.269103977 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.268153579 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.270167559 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.268428989 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.271054205 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.267408442 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.27011426 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.275858737 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.28926651 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.274546887 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.270496726 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.27542726 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.272290981 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.276635083 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.288026417 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.2700443 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.271023712 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.271642316 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.27129843 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.270153897 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.272215944 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.270904788 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.272719154 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.275140404 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.271053524 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.272775693 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.27223502 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.271107868 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.271534973 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.281553567 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.295197598 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.273172003 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.276998094 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.270179264 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.272915139 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.277555254 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.272798303 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.271161338 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.27493859 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.282087712 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.280464612 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.272472319 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.271983188 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.273413783 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.272245099 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.274227753 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.273055145 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.273294608 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.273004976 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.273673663 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.272876844 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.275163907 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.272799044 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.271887389 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.27365798 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.274398486 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.282046872 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.272308098 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.274674471 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.272886186 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.274705663 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.273106517 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.273111423 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.274805529 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.273589365 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.275013446 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.276551331 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.281968928 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.280314293 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.276339124 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.273543747 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.274766784 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.276757607 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.273591244 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.275818739 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.275265811 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.275335339 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.275193921 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.275320525 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.275666689 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.273576449 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.276133189 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.274475241 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.2761329 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.278741572 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.28287028 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.275925555 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.273533632 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.276384387 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.276566458 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.275673419 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.275637176 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.283174685 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.280056644 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.286962986 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.283563125 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.280900919 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.277214234 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.279990503 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.28374071 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.274832019 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.278045428 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.276060379 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.277209978 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.276214864 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.278377643 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.27793901 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.283966844 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.274572227 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.275732413 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.286161118 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.299950854 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.27654278 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.280172463 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.281691505 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.277334609 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.275999555 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.277313796 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.276923998 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.284927853 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.293790341 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.279070851 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.279151667 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.276735749 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.280603478 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.281514055 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.278924229 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.278524181 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.276882689 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.276913925 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.278697165 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.27999496 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.277374818 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.275209486 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.277165202 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.282843196 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.285980168 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.278315167 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.280503986 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.274055036 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.280015062 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.278169089 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.277588132 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.278082217 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.278638395 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.276028979 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.278858057 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.278457936 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.281090781 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.276568906 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.280239549 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.281316397 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.279520754 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.283976287 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.291015059 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.288339484 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.278286465 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.280254998 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.280714601 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.281914385 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.276556267 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.283141803 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.280814902 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.281756803 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.282413883 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.279206719 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.281395872 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.282085966 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.296148932 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.299891349 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.282070973 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.281815225 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.282704285 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.281115259 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.280262358 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.279926717 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.281655785 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.28522775 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.28774551 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.282868539 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.287767894 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.301696411 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.283911699 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.285655921 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.286717911 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.28987152 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.285550254 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.282966969 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.281827473 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.287001292 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.298702806 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.28186343 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.294547652 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.314100589 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.297309262 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.283523368 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.283506818 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.28150852 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.282705239 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.284637933 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.28395522 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.285430166 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.284711072 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.281948242 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.28461694 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.287735058 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.285479487 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.284177373 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.284324317 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.282047356 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.28374954 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.280877945 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.282632541 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.286410137 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.286127042 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.285083406 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.284403801 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.284591279 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.296192898 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.310345499 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.283680634 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.284994392 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.282352098 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.286868895 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.287645429 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.294321549 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.290102729 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.284725796 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.28479128 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.285459542 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.28613925 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.283039191 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.284867567 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.284335411 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.284468092 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.283424246 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.297246932 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.29400541 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.289474375 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.286207003 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.286062656 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.287119127 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.285499805 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.287708705 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.284573069 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.28560015 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.290044471 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.289205378 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.286298422 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.286850426 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.290091761 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.293984605 seconds)
  done (took 757.621925841 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.284433758 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.284029903 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.284778525 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.285145106 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.284357165 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.283425366 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.285353571 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.285027612 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.285203265 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.284840346 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.284230437 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.286135408 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.285262727 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.284075847 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.285431673 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.285446314 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.28597627 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.285688666 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.284508898 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.28554699 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.286981528 seconds)
  done (took 28.18919429 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.289170431 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.284830949 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.286412574 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.288382034 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.286373222 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.288410902 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.285897231 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.288552864 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.288878215 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.285909513 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.287478053 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.288753062 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.286466757 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.287671403 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.285351773 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.290268519 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.28898915 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.286768181 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.288969667 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.287868396 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.289018827 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.287271622 seconds)
  done (took 29.531649393 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.288084364 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.289038493 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.287258797 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.286559258 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.288385372 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.287175062 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.287699196 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.289142552 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.29032464 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.289367436 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.287220265 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.290788301 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.296885141 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.295363152 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.29021021 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.289595899 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.289275434 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.290843982 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.290123001 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.288700604 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.293481033 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.288030168 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.288191686 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.287376304 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.290513509 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.290767684 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.290664518 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.289710092 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.291653647 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.29476963 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.289896099 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.291026177 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.291578505 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.289611258 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.291185531 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.295644224 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.290990253 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.289364471 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.291313244 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.301125293 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.314333799 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.291909192 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.295802244 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.291959258 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.291939471 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.295055351 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.299331949 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.289226796 seconds)
  done (took 63.194316348 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.292214166 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.292094808 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.289130738 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.292245652 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.292094462 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.29089852 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.29199401 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.293269353 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.289092147 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.289936839 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.293360019 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.289976699 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.289216051 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.292449822 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.291996994 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.289745117 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.290355741 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.289635212 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.289294301 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.289729721 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.289975816 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.293451813 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.292453959 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.291743923 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.292733858 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.29132577 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.291470737 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.294481137 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.291933704 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.290929715 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.294491625 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.293910428 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.294068043 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.292278702 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.29102197 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.293789646 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.294432591 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.291163557 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.294491984 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.291941867 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.294003468 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.29480655 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.295009792 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.293711694 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.290741718 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.291875845 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.292565821 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.292454057 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.291353584 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.296159858 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.29475722 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.292192174 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.294426869 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.292128214 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.295723342 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.295069063 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.292226515 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.292166937 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.295394132 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.290492864 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.292624989 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.295177417 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.292938172 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.297038043 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.297247103 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.29405075 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.292935759 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.296554301 seconds)
  done (took 89.105787246 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.295462034 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.296315533 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.296033259 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.296393332 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.294924226 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.297351793 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.295393687 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.296287189 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.296864595 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.296564974 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.297039544 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.297627869 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.296544841 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.297681024 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.296001625 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.29644456 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.294547003 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.297242747 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.296171432 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.297344255 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.297122097 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.295776782 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.297091354 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.297060572 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.296586693 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.296182254 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.297117763 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.296705912 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.298641746 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.296991256 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.297408154 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.296910848 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.295633879 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.297777819 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.297190375 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.297800447 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.297694372 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.298028874 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.297852625 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.298856375 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.296714561 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.297085389 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.29864107 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.298849827 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.297516464 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.298224552 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.297875507 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.299008877 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.299316677 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.298427299 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.298403877 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.299387793 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.298700854 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.298708823 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.298833017 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.299910116 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.299813247 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.299637507 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.299225744 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.299359168 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.2985289 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.301505077 seconds)
  done (took 81.659932899 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.300031405 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.300458512 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.29919573 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.298843319 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.29949259 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.297908345 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.300797261 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.299035377 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.300592904 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.300250715 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.302113331 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.298513874 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2993898 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.301602106 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.298087343 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.299568476 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.29900175 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.298679045 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.30016219 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.298297033 seconds)
  done (took 27.205547687 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.298235025 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.301521818 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.299046698 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.299363563 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.302990933 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.298886699 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.302154013 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.302303729 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.299832321 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.302628396 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.303928187 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.301469169 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.299465243 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.29952248 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.302322991 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.299704454 seconds)
  done (took 22.029206663 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.301319053 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.301761938 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.301652484 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.300659203 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.300375881 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.299517788 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.302523877 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.300272955 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.299801234 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.303449042 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.303657753 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.303256654 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.302041248 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.303167723 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.300272749 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.302446872 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.299926693 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.300929009 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.303006794 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.304171685 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.301132348 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.300659217 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.302384723 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.303121559 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.300768904 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.300940482 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.300465353 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.300704632 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.300893268 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.303012877 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.30221651 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.302599758 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.301351753 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.301923953 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.303831872 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.300838214 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.304327043 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.304376535 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.304293421 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.303530128 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.304038107 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.301453071 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.306594077 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.305634556 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.303203155 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.30545641 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.30302067 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.303727218 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.303710441 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.303238517 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.305923911 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.305404362 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.306614615 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.306724493 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.305982134 seconds)
  done (took 72.867421516 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.306038166 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.306718837 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.304664674 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.306289921 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.306151786 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.30343371 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.306430136 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.305138897 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.303094125 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.306042897 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.30383766 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.30855074 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.305267583 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.306305269 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.303979097 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.307173769 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.304645895 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.304356208 seconds)
  done (took 24.718015113 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.30529307 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.30476235 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.306609581 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.304469859 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.306696762 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.307290416 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.304514886 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.306181984 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.306488056 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.307010644 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.304321239 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.307898414 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.307381746 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.308894517 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.305245087 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.3072425 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.307938815 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.308207999 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.305624107 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.305578547 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.309251094 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.309226771 seconds)
  done (took 29.967428676 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.306107105 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.30539005 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.306748676 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.322300883 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.325474525 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.30611955 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.305910347 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.307013792 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.330311934 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.361631567 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.354836111 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.325778162 seconds)
  done (took 17.079985056 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30700195 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309143496 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.306568556 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309607911 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307753298 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306217917 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308308032 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308526523 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310475864 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308875807 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307630281 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310526494 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309817871 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308621604 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310657506 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311168731 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309215895 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307685085 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30626973 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310929412 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30864644 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30965109 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309358899 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309859041 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309379448 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307239104 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311776735 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309446444 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308951198 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311199275 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312475183 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309399346 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313994596 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310734159 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312003307 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311936625 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310012175 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311700947 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310051598 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309081762 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.312249049 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312375941 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312103569 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309598423 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311957221 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30983906 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310088373 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310766257 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309360632 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313028225 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312863729 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310694578 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310963992 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312540548 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310676416 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313539998 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310757294 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310659578 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311331073 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309146063 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311302426 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312717497 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310194504 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310966918 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313779027 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312483364 seconds)
  done (took 87.702732984 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311125673 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.311818236 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309917458 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311753938 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311691342 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312393486 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312186872 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311725059 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311688856 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311255788 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3159223 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311504861 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31014148 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312377965 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311101631 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311418321 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311941486 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31270077 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312175045 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316055796 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312652878 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31368938 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312469426 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312335474 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314170074 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314742099 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312515822 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313384042 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314078595 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312855195 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31313205 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312513801 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313174787 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.311552121 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312739471 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313481561 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313610609 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312986185 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313679749 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315533592 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314361846 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315225886 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314527373 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3151699 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315002261 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314456264 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313575786 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31407704 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313463074 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313267149 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313711551 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315261243 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315002192 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312565864 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314724166 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312625673 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314968365 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315648893 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314297105 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315868635 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31480459 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314028434 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317927272 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313313318 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315859877 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315631881 seconds)
  done (took 87.915226048 seconds)
done (took 1774.40475826 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.478429812 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.432152657 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.314120829 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.320600304 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.314848407 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.310326684 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.330272881 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.316042131 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.315185963 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.314447478 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.316656545 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.504734508 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.309975955 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.316059405 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.315339061 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.411436545 seconds)
  done (took 26.85187446 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.345184925 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.323116325 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.441117471 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.344979475 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.345526891 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.51365339 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.382168823 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.325498215 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.507307364 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.371961234 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.315068577 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.345956699 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.322730197 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.311029093 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.340862969 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.51424033 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.587098668 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.323559898 seconds)
  done (took 29.192726701 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.807103587 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.363959017 seconds)
  done (took 5.404319881 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.34190685 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.320555233 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.323469794 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.320072031 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.322935099 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.312356959 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.319901249 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.314479696 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.328385721 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.47773431 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.329370938 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.331595054 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.342727721 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.323835135 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.319564719 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.361012414 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.497139919 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.320991479 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.319302139 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.326666022 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.322154238 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.423983233 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.366297552 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.326676594 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.456493668 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.330261949 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.325064764 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.329133976 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.462463334 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.3267994 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.321599102 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.322980165 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.323826895 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.260459946 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.875501174 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.320357365 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.3725973 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.331009437 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.322679376 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.471962914 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.324614696 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.32927407 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.316026507 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.844177091 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.473520669 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.452652974 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.33331156 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.347970659 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.325784105 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.393014265 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.327386835 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.325225384 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.36882226 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.15031375 seconds)
  done (took 85.003693328 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.327937978 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.316581533 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.494534857 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.343044936 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.317227986 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.323071348 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.333150466 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.624661704 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.321524101 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.317942013 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.673159658 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.901638733 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.340645838 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.354362046 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.168650176 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.374176818 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.318192807 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.32256189 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.319238661 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.319917604 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.882005448 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.325106916 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.324283568 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.57302646 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.358061204 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.838345635 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.317308161 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.336828292 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.320657908 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.316757759 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.859458158 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.352781739 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.384325805 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.326040221 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.597776747 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.719972105 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.678775314 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.324751675 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.345670877 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.323391846 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.337507141 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.834024489 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.69607314 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.320045882 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.337056467 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.838330848 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.320987306 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.320074053 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.327534111 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.568876622 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.320175558 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.32199494 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.319210006 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.327042101 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.319902302 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.415834069 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.387031545 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.837303947 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.32051082 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.320793317 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.338560568 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.321622639 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.320512148 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.324129562 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.322173269 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.699123779 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.499820554 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.322531646 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.696936094 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.855050754 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.356779777 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.923909657 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.343762214 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.348232665 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.333870519 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.320451 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.334398508 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.834509008 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.332709622 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.320520941 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.682100399 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.324708337 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.653954625 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.338924607 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.323614919 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.915260063 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.334202293 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.327247589 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.322036801 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.32161128 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.339833207 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.329356889 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.600705951 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.397496722 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.323232245 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.324297807 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.369606441 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.32308273 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.342628555 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.323222893 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.918055881 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.34956201 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.324530849 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.326889537 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.323188219 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.347880545 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.324909106 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.324724232 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.588869625 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.325893498 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.33124056 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.324094415 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.322523312 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.341622448 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.572481879 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.328266893 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.654515086 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.323617603 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.33111646 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.334028106 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.323793935 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.378020747 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.325075266 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.327328301 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.259777468 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.626016879 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.345021547 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.324787596 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.325357312 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.3254963 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.34575592 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.326256951 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.352101103 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.324277592 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.102060561 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.367584552 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.349704685 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.324684906 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.327593039 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.327227881 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.332264599 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.328726372 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.618782125 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.605629851 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.501171546 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.324723132 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.326548149 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.081175763 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.39048597 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.50620265 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.352608477 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.325840043 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.569908857 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.524647919 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.32868693 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.326298768 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.329468245 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.587921827 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.334454729 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.62986154 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.881756418 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.343530389 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.334377859 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.100174447 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.07430174 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.334858343 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.329032697 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.669438638 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.350491237 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.327611996 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.328847191 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.32825477 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.329162253 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.331246141 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.343894883 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.328098868 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.325839631 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.473202649 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.521292141 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.347060566 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.332709854 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.843857284 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.328853999 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.328725541 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.339296181 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.331055217 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.32842239 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.434049372 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.328160209 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.373400772 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.328574859 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.328801291 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.908129231 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.328075774 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.335999025 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.521041649 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.0311513 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.345894487 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.329767345 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.329864007 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.221123918 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.871534739 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.351761362 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.662321779 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.333665635 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.369872018 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.331373117 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.336607018 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.872737183 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.330335175 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.330321644 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.000153822 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.3542091 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.8590524 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.328954964 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.329333827 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.9390275 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.354734541 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.333681281 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.332436958 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.331049016 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.644473509 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.330223377 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.339186282 seconds)
  done (took 497.41972204 seconds)
done (took 645.102794663 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.331073483 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.331501352 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.324115986 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.336845372 seconds)
  done (took 10.574063438 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.341591789 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.338817007 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.339682697 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.337537174 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.340164758 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.338098748 seconds)
  done (took 9.285788051 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.331850799 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.333387182 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.338036349 seconds)
  done (took 8.254774233 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.558991698 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.36295124 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.689320342 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.358218841 seconds)
  done (took 9.220797029 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.337925781 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.337553025 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.336566796 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.338363779 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.341463514 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.342642441 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.340167451 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.338990619 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.342106119 seconds)
  done (took 13.305221021 seconds)
done (took 51.889507369 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.317825121 seconds)
    (2/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.336578654 seconds)
    (3/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.29431083 seconds)
    (4/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.274908342 seconds)
    (5/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.350811224 seconds)
    (6/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.365098275 seconds)
    (7/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.317510602 seconds)
    (8/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.335580849 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.602952323 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.397592724 seconds)
    (11/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.197603403 seconds)
    (12/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.359739055 seconds)
    (13/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.369609814 seconds)
    (14/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.398312856 seconds)
    (15/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.319096902 seconds)
    (16/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.32572299 seconds)
    (17/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.325954776 seconds)
    (18/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.364891838 seconds)
    (19/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.332175386 seconds)
    (20/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.416188187 seconds)
    (21/286) benchmarking ("sort", Float64, true)...
    done (took 2.332511233 seconds)
    (22/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.366714779 seconds)
    (23/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.33183922 seconds)
    (24/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.345507286 seconds)
    (25/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.325246205 seconds)
    (26/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.318576719 seconds)
    (27/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.477614417 seconds)
    (28/286) benchmarking ("sort", Int64, true)...
    done (took 2.332268461 seconds)
    (29/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.326342214 seconds)
    (30/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.829916337 seconds)
    (31/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.331123807 seconds)
    (32/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.448476962 seconds)
    (33/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.319700314 seconds)
    (34/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.266817715 seconds)
    (35/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.332533574 seconds)
    (36/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.337454289 seconds)
    (37/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.326034936 seconds)
    (38/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.344324035 seconds)
    (39/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.43791987 seconds)
    (40/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.742195344 seconds)
    (41/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.358070035 seconds)
    (42/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.347496329 seconds)
    (43/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.51249611 seconds)
    (44/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.862238282 seconds)
    (45/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.367962508 seconds)
    (46/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.00431917 seconds)
    (47/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.332561777 seconds)
    (48/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.426432683 seconds)
    (49/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.4460925 seconds)
    (50/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.00203698 seconds)
    (51/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.599289822 seconds)
    (52/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.33412019 seconds)
    (53/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.351341078 seconds)
    (54/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.329062995 seconds)
    (55/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.211669718 seconds)
    (56/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.603420135 seconds)
    (57/286) benchmarking ("sort", Int8, true)...
    done (took 2.334802006 seconds)
    (58/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.223801326 seconds)
    (59/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.400432269 seconds)
    (60/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.320431074 seconds)
    (61/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.239514705 seconds)
    (62/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.543355062 seconds)
    (63/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.339934941 seconds)
    (64/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.364258282 seconds)
    (65/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.528145572 seconds)
    (66/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.32307193 seconds)
    (67/286) benchmarking ("sort", BigInt, true)...
    done (took 2.344395716 seconds)
    (68/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.34799093 seconds)
    (69/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.344753825 seconds)
    (70/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.338372578 seconds)
    (71/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.323929645 seconds)
    (72/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.328887587 seconds)
    (73/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.368911398 seconds)
    (74/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.347227432 seconds)
    (75/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.722748758 seconds)
    (76/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.485995897 seconds)
    (77/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.322603761 seconds)
    (78/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.361528194 seconds)
    (79/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.887260947 seconds)
    (80/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.367101742 seconds)
    (81/286) benchmarking ("sort", Int64, false)...
    done (took 2.335271683 seconds)
    (82/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.358348417 seconds)
    (83/286) benchmarking ("sort", BigInt, false)...
    done (took 2.339374982 seconds)
    (84/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.341491042 seconds)
    (85/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.978853945 seconds)
    (86/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.471920288 seconds)
    (87/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.322352031 seconds)
    (88/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.353925293 seconds)
    (89/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.419871945 seconds)
    (90/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.32360452 seconds)
    (91/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.324236546 seconds)
    (92/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.909417264 seconds)
    (93/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.332146219 seconds)
    (94/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.362293243 seconds)
    (95/286) benchmarking ("sort", Int8, false)...
    done (took 2.342641639 seconds)
    (96/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.327408146 seconds)
    (97/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.355517987 seconds)
    (98/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.986590488 seconds)
    (99/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.261939983 seconds)
    (100/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.559041691 seconds)
    (101/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.460656296 seconds)
    (102/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.464612751 seconds)
    (103/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.346336399 seconds)
    (104/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.38440027 seconds)
    (105/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.332603443 seconds)
    (106/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.762645725 seconds)
    (107/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.350035179 seconds)
    (108/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.362909961 seconds)
    (109/286) benchmarking ("sort", Bool, false)...
    done (took 1.866629499 seconds)
    (110/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.367665028 seconds)
    (111/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.324565912 seconds)
    (112/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.602565306 seconds)
    (113/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.337879627 seconds)
    (114/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.347479137 seconds)
    (115/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.348707281 seconds)
    (116/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.182459272 seconds)
    (117/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.345721365 seconds)
    (118/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.600850847 seconds)
    (119/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.403979071 seconds)
    (120/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.389627503 seconds)
    (121/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.096552473 seconds)
    (122/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.365790935 seconds)
    (123/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.332610203 seconds)
    (124/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.714588425 seconds)
    (125/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.362171509 seconds)
    (126/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.894217306 seconds)
    (127/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.351109056 seconds)
    (128/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.45549054 seconds)
    (129/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.326856506 seconds)
    (130/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.372429098 seconds)
    (131/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.341143634 seconds)
    (132/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.540625986 seconds)
    (133/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.331281974 seconds)
    (134/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.356879357 seconds)
    (135/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.198049017 seconds)
    (136/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.374601619 seconds)
    (137/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.222809111 seconds)
    (138/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.613136795 seconds)
    (139/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.391370304 seconds)
    (140/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.341217525 seconds)
    (141/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.371368652 seconds)
    (142/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.326273704 seconds)
    (143/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.051968307 seconds)
    (144/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.87924996 seconds)
    (145/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.565111056 seconds)
    (146/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.340226051 seconds)
    (147/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.7263004 seconds)
    (148/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.433821675 seconds)
    (149/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.339959851 seconds)
    (150/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.350950405 seconds)
    (151/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.75870738 seconds)
    (152/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.015351472 seconds)
    (153/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.333610737 seconds)
    (154/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.346724615 seconds)
    (155/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.335485303 seconds)
    (156/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.351074326 seconds)
    (157/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.328194532 seconds)
    (158/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.341485545 seconds)
    (159/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.446099014 seconds)
    (160/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.367363008 seconds)
    (161/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.338275393 seconds)
    (162/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.335910619 seconds)
    (163/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.365576839 seconds)
    (164/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.346019862 seconds)
    (165/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.350356861 seconds)
    (166/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.345431061 seconds)
    (167/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.390468341 seconds)
    (168/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.354835109 seconds)
    (169/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.371021173 seconds)
    (170/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.368774361 seconds)
    (171/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.351344472 seconds)
    (172/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.336634805 seconds)
    (173/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.33637173 seconds)
    (174/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.394609431 seconds)
    (175/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.33784135 seconds)
    (176/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.544842268 seconds)
    (177/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.402331344 seconds)
    (178/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.221244574 seconds)
    (179/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.292041912 seconds)
    (180/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.350875422 seconds)
    (181/286) benchmarking ("sort", Bool, true)...
    done (took 2.346108253 seconds)
    (182/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.469966319 seconds)
    (183/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.399541808 seconds)
    (184/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.403583283 seconds)
    (185/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.775430962 seconds)
    (186/286) benchmarking ("sort", Float64, false)...
    done (took 2.368183072 seconds)
    (187/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.361136074 seconds)
    (188/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.329572015 seconds)
    (189/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.357508943 seconds)
    (190/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.350738208 seconds)
    (191/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.348337314 seconds)
    (192/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.562237561 seconds)
    (193/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.36467418 seconds)
    (194/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.455991312 seconds)
    (195/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.444007997 seconds)
    (196/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.278643932 seconds)
    (197/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.449695082 seconds)
    (198/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.330727808 seconds)
    (199/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.349232316 seconds)
    (200/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.355265605 seconds)
    (201/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.33228006 seconds)
    (202/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.242074211 seconds)
    (203/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.393573983 seconds)
    (204/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.330715994 seconds)
    (205/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.352561878 seconds)
    (206/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.740897976 seconds)
    (207/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.337770708 seconds)
    (208/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.392257922 seconds)
    (209/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.370598284 seconds)
    (210/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.471372535 seconds)
    (211/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.344256824 seconds)
    (212/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.381891306 seconds)
    (213/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.573598943 seconds)
    (214/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.504179427 seconds)
    (215/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.455600218 seconds)
    (216/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.356975215 seconds)
    (217/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.37370006 seconds)
    (218/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.361040254 seconds)
    (219/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.369017522 seconds)
    (220/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.345084181 seconds)
    (221/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.410196503 seconds)
    (222/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.428177814 seconds)
    (223/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.41056887 seconds)
    (224/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.332845846 seconds)
    (225/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.384353688 seconds)
    (226/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.452531351 seconds)
    (227/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.469897862 seconds)
    (228/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.333707748 seconds)
    (229/286) benchmarking ("sort", Float32, true)...
    done (took 2.352568095 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.317700748 seconds)
    (231/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.358079052 seconds)
    (232/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.355929672 seconds)
    (233/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.581993706 seconds)
    (234/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.784015799 seconds)
    (235/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.787537252 seconds)
    (236/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.435908667 seconds)
    (237/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.274280048 seconds)
    (238/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.379988347 seconds)
    (239/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.195541583 seconds)
    (240/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.439725542 seconds)
    (241/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.332869721 seconds)
    (242/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.747285763 seconds)
    (243/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.594827792 seconds)
    (244/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.777087698 seconds)
    (245/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.259657845 seconds)
    (246/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.373621934 seconds)
    (247/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.133541893 seconds)
    (248/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.401229869 seconds)
    (249/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.720577552 seconds)
    (250/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.370498934 seconds)
    (251/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.333451672 seconds)
    (252/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.33554902 seconds)
    (253/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.382107068 seconds)
    (254/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.347653717 seconds)
    (255/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.213283197 seconds)
    (256/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.350044546 seconds)
    (257/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.35536225 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.431013734 seconds)
    (259/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.376595946 seconds)
    (260/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.352904289 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.435161636 seconds)
    (262/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.335036041 seconds)
    (263/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.433999197 seconds)
    (264/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.348151814 seconds)
    (265/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.36656117 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.458795831 seconds)
    (267/286) benchmarking ("sort", Float32, false)...
    done (took 2.348315107 seconds)
    (268/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.399986387 seconds)
    (269/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.365801661 seconds)
    (270/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.337637694 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.354637096 seconds)
    (272/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.343132513 seconds)
    (273/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.35080547 seconds)
    (274/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.361644331 seconds)
    (275/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.049350686 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.400244934 seconds)
    (277/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.368935317 seconds)
    (278/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.357643788 seconds)
    (279/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.343679286 seconds)
    (280/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.411143154 seconds)
    (281/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.040192303 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.38212216 seconds)
    (283/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.347976695 seconds)
    (284/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.467321232 seconds)
    (285/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.349124078 seconds)
    (286/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.337328644 seconds)
  done (took 573.367253399 seconds)
done (took 574.617420165 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.383533508 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.377811372 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.362305491 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.381320841 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.47262472 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.536085587 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.372390438 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.36412472 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.409235923 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.41024013 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.359814206 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.536056673 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.361881281 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.360234257 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.361769711 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.376184652 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.363543095 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.362165844 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.378840292 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.37199778 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.379066531 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.360566255 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.412755885 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.53786854 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.365834348 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.364705146 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.366546474 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.381476484 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.473846901 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.366141389 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.364963931 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.372763591 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.362083895 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.360600976 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.358436119 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.381296472 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.373431743 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.37224637 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.366395309 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.394127894 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.350912682 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.386329124 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.36364742 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.364570548 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.36416288 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.366927655 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.363735518 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.368853288 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.377516275 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.377539439 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.351077206 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.384950953 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.366979171 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.364922288 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.375487319 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.364003001 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.368092526 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.381543853 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.383819224 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.38220925 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.35453505 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.371079205 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.369141139 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.381723692 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.372434792 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.353910811 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.36783495 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.370535299 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.353592941 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.393748891 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.352884801 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.380268413 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.367604382 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.379104985 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.396968239 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.364122089 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.359769981 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.364434123 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.373778219 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.364053552 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.374918043 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.379863214 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.370838399 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.367321159 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.380827772 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.54244672 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.377390554 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.367709296 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.376263043 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.384555617 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.373936046 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.37726168 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.369895464 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.362968839 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.375794871 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.369483137 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.368899675 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.369075178 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.372165017 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.378543158 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.369820393 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.391705562 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.364542982 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.36424521 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.36634245 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.380720251 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.364512963 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.373557192 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.38906761 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.415632377 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.369743721 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.355529933 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.371483518 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.385791239 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.37781379 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.371611597 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.36264021 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.374771611 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.373463584 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.382583505 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.369093419 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.366513055 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.386391921 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.369790093 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.365803795 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.367992334 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.370908203 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.383133244 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.488722203 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.379560792 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.400431009 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.367738209 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.372524903 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.403751118 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.385820543 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.400208152 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.373068841 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.38572246 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.384554107 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.367391956 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.380049285 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.380439545 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.370864555 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.37439721 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.366460764 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.402765602 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.383683639 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.384289427 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.390075774 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.491484574 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.365970678 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.374970487 seconds)
done (took 227.191171836 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.429822734 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.365667127 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.452018029 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.367721031 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.468160554 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.466597761 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.365091706 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.365952148 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.365695807 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.741961401 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.365977764 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.366245897 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.366560244 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.365383297 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.447754122 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.36890131 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.36519281 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.705577028 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.367972128 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.43869715 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.365549804 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.366848298 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.368911968 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.747131927 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.365208169 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.363714059 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.437701685 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.37019665 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.713672142 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.361878213 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.367022194 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.713621876 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.45872661 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.386937982 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.379986836 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.376745644 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.47083131 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.388657615 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.452978425 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.451916609 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.455300321 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.407383359 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.36392698 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.367596635 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.372287607 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.370072555 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.369467534 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.396233435 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.367753107 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.368725248 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.709054861 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.379214742 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.377846721 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.369957397 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.369863538 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.390535901 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.368428737 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.371660176 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.459673147 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.37123853 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.432543026 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.749588437 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.745667351 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.37194762 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.367713277 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.369379689 seconds)
  done (took 106.777379859 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.435673029 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.444742172 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.486957098 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.371974789 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.423154952 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.494371114 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.371807719 seconds)
  done (took 11.308332187 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.378703404 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.373278067 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.421902895 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.422120676 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.370749058 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.583978856 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.373071549 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.383874138 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.370470225 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.448990479 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.373185979 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.374123274 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.380028101 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.369265987 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.419684732 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.383942298 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.487575464 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.374586674 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.373608851 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.524982536 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.372528437 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.380046427 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.447890498 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.385403901 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.374897737 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.380454522 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.309669049 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.374559235 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.372960168 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.374522875 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.370929057 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.472990607 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.373001382 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.373284881 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.371201172 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.533431483 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.373862936 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.371441007 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.375076839 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.374508162 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.375867412 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.374523027 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.375121688 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.372095028 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.375255874 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.398180545 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.374655781 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.375722009 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.37625278 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.375335285 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.447277965 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.375347867 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.373771895 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.373243717 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.454571623 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.383676091 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.374810461 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.372841228 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.376667333 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.37353007 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.525928614 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.422352861 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.374393243 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.423685229 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.376500643 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.378685703 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.376386995 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.376282556 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.468286243 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.377084123 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.423007822 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.374554911 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.59590229 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.399335784 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.379048471 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.37762269 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.378322837 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.376896499 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.373559986 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.38212569 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.374646499 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.377005626 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.382001033 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.3745425 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.3748948 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.560406969 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.533600364 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.375018337 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.389470835 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.383668702 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.374994571 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.450802269 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.377705662 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.376466641 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.429188157 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.492706319 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.45375363 seconds)
  done (took 142.155044089 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.383832152 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.385892077 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.381341784 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.400762068 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.378011276 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.37727045 seconds)
  done (took 9.593063362 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.381570966 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.380456275 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.380127148 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.378177987 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.380317908 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.378616423 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.38025884 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.381347829 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.3828678 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.380569484 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.379664313 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.380298968 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.381178543 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.380074794 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.380543022 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.37984152 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.380713942 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.377273735 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.380227481 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.379725579 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.378195881 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.379295828 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.379593885 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.381300649 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.385394372 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.380872043 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.387582099 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.381022892 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.38136294 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.388390227 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.382285543 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.382275013 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.382145478 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.387712197 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.385662628 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.381314922 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.386701412 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.382585988 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.379591508 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.380948842 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.384152222 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.380631578 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.382251843 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.384434019 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.384201254 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.385875817 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.388055245 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.388220429 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.382099475 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.384721956 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.384275796 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.382516983 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.382275102 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.385242252 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.383281818 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.405099723 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.387875371 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.383221325 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.382263138 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.385062633 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.385072322 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.383260834 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.38554679 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.387263147 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.382705587 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.383654215 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.383850391 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.387489993 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.383060719 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.384476093 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.385456517 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.381151369 seconds)
  done (took 101.865481488 seconds)
done (took 372.974285521 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.858315151 seconds)
  done (took 4.149362232 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.54104721 seconds)
  done (took 3.83384057 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.716432263 seconds)
  done (took 25.015753146 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.397625869 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.436668352 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.391337501 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.376267668 seconds)
  done (took 10.894158539 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.676014852 seconds)
  done (took 3.966819156 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.376405256 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.393974911 seconds)
  done (took 6.063666731 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.75436194 seconds)
  done (took 4.046780409 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.815882095 seconds)
  done (took 4.113457416 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.402771365 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.392826642 seconds)
  done (took 6.095968035 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.379371221 seconds)
  done (took 3.671036519 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.67506299 seconds)
  done (took 17.968328414 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.388548209 seconds)
  done (took 3.684572189 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.423835032 seconds)
  done (took 3.71663445 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.336079698 seconds)
  done (took 6.629635385 seconds)
done (took 105.142013472 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.37781432 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.386901546 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.386695297 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.386341883 seconds)
  done (took 10.829991187 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.419539443 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.419061592 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.421071629 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.431722572 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.422034356 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.419403662 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.411040124 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.412125441 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.431218279 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.423265216 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.421838579 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.420721505 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.423136177 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.412532321 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.421555758 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.421994322 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.431146586 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.423009612 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.412786421 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.4228292 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.388615344 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.431987679 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.42279724 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.387164437 seconds)
  done (took 35.347440481 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.889114684 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.460320784 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.541528393 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.438279271 seconds)
  done (took 7.623919005 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.438326695 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.440559312 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.456218779 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.492303054 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.55650555 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.449847266 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.414509344 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.409069117 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.394923057 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.442236078 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.516456896 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.456289096 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.525838343 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.388545554 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.573821641 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.389168328 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.38701096 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.439685235 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.492278455 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.506057611 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.389206309 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.439677774 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.444979372 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.458860639 seconds)
  done (took 36.19697598 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.388468099 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.40707529 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.387462728 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.388063265 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.397537909 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.388547345 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.389503007 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.390709149 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.38896625 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.394746794 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.388795435 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.400594465 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.38781593 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.389491252 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.394986283 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.390594393 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.395027484 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.389801058 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.389590894 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.395681015 seconds)
  done (took 29.140526299 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.382409131 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.38244989 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.734162752 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.639900698 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.383435313 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.380589344 seconds)
  done (took 14.200012335 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.466262865 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.623112053 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.39828819 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.784622581 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.862302233 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.39170161 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.390501196 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.665144572 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.02861208 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.01594243 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.461495572 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.464595386 seconds)
  done (took 20.852366411 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.388966004 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.389958994 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.391509498 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.408672044 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.452351318 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.401976968 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.398115497 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.382644285 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.459593937 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.462115482 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.40171714 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.454172974 seconds)
  done (took 22.290675934 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473042736 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.384856555 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.402172715 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.441287213 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386740723 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.598220545 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.444120022 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.140888669 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.411504755 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663130746 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38776122 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495949292 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.646523621 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398477403 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.396454325 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.381752145 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.623327029 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939652279 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39773903 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394394034 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422635961 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.39371858 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.396588749 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.634679392 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.601526896 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389215893 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.650138357 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.388970416 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.705378342 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.410998327 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400300834 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390108709 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.664479512 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089408591 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.506311644 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.624741392 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405521418 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.399507957 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.389388938 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.402529295 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408398252 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.391387279 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401256437 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390653641 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.390905015 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39290713 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.15683184 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.417057745 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.388568876 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.390810318 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.690716828 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495175511 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.396215011 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.390711214 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398053417 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391499984 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.39607189 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.489845203 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963860334 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398087097 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404637241 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.398915023 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.397656581 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40481818 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.100572904 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.403150995 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.397098944 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.396436403 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391859033 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.396447552 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.417411498 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392416585 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.418410355 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39269505 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.217143459 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.402447669 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394745494 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00876348 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405829708 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.40057487 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.623147505 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392620372 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392762515 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.392806677 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.394577288 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.190138087 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411361177 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.378343486 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415045082 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.149568577 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.651802456 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410975648 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419675636 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.620436522 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.379436859 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394629254 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.40906712 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396038234 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417464846 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.149795475 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416137935 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.400141854 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.657629284 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.608419182 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397875913 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.406799635 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924265698 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422401691 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.419248156 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.395140357 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.642786805 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.048644558 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.419503792 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398374921 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423321777 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.395662046 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.229000544 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417603637 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.407001779 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.39585726 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68043417 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.279097966 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405326923 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465399208 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401123459 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.396013755 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40588021 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405314928 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.396782538 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.624640801 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.421944222 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.415346374 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.397584498 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397517175 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.403394658 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40543272 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.398347602 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.622188475 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403147922 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.680459373 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396720306 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398697759 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397037312 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.621372989 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.40787963 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.412210542 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.661012589 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398554025 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.407998412 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.417365658 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417747513 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49826883 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420846928 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.40970897 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.665667627 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.402706587 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.403937386 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409057315 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.409901462 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407051213 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.404191631 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415054443 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.057247533 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380052059 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.406967191 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.29465248 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.413439341 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468849092 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.405393536 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.63748102 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.406331135 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407759056 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.414158305 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.403016942 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.631625866 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.410181916 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.402805499 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.490608882 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.919450047 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.075117943 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.422982122 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.399855511 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.397706969 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.398764823 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400783601 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399971854 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.400978767 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.638319621 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.415794083 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.418345447 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.066313168 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410494633 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.406806791 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.415066436 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.415470449 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.407909794 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402705272 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.40716411 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424894976 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.417700448 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.421144722 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546897067 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.415766813 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.402274074 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.917953896 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.407950089 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.402322388 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.401468399 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435659904 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.411844216 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.27398069 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.66376755 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.411355104 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.699959634 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.406069406 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.427327531 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.401622038 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402349742 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414489785 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.427795829 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420301508 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.414964629 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.410248811 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412566549 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974945654 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.20168232 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.994341958 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404403256 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.410185664 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.413383514 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.165719682 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424360429 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404896125 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659445554 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.1634873 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424240059 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926348027 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.440543088 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.268218327 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.703081927 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.637527999 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406350074 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.426008662 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.703772564 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.618683509 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439916873 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.413161851 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414074455 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.389711573 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.008998529 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.443737468 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.485667599 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.16811378 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426838633 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.407618682 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.427277193 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.419247708 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856436268 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.426187573 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405864551 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.422539919 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.414314192 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268577449 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.415548053 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406615989 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082546878 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.413747015 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.93461356 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426770068 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.648095803 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.419322572 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.411987065 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.403390799 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.422578269 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.673020326 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.697684031 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40758388 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.41268908 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.022683482 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.274344091 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.413405846 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407591871 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.221507267 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410573578 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.732498106 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.411711362 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.429051654 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420187049 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.409358798 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409438535 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.406775419 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.415878404 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380776718 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943803076 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.414156843 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421401253 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.420943991 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.26456531 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.668054613 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.423808577 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.067010574 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.646366009 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.424808808 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442449383 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.413189751 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415195816 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.396635743 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.409512826 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.645569091 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419619793 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.635531133 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.409414302 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.396396276 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.452175026 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.624008165 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.410204537 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.411845288 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.676980541 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.408734156 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.410568589 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.217418368 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438039821 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.411737983 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414132622 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.431414833 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441713742 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48119484 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.65202091 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.42367631 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.422118644 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861522438 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433106675 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413758101 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.425999688 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505987481 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412760647 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.419111861 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.212866298 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.076795828 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.281957853 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.088958768 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.721808243 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.414083633 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415745041 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413985978 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.561586208 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413415663 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.687228155 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413163875 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.411822024 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443455802 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419847123 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418084669 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.634154759 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.688175394 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412176388 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411849167 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422470554 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.412097858 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.42441519 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.62691497 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951369174 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012018253 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415975644 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.412677275 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.185532465 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.708045522 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414349556 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413766538 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413049549 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.41733226 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.463310827 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.421596354 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42555257 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.561730723 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.704780094 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.120052882 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.44542758 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.442087709 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.188553501 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.432187692 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.681430425 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41191742 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.666643924 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.081091579 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.221298271 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.689822616 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486169984 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.65743254 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.414188551 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.56411364 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.428676219 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.425097636 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415730503 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.264701338 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.41366081 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.425327008 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.087901503 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.690639112 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.419577239 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.424700393 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447740344 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.426576581 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.641501424 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.223954454 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.650988767 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.427372588 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.424714892 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.417346678 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.087354082 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.726080207 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419262142 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.420962177 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.682364992 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.655439493 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.443994934 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.870033627 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.413897037 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017811345 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.3936991 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43950407 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427153989 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.227704524 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.098846073 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.423819612 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97296007 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.420873953 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430014661 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.7020457 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.423166732 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.422286921 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.696455203 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.421768629 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.421368613 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.670542155 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.083731483 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.290665518 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.430264131 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447959165 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.447826095 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420475704 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425048458 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427749519 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.430789482 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.888193923 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.440492182 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419245068 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.430750731 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.41686485 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461796248 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.425778969 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420692219 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.42588643 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.435710021 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.419633518 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.431181177 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.529443149 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.028819904 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.443698208 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.094191125 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.750054709 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.677726011 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.420143661 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.414137492 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.42605897 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42127245 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421559665 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421934815 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.420696053 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029715925 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.438340793 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.440304014 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.425130923 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.63738841 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.633488448 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.428133625 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.665055552 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.439222572 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.444281767 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.406341337 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422266537 seconds)
  done (took 992.29156693 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.477580204 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.473617484 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.464616308 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.476474949 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.448249521 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.493875617 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.46143899 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.522015309 seconds)
  done (took 21.150304754 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.430112317 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.439604343 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.421672643 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.431797427 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.436067143 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.935964826 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.456330613 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.431734901 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.433627873 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.423026661 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.436815485 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.124512606 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.431709776 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.421995493 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.43620597 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.431700658 seconds)
  done (took 33.466841496 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.632827066 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.672110519 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.782221368 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.480571632 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.461482436 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.430789015 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.779630864 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.445923081 seconds)
  done (took 28.019995526 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.433841385 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.43471515 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.434294802 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.434705682 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.435111295 seconds)
  done (took 8.507352933 seconds)
done (took 1261.211667329 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.427676311 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.430829789 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.429594437 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.429113004 seconds)
  done (took 7.051050207 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.410295103 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.410330731 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.411788155 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.428070828 seconds)
  done (took 9.995334154 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.217103653 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.11582729 seconds)
  done (took 5.667517141 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.423762366 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.190456069 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.162690936 seconds)
  done (took 8.112683137 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.734940574 seconds)
  done (took 3.071000859 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.841632646 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.808015391 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.619644026 seconds)
  done (took 6.605844916 seconds)
done (took 41.838054629 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.425822858 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.680026625 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.581982426 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.438867056 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.589931824 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.581077395 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.19234688 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.429220207 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.424640762 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.425696504 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.457837962 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.589723737 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.174930926 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.681678708 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.175854476 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.682143781 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.587855046 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.434346781 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.437938258 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.425636322 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.193597789 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.440498557 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.42609842 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.443670054 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.588186984 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.571698887 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.441804321 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.68207495 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.427422859 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.445062142 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.573073176 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.426795832 seconds)
  done (took 84.415541551 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.428012301 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.427846021 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.426585933 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.445484192 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.426692084 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.428250185 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.45588874 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.427054946 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.435469809 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.435836224 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.427032432 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.426710481 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.446495218 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.431949773 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.426425639 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.451391865 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.427597136 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.427769924 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.427408616 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.442544119 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.438837013 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.437585537 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.426984759 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.454158606 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.451748029 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.428046844 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.445940355 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.427964288 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.437959301 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.427721321 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.447850983 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.446058587 seconds)
  done (took 79.282993175 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.443159475 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.430371134 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.429498708 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.428296976 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.437879702 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.428779837 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.429698001 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.429608828 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.430301312 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.464685787 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.429344641 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.437676605 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.431449085 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.44456733 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.432537628 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.42915653 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.429425848 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.455637759 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.451235492 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.429349175 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.431059898 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.430793753 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.444124264 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.431150142 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.438437657 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.442139024 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.430792446 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.430948353 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.430447505 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.447202094 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.458603242 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.462513211 seconds)
  done (took 79.342018076 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.627836666 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.437542927 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.438417561 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.374344135 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.439111748 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.437211982 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.432511269 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.629668705 seconds)
  done (took 15.158431074 seconds)
done (took 259.535389979 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.430791602 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.440309379 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.6758606 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.459836871 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.429934192 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.46806254 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.459064739 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.651337867 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.433928429 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.64446848 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.434810971 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.457980811 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.433493416 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.45823628 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.734004531 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.567294888 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.415348819 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.433202092 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.806026391 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.451383343 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.726961613 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.450945163 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.652789086 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.434354384 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.441138869 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.446501453 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.435009386 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.413858339 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.461700042 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.813272847 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.450417201 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.454478138 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.517540602 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.519607781 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.573148991 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.566331309 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.452050857 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.515869632 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.650755787 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.446942743 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.434280857 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.262651904 seconds)
  done (took 85.74910335 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.440358517 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.549679813 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.442017643 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.442329968 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.442058317 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.546153414 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.525082227 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.443676095 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.442350203 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.43984802 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.441456931 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.442560732 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.442571079 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.443784592 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.442991033 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.442656844 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.440894707 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.444203925 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.443912927 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.478114817 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.549339251 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.44770185 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.446654582 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.446436863 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.528628027 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.545708238 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.441598672 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.435007704 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.478253174 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.443935116 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.445588544 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.482909352 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.444533642 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.44449692 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.55036916 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.529303187 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.44616 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.441183016 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.547306392 seconds)
  done (took 58.619413728 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.445090229 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.721465931 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.918788011 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.460110522 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.444293778 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.450677078 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.535666058 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.456280405 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.448693518 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.449478118 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.624122372 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.449564189 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.481457036 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.937232255 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.457271492 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.447647926 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.445637994 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.44686145 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.728391937 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.463722451 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.556829481 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.452914378 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.53453275 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.464195642 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.470933341 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.44622709 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.452041543 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.053444287 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.452829416 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.624347581 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.346527053 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.541476622 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.994198287 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.93406943 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.355708544 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.458067851 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.447884814 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.630792828 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.450487672 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.447572576 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.537552156 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.45610463 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.918477268 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.169132516 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.478775491 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.448120145 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.072363584 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.628695827 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.733202112 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.465344941 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.953628073 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.459769629 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.451347106 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.450097401 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.732614728 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.465325815 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.448695457 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.111804999 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.481624894 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.539279169 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.459582796 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.449458318 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.732502504 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.457164356 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.721225608 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.461174263 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.457174991 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.472105094 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.923523376 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.460910469 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.177780961 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.477851167 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.450309967 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.62371173 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.727990576 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.118134046 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.454606799 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.738940851 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.01224457 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.546935791 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.463396418 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.038328614 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.544617907 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.463471288 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.453271217 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.452447807 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.451360185 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.496453376 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.538230175 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.121584583 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.183677189 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.141932829 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.56887879 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.473393113 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.452229291 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.104990012 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.480167548 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.452434261 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.923262547 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.193258806 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.490737057 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.46044753 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.182534271 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.482759081 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.542745957 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.466738081 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.931967487 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.462777872 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.500478764 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.453183292 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.457863889 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.478075528 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.543129592 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.464298697 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.454615822 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.170857073 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.666688874 seconds)
  done (took 192.413051459 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.461713122 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.446978597 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.458913296 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.446055349 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.446304641 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.460269261 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.445264254 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.447397257 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.452504451 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.447034406 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.447678711 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.447323686 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.447667604 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.455058129 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.477342813 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.453518219 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.447100495 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.447340567 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.459952327 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.44658028 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.446743014 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.476737652 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.458135403 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.447947427 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.446745034 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.448450367 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.451275875 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.469405669 seconds)
  done (took 66.044838953 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.454885763 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.114876475 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.46590758 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.605478142 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.484370059 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.452910902 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.605650791 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.525906732 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.456407008 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.452742289 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.453115192 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.806917709 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.465470011 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.054035545 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.684642444 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.610227102 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.052970467 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.485356291 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.453201274 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.45597319 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.60738668 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.472628075 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.79105112 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.080562393 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.457701504 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.080879812 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.447691131 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.456949114 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.456667779 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.0825419 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.454811812 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.794662883 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.542873084 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.531515104 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.084245661 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.056279739 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.088895322 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.632293259 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.456791327 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.454732343 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.455040733 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.446154305 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.085024218 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.458532357 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.458127248 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.0808175 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.479244194 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.458649274 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.462394189 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.455960151 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.522973996 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.523847879 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.796679814 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.091539265 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.543686132 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.471431356 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.602973745 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.830676836 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.463344866 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.030912204 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.446609509 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.091082564 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.48137741 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.446531356 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.458673262 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.464306839 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.624327491 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.605011288 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.064793461 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.488181742 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.066486895 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.65339146 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.457089646 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.458438437 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.460760107 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.088243828 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.065635379 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.653720993 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.643014105 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.68133209 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.459905589 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.45877595 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.450324542 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.545151967 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.461689656 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.092924113 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.084421672 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.490731856 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.461650419 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.461918497 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.461741975 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.661390862 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.095702127 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.547806193 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.040970598 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.822140665 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.801315218 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.463074344 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.527008642 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.478564598 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.80325362 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.462627721 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.525686651 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.902676139 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.810474965 seconds)
  done (took 175.022579838 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.732239869 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.501609391 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.559773219 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.636912845 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.097450951 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.069274877 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.462363266 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.585245249 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.582108007 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.745615418 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.477352898 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.552152048 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.692612858 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.542942863 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.232329526 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.546921537 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.571940175 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.640480221 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.625296577 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.472229148 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.135715732 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.778373811 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.667753284 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.478936556 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.593116158 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.326814725 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.079544857 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.995529583 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.654572876 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.468418499 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.031236853 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.46729798 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.449850004 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.179017651 seconds)
  done (took 67.997784258 seconds)
done (took 647.188436843 seconds)
SAVING RESULT...
DONE!
