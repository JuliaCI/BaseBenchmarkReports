cset: moving following pidspec: 25553
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.307957365 seconds)
loading group "string"... done (took 0.505097024 seconds)
loading group "linalg"... done (took 8.351849644 seconds)
loading group "parallel"... done (took 0.172297017 seconds)
loading group "find"... done (took 1.365948346 seconds)
loading group "tuple"... done (took 1.957549398 seconds)
loading group "dates"... done (took 1.332891718 seconds)
loading group "micro"... done (took 0.211662907 seconds)
loading group "io"... done (took 0.553948433 seconds)
loading group "scalar"... done (took 41.855358822 seconds)
loading group "sparse"... done (took 12.665199086 seconds)
loading group "broadcast"... done (took 1.104917106 seconds)
loading group "union"... done (took 14.131353396 seconds)
loading group "simd"... done (took 4.837451444 seconds)
loading group "random"... done (took 9.645325582 seconds)
loading group "problem"... done (took 2.052478102 seconds)
loading group "array"... done (took 23.183502862 seconds)
loading group "misc"... done (took 1.068938588 seconds)
loading group "sort"... done (took 3.482676354 seconds)
loading group "collection"... done (took 20.605510383 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.516700687 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.113918896 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.1424809 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.146837832 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.195770001 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.136676842 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.136862401 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.13422673 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.990718335 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.181531124 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137593382 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.492867889 seconds)
done (took 5.091712241 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.214236063 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.079923265 seconds)
    (2/2) benchmarking "String"...
    done (took 0.091965266 seconds)
  done (took 0.867345781 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.08925805 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.139942261 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.088033892 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.073558046 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.072684729 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.090980538 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.073368712 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.090352203 seconds)
  done (took 1.327320771 seconds)
done (took 3.2015275 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.757024451 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.820563902 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.502529075 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.112259233 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.148507047 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123860323 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.284215293 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.15783178 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.117767287 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.081403782 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.170310884 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.358298131 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.460760475 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.927518511 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.079923915 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.116366529 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.076149756 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.689095432 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.074020434 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.111889435 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.499807601 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.104236218 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.096615274 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.137844112 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.204238339 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.111988247 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.167387813 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.08377392 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.682127746 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.09710093 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.174795141 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.077962614 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.163984516 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.191062007 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.074212652 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.104745529 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.679102171 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.184281314 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.108399485 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.090323906 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.672947077 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.075205275 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.186260642 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.096658593 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.07968025 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.181486257 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.108349354 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.089863448 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.081880447 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.092511709 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.15429396 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.469266023 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.102731517 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.135435145 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.091848952 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.687837259 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.088601198 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.149180419 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.120644933 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.102467166 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.07457149 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.082972606 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.176868685 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.090994985 seconds)
  done (took 19.133439167 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.11068761 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133768219 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.073151982 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.150368653 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.131642852 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.076509886 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.095377533 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.074438427 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.118844351 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.176527692 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.111744619 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.136920863 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.088239352 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.076526083 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.112296838 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.227839211 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.116212554 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.114300303 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.078665276 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.10071857 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.117464644 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.107673348 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.087151331 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.103875362 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.163536057 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.200100765 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.106403133 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12286476 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.075099084 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.107287148 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.138697918 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.151962417 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.073430492 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.072952436 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172341471 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.118944818 seconds)
  done (took 4.939087559 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.184604722 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.104017286 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.16654385 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.159382592 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.139096182 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.150495667 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107737368 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.25538582 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.110236366 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.16076338 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124028508 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.110871156 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075322241 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.091844574 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.074637011 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.658762777 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.160422463 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.109437826 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.110972737 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.078052912 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.095550596 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.376308036 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.080949881 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.072517241 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096429335 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066777906 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.154969193 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.123760023 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075666286 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.205722146 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.095918598 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.096553627 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11128428 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.212724478 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.102977783 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124437395 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.128735125 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075848612 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.089060661 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.173032578 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080731897 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.073413283 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.118394532 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129393463 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113964583 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.089420487 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.075428549 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.21672799 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.073247224 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.087955793 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.01785627 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.17318521 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.086371955 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.071933121 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.321271605 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.110520339 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073894659 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.089962419 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.279120663 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.122388624 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.090806628 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.074309508 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074674107 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.093256205 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.389170303 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.073672816 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.078856511 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.089993702 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.082926328 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.091256093 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074402747 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09784878 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080266031 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.111211197 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.07308601 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.092770232 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.074242437 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.09001558 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.075542573 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.110429609 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.079359372 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.091515647 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.142808645 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.073379376 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.109355874 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.1199175 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.076477125 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.071932843 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126892889 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093022847 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.075091332 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.128974242 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.075482161 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.11176665 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.071676267 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.091818374 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.136420153 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.074698027 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.071300147 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.191000737 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.072135923 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.118487656 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.078549941 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123396706 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.10454807 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074789409 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097009035 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.072586148 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.088892889 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.142318287 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.074005714 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.094151748 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.074290717 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.104630163 seconds)
  done (took 22.284585276 seconds)
done (took 47.058674964 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.348142852 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.1052409 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.10419361 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104379089 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.103093274 seconds)
  done (took 1.536194998 seconds)
done (took 2.28174527 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.306848229 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.16790411 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.089287185 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.163142752 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.070846678 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.185369085 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.155251747 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.088593215 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.196637111 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.071072202 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.158254807 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088322455 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071113693 seconds)
  done (took 2.595650854 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087805796 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112908878 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.076640808 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086136829 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088027254 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086911473 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.101500006 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106649176 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101213164 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081098969 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087186509 seconds)
  done (took 1.76583926 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086471197 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.093791973 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.092977987 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08594679 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086985063 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085864177 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.102531334 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097405513 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103346653 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081173312 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088237414 seconds)
  done (took 1.750549682 seconds)
done (took 6.858113244 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.062065602 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.468739445 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.116676073 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.165022855 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.318939888 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.209230475 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.591030038 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.130257852 seconds)
  done (took 15.986780181 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.123014653 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.094398207 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.074617033 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.092939744 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.075299138 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.094942118 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.077652809 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.076203147 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.090337718 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.075439681 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.091550767 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.075065478 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.09111383 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.078078914 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.092814146 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.077114124 seconds)
  done (took 2.202680008 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.110553113 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.109260858 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.09766316 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.082769307 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.097054894 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.078841209 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.098541803 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.080367788 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.094095493 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.078911295 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.099901539 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.08223141 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.097997563 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.077560754 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.097392288 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.084035999 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.094749525 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.079969007 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.097771298 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.098285224 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.082623036 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095289067 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.0804985 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.098585662 seconds)
  done (took 3.059277254 seconds)
done (took 21.994387694 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.161636079 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079496679 seconds)
  done (took 1.00227868 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096518213 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113381305 seconds)
  done (took 0.978685876 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.1024122 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.092457882 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.128297008 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.092241722 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.093389543 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.075332852 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.124688372 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.093152345 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.076490994 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.076085806 seconds)
  done (took 1.722403337 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081446242 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080492192 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.10124636 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.112169872 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.08667859 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094879094 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.080611513 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.095895872 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.081875476 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.091396531 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.083213468 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.108320122 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.082280768 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.111013716 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.097518394 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082052035 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.102490028 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.079223391 seconds)
  done (took 2.419826355 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.077137872 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.077850109 seconds)
  done (took 0.922790037 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.079350137 seconds)
    (2/7) benchmarking "second"...
    done (took 0.073996085 seconds)
    (3/7) benchmarking "month"...
    done (took 0.094731654 seconds)
    (4/7) benchmarking "year"...
    done (took 0.094516585 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.075028971 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.073570827 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.090415541 seconds)
  done (took 1.349656287 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.438959394 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.120390634 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.279783172 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.079855319 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.115329927 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.318191054 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.072606282 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.098678056 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.079748587 seconds)
  done (took 2.410628189 seconds)
done (took 11.569124742 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.088212423 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.125004908 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.455389013 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.09637466 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.090327514 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.138894414 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.247990951 seconds)
done (took 2.016318412 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.327578315 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.11063633 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.069240119 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.090121909 seconds)
  done (took 1.365752405 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.073436682 seconds)
    (2/2) benchmarking "read"...
    done (took 0.0770506 seconds)
  done (took 0.924696406 seconds)
done (took 3.065302665 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074253547 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.122661142 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.07312587 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.073096536 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.089305002 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.074582255 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.089598643 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.070659396 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.073149783 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.092012938 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.073371944 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.089777629 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073704377 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071024009 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08757878 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073999041 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.08990585 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07337928 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.194714742 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.08900718 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.073255673 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089939887 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.071826841 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.072085306 seconds)
  done (took 2.861029007 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099997123 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.094066578 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.080936058 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.098717352 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.080456348 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.099428701 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.081891957 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.093167232 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.081180328 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.095537373 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079484362 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.097044936 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.076968898 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.096019269 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076575075 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.096466781 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.07912047 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091197376 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07666723 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.095653994 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.079129094 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092048146 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.077423333 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096576246 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.077620914 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095440656 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.07569715 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.091549415 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079837024 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.095034848 seconds)
  done (took 3.408870862 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.07917552 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.070669819 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.089944341 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.078218326 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.08843728 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.076043639 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.070655112 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.090036399 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.075569225 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.088478135 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.076651457 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.071313788 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.089014917 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.075671968 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.09404237 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.074661673 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.101724357 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.07230619 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.071830881 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.094044033 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.074178628 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.089015793 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.074652164 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.071096509 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.089380167 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.071488113 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.089118188 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.071942031 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.071868032 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.090277142 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.07515933 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.093002881 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.071922893 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.07733808 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.09285137 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.071926721 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.093543624 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.073113608 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.077088116 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.090706039 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.073037668 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.090434026 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.073080392 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.080334421 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.095222141 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.075045196 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.091171772 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.078056104 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.077478164 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097433639 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.072014797 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.090970346 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.078134505 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.093694206 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.075173757 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.07079175 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.089838477 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.071834131 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.092927351 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.071553728 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.07100257 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.088455698 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.074425653 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.089740569 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.087685158 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.078398857 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.088371246 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.076425834 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.093375348 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.074008911 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.094198895 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.08578108 seconds)
  done (took 6.656717539 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.0769984 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.099775254 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.073385616 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.07406429 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088883554 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071792187 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097126073 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072606917 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091633876 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.089379521 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089938705 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073493565 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073994685 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.091850758 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07229159 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.0911429 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.081449321 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088107221 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.072120595 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.092445514 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0728572 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.095246582 seconds)
  done (took 2.614594295 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.213884318 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09955331 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.133719195 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.09054717 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.10879 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108128349 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.078685968 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098120375 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078964142 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099446832 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081775426 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095948654 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108858011 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081919199 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098752148 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.082892438 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096455334 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083583647 seconds)
  done (took 2.621709896 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.086378389 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.092332598 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.09819954 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092467612 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.074284102 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.094396686 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080554266 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107986359 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.078905465 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.091950412 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.08511526 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095318853 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.077205288 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09189127 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076728895 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074910936 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.094737453 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075118703 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101613676 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099044536 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.080705617 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102932749 seconds)
  done (took 2.74031568 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091794212 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094529672 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.094974715 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096421419 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.073892021 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.094071209 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.08169503 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.092197255 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.083545181 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.093297905 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07460754 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.075898306 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.0986521 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092311838 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.081395363 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09264478 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076858116 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074264922 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093570493 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.073480576 seconds)
  done (took 2.516203172 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114592082 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106766177 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.089142215 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117724295 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.088912343 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.10652452 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117477372 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.092674027 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105760902 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.101544365 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106034254 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089407448 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117204302 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113930823 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089167142 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117134955 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099689399 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11698165 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106615847 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.089813276 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.118657543 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089044246 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.117377651 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106126232 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.088759834 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.106340508 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08937128 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113845455 seconds)
  done (took 3.708066629 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075155599 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074135075 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.089981039 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.072574605 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.072051508 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.090508705 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.072267003 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.090435996 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074699121 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07210146 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.091334021 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.0745782 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092463642 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.074019401 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074150118 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.092013272 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074700233 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.089802358 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072209484 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072682166 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.091513213 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074783848 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.092153513 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07253658 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071566175 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.09195865 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072818389 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090081651 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074589904 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072183453 seconds)
  done (took 3.186359425 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.082528775 seconds)
    (2/2) benchmarking "in"...
    done (took 0.098313336 seconds)
  done (took 0.972130355 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.072813847 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109236427 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.072976354 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07852752 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097526127 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.074890245 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.10304535 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080000874 seconds)
  done (took 1.476135175 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.093047573 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.111768033 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.081095161 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.104803486 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.09283657 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.109221545 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.136228412 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.098900413 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.081081731 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.091893847 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.091626954 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.092730209 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.080783078 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.076238272 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.099667515 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.082212411 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.093776989 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.086493052 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.100734452 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.077394392 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099519604 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.087520298 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095391561 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.082834328 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.094643992 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.086924777 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.104075218 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.086131704 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097070425 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.085319167 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.08049908 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.087117438 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.079358926 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.09928128 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.075816206 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.110191583 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.088522947 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.097147557 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.083838336 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100500087 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085007514 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.092645205 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.081031422 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.100071708 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085655384 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.080362017 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.099623263 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.073505769 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.091232374 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.07840758 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.091662786 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.076139813 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.070379844 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102268935 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.080038988 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107511018 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.078115307 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.095276914 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.078573196 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.0972423 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.081825493 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.096445977 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.078425079 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.096874933 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08346921 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.080917769 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.102147648 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.073885673 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.087993418 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.076485325 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.102739254 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.098820934 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.103324571 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.081736665 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100310894 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.07610373 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.097405111 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.081882349 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.101438179 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.085453284 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.098255711 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08291275 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.101627151 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.075957228 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.078246275 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.100642363 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.078205066 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.096876857 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.073219479 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.109895889 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.077500714 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.09541106 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.072778601 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.103122221 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.079229504 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.079591544 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.091909805 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.083350293 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.08772894 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.081338009 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100335955 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.076738875 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.104712883 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082536494 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100841058 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.083765714 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.08612625 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09504398 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.078794109 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.090639858 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.081992177 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.096195718 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.082809776 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.069448001 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.097739175 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.078229117 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.099559379 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.08424549 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.096630926 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.081221567 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.102842069 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.083734736 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.096637456 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.072467883 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.097677546 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.080601987 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104182125 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.085373037 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.079443934 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.09287369 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.074726479 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.099621881 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.081282306 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.099670569 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.081598771 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.098380417 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.070687759 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.077033119 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.099065052 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.084253798 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.094233079 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.076178554 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.100235787 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.076781058 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.096927526 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.082205742 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.078246526 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.093282852 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.082443605 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.096717064 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.075429513 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105316459 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.079028226 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.096166905 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.080281191 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105014545 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.078009633 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.10081415 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.078387659 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.080894764 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099784352 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.075370034 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.094736621 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.078515187 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.106089301 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.07831855 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.092545926 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.073280042 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.082419389 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.092153561 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.07997788 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.093552412 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.078290018 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.100763338 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.077770003 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.078990813 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.095108442 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.091183384 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107744482 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.081714767 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.101232514 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.08880424 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.098797265 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.078454287 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.098591673 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.082714548 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.100484298 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.084384635 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.100226142 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.081978441 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.097709494 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.072864004 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.082595199 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.102994275 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.076594826 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.095951732 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.076144602 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.099262833 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.083201494 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.080959238 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.100268446 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.078733333 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095708737 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085930535 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.097724854 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.08021174 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.094142168 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.079843802 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.103867674 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.083401279 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083140537 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.104079384 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080056534 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.093024778 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085396825 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095937732 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.082552249 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.094316665 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.073937687 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.092943242 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.08196855 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.079414 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.098002021 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.07114638 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.101954924 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.084615713 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.095738808 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.075774061 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.099273335 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.085882154 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.078071148 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09920566 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.080220239 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.101671919 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091221367 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.094609053 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.079696399 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.113530205 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.081502447 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.089588427 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.082787438 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.097804478 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.076538685 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.079565202 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.096940313 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.079685511 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101901386 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.081329702 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.088427852 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.079117543 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.079091774 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.093963165 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.075479199 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.10223477 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.080661126 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.097462553 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.086630871 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10147634 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.08194353 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.099463852 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.08043585 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101021557 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.083202827 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.098941006 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.082108195 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.078615247 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.094825375 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.078791727 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.094989977 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.076954618 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.097365102 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.080579598 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.076182727 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.101230388 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.079799762 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095898446 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.079784478 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101306956 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.077520872 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.095938434 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.076142728 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.080100149 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096974875 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.076426761 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.097819939 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.075462772 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.103734573 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.080618698 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103170168 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.076696188 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.072143277 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.10040007 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.079262322 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.101144389 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.082201546 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.100951771 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.078606961 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.099178781 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.079959932 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.1047844 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.074636936 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.086935982 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10238085 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.077211414 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.098479996 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.077044606 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.097823316 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.075957487 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.097065731 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.082490296 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.076279753 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.098979464 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.081912117 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.098476966 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.077707284 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.097412933 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.082351133 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.076888739 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101325657 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.071698588 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.09498156 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.076240248 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.101107525 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.085623601 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101015948 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.079474082 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.078831785 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10107031 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.079570394 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.092121511 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.085904403 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10222809 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.083221998 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10451113 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.076167868 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.097920162 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086487866 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.089971071 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.078812811 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.077874438 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.093600167 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.084573461 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.101651494 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.085846487 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.095556376 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.07589868 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.073252359 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.101402597 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.079070153 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.090064179 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.078120895 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.099033407 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.078687527 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.080356249 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.100960038 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.080085447 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101782866 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085137073 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.099348742 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.078619619 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.100910107 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.073732831 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.075931064 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.09464683 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.079655422 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.100694048 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.075095824 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.092919642 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.080769476 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.080627388 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.095802618 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.080599931 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.097363986 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.084844213 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100038459 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.079988559 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106176553 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.071564818 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.09872859 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.080245951 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.081457171 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.095154084 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.082277192 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.100019796 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083809043 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.104306317 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.081633572 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096456075 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.080769668 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.077000209 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101032554 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.080854176 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101364763 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.076344742 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102311176 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.085604229 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.097367537 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.080568081 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.095559321 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.078479346 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.081757365 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102619125 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.080520709 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103501746 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.079397322 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.098090587 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.084091421 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.100528236 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080928977 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.082820743 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.097486428 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.083001481 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.095450833 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.086456135 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.096485408 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.083357452 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.09746409 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.074864049 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081205778 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.099706837 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.079549156 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.101233803 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.083187599 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.095591643 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.075971482 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.097205042 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.079575656 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105731905 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.085937536 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.079537087 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.100259646 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.075548648 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.093060349 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.083383705 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.093687815 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.078715549 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.080007522 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.103197501 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.079825355 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.096373484 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.079694903 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.104360442 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.083857653 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.101461078 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.075213161 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.101675824 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.083258882 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.098888893 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.078662357 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.0779578 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102088553 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.083517894 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.098542076 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.077598032 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.105942628 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.082303998 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103141285 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.07919355 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.09762686 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.078352474 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.075720691 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.10354146 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.080225489 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10319189 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.081048959 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103293791 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.087909449 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.096026183 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.077839691 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106306959 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080533782 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.103431506 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.075978898 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.077749265 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102594005 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.083698087 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.094672072 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.076792422 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.093928555 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.080512795 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.076183798 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.095303921 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.088321494 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.105488952 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.079963244 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099174714 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080169654 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.095284262 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.076356094 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.075939852 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10277008 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.079380673 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.107424248 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.076433547 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.096008635 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.076452084 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100545052 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081150364 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.081087269 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.094131033 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.075978486 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.094988308 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.080861653 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.10403946 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080201069 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.080761297 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.100220477 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.079787235 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.097698147 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087152132 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.093012303 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.082324842 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.107870426 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.083410595 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.098106223 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.083898489 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.104779616 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.083577168 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.095458232 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.083206477 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.080221286 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.097407939 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.08356691 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103592632 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.092503275 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.099786616 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.076807635 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.099728722 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.080381721 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.095523892 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.086444427 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10317145 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.083394742 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.082058125 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.097990999 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.083675756 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100518809 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085081225 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.099429741 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.080307228 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.099241268 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.077964701 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.079029653 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.094830772 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.083782524 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102522612 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081026834 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.103769455 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.077372456 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.107687248 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.086310685 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.101230558 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.074421288 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.076837705 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.096538863 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.076772675 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103072001 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.076471685 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.099788092 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.079683688 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.08051709 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.098772181 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08428024 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.099762241 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084973127 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101482865 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.072677214 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.079530469 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.099374948 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.078458137 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.093197701 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.083014775 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.102425631 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.083857026 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106785024 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.0785451 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.079074863 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.098524847 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.0782709 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.096038185 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.084589448 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099794302 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.080623659 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.076584841 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10173942 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.084230093 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.1012994 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083584747 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103603045 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.081046611 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.105396036 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085911464 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.094480792 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.075306907 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.103177448 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.078552072 seconds)
  done (took 53.796948462 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121672005 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103011072 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07247635 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092685657 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118806755 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076773255 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072432137 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097194838 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.077912433 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105556492 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.072857644 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.092497818 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.094410462 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.120005024 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117182611 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106872128 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073337653 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09637345 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072855449 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.095697827 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.094340372 seconds)
  done (took 2.811951394 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.099679449 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.110263549 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088530698 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.114181139 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103166082 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090842704 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.10815941 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110694584 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093879754 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104174242 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.114967433 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09079506 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.104266723 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.105231272 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085648765 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107762093 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.094441382 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103738468 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.112195369 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.088901426 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107163542 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.089090247 seconds)
  done (took 3.066653325 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.086407789 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.081073248 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.101494061 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.072375364 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.1002091 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.072513501 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.105880587 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.075147281 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.085050922 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.096184332 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.076778415 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.095420017 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.082279967 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.072487363 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.096600826 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.075881355 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.105109522 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.08142004 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102324627 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.075209492 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.07985674 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.095337055 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.076245735 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.095982111 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.091474818 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.101263797 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.080578493 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.080576121 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.096411724 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.082080889 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.094644505 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.079937717 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.098173267 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.077141351 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.076071704 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.100463509 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.081139647 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.094976476 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.078336902 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.078545042 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.095729324 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.082345766 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.098856355 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.078020673 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.074317998 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.099423327 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.080973146 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.092635432 seconds)
  done (took 5.019986768 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.112889277 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.127895402 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.10087984 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.139537214 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.116926319 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.091874315 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.102505333 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.138661109 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.075770005 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.07958413 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.118498247 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.114799436 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.080964497 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.107232539 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.104326025 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.082383606 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102273317 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.077559867 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.106161387 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.077999389 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.106275633 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.084894716 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.115296765 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.113029248 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.085536099 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10002419 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.077652695 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.106713221 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.110898945 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.087273007 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107272473 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.088992086 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.114743765 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.102006029 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.078313718 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.104044437 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.097638298 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.10177823 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.083356665 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.095829156 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.083646829 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107017054 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.084567801 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.118687028 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101570624 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.083329988 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101115792 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.074745975 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.11264253 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.084143229 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.110763952 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.114414394 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.086135172 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.102189054 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.087828629 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.116741535 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.101995186 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.080120263 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.105003455 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.091943885 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.095485062 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.086586939 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.114817191 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.085508588 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.110553367 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.114263114 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.084113966 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.105690542 seconds)
  done (took 7.747805037 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108960163 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.107502064 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097004005 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118259628 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106627596 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.086655809 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10579888 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.086998338 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.106972028 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112509702 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.086890376 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.153575124 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.083493328 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113005391 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.10677681 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.086657966 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106150707 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.087325746 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.10723736 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086584262 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.106113662 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.117631761 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.087458979 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.116860855 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.11887528 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083203773 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107179779 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.086648746 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117795446 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.085751491 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.119157944 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.10633215 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.086469539 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.117997793 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.119419289 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.08671845 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.100625669 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086618668 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.106803097 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.085319456 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104409973 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.117727877 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.086699117 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104227477 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087074701 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.106521383 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.117901847 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.100486474 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112318811 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113633562 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.087345192 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117828931 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086477053 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.107238385 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.117916129 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.125912305 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097829844 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.117953696 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105976598 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.097790217 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119542644 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.125873148 seconds)
  done (took 7.303592809 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108991311 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.113582535 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118831701 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.073917515 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.096875452 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085949781 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.095468558 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.076342473 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.112425266 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.092136768 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11535055 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105176771 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089267156 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115641615 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086071021 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110909898 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105925292 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085017896 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112465414 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.105504881 seconds)
  done (took 2.855265999 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.086851719 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.117674816 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.079595891 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106010535 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.080915873 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.106033154 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.080639739 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101330806 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08010694 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100912242 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.091155075 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.111419349 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079703765 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106181428 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.110847952 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.086090509 seconds)
  done (took 2.374737499 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.098461103 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119422007 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.101591436 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.104975172 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.075888845 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.103630957 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.081565246 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.095495232 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.075120523 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.106809596 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085036966 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.105684449 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.081523038 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.07648446 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.099448841 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.084971375 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.09487648 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083547557 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102010609 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.103205916 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.104385687 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.081843942 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.103555049 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.081335949 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102435924 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.084348637 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.10590213 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.076888037 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.097863849 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.082102734 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.102465065 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.086846081 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.096163989 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083963173 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.096783957 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.076007467 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.081903771 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.102887978 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.084574861 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.101736071 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.077299595 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.100945676 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.081494398 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.100755339 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.075270103 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.10234157 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.07470643 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.104695659 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.081076728 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.081353826 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.101766078 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.087158683 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106415695 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.089796898 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.110672656 seconds)
  done (took 5.947319015 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093727363 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103939033 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083726135 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.096616596 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081967928 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.086968659 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104411763 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.081360647 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102025647 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.077125466 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101939513 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.084014748 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101719385 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.083783364 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.1014782 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083039126 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.094336893 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.080559949 seconds)
  done (took 2.500440514 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085269459 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078390212 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.107164314 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.07964492 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.099169854 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081396735 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095475918 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.078135995 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076493663 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100412421 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07957035 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.101455843 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078402075 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.101736928 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079699542 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099618515 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.081607193 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077338458 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.098991132 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075305313 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102305904 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078042467 seconds)
  done (took 2.795240732 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.092036301 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.125903879 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.08985758 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.134533197 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.079578353 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.077591706 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.110273273 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.078282415 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.116797658 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.078751927 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.098507086 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.078586959 seconds)
  done (took 2.022224 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102904742 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135497272 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.081125842 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102557458 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093095723 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105318902 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084224676 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104355777 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117092469 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097652911 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104897002 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11795991 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097831961 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115592466 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112809484 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09276716 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105583919 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083969969 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102354271 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126697111 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084608292 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11857724 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105275128 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084160274 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104552843 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095210785 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117908384 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117776305 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084348294 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118868039 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113709067 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084807588 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118143831 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118954225 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081741836 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118934087 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083677581 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127003583 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113622584 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117192545 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08214956 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113693235 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098384039 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113103934 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118410288 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084381287 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112296541 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105383022 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085711782 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133079762 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114429998 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095575475 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11361683 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118495586 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097942101 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133181384 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118666955 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11640226 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114598821 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096467131 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117786533 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113709343 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096270771 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11777731 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113083356 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115440511 seconds)
  done (took 7.89932963 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118905583 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10253684 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08377845 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118460069 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116262742 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084611246 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107493829 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084586809 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105041112 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081066396 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14974661 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105828681 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117044574 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096384594 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105182095 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084695318 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105532416 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116419515 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081522945 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133911174 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106052488 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096359119 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116747496 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116986033 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118270235 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09329808 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105778788 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084639994 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105336466 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08485612 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112779824 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105238829 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096034827 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101413015 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117519283 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084603648 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105094602 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092621613 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10518453 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092613358 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11677937 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127470902 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10538292 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084613942 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118690367 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084630262 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1052756 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081461799 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105690255 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081372402 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11877247 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118647729 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119528861 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095994241 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105489256 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084570253 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1056983 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105495888 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085497654 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113222 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095920245 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106837061 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132910487 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084706024 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107105629 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117573518 seconds)
  done (took 7.715533623 seconds)
done (took 147.39521225 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097338623 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.133231419 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.09289198 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.163242527 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.079763156 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.113034205 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.133913626 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.094427285 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.100700476 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.079998965 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.100851317 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.082739168 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.143946948 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.101501218 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.079490886 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.103063377 seconds)
  done (took 2.565090454 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.173203983 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.274318907 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098691562 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.07813185 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.106394746 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080205281 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.100080636 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.085616162 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.102526611 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.079643616 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.080971186 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.102599549 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.07944801 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.101350159 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.081240984 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.079275444 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.10045861 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.080268435 seconds)
  done (took 2.753358193 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.107905686 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.138949406 seconds)
  done (took 1.119538728 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.114356396 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.17032398 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.263187843 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.148899913 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.365619578 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094453701 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.150749884 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.120265554 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.199128933 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.125571695 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.102848026 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.107101214 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.132332263 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.09055123 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.108759089 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.086986076 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.134511504 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.086618751 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.108878657 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.08813415 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.132237689 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.079720621 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.111573628 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.086310948 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181995587 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.122693493 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.079168142 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.10089969 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.087466127 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.108441399 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.086699699 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.114640051 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.121999919 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.144608709 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.091617001 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.165113853 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.086193804 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.084090243 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.10889152 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.085520886 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.111512185 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.110858817 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.093064281 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.106673012 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.079510923 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.085813452 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.100587669 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.078861568 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.108637642 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.087242287 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.109306923 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.086073498 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.142143738 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.108849061 seconds)
  done (took 7.254865812 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.780683847 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.147082681 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.084234064 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.861444101 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.135004935 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121159758 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.761369709 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.129414132 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.228777933 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.799447059 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.09886257 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119515707 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.227585683 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.246865605 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.124837367 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.333794974 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.66421848 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.121857841 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110546934 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.145940887 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.115364472 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13362426 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.103370254 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.424141901 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.10747248 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.084584584 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.11258142 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.095129891 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.152928796 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.106980962 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.087083101 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.197231833 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.260017221 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.178291774 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.108796819 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.084121447 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.105817427 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.163273229 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.240257484 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213702157 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.17201124 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08067606 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.106664394 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.095163236 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.126380283 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.080270998 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180649576 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.170008903 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.167797421 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.109738505 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.095127982 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.115084702 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.094957064 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.154863783 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.105508395 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.334678505 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.313973587 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.106108197 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092102365 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.123176894 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259348425 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08542943 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.221095138 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.133034829 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.186555289 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.105472606 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.762119664 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.162791579 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.106223316 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.093217631 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.113261356 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.089815321 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.11652006 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.161074975 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.400504586 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098230956 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.111631876 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.084155609 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.22408494 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084678186 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106341763 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.157561955 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.08643568 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.114915479 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.098606797 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118992726 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.166716415 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.24463864 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.119517718 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092866656 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.112820995 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.118931191 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.08658079 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.210110632 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216245396 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.154423191 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.208703418 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.117894602 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.159809931 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.162509932 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11814914 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.167430088 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.090216774 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123201359 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118136443 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.191170967 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.136356692 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.107826888 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.089836826 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.113612328 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.139877852 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088811955 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.113329144 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.164303988 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.454467111 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.160921538 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.104438604 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.089722366 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116002904 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.156112968 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091463204 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260491541 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093579914 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.187298724 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.091937022 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.1032089 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.092504414 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.156639011 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119151997 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.117066785 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.096778123 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11527274 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.245297674 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.213028811 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099489303 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240375114 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.152426518 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.116113391 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.168197467 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.115158264 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.164787759 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.094336454 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.116576077 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109257664 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.754443977 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.120367604 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.092164215 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112381275 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181714086 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.084317688 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.109421523 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.085138196 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.081333095 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.782524962 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.087668072 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.106056895 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.087265212 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114966787 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.091852937 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.113292255 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.089971081 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.179100349 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.207100783 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117168034 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.091183053 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.107221368 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.155798138 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.085571233 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.108487639 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.085244876 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.108546841 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.093522503 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.111163479 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087392103 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.165115454 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.175697685 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.194206356 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.586459862 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.084782682 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.107585334 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.204481151 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107218539 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.303824136 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092957795 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.224090931 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160529292 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081929207 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.334023669 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.162938308 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.180765851 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.110830446 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.166908678 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.082223397 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.113492228 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.158192936 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.084702746 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114339547 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.155359209 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.121975314 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.097011191 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.148399035 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.084835586 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.245391292 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.08217965 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.165269705 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.108595441 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094592304 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.308207368 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.084277254 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125076904 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.157306139 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111497332 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.085527548 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.863076314 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.085334168 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.11767171 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093519261 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.219597322 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.160094787 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115995945 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092145076 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118439173 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.158034301 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.206657756 seconds)
  done (took 42.722921416 seconds)
done (took 57.283966023 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.279689974 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.209083286 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.264982115 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.165282515 seconds)
  done (took 1.891159625 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.170482217 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.125847695 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.140284395 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.101388991 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.124610191 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.101267028 seconds)
  done (took 1.660365754 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.36758815 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.27073126 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.215357404 seconds)
  done (took 1.752126964 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.241656825 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.238688164 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.340375385 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.392262178 seconds)
  done (took 2.209908221 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.19849621 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.09662129 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.118298112 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.109765506 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.162639668 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.201191182 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.136910116 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.14588691 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.10298278 seconds)
  done (took 2.217832309 seconds)
done (took 10.63455024 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.118333827 seconds)
    (2/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.266868356 seconds)
    (3/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.219040462 seconds)
    (4/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.223101859 seconds)
    (5/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.193991786 seconds)
    (6/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.162843647 seconds)
    (7/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.096025599 seconds)
    (8/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.11928286 seconds)
    (9/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.238271508 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.100227889 seconds)
    (11/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.17733561 seconds)
    (12/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.132847809 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.094394926 seconds)
    (14/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.110614454 seconds)
    (15/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.09984505 seconds)
    (16/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.204942888 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.08844274 seconds)
    (18/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.229563995 seconds)
    (19/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.221379394 seconds)
    (20/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.159102446 seconds)
    (21/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.15098579 seconds)
    (22/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.219438692 seconds)
    (23/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.105613981 seconds)
    (24/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.190722886 seconds)
    (25/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.094847714 seconds)
    (26/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.189368898 seconds)
    (27/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.175720136 seconds)
    (28/286) benchmarking ("sort", Float32, true)...
    done (took 0.227595026 seconds)
    (29/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.095439482 seconds)
    (30/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.132847439 seconds)
    (31/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.098434582 seconds)
    (32/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.168122895 seconds)
    (33/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.181957004 seconds)
    (34/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.193710169 seconds)
    (35/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.092797766 seconds)
    (36/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.21322898 seconds)
    (37/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.200514314 seconds)
    (38/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.134070021 seconds)
    (39/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.094076312 seconds)
    (40/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.144156277 seconds)
    (41/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.158998152 seconds)
    (42/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.112555822 seconds)
    (43/286) benchmarking ("sort", BigInt, false)...
    done (took 0.222285191 seconds)
    (44/286) benchmarking ("sort", Int64, true)...
    done (took 0.223602732 seconds)
    (45/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.238227422 seconds)
    (46/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.086177339 seconds)
    (47/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.114001298 seconds)
    (48/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.18892042 seconds)
    (49/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.159581942 seconds)
    (50/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.176214949 seconds)
    (51/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.202971019 seconds)
    (52/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.084415818 seconds)
    (53/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.096957862 seconds)
    (54/286) benchmarking ("sort", BigInt, true)...
    done (took 0.23452504 seconds)
    (55/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.201006435 seconds)
    (56/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.189697261 seconds)
    (57/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.121064046 seconds)
    (58/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.130767542 seconds)
    (59/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.186433697 seconds)
    (60/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.129170909 seconds)
    (61/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.104703633 seconds)
    (62/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.110669699 seconds)
    (63/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.088116502 seconds)
    (64/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.215926884 seconds)
    (65/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.094914044 seconds)
    (66/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.109734593 seconds)
    (67/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.184851238 seconds)
    (68/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.078966133 seconds)
    (69/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.088171662 seconds)
    (70/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.105018218 seconds)
    (71/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.069283877 seconds)
    (72/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.174394974 seconds)
    (73/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.174118874 seconds)
    (74/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.109960677 seconds)
    (75/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.093449938 seconds)
    (76/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.091127094 seconds)
    (77/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.130235564 seconds)
    (78/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.076642717 seconds)
    (79/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.151363798 seconds)
    (80/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.06920574 seconds)
    (81/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.194771415 seconds)
    (82/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.109378984 seconds)
    (83/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.092268594 seconds)
    (84/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.174734075 seconds)
    (85/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.113386448 seconds)
    (86/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.10817997 seconds)
    (87/286) benchmarking ("sort", Int64, false)...
    done (took 0.105792134 seconds)
    (88/286) benchmarking ("sort", Int8, false)...
    done (took 0.185975412 seconds)
    (89/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.130761295 seconds)
    (90/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.115307038 seconds)
    (91/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.104007283 seconds)
    (92/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.115103438 seconds)
    (93/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.108201396 seconds)
    (94/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.104717942 seconds)
    (95/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.078234519 seconds)
    (96/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.086483539 seconds)
    (97/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.186747305 seconds)
    (98/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.153272047 seconds)
    (99/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.086915331 seconds)
    (100/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.168178191 seconds)
    (101/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.088052444 seconds)
    (102/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.17705722 seconds)
    (103/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.078086755 seconds)
    (104/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.104289441 seconds)
    (105/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.170458702 seconds)
    (106/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.081529895 seconds)
    (107/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.06859789 seconds)
    (108/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.093515185 seconds)
    (109/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.157835977 seconds)
    (110/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.154674938 seconds)
    (111/286) benchmarking ("sort", Int8, true)...
    done (took 0.220811065 seconds)
    (112/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.090565328 seconds)
    (113/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.112972113 seconds)
    (114/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.088001208 seconds)
    (115/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.147900756 seconds)
    (116/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.1059337 seconds)
    (117/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.143004375 seconds)
    (118/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.079262798 seconds)
    (119/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.106658609 seconds)
    (120/286) benchmarking ("sort", Float32, false)...
    done (took 0.169252815 seconds)
    (121/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.080886493 seconds)
    (122/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.080547519 seconds)
    (123/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.095378101 seconds)
    (124/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.162412406 seconds)
    (125/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.106015433 seconds)
    (126/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.071363782 seconds)
    (127/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.10998015 seconds)
    (128/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.09159398 seconds)
    (129/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.163046443 seconds)
    (130/286) benchmarking ("sort", Bool, false)...
    done (took 0.176733659 seconds)
    (131/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.091142761 seconds)
    (132/286) benchmarking ("sort", Float64, true)...
    done (took 0.229119038 seconds)
    (133/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.084701219 seconds)
    (134/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.153237488 seconds)
    (135/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.087421315 seconds)
    (136/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.103252801 seconds)
    (137/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.091937891 seconds)
    (138/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.110071246 seconds)
    (139/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.087738782 seconds)
    (140/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.12975864 seconds)
    (141/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.083398093 seconds)
    (142/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.174525627 seconds)
    (143/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.089187709 seconds)
    (144/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.094223482 seconds)
    (145/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.088710834 seconds)
    (146/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.123270753 seconds)
    (147/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.089518069 seconds)
    (148/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.185838069 seconds)
    (149/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.110401558 seconds)
    (150/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.10679232 seconds)
    (151/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.083499709 seconds)
    (152/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.184441071 seconds)
    (153/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.080783612 seconds)
    (154/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.111479689 seconds)
    (155/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.068883427 seconds)
    (156/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.080707623 seconds)
    (157/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.09567489 seconds)
    (158/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.076583476 seconds)
    (159/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.114092439 seconds)
    (160/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.070519721 seconds)
    (161/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.080290409 seconds)
    (162/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.092326928 seconds)
    (163/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.090949947 seconds)
    (164/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.113896735 seconds)
    (165/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.069856297 seconds)
    (166/286) benchmarking ("sort", Float64, false)...
    done (took 0.167049485 seconds)
    (167/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.071901174 seconds)
    (168/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.070000308 seconds)
    (169/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.116301417 seconds)
    (170/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.080632008 seconds)
    (171/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.113504091 seconds)
    (172/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.080476594 seconds)
    (173/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.079849865 seconds)
    (174/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.095605226 seconds)
    (175/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.069802339 seconds)
    (176/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.094241621 seconds)
    (177/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.069366633 seconds)
    (178/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.069238194 seconds)
    (179/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.160304632 seconds)
    (180/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.086941354 seconds)
    (181/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.094168565 seconds)
    (182/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.087522463 seconds)
    (183/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.080722187 seconds)
    (184/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.102650513 seconds)
    (185/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.092123134 seconds)
    (186/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.093849487 seconds)
    (187/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.178231401 seconds)
    (188/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.106198422 seconds)
    (189/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.070244668 seconds)
    (190/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.112084924 seconds)
    (191/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.094562506 seconds)
    (192/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.178502045 seconds)
    (193/286) benchmarking ("sort", Bool, true)...
    done (took 0.221898096 seconds)
    (194/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.079156251 seconds)
    (195/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.085213978 seconds)
    (196/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.093596793 seconds)
    (197/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.107533131 seconds)
    (198/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.131197226 seconds)
    (199/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.070374537 seconds)
    (200/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.093854522 seconds)
    (201/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.084385516 seconds)
    (202/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.104985697 seconds)
    (203/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.107131652 seconds)
    (204/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.08805444 seconds)
    (205/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.113558141 seconds)
    (206/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.08850621 seconds)
    (207/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.105663642 seconds)
    (208/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.08117777 seconds)
    (209/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.106201437 seconds)
    (210/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.082535867 seconds)
    (211/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.176862385 seconds)
    (212/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.079656481 seconds)
    (213/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.073454612 seconds)
    (214/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.102499581 seconds)
    (215/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.08135975 seconds)
    (216/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.11952936 seconds)
    (217/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.086631226 seconds)
    (218/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.079147822 seconds)
    (219/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.093682451 seconds)
    (220/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.073272601 seconds)
    (221/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.104155499 seconds)
    (222/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.079546048 seconds)
    (223/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.070931897 seconds)
    (224/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.10533035 seconds)
    (225/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.071030278 seconds)
    (226/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.126212889 seconds)
    (227/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.157764889 seconds)
    (228/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.09083634 seconds)
    (229/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.084963336 seconds)
    (230/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.106669138 seconds)
    (231/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.074842064 seconds)
    (232/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.107251936 seconds)
    (233/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.072519656 seconds)
    (234/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.08842235 seconds)
    (235/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.10600691 seconds)
    (236/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.083095818 seconds)
    (237/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.087157745 seconds)
    (238/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.103944067 seconds)
    (239/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.081241929 seconds)
    (240/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.106145993 seconds)
    (241/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.071615869 seconds)
    (242/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.069544688 seconds)
    (243/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.11849322 seconds)
    (244/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.069432636 seconds)
    (245/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.16544451 seconds)
    (246/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.086543558 seconds)
    (247/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.094253022 seconds)
    (248/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.090269447 seconds)
    (249/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.106614099 seconds)
    (250/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.080724604 seconds)
    (251/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.07036255 seconds)
    (252/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.09324518 seconds)
    (253/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.09326626 seconds)
    (254/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.07181981 seconds)
    (255/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.095201459 seconds)
    (256/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.069661587 seconds)
    (257/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.093617916 seconds)
    (258/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.082718321 seconds)
    (259/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.07017998 seconds)
    (260/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.093008532 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.088553297 seconds)
    (262/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.080778057 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.103238721 seconds)
    (264/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.080680343 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.102695504 seconds)
    (266/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.235383631 seconds)
    (267/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.08246421 seconds)
    (268/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.089869042 seconds)
    (269/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.095365291 seconds)
    (270/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.106629719 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.10458096 seconds)
    (272/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.080742549 seconds)
    (273/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.107625939 seconds)
    (274/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.081314471 seconds)
    (275/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.08200318 seconds)
    (276/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.095546056 seconds)
    (277/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.084099212 seconds)
    (278/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.079646563 seconds)
    (279/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.133373508 seconds)
    (280/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.069975786 seconds)
    (281/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.111924309 seconds)
    (282/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.082013608 seconds)
    (283/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.094409407 seconds)
    (284/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.07104344 seconds)
    (285/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.081132782 seconds)
    (286/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.109422825 seconds)
  done (took 34.770247672 seconds)
done (took 35.6810162 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.094897889 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.146894722 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.090466527 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.133293059 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.093451388 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.119157346 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.088892602 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.092763018 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.117976191 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.095093923 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.116323292 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.072699684 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.116349893 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.09223702 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.115567584 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112494413 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.11800722 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.088110081 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.108644423 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.080868601 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.085545126 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.105185848 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.082319228 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.071946249 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.11601813 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.089337936 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.110848759 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.091847718 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.105257015 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.08149165 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.081146589 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.111535506 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.081476562 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.119217033 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.086816189 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.108791043 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.092630364 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.091114043 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.106858591 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.082717803 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.11321778 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.080723706 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.087825285 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.112192696 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.082558199 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.104477465 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.084498731 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.118991497 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112392888 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.109903611 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.090308291 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.090759291 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.114714263 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.087735355 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.104776792 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.085030211 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.104772123 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.112880014 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.108589738 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086294408 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.08892766 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.113098842 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.080594556 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.109090742 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.085247953 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.115318767 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.093207301 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.080075477 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.115289108 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.085963515 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.104814812 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.085714091 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.0807337 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.105140424 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.090736826 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.115977151 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.080962135 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.081970523 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.111681094 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.087227727 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.103649814 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.084259623 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.082973076 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.106519201 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.08445647 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.095522674 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.07974357 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.087600802 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.104573391 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.085593022 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.111875409 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.087881216 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.082665143 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.116554327 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.080581932 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.104915821 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.081498465 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.081522446 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.107069412 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.080520222 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.105341442 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.083815106 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.090495499 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.105968831 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.082910763 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.117621641 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.081195167 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.111633161 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.079951845 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.08056055 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.120806396 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.091503106 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.105529947 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087271279 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.080561625 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.10674354 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.080401992 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.104795533 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.081542575 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.0818097 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.124115346 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.082028845 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.107897417 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.083184052 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.094780256 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.105522935 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.080590107 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.108330142 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.081606411 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.087039832 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.105457711 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.081107348 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.106264531 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.080329844 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.08434807 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.105861368 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.082998807 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.107544204 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.084435068 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.082116321 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.109783578 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.086668561 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.106510089 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.080888971 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.079635041 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.100486181 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086957567 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.107989725 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.082742444 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.081641466 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.108966697 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.081493418 seconds)
done (took 15.576264402 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.081569176 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.182838096 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.143522557 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.115650023 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.127681996 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.082105485 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.117103295 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.113917713 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.107652483 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.138672897 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.104397056 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.125587151 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.121239447 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.1051989 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.081971067 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.085388112 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.107465062 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.097726452 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145097858 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.127188934 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.118357259 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.104839618 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.113004803 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.130496752 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.091393896 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.133675387 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.083041165 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.110379772 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.086644948 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.123755104 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.103311659 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.109440367 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.082160798 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.128778397 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.099361185 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.11487549 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.081971046 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.08885939 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.106788149 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.081596301 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.131701951 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.104356027 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.113484546 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.087906237 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.109180412 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.084168728 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.083450566 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.116053362 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.092855816 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.110653157 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.097109116 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.137615572 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.10884036 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.091677228 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.104955747 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.092689876 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.11597043 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.083750473 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.082820503 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.108249518 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.081461293 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.110120742 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.097573537 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.133404917 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.086555427 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.117008855 seconds)
  done (took 8.040769789 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.101016142 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.133203171 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.100446153 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.124765231 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.081914201 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.109485366 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.082766812 seconds)
  done (took 1.697448983 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.083342933 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.10755627 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.132336371 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.108272956 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.129674236 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.126435991 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.088706112 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.082628911 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.127595423 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.083949643 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131388706 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.124333422 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.108961863 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.091200051 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.135085908 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.082620057 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.134619722 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.082439089 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.11112841 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.108827881 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.110601025 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.100952868 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.110270022 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.082556749 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102730543 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.10860653 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.155797022 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.087952794 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.080088313 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.111243623 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.0803244 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.147544343 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.100876675 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.116342343 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.083167989 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125634839 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.100037077 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.105250851 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.097722341 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.113264774 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.100688097 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.083604514 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.108906162 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.080783119 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.112496282 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.096460912 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.086463833 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.108830931 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.085349176 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.131491951 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.084288566 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.12552286 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.082670705 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.087430286 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.110077465 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.086549963 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.118036671 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.083522122 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131411745 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.080775998 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.128441214 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.102555488 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.099396951 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.128159657 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091083959 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.125440806 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.099583079 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.11047817 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.085689315 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.111284913 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.102660164 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.080522186 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.111055531 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.096880916 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110230058 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.109531676 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.135376495 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.085053517 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.120341902 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.08335784 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.082905164 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.108829969 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.109494924 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.112466849 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.082794552 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112102175 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.087060704 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.081273039 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.107648357 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.08767415 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.106330381 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.085735948 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.085945419 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.10884078 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08710172 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.128812674 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.084428453 seconds)
  done (took 11.039119575 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.085302446 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.0850621 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.114020576 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.086618513 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.111099691 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.08545313 seconds)
  done (took 1.549784286 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.112076277 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.110270968 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.096660698 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.113636494 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.124031963 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.133851457 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.108978143 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.11780025 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.100963831 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.121419284 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.107963693 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.135358569 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.138593077 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.08867441 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.132897476 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.087519584 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.109653859 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.115720352 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.094135404 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115443497 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.10121513 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.115264539 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.089432306 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.128595621 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.093259751 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.113406669 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.090344126 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.120876624 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.09432111 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.118866977 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.089558679 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.120753648 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.089396689 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.11834013 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.108724572 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.115269936 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.088491471 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121391831 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.090216892 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119411735 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.110051489 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.114881777 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.094727196 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.121003954 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.092416354 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.116096898 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095478568 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.115665348 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.108455322 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120959003 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.094973109 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.11434808 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.093508386 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.121220161 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.089566057 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118722825 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095528225 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.13472694 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.089474048 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.115341906 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.086000185 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.118985056 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.09302986 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118973453 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.094335467 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120473978 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.090022112 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.114472256 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.089864608 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.088454924 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120702645 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.08604393 seconds)
  done (took 8.754928964 seconds)
done (took 32.044942005 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.665760825 seconds)
  done (took 1.640485306 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.808564102 seconds)
  done (took 1.788533916 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.440965354 seconds)
  done (took 18.44688098 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.458036854 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.549614073 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.958982616 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.160686054 seconds)
  done (took 3.106753528 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.949874327 seconds)
  done (took 1.94614419 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.284817182 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.231594347 seconds)
  done (took 1.503958877 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.771192351 seconds)
  done (took 1.764821134 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.436619531 seconds)
  done (took 2.422100747 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.32380054 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.155047763 seconds)
  done (took 1.476328751 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.547240038 seconds)
  done (took 1.544405463 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.920488407 seconds)
  done (took 16.915703623 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.236891895 seconds)
  done (took 1.24199839 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.287861629 seconds)
  done (took 1.283228991 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.581635349 seconds)
  done (took 4.577192948 seconds)
done (took 60.645611278 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.093166169 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.096050599 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.122851651 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.092926802 seconds)
  done (took 1.394275134 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.098379506 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.089781248 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.12374748 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.089685535 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125427248 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.089289344 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.119329426 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.162678902 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.089176604 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.091115556 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.116230266 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.088672299 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.119002348 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.091631245 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.113958311 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.09244914 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.123221889 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.089809686 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.121153899 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.090821366 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.087050504 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.118543565 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.093923173 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.114365005 seconds)
  done (took 3.542098957 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.094947102 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.088169651 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.117149736 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.087933369 seconds)
  done (took 1.39010488 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.093788606 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.100349097 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.126191448 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.093716913 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.126835295 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.10016991 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.112948959 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.086367708 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.114464074 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.094110583 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.084203133 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.135639733 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.126497819 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.093956104 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.12227683 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.087024764 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.085162403 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.127601768 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.093895673 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.120843934 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.086684376 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.119494435 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.084988103 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.128295116 seconds)
  done (took 3.549648971 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.162180717 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.121988138 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.106707157 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.115285792 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.128891296 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.135938819 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.082027487 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.136692542 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.08157576 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.12500052 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.085693144 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.160079235 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.095718682 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.108842992 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.081365682 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.081846324 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.121046343 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.095062439 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.110802216 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095704016 seconds)
  done (took 3.232264496 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.092562752 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.086334199 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.108583191 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.085105101 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.11955558 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.089849656 seconds)
  done (took 1.591049457 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.084823242 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.083784365 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.110547798 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.083753348 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.088371444 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.110306371 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.083253548 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.110856566 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.084626974 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.083617836 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.111585195 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.083128626 seconds)
  done (took 2.127614236 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.364309285 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.086602758 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.110673419 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.106425327 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.092641921 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.083821607 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.124868661 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.085503369 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141084421 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.082079931 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.111478402 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.086221181 seconds)
  done (took 2.484787676 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202928566 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093004511 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258274063 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.344168496 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152635753 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161036164 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.270659007 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160567342 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.180525844 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133894072 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188604563 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126195905 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149276669 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172814799 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135715207 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.131861807 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169418288 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2201195 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116736029 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198137358 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157853876 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162146894 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173694593 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148007976 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133253216 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126877815 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.115464902 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097580339 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166953211 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164083415 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195565666 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117377389 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135362916 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195341985 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22878206 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174594404 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.299211758 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10309714 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.176830708 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.162458619 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246335885 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110078711 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189045907 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149342049 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126380707 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178506347 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151414389 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.175516168 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.100232409 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137251038 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176116697 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171621098 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.175414919 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134074658 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.295961846 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144177289 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.1156137 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177302933 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180699962 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182667567 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162110644 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.116272595 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180628185 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175755073 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173356139 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.142948375 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.162924259 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095098182 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170844607 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190371495 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170826499 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159056295 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.207652305 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104156343 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16084968 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164202082 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148985119 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174571357 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156501353 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.089838565 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14641547 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105453459 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125230656 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.183899885 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.093414094 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198490532 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131637371 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.174529357 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197723231 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153535699 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12846259 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158885027 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160430423 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144015234 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084972443 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141200172 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.147146121 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151568878 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100412864 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152660972 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13954632 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.096223108 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147965842 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.091487507 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154462581 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.124517001 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160774092 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159993216 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.093970935 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160517528 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145398774 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.119288349 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166407607 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179708943 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129836435 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099740492 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188294122 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15339485 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.130850058 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170897763 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180943957 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.125177778 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134438899 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163146887 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18688007 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138752171 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183092573 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136623217 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102362932 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.13699792 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153866345 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123907483 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.152555067 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126962532 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.149278044 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187860519 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.092411656 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134111274 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168929087 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096571407 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125562305 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110953059 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132582627 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.132648775 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.110306192 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.133384012 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152139977 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155898502 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122583661 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150291596 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138578381 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18477359 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129508208 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.118745368 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144670501 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.088477478 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.172111303 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179056156 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125675156 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191202067 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.164851469 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216668892 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133014431 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128214731 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172715622 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098593882 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.117643489 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16058506 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156531497 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128978087 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.176357449 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214708956 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.162151387 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.147647641 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116609378 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159593328 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.160313581 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150156345 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.106119873 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157881958 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154805453 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.117604552 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.0931494 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.123293292 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110898851 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129026828 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101900739 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202517121 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130196869 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.209655314 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155373437 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109720536 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17647228 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.123052263 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159591651 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.167920929 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107104339 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.178782596 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175311845 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163358733 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139049177 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1688464 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.087984449 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120815898 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.102951 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160563693 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13023934 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101660615 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139018489 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176602499 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170320422 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146912846 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196395813 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159682501 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186565853 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.117657066 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.132752317 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164929394 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154186931 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.148569874 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12613163 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.146692142 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17225611 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110039661 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183286822 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157127857 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164111817 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217508582 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.119200903 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127723074 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117118564 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159876816 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136246992 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162158578 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141219704 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104222994 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148878788 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.094382625 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123158122 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167999681 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139620023 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174443222 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114101677 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191646098 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094882534 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139654053 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155817971 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11433296 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.111670045 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162456774 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180805503 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113104906 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153572317 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167561582 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126702865 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.303210974 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184225134 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178998207 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132141341 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110967486 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156995877 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155139909 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159077167 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174046639 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114240826 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174323462 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154551586 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.13402117 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104361105 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144852274 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146271283 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.109093662 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.130357355 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.149257615 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.104507546 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170965861 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139821385 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154836479 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161471262 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.11636548 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.140380166 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138593507 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194707556 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126181429 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172010536 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.145882741 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.162348944 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193210174 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122139702 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09749628 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.125540825 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174880286 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100649405 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155603866 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.179354674 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193495741 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153783662 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162463059 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134488965 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.087235727 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156042571 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145368336 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192412622 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136720823 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104608725 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180975397 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.140261958 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127286429 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129686529 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284485788 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137455333 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169915185 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.082198091 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.297939421 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094760938 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128031164 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127285465 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166222453 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.135921564 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.145004431 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156638491 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142324589 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157351467 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106589126 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.21181461 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200090194 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164977937 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167592527 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.100481067 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154164343 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159368147 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171309935 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142078059 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.104467945 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159739174 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17770926 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.183685757 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.130614784 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13036844 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158195842 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156683195 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163762486 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130670711 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194019441 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098916224 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159733843 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137572165 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120754632 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124429206 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.207127903 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102852013 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167648965 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153919066 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1001512 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123912545 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148266391 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154961414 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109284485 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.122386854 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168605211 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.091236664 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158870369 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17662835 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09904526 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150688309 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143456818 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106189375 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13896562 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143588964 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132856531 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.132721929 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176688748 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.126947577 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170958221 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169431653 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129777295 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155805263 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142233529 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.664002958 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.096942436 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177225837 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144339046 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179499667 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144518704 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133454429 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157512446 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146118726 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162585592 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146405652 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.189368806 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159928898 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.155092028 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12780996 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11328598 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139648581 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.128447184 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118114431 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157837894 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13786199 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.133976351 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.124875291 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141593303 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.128453842 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106642487 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179716313 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14467728 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171033389 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175760766 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10458983 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163795039 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165191945 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12777629 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.156754945 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167647676 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108860749 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146127345 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.128558284 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102642962 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175773062 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.120086506 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127864644 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156908761 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15796941 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158812982 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.101250051 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157618456 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140768903 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157053147 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0976411 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.150445149 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154946566 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12815657 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.096384147 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154118031 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149456683 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.118481724 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124052629 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.133242431 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174144018 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.119143708 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102139153 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283823461 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15133942 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187045312 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.142271476 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102892451 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14035532 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143093815 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.121013927 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156719329 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.126505521 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099880368 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.129181887 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.161031944 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112520962 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154010889 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18219809 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153586461 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195366351 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.103340186 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.266014107 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135417017 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12260841 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.12066895 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.096971968 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139397561 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130906401 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111049007 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212282118 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14669023 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.141587376 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.130980839 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094923834 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.120918649 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101064357 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15861692 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14964635 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125298445 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140139714 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.113020263 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111688132 seconds)
  done (took 72.882668819 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.14178693 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.126108639 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.142738727 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.191452751 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.161723687 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.238464467 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.199749748 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.222468529 seconds)
  done (took 2.518698927 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.087922646 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.149429674 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.127501718 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.086324316 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.112786988 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.29796269 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.129784 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.111538841 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.114872558 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.132365824 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.112787546 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.521551353 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.083798768 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.11591914 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.107938312 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.086185708 seconds)
  done (took 3.463957796 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.198617596 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.469348077 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.011227791 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.189322128 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.174212707 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.09071946 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.705948789 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.089316613 seconds)
  done (took 12.025033115 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.116721206 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.111381705 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.157842266 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.157600449 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.115955929 seconds)
  done (took 1.765128954 seconds)
done (took 112.958107211 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.092039629 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.094802208 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.121172861 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.096107061 seconds)
  done (took 1.488861824 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.099504405 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.073128285 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.106114431 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.077141819 seconds)
  done (took 1.454922097 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.40589536 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.074668676 seconds)
  done (took 1.612119272 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.10794154 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.126245286 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.09946026 seconds)
  done (took 1.441239714 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.099372067 seconds)
  done (took 1.201288408 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.092120503 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.094140533 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.134756843 seconds)
  done (took 1.42350092 seconds)
done (took 9.722432918 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.108825347 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.520864781 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.380028973 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133610455 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.687159651 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.405344573 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.034994899 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.143372824 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.158904314 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.087263698 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131758789 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.667247016 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.015948432 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.431762955 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.972680471 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.365318518 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.679273552 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.116705825 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.086345345 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.115679579 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.020464872 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.08645971 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.11643414 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.087196034 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.704437834 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.391610399 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.116655395 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.334921471 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.087538361 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12094793 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.373280893 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.116562475 seconds)
  done (took 16.889695143 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.092568542 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173766845 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.093477392 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118429808 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.089320707 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.089353208 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.119740343 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.087890447 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.173009722 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.116430231 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.104317191 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.08701901 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.120026076 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.088018957 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.137095956 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.08722584 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.117182316 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.088487989 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.087360715 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.116592507 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.107025413 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.116325678 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.087254729 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.117108724 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.088324726 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.128642645 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.088367181 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.087637459 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.116442594 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.092826202 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118342106 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.087732814 seconds)
  done (took 4.524049759 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.138272965 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183879801 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.094208371 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.150068548 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.162771244 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.089628142 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.19375343 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.143104236 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.146151655 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.117016456 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.104314226 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.116856664 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.120954576 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.117443724 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.107011575 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.116514425 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.088099365 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.117367671 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.088015388 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.087879632 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136012855 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.086533424 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.117217214 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.087292776 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.117223451 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.101554895 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.117123336 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.087507561 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.087651938 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.121912201 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.089893434 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117614385 seconds)
  done (took 4.857556697 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.090994214 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.091625134 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.13157916 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.102729978 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.11781507 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.090368156 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.120186097 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.088802128 seconds)
  done (took 1.938017499 seconds)
done (took 29.310452743 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.105006818 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.092801496 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.130090948 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.099341596 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.12631239 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.100016846 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.11468241 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.098467492 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.099599758 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.124742927 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.102813931 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.115943344 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.087877232 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.11488839 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.100747906 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.091388444 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.130070921 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.096284254 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.129834137 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.10076543 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.117500397 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.099049345 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.09700928 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.13092435 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.101551063 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.130791065 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.102537297 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.122999938 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.087744294 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.117723612 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.100822863 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.137012282 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.089310695 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.131245569 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.091625413 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.090772205 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.118005104 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.089190944 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.130718134 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.0978997 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.122456727 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.099347257 seconds)
  done (took 5.664946324 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.113672456 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.159282171 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.088180101 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.118645727 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.08920204 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.150520242 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.118176891 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.117632986 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.089771704 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.140797811 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.111797939 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.088208331 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.118218029 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.088385963 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.117964548 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.088889184 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.140030076 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.111035173 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.146007652 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.113343459 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.162562627 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.11799947 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.150193047 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.138498152 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.126163285 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.151120287 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.107592947 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.152228614 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.139233147 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.087567723 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.115127878 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.14372714 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.087999246 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.117471989 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.125704552 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.14848453 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.146653743 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.124847947 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.14897792 seconds)
  done (took 5.919898359 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.094242529 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.101894195 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.138331343 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.176882858 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.124130676 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.124438751 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.096614293 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.133957274 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.103232321 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.086155586 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.120284233 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.113489656 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134531669 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.095459609 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.116908801 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.102828459 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.100883525 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.089511958 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.093336335 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.137398075 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.10475523 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.127248339 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.099175242 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.131158893 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.08659692 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.088465208 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.119602111 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.102768821 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.122128557 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.09608881 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.121606875 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.090703578 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.089023802 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.129728346 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.093117539 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.117607058 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.107399337 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126480602 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.095660367 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.117781711 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.094441577 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.088229169 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.137726724 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.127409729 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.115759474 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.093715665 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.125013959 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.096500326 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.116817605 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.10568416 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.097253674 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.117004801 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.090112306 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.116046957 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.087593548 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.130477845 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.089683043 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.088938017 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.129344474 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.092989718 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.129589991 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.093024578 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.102643167 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.117138301 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.093882507 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.117219128 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.088530113 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.086620181 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.13998644 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.088797772 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.156853936 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.088497851 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.118383864 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.096631213 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.125819574 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.104595876 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.117301185 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.101254842 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.128220649 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.091255459 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.098388514 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.119606547 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.090147697 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.135432537 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.088688501 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.088512928 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.117467617 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.094387518 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.119436644 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.088166369 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13126352 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.09137 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.090629528 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.133601516 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.086744177 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.118954327 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.093698557 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.122176698 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.087379249 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.101667766 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.123089138 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.088843872 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.128582766 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.087042692 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.120670092 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.09851019 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.092203391 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.11687585 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.092169156 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.124440523 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.088369772 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.119022622 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.090957555 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.089281881 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.126658236 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.094726589 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.121911168 seconds)
  done (took 13.833330954 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.225666586 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.211894639 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.182021362 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.26035058 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.134488326 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.111992334 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.207794601 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.157787037 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.087607175 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.156171181 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.170343204 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.18040642 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.168246883 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.17895673 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.168138206 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.087565906 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.138188959 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.132335191 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.210458402 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.287686099 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.107618401 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.127811756 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.158098203 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.126033937 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.133377524 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.097294775 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.136823761 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.132928709 seconds)
  done (took 5.60730923 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.103592995 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.150257242 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.093617232 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.139926041 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.113447049 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.118434383 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.092675107 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.120021277 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.099832337 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.132462681 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.086986548 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.123829085 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.096085058 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.097142625 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.119187307 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.097073066 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.128786302 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.089416773 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.120640116 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.092429248 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.097844095 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.135980999 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.091959078 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.117770454 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.097309023 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.118686113 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.090469927 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.139627937 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.088482077 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.140788288 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.086542079 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.127195045 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.101395315 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.119161698 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.088545958 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.090054283 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.120983225 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.08993431 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.120525721 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.086238051 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.086268189 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.111191408 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.08772215 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.133276539 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.093803346 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.113407585 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.093685942 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.123793642 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.088561714 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.085972136 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.122038236 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.091696629 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.12151535 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.096634819 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.090521168 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.119963315 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.091375616 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.11896829 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.095200207 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.090664373 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.117687746 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.086823494 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.122605257 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.092221979 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.126736889 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.092509765 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.086095699 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.120732881 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.09300307 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.124485427 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.090784215 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.09386586 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.117728086 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.089827679 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.121617612 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.09363794 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.092210753 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.117505907 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.088085168 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.119342009 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.078185181 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.088651983 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.107057458 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.091189481 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.116057432 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.086728595 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.090617986 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.125429966 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.104417978 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.119900163 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.096316437 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.1204096 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.087594769 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.121645565 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.08607516 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.091172434 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.13498049 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.138488681 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.088717239 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.086412099 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.133265861 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.090630708 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.118011954 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.079271245 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.096664021 seconds)
  done (took 12.22171384 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.123698818 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.1682787 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.090061688 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.136390509 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.120995537 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.156098849 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.09533276 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.12734015 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.089681259 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.137575061 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.088521068 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.126994874 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.089105874 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.102983751 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.154626169 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.130243364 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.090997616 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.103389058 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.123501096 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.16694126 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.106502315 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.156821571 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.154616296 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.088780764 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.093867371 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.154424686 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.158807828 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.103192763 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.132605101 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.125629201 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.133915204 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.126650616 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.157273978 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.123240717 seconds)
  done (took 5.388565577 seconds)
done (took 49.744264924 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.212288051 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.42029379 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.197219939 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.212174221 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.231168954 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.216925864 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.201363821 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.200958312 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.992695002 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.205166934 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.198483406 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.198534485 seconds)
done (took 27.619519362 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.283600098 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.360069326 seconds)
    (2/2) benchmarking "String"...
    done (took 1.491370265 seconds)
  done (took 3.980975465 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.198956262 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.198210905 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.444223821 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.200676107 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.216680698 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.217620119 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.20774325 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.204528453 seconds)
  done (took 15.820112529 seconds)
done (took 25.41620447 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.288549194 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.39469891 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.450641816 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.221027038 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.200561206 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.199410071 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.200404318 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.237055225 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.203621928 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.198105595 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.207798799 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.455863282 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.222455891 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.570699868 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.19872582 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.20964114 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.216200839 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.425314303 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.209884528 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.190800711 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.199348684 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.184631348 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.212715106 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.226841891 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.205162503 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.209927263 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.223540495 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.198581005 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.396629437 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.202332636 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.19373236 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.218356007 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.225962784 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.200734072 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.310073919 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.221935832 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.371950746 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.209343763 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.189847311 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.203939255 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.377855904 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.594713028 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.197375272 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.216310191 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.197361611 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.269240549 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.192344716 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.912111719 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.205810203 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.199265127 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.266580379 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.561479732 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.210976518 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.205400284 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.198745337 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.423728815 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.22183624 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.21799843 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.237385028 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.208995466 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.1967406 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.212952363 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.230211185 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.19965678 seconds)
  done (took 143.195675634 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.197657059 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.197939354 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.203293544 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.225137383 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.19754747 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.197955214 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.19753488 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.198078118 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.198612015 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.22802932 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.198024083 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.204792022 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.202910554 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.181951092 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.200495048 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.213088407 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.198830381 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.199732143 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.205203615 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.199047982 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.217960096 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.200249101 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.220201132 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.204553444 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.234686975 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.270189813 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.222335533 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.21865166 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.198627645 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.199493142 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.236765034 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.199251703 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.804443238 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.05772004 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.215765367 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.210118849 seconds)
  done (took 80.086343555 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.198852115 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.199201925 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.199433557 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.232669891 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.199887571 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.751416083 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.751851292 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.911396743 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.549939705 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.485710429 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.443113385 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.200347883 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.294141674 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.215565262 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.201680779 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.216385926 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.227510326 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.201174197 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.201182806 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.752096451 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.214611652 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.361369192 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.375664991 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.217115037 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.232106933 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.597425546 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.200998143 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.201265313 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.232987585 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.533868693 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.249142292 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.200799942 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.543080473 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.031842398 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.200561869 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.315275775 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.202457502 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.233416101 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.201252121 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.482136072 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.201254934 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.201645491 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.20526354 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.844100007 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.202279599 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.753450245 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.20131654 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.12240846 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.201539526 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.201407639 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.351994935 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.771859667 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.198618034 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.199577516 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.202084696 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.201124585 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.198430483 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.230869827 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.475952175 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.298467079 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.19958806 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.20308512 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.231244568 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.1996595 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.29914142 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.202603755 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.658535684 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.260865406 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.320534144 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.735314502 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.198809538 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.295534615 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.317424148 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.199363503 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.200476976 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.199769703 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.198522162 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.308179538 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.198303863 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.601122755 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.36980266 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.214050376 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.423846754 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.296346575 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.198521602 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.551198576 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.199627853 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.198721876 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.910192088 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.293778106 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.197458296 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.199631889 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.199550346 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.597966414 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.197760156 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.723912076 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.391201182 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.196815197 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.198217413 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.729751186 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.198537998 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.599445968 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.711318213 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.828236521 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.198645772 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.30754277 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.365628486 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.215139566 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.19753165 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.38660036 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.198290618 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.258664341 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.199999942 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.593267525 seconds)
  done (took 365.23506371 seconds)
done (took 589.650662678 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.833810028 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.830154942 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.935393487 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.821569369 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.781618034 seconds)
  done (took 10.330737113 seconds)
done (took 11.458426399 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.379565416 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.380941355 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.260562792 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.386506125 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.706374154 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.397973214 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.362504877 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.223412729 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.298951451 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.273796097 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.301914751 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.248528855 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.232330835 seconds)
  done (took 18.581307423 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.526532537 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.201062194 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.2644892 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.535287761 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.240288841 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.532202263 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.40094631 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.224009247 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.40320477 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.215560995 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.213161026 seconds)
  done (took 17.886831648 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.521199491 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.200203333 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.267394213 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.519314573 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.24041189 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.520621206 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.401208753 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.216193078 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.400192802 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.215527739 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.21250036 seconds)
  done (took 17.844456849 seconds)
done (took 55.440975863 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.241436966 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.365583759 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.224690094 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.214713513 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.211059181 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.212613868 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.214852414 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.210832564 seconds)
  done (took 11.026446761 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.209249314 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.207620127 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.205236543 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.20585747 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.206307176 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.209569474 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.210792733 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.210483201 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.20635318 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.207985189 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.207838698 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.206139645 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.207171045 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.209026879 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.209078725 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.208831758 seconds)
  done (took 20.458977291 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.209711817 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.207459446 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.208318363 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.209694403 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.207867109 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.207962234 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.208282571 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.207624708 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.206982351 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.208108805 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.207161053 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.207891883 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.206477965 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.206882002 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.20575864 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.207650559 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.20725238 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.208024853 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.211177924 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.20805194 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.206494765 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.208112649 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.206836476 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.207093805 seconds)
  done (took 30.120997041 seconds)
done (took 62.73558698 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.203818018 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.215305878 seconds)
  done (took 5.5484509 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.266983248 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.271278608 seconds)
  done (took 3.672137776 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.210739848 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.209092132 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.210577137 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.209532458 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.207943171 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.208823321 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.209407642 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.210144209 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.208786123 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.209762031 seconds)
  done (took 13.226132857 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.209904582 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.209053835 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.207161934 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.209216969 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.210644387 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.207011153 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.209614108 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.210085552 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.211724472 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.20654005 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.209359718 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.207189396 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.208903022 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.206036113 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.208296414 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.206719556 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.20758649 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.206741652 seconds)
  done (took 22.882985655 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.221696945 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.229405567 seconds)
  done (took 3.58125384 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.336362442 seconds)
    (2/7) benchmarking "second"...
    done (took 1.248088998 seconds)
    (3/7) benchmarking "month"...
    done (took 1.317142485 seconds)
    (4/7) benchmarking "year"...
    done (took 1.304492341 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.24914796 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.228010765 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.249644778 seconds)
  done (took 10.062303613 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.210193908 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.402946054 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.505211093 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.787873567 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.21243453 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.213753944 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.084468411 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.213980633 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.215827007 seconds)
  done (took 13.97892395 seconds)
done (took 74.082748354 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.202547466 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.218070707 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.218228117 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.221918903 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.522406145 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.245354586 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.201857925 seconds)
done (took 15.962675097 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.191358503 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.193296306 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.197330087 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.21526086 seconds)
  done (took 9.92892533 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.175279804 seconds)
    (2/2) benchmarking "read"...
    done (took 1.526663395 seconds)
  done (took 4.835321618 seconds)
done (took 15.896635088 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.211943785 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.209676553 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.211750427 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.212522802 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.209609073 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.212809252 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.209057836 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.208313774 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.21145459 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.211716347 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.211060822 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.212872239 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211913738 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.209127013 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208856209 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.211361537 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.209521332 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.210123274 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.208747314 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.209724449 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.211246409 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.211516285 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.208506407 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.209664084 seconds)
  done (took 30.186000943 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.213221468 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.209152636 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.212579192 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.213470162 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.210384831 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.213136134 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.21348763 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.210165153 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.213143331 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.212316005 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.211359676 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.211234971 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.214220892 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.212334149 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213878918 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.211347229 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.214298206 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213599176 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.21381599 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.212212207 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.215206361 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212111033 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.211737775 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.214758107 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.211455849 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.212484076 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.214987814 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.211823769 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.21437249 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.211636753 seconds)
  done (took 37.513829776 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.219227107 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.222614332 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.215680698 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.214255556 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.214461495 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.214565325 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.213385936 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.214326709 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.215310726 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.214449147 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.213704719 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.215260678 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.214053434 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.215384623 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.214276813 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.216613473 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.216355534 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.215104814 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.215129283 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.216213441 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.214936658 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.215430163 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.217442271 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.215260903 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.215594571 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.215479051 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.215908551 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.216119508 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.216396053 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.216611024 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.216189539 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.215950607 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.216087647 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.215841018 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.2167598 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.216029759 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.220889716 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.221314161 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.216580004 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.216514117 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.215574992 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.216335141 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.216988957 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.218042496 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.217193903 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.217786508 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.216688987 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.216413702 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.217176093 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.21633275 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.217796621 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.217209239 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.216157469 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.21738612 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.217017548 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.217216552 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.217469851 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.216658476 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.216967051 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.217749192 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.217528725 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.218284038 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.217968221 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.216842344 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.218935503 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.217861873 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.218598649 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.217527842 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.218477544 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.217384071 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.217885469 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.218531567 seconds)
  done (took 88.735299063 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.218262775 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.216646074 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.216492251 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.21678426 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.216714242 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.218720681 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.216084018 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219075186 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217442244 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.218207027 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218867751 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.216911514 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21578593 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.219202814 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.21860132 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.217349881 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.219517692 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.217991279 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.219098102 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.220654534 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.21915795 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.217008241 seconds)
  done (took 27.934520458 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.21895861 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.223208142 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.216970568 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.220698646 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.219632547 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.222377161 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.219655103 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.221018623 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220925533 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.21758588 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218328997 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221100679 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.219203422 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217872572 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.217361564 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.219845261 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.220851309 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.219678964 seconds)
  done (took 23.096890636 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.217449671 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.218419311 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.220556393 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.219660279 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.219213068 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.220358162 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.219313412 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.222805022 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.22126694 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.220099885 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.222016892 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222003456 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.221035982 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219436805 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222045999 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.218935002 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.221843135 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220729547 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.221776248 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.219434736 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.220472351 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.222115986 seconds)
  done (took 27.992999299 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.221902742 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.222831742 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.220413252 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.219972794 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.220636071 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.223319073 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.222828279 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.219440735 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.223883896 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.223079551 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.219660734 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.22189165 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.223018808 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.221188045 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.222239356 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220815285 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.225223423 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.221435949 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.221805788 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.221335884 seconds)
  done (took 25.579828512 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.226205439 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.226032029 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.225412433 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.224841807 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.225414729 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.225611568 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.22604283 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.225180087 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.225257894 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.226130898 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.22516557 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.225747182 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.226997448 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.226028825 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.226648165 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.226965345 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.225627197 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.224997858 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.226262978 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.226264267 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.225689875 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.226071308 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.226196806 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.226960863 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.22666078 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.227478142 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.22633145 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.226126823 seconds)
  done (took 35.474071055 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.225123462 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.226262545 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.22276431 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.223581578 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.223768855 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.225010827 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.223242973 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.22377249 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.225492783 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.224014074 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.226623341 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.226976718 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.227710138 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.226149751 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.226420068 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.2270038 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227911023 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.225467453 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.224108386 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22541056 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.22762421 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226905692 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.227071664 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.224668006 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224727739 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.228469613 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.224897347 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.226482716 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.227713757 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.223341724 seconds)
  done (took 37.916786764 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.272551283 seconds)
    (2/2) benchmarking "in"...
    done (took 1.271509528 seconds)
  done (took 3.692266892 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.225267413 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.227859564 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.228262749 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.224764933 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.226369423 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.227876537 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.228972465 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.225233741 seconds)
  done (took 10.962246353 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.228648792 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.2281085 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.229004288 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.229474132 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.229252563 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.227233039 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.236526691 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.247086181 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.230289513 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.229785324 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.235692257 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.234939725 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.232527853 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.229694438 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.228799526 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.231624851 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.22985575 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.229795954 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.231446607 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.230198008 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.230873457 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.231835584 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.231049131 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.229378918 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.230844633 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.240487875 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.234222923 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.231860618 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.231137202 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.234404067 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.229658906 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.228200855 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.23136741 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.230598544 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.230286454 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.230858545 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.239307027 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.250981615 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.235710048 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.231785458 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.231827534 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.227971201 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.232498848 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.231806525 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.232572179 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.232133026 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.231645017 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.229282279 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.229283927 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.235143675 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.237252294 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.231988433 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.230523838 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.235295696 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.234209594 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.23920742 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.250736689 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.235610209 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.239776028 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.242223736 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.245202185 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.240286171 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.234841783 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.232987856 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.242841128 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.255759351 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.24030187 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.2475961 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.232204874 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.233369037 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.239566671 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.244581933 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.256414296 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.232605827 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.233392504 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.233602599 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.232658046 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.234292379 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.239324765 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.252928152 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.233387599 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.234439166 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.242819445 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.254257205 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.234141451 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.235430657 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.235108947 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.234845335 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.23440695 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.244562702 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.253850992 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.234602392 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.232996905 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.234093442 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.234791276 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.235412048 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.233228484 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.234774317 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.232540062 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.236089314 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.234778045 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.238393077 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.243041699 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.236211836 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.236480702 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.241155616 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.235325646 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.234460753 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.240701435 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.236477514 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.235234207 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.237355177 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.241041498 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.23393231 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.239013374 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.243288578 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.234742793 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.235603724 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.236202995 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.236700078 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.245279828 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.259738282 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.237255701 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.237016428 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.242001499 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.247848304 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.236348262 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.238416368 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.236609745 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.233716855 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.235107471 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.237027913 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.237529773 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.236648514 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.237967552 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.23793247 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.23405033 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.238024312 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.237756834 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.23866841 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.237231992 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.237607598 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.238981615 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.23988676 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.238241723 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.240696758 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.244776722 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.236936396 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.239296363 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.23887514 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.235505499 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.238023294 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.238891018 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.238569397 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.235996871 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.238320466 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.239145474 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.239671854 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.237868314 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.238528787 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.238852208 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.239915765 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.242353694 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.239638106 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.242664305 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.23928549 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.237422489 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.239066472 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.240599697 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.239163662 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.240304763 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.238476751 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.24357662 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.247424451 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.239920975 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.239494985 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.243177283 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.240245949 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.240017733 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.240745268 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.242678487 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.248317895 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.240608844 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.24627103 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.241475803 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.241571889 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.241025246 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.241634773 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.239612553 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.242729953 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.243929033 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.24827359 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.251902952 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.263890766 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.241997308 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.244702579 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.24089009 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.245248609 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.243877971 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.240888927 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.241636787 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.242351926 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.239695056 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.24170979 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.242025413 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.241227699 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.240468341 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.242608495 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.242898408 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.241734346 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.241826258 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.241282052 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.243559631 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.240003121 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.242629834 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.242058307 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.241946914 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.240355851 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.239346084 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.240755905 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.243219676 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.243021747 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.248179505 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.241968627 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.243030793 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.24294141 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.241908821 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.240264294 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.243745136 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.244290643 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.242435285 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.249661086 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.259203258 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.243411444 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.248308282 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.260815069 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.243309801 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.245366179 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.245101745 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.241770732 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.247231335 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.251376624 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.244856997 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.244113235 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.245054518 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.244282198 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.246521744 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.250842282 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.242191111 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.243534351 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.245148093 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.244702557 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.242127275 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.245545964 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.245770559 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.243477139 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.247572312 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.244698651 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.245552641 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.24578316 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.245365671 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.244662391 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.244697354 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.247926386 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.252831817 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.249401657 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.243914089 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.246997469 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.246429867 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.249068078 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.245903476 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.246762723 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.245450352 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.258714322 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.268335923 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.251996523 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.247020354 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.246871664 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.251625098 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.247084824 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.249824701 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.246111194 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.2464237 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.245240809 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.24629351 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.244967351 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.246496496 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.246729139 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.24683363 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.248481252 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.251051044 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.248440327 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.247561066 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.248653965 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.248824738 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.247477002 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.246510125 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.246893527 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.249615397 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.249447078 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.246785973 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.24734745 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.254667074 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.265487568 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.247892407 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.248755249 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.247555815 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.248529027 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.249348535 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.248136658 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.251278959 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.257085612 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.251545313 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.256376257 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.249741645 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.257457389 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.250092181 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.251216543 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.256155131 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.246451593 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.248069956 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.249844143 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.249524973 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.25632193 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.266851292 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.251407952 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.2544869 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.250119639 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.250340619 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.25121312 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.250595241 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.250736463 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.250608607 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.258159436 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.270735544 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.255192766 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.251308733 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.247828162 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.249966548 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.25028651 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.250647974 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.25180692 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.251748149 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.251111753 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.250876455 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.249246614 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.251536486 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.252637288 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.251664939 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.248078026 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.251972967 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.258213445 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.270444736 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.255117291 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.252339419 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.258011248 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.25276399 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.257562454 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.269327049 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.252353062 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.251638707 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.251459999 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.25322563 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.251489439 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.253493405 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.251666983 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.253409925 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.256222748 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.252898229 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.254806156 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.252606075 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.252610019 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.252248571 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.261398711 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.27529196 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.253939047 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.256430705 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.250263711 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.254356939 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.256116081 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.252638717 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.251191278 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.254977136 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.263197077 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.260828994 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.253039652 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.253488126 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.253782737 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.254484043 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.253105259 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.254238818 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.253883074 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.255281452 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.253606093 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.253824815 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.25606184 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.254217551 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.253567747 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.254849875 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.254614728 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.263195821 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.255276304 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.254954609 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.254734992 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.255791943 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.254637093 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.255400268 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.255564875 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.255114688 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.255573128 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.255941795 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.260758834 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.260358629 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.258141058 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.25545061 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.255828911 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.25656183 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.256067977 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.257168374 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.255465786 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.257156755 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.256336921 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.256455102 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.256081998 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.25458691 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.257916126 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.255715424 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.255318612 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.259544532 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.263750343 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.25577249 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.253761756 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.257176872 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.255422377 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.252512636 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.256053826 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.262971732 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.260211352 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.266572515 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.264686993 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.261442092 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.256863716 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.259687284 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.26386505 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.255404751 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.257218694 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.257802151 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.257920423 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.25829606 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.259561565 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.257595917 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.263403156 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.256918854 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.255962594 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.265553516 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.279067463 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.258345017 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.257898729 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.261132596 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.257098714 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.254770714 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.259114534 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.25840783 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.263754822 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.275841972 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.259818752 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.258810484 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.257790634 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.25901781 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.263733453 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.258233159 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.259031367 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.2569691 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.258554517 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.258797015 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.259841775 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.256611478 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.257699344 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.258683814 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.262185676 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.265100822 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.256814761 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.260739511 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.260340524 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.260312366 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.260281111 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.261120627 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.2578979 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.259110944 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.259070434 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.26171101 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.261143041 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.26195449 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.259259127 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.26119406 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.260808982 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.260016557 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.263638551 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.270592085 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.266819474 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.258314194 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.260116908 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.260836044 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.262752138 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.26098023 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.260549265 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.261920619 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.262048268 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.26050076 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.260259861 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.261430618 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.263754961 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.275869767 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.28276407 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.261769634 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.261958726 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.264329444 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.262889408 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.258717866 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.261822676 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.262842217 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.265381483 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.269279157 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.262668141 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.267813358 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.279244748 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.263142155 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.264987294 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.265995221 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.268358342 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.264178066 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.264159903 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.263016245 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.267291205 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.277559092 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.263359997 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.272346909 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.290429446 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.280181679 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.262917664 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.263264048 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.262791816 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.26403955 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.26484838 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.264160555 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.264345108 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.26442778 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.263521484 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.26396647 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.26957131 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.265526484 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.266534316 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.264817279 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.26425477 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.264769702 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.262020042 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.265490737 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.265288809 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.265582342 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.265436902 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.264752172 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.264379413 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.27626526 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.289940614 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.266783598 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.26633524 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.262491445 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.268665789 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.267547592 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.275811956 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.273301199 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.266214605 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.266289906 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.2663859 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.265859256 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.265342045 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.266902684 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.265638074 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.266364763 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.263739633 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.27744432 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.275426526 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.269028119 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.26628517 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.26777568 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.265828713 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.266358309 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.266344037 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.267213365 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.26811914 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.269415202 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.270736942 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.267097445 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.265602072 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.270913559 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.273014874 seconds)
  done (took 746.205447524 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.264109483 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.263470454 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.263766655 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.265421037 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.265553941 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.264759983 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.265316339 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.265553804 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.26520686 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.265067954 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.264658494 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.265778267 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.265355782 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.266201417 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.265554551 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.26640287 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.265113893 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.26531361 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.266869304 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.265079496 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.26563254 seconds)
  done (took 27.75444092 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.270446528 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.266649256 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.265990707 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.26925426 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.267703435 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.269080146 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.266075886 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.268748021 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.268869835 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.267338147 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.269495081 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.269540855 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.266876448 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.266065777 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.266837178 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.26922239 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.269541379 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.267033349 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.269967858 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.267185202 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.269330919 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.267337516 seconds)
  done (took 29.084940922 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.270087364 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.269529926 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.268641221 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.268350739 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.270197439 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.268014814 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.27108417 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.27000896 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.270581038 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.270421694 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.269508739 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.271921531 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.277130455 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.275943984 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.273920179 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.272936485 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.274033539 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.273492538 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.2744945 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.270962662 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.277698659 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.272295603 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.27081831 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.273968813 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.273012601 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.274547808 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.273352223 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.274300539 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.274718827 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.277704574 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.27324573 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.273513514 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.274249569 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.272874259 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.274802746 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.277653833 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.27383692 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.271895805 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.274083797 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.283467788 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.293640006 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.275052865 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.280035858 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.274392054 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.275551551 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.278208482 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.281815803 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.272204252 seconds)
  done (took 62.341635454 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.275463921 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.275161083 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.273361752 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.275736382 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.275239143 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.275592439 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.276858093 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.2746613 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.273661816 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.274197152 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.276521669 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.272068454 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.273649543 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.276299046 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.276381021 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.273659007 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.274392098 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.273623675 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.274386288 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.274807332 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.274452124 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.276700653 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.276916439 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.275353443 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.277583464 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.273340159 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.27486988 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.276963358 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.274810622 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.274987615 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.276885044 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.276812052 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.279148387 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.275924021 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.276293085 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.277939163 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.278682268 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.27387897 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.279448315 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.275121856 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.277953978 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.278888356 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.277618311 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.278206473 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.274041837 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.275796372 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.276008283 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.275690785 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.276304772 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.278205015 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.27830789 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.275195484 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.278659345 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.276364421 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.278900167 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.279699049 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.277253607 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.27740134 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.27978318 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.277361822 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.276452763 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.277474075 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.276113193 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.27997741 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.278339977 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.277695024 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.277126724 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.27890763 seconds)
  done (took 87.984983291 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.278448516 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.279037332 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.280661973 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.279433459 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.280130163 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.279672843 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.279122484 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.279317708 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.281105007 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.280680348 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.280617753 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.281567904 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.280849633 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.281513817 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.280561224 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.281649353 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.280969756 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.279909785 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.280663096 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.280854483 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.280348391 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.280390646 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.281831175 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.280947745 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.282554831 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.281340937 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.282416704 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.28066538 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.281941571 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.281636155 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.282013805 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.281274101 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.281134369 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.282256828 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.281502061 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.281137505 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.281220104 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.282038582 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.282725715 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.282075823 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.282616395 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.282864149 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.282639751 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.282679256 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.28343664 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.282278477 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.283140495 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.28346765 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.284011594 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.283190059 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.283387903 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.284360826 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.28389016 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.283275486 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.283478876 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.284106336 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.283421724 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.283578307 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.284427519 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.283691771 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.28303533 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.283846799 seconds)
  done (took 80.670367361 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.283613559 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.283842386 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.280591805 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.282495709 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.282740699 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.281650367 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.283044703 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.283483807 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.284101146 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.284360656 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.285339672 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.281095125 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284071166 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28434392 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.282915598 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282792456 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.282688897 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.283087352 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.285655586 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.282644328 seconds)
  done (took 26.864788701 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.282976472 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.285629515 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.281369435 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.282915835 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.285547082 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.28182161 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.285628855 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.287172394 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28183583 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284956683 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.285489284 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.285946944 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282924376 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.283095654 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.286583399 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.283028102 seconds)
  done (took 21.748221647 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.285101511 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.286553209 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.287198348 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.284926677 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.284552124 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.284305701 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.286669485 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.283522288 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.283413745 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.286553867 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.287281561 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.28601893 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.287115398 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.28663933 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.283289489 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.28635315 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.284242993 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.28398414 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.287775266 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.287445524 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.284726736 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.284700294 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.287485708 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.287777993 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.283651407 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.284647526 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.284771185 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.284604969 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.284201555 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.288476338 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.284300885 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.286027337 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.285079757 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.285475674 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.286605752 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.286547726 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.288132218 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.289058049 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.288194736 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.289231579 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.288597056 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.286618744 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.288542283 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.289130691 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.285532886 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.288189941 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.285349296 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.286892527 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.28527038 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.286215798 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.28952645 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.289605503 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.290062634 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.290071793 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.288943037 seconds)
  done (took 71.958973838 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.288771278 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.289262017 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.287004033 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.288766226 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.288848918 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.287396965 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.289208606 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.290067646 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.286434658 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.29040576 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.286949272 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.290552724 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.287405079 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.289860769 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.28707027 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.290884359 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.28803453 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.287248702 seconds)
  done (took 24.398106312 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.287012006 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.287419837 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.290474504 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.288469607 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.289033286 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.290109244 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.287902622 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.2904711 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.290064549 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.289546859 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288090476 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.290281653 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.29071195 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.291794063 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.2885166 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.289163318 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.292299009 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.291530852 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.289631909 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.288733908 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.29213674 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.292642685 seconds)
  done (took 29.58216916 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.28939811 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.290335509 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.288823968 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.305608174 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.309961296 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.290442093 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.291199616 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.291252906 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.312883313 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.34230655 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.337450038 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.309658343 seconds)
  done (took 16.863831604 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290793181 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294097941 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.290896378 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293572625 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293468967 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29026697 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29072575 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290565973 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293413599 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291531007 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28933843 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293128786 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293843404 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290607268 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293181328 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29288744 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29079426 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29056766 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291045923 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293316313 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291135788 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29343838 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290639017 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290648568 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292189685 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292273868 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292851762 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291637612 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291872284 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293825314 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294594561 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291578925 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294334257 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292643904 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294276897 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29562529 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292235197 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294621064 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295005384 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293303636 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.296464196 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295557317 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295091175 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293346584 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296072894 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293112224 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293023198 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294033962 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292273243 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296340287 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295684731 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293230973 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296938142 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295881356 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296932725 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297077431 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295071427 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292548824 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296317956 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295528972 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293056335 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296781478 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294329934 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294385221 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296251562 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294315222 seconds)
  done (took 86.575240757 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295316818 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.293787549 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295224039 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296179342 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293997255 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296491143 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294773631 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293209605 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294859719 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297338017 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298186777 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295481742 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295995028 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295768232 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296109948 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295187117 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295305633 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296907191 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295032322 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297850398 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295158895 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295642726 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29416374 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296616027 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295438824 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29761645 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296427164 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29613572 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295184322 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296407248 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297251709 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295156367 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295855743 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.295704205 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296051209 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295884102 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297032075 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296674201 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296888028 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298282663 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296055594 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300102377 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296700932 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296652016 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296919083 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2974952 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297358755 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297558659 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29701592 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296802015 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29791515 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298284929 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297681642 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297389209 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297445971 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297998291 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297539477 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297331547 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297453377 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301086687 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29807453 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298007821 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301902011 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298709465 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299528763 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299151168 seconds)
  done (took 86.799842791 seconds)
done (took 1749.050202233 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.464261024 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.416707082 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.298417311 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.310903376 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.29965513 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.294259607 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.311852668 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.299667938 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.299555639 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.299404059 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.299632464 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.486119646 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.295591553 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.299066538 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.301454685 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.394185176 seconds)
  done (took 26.587624693 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.327769627 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.306762367 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.414232982 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.321456748 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.326990224 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.48351675 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.361532934 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.305333905 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.470868198 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.351592279 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.295899813 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.332191805 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.305660203 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.295056725 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.328198639 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.482171861 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.548556782 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.301499388 seconds)
  done (took 28.776555326 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.738083135 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.326905103 seconds)
  done (took 5.282066979 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.324457829 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.304887351 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.306639705 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.304298716 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.29683235 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.295913025 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.303728118 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.302320768 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.302816828 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.431828581 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.312337182 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.315161624 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.324503562 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.306378524 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.302150376 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.342377562 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.471696841 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.304516184 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.302652299 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.311371287 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.305239023 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.388601124 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.345917096 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.306652745 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.426844859 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.302681031 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.313125462 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.312297951 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.464626588 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.304513137 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.307621356 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.305678848 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.307878619 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.189940996 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.753980238 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.313635552 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.329755321 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.314647788 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.303821138 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.450804671 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.306475848 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.312498799 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.300179709 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.742201416 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.434012304 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.417708662 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.317683999 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.307269857 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.309736494 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.369759897 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.307961856 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.309172719 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.350645435 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.072244944 seconds)
  done (took 83.60467105 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.30868106 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.29967264 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.478669326 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.319485558 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.301028467 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.300546202 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.315876008 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.579520416 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.338964197 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.312391626 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.620810496 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.850966261 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.32314188 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.34534433 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.209909831 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.360288968 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.302523078 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.301069978 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.308626707 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.303176507 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.84091121 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.307360265 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.303019224 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.465167277 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.339137632 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.791657259 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.30238428 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.312730919 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.303164227 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.302516763 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.809053754 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.329332772 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.370382886 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.304520452 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.560211838 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.665554048 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.634410803 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.306233636 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.335594154 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.307267107 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.313029129 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.788692291 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.652150333 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.303087232 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.318814325 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.793684959 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.304462612 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.307399014 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.314068683 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.549675551 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.302401474 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.30532231 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.303711644 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.309483988 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.304451131 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.378373042 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.392287848 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.803432879 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.304524931 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.3047798 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.326471424 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.304338502 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.31067486 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.308923152 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.309177949 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.654300527 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.457883016 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.311741973 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.653266189 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.803881698 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.326008277 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.875521162 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.326154704 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.309277475 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.37841488 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.310804993 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.305235622 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.789970428 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.322718595 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.305954983 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.639000042 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.307551899 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.623545647 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.321115956 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.305456581 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.868981739 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.320564078 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.31274991 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.306113216 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.305511749 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.305418832 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.306900073 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.572255879 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.322390289 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.30536433 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.306103312 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.318012249 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.317425185 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.306978447 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.310525184 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.877849104 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.329119436 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.305788676 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.309047602 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.305487612 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.313563963 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.309251074 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.306361389 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.570513304 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.306855909 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.314393903 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.305652249 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.307988733 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.308945465 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.457993233 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.313439864 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.608579853 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.310031874 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.306889344 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.311745488 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.306643554 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.319963725 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.309123536 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.315604643 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.216947964 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.572483928 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.326722045 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.308537693 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.307857446 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.309319141 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.30773721 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.309427952 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.338543126 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.309088254 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.062093769 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.343230632 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.327266264 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.309400596 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.320593129 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.309487814 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.310106932 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.308520988 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.595546474 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.569570589 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.458014093 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.310491096 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.309652101 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.035439162 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.345108821 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.487416094 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.329186032 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.310673448 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.551611831 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.48488002 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.311235017 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.309432926 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.311676918 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.567764019 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.310552395 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.608832711 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.842645243 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.332132225 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.311652401 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.067148009 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.015124494 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.311037038 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.311486488 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.62824291 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.32661709 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.311950959 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.309954993 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.31062713 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.311893956 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.31519391 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.313719074 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.311453121 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.310454403 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.478041563 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.501409703 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.328430148 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.321053346 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.799787094 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.361407187 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.311744856 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.316900595 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.312151131 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.3127793 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.372423586 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.313124285 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.322561291 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.314644795 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.323573559 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.831123987 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.312699727 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.31203401 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.50271283 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.986757023 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.334754133 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.312335558 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.311976381 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.198871491 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.826704691 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.368963049 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.616825472 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.325205941 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.351701602 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.312896126 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.404536182 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.831263025 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.31740078 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.313675163 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.954561937 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.336035946 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.986256506 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.314158416 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.316900073 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.893819115 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.336889095 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.317126183 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.312912244 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.327569159 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.612769916 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.314420719 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.350197333 seconds)
  done (took 492.341023487 seconds)
done (took 637.806313819 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.314133351 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.321455162 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.307470219 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.321330439 seconds)
  done (took 10.49905386 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.327351696 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.326871958 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.323097546 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.32016513 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.324634657 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.322163503 seconds)
  done (took 9.179650668 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.315230405 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.322302617 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.32121791 seconds)
  done (took 8.193425627 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.52402573 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.33412603 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.664339419 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.343528018 seconds)
  done (took 9.102362996 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.320257779 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.320292474 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.319334643 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.321274154 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.322976711 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.32433329 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.32319548 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.320815454 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.323367306 seconds)
  done (took 13.126593324 seconds)
done (took 51.334793579 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.37767194 seconds)
    (2/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.525546899 seconds)
    (3/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.724871937 seconds)
    (4/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.325474954 seconds)
    (5/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.138737436 seconds)
    (6/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.328768731 seconds)
    (7/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.311196654 seconds)
    (8/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.459470256 seconds)
    (9/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.311289576 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.564535597 seconds)
    (11/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.567521407 seconds)
    (12/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.035893345 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.373251939 seconds)
    (14/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.339959831 seconds)
    (15/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.187548397 seconds)
    (16/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.382503199 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.367114419 seconds)
    (18/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.168927341 seconds)
    (19/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.301133304 seconds)
    (20/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.306409828 seconds)
    (21/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.321238699 seconds)
    (22/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.428784848 seconds)
    (23/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.936041493 seconds)
    (24/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.50099274 seconds)
    (25/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.341395047 seconds)
    (26/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.686895282 seconds)
    (27/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.301858035 seconds)
    (28/286) benchmarking ("sort", Float32, true)...
    done (took 2.315638472 seconds)
    (29/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.316993648 seconds)
    (30/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.327993836 seconds)
    (31/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.314484652 seconds)
    (32/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.328159694 seconds)
    (33/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.300980434 seconds)
    (34/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.300933334 seconds)
    (35/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.40054408 seconds)
    (36/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.30137261 seconds)
    (37/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.302170872 seconds)
    (38/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.35497543 seconds)
    (39/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.44704511 seconds)
    (40/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.325440604 seconds)
    (41/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.179842208 seconds)
    (42/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.421101119 seconds)
    (43/286) benchmarking ("sort", BigInt, false)...
    done (took 2.316983391 seconds)
    (44/286) benchmarking ("sort", Int64, true)...
    done (took 2.316233373 seconds)
    (45/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.303186533 seconds)
    (46/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.318994073 seconds)
    (47/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.448106508 seconds)
    (48/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.302096991 seconds)
    (49/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.30594474 seconds)
    (50/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.302321635 seconds)
    (51/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.82819293 seconds)
    (52/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.336028291 seconds)
    (53/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.301992765 seconds)
    (54/286) benchmarking ("sort", BigInt, true)...
    done (took 2.353634099 seconds)
    (55/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.303209025 seconds)
    (56/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.424540496 seconds)
    (57/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.038965737 seconds)
    (58/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.329544071 seconds)
    (59/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.302598595 seconds)
    (60/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.733632647 seconds)
    (61/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.348241728 seconds)
    (62/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.430468228 seconds)
    (63/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.568652807 seconds)
    (64/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.303811052 seconds)
    (65/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.318506636 seconds)
    (66/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.341811818 seconds)
    (67/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.303339581 seconds)
    (68/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.377355888 seconds)
    (69/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.34438287 seconds)
    (70/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.317686476 seconds)
    (71/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.328545139 seconds)
    (72/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.320630602 seconds)
    (73/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.308492933 seconds)
    (74/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.174810536 seconds)
    (75/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.32110201 seconds)
    (76/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.419402406 seconds)
    (77/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.22150066 seconds)
    (78/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.672780893 seconds)
    (79/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.306160881 seconds)
    (80/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.797858136 seconds)
    (81/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.343367177 seconds)
    (82/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.180088097 seconds)
    (83/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.304097168 seconds)
    (84/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.305975889 seconds)
    (85/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.318505616 seconds)
    (86/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.337116101 seconds)
    (87/286) benchmarking ("sort", Int64, false)...
    done (took 2.317315382 seconds)
    (88/286) benchmarking ("sort", Int8, false)...
    done (took 2.318473822 seconds)
    (89/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.30640672 seconds)
    (90/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.324577136 seconds)
    (91/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.405943344 seconds)
    (92/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.153030532 seconds)
    (93/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.227919623 seconds)
    (94/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.892382757 seconds)
    (95/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.305969759 seconds)
    (96/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.319376363 seconds)
    (97/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.304517368 seconds)
    (98/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.080988147 seconds)
    (99/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.091352982 seconds)
    (100/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.321925396 seconds)
    (101/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.409214554 seconds)
    (102/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.317834302 seconds)
    (103/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.111178173 seconds)
    (104/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.179936589 seconds)
    (105/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.181420434 seconds)
    (106/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.418884372 seconds)
    (107/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.693739232 seconds)
    (108/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.308243726 seconds)
    (109/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.316554769 seconds)
    (110/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.307119828 seconds)
    (111/286) benchmarking ("sort", Int8, true)...
    done (took 2.32493993 seconds)
    (112/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.404355967 seconds)
    (113/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.426791513 seconds)
    (114/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.52485944 seconds)
    (115/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.319105992 seconds)
    (116/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.354676383 seconds)
    (117/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.506924811 seconds)
    (118/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.403392813 seconds)
    (119/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.431599421 seconds)
    (120/286) benchmarking ("sort", Float32, false)...
    done (took 2.320371076 seconds)
    (121/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.322235633 seconds)
    (122/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.330639943 seconds)
    (123/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.308245678 seconds)
    (124/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.310192472 seconds)
    (125/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.346255896 seconds)
    (126/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.324648102 seconds)
    (127/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.772835114 seconds)
    (128/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.334097557 seconds)
    (129/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.355165184 seconds)
    (130/286) benchmarking ("sort", Bool, false)...
    done (took 1.836981537 seconds)
    (131/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.344777791 seconds)
    (132/286) benchmarking ("sort", Float64, true)...
    done (took 2.32378913 seconds)
    (133/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.323155939 seconds)
    (134/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.681246423 seconds)
    (135/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.599276801 seconds)
    (136/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.446058385 seconds)
    (137/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.452257281 seconds)
    (138/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.070434097 seconds)
    (139/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.600491026 seconds)
    (140/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.339604878 seconds)
    (141/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.834786326 seconds)
    (142/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.313140306 seconds)
    (143/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.347975133 seconds)
    (144/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.317035562 seconds)
    (145/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.437551003 seconds)
    (146/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.322248328 seconds)
    (147/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.337000598 seconds)
    (148/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.316434572 seconds)
    (149/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.324729425 seconds)
    (150/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.435413769 seconds)
    (151/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.322884593 seconds)
    (152/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.451556163 seconds)
    (153/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.071406903 seconds)
    (154/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.351174402 seconds)
    (155/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.511952382 seconds)
    (156/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.972497687 seconds)
    (157/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.31617745 seconds)
    (158/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.319988522 seconds)
    (159/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.445043201 seconds)
    (160/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.308420413 seconds)
    (161/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.744737118 seconds)
    (162/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.97053288 seconds)
    (163/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.352244663 seconds)
    (164/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.350889992 seconds)
    (165/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.311741119 seconds)
    (166/286) benchmarking ("sort", Float64, false)...
    done (took 2.324961028 seconds)
    (167/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.318658511 seconds)
    (168/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.311416437 seconds)
    (169/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.331612896 seconds)
    (170/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.737187265 seconds)
    (171/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.366442576 seconds)
    (172/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.242871348 seconds)
    (173/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.184726995 seconds)
    (174/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.316408083 seconds)
    (175/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.261583199 seconds)
    (176/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.331114118 seconds)
    (177/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.32840643 seconds)
    (178/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.317557592 seconds)
    (179/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.332055154 seconds)
    (180/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.601793721 seconds)
    (181/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.326870476 seconds)
    (182/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.368485598 seconds)
    (183/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.23354931 seconds)
    (184/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.432317199 seconds)
    (185/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.367151413 seconds)
    (186/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.310790503 seconds)
    (187/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.32268749 seconds)
    (188/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.326317244 seconds)
    (189/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.350160602 seconds)
    (190/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.343201481 seconds)
    (191/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.337047964 seconds)
    (192/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.916295254 seconds)
    (193/286) benchmarking ("sort", Bool, true)...
    done (took 2.327550256 seconds)
    (194/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.383472253 seconds)
    (195/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.313055613 seconds)
    (196/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.269260455 seconds)
    (197/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.359349258 seconds)
    (198/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.326886098 seconds)
    (199/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.313698706 seconds)
    (200/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.313214275 seconds)
    (201/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.330736302 seconds)
    (202/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.691576139 seconds)
    (203/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.328168692 seconds)
    (204/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.353772205 seconds)
    (205/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.325048386 seconds)
    (206/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.535170204 seconds)
    (207/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.352178324 seconds)
    (208/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.326588653 seconds)
    (209/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.438413751 seconds)
    (210/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.411618644 seconds)
    (211/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.313581104 seconds)
    (212/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.369495198 seconds)
    (213/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.315880002 seconds)
    (214/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.708506035 seconds)
    (215/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.825363908 seconds)
    (216/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.338644272 seconds)
    (217/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.354524365 seconds)
    (218/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.350028999 seconds)
    (219/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.313935967 seconds)
    (220/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.330865499 seconds)
    (221/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.327098893 seconds)
    (222/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.374107022 seconds)
    (223/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.316028266 seconds)
    (224/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.33591178 seconds)
    (225/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.332735774 seconds)
    (226/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.331524073 seconds)
    (227/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.426229118 seconds)
    (228/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.434312312 seconds)
    (229/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.392991375 seconds)
    (230/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.413439563 seconds)
    (231/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.314253918 seconds)
    (232/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.356192295 seconds)
    (233/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.375039142 seconds)
    (234/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.35572608 seconds)
    (235/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.313948677 seconds)
    (236/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.413724777 seconds)
    (237/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.355112239 seconds)
    (238/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.078452751 seconds)
    (239/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.538135529 seconds)
    (240/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.345290036 seconds)
    (241/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.321671616 seconds)
    (242/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.320864285 seconds)
    (243/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.331740948 seconds)
    (244/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.944428876 seconds)
    (245/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.388525298 seconds)
    (246/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.358787771 seconds)
    (247/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.940424115 seconds)
    (248/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.720625284 seconds)
    (249/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.535124054 seconds)
    (250/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.182941925 seconds)
    (251/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.316413771 seconds)
    (252/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.324192731 seconds)
    (253/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.345388489 seconds)
    (254/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.317021759 seconds)
    (255/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.323407551 seconds)
    (256/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.950130408 seconds)
    (257/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.578195614 seconds)
    (258/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.339875231 seconds)
    (259/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.32694353 seconds)
    (260/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.821332877 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.414676768 seconds)
    (262/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.681436225 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.429054139 seconds)
    (264/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.137545486 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.463759192 seconds)
    (266/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.332416649 seconds)
    (267/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.381259962 seconds)
    (268/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.328526439 seconds)
    (269/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.317422309 seconds)
    (270/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.34739631 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.380311556 seconds)
    (272/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.539742552 seconds)
    (273/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.346478418 seconds)
    (274/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.692841049 seconds)
    (275/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.357265177 seconds)
    (276/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.377947615 seconds)
    (277/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.422497358 seconds)
    (278/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.354519289 seconds)
    (279/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.374237718 seconds)
    (280/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.168281074 seconds)
    (281/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.365147582 seconds)
    (282/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.345038389 seconds)
    (283/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.333116467 seconds)
    (284/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.330933437 seconds)
    (285/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.358895778 seconds)
    (286/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.403735062 seconds)
  done (took 564.200742202 seconds)
done (took 565.434181135 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.365221893 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.359792185 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.342620155 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.362599479 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.455033047 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.519186473 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.353133864 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.344772103 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.390354084 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.391724111 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.341323337 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.518013128 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.34400236 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.342403041 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.342712101 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.357367846 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.336134472 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.342363367 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.359009735 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.352463243 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.358233684 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.341462577 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.393464186 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.517718908 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.347131048 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.347040784 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.346304543 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.362433106 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.454810427 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.346219488 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.34629597 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.355236991 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.336497862 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.342249782 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.340311866 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.363240131 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.354419631 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.354104088 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.349317808 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.376129642 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.338244851 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.343074782 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.345154717 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.346528934 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.344927674 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.34852171 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.346526257 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.351654711 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.358211051 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.360821804 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.334231395 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.361007902 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.348401568 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.345999151 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.356904397 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.346658987 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.350121151 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.363678964 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.366385156 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.363970434 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.336845876 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.352264219 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.348875161 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.36320485 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.353027539 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.337221611 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.342081426 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.352247487 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.342535326 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.350437695 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.338386467 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.356085147 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.348724637 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.361493888 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.379179669 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.34521078 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.34289751 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.346282472 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.355067832 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.346154413 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.359636841 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.361346526 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.351662753 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.349806723 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.361896387 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.525543024 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.359121552 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.348431576 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.358206918 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.366979623 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.354747358 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.358963796 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.351855397 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.344548618 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.359371667 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.353697361 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.351911917 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.350962244 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.354615824 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.359432876 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.34356962 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.366755941 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.346714889 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.346268742 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.34850991 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.362450709 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.346540074 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.350673904 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.370960909 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.398696751 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.351446213 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.33948443 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.354211359 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.366864467 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.359920576 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.353608008 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.346306251 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.338882373 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.338773926 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.364385701 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.351890335 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.34883957 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.368035129 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.352886254 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.347314017 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.352026543 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.353901079 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.364331454 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.471135136 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.361164544 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.382419629 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.349717316 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.354747511 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.38185548 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.368537443 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.381668603 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.355295897 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.368149199 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.366810156 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.348259898 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.36191142 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.361929809 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.353812319 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.356967117 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.34684241 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.382032337 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.365783929 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.366332314 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.372424405 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.471469872 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.35015254 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.340240014 seconds)
done (took 224.2649907 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.413434684 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.348339731 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.43583109 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.351045435 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.450210056 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.451222089 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.347256437 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.348422961 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.346657179 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.729641778 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.347317015 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.348732526 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.348874339 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.348379794 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.4350494 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.350852585 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.348898019 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.693267715 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.35150689 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.424035164 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.346963635 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.348236702 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.351657351 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.735642353 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.349602905 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.347435894 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.422421569 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.351147084 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.69789218 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.34632118 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.347709816 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.699566323 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.44128499 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.369749473 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.361352977 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.358604621 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.455081389 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.369528495 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.43426397 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.433950251 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.438466433 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.389880948 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.347597089 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.351333942 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.352452484 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.353795674 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.349490661 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.379393993 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.352393031 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.350330847 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.692863799 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.363762885 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.350686924 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.349661767 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.351417576 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.383271217 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.350863624 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.353544238 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.444585106 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.353496825 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.416701158 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.737305519 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.733787204 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.3517052 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.351273608 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.351124678 seconds)
  done (took 105.649278024 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.420834872 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.426389078 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.465248805 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.354243115 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.403854111 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.469808223 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.353895631 seconds)
  done (took 11.156696056 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.360059125 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.354316784 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.403921494 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.402599969 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.353367884 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.540306099 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.355484763 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.365463446 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.352740809 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.406424233 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.355962661 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.356414062 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.361460904 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.346208296 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.402938272 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.366183633 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.470467958 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.355568649 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.357270276 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.507282038 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.353229538 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.363113687 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.408265158 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.366929204 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.35821321 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.361858979 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.212154871 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.355530661 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.35315075 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.356690458 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.353313746 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.443857606 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.358323296 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.349236338 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.355287516 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.47092793 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.355972027 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.353832486 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.356550608 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.349864367 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.35573084 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.356983602 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.35688133 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.355071213 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.356196205 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.380066752 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.357492298 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.357579023 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.357447605 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.358040636 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.408742527 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.357853962 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.354517505 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.35453563 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.411990886 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.364647727 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.357853374 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.355359309 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.357329884 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.355265607 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.510099129 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.405391285 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.359289237 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.405521879 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.358775165 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.3574303 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.357572958 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.35925815 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.448215237 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.358928372 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.40727364 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.35622829 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.544324225 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.383839115 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.361146576 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.361603531 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.361914079 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.35895673 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.355116561 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.365060305 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.357500586 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.359872521 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.364617341 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.35741617 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.35677218 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.547866473 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.467776809 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.357475498 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.372718465 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.366675509 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.357436858 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.414131868 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.360196651 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.358146096 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.411540606 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.474653433 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.413484297 seconds)
  done (took 140.02115388 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.365172829 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.367781011 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.363276231 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.383346611 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.359639182 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.359903128 seconds)
  done (took 9.467772918 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.362953082 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.361305269 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.36092815 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.361516204 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.361306363 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.362124908 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.360816773 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.363863241 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.365103772 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.361526719 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.361725622 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.363364771 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.36267906 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.362190173 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.36268665 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.362216132 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.362375883 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.359317221 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.362041541 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.363074007 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.361501026 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.363614593 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.362627946 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.363917858 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.366605216 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.362114134 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.370364964 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.362892234 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.362788374 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.367404117 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.365040692 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.363939753 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.364708488 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.368487713 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.368207012 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.363590352 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.36699226 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.364387102 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.361598636 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.363496332 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.365748925 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.362977214 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.364632836 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.366124117 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.365890023 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.36932077 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.367755235 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.372103992 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.363275025 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.366186191 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.366043049 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.364175441 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.365669931 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.365676831 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.367783255 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.386054775 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.370544283 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.364244085 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.364686073 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.366117587 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.366898006 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.364009381 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.367279401 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.36957075 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.363025309 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.367849073 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.367219335 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.371653783 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.364572816 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.366704127 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.366928418 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.364079287 seconds)
  done (took 100.553911695 seconds)
done (took 368.107077872 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.80668521 seconds)
  done (took 4.081009466 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.456013748 seconds)
  done (took 3.733576256 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.805147674 seconds)
  done (took 23.089407284 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.450315123 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.409770833 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.363656145 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.372963477 seconds)
  done (took 10.875846653 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.616477479 seconds)
  done (took 3.893317863 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.360092802 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.360972998 seconds)
  done (took 5.999711256 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.627938834 seconds)
  done (took 3.90398499 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.807272969 seconds)
  done (took 4.091019047 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.369847822 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.377725463 seconds)
  done (took 6.035387732 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.347643281 seconds)
  done (took 3.624958244 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.690898366 seconds)
  done (took 17.969836157 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.37276916 seconds)
  done (took 3.652631044 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.395325558 seconds)
  done (took 3.672915321 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.979576117 seconds)
  done (took 6.257201594 seconds)
done (took 102.156487966 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.360992396 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.366987987 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.365840026 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.365705665 seconds)
  done (took 10.736965328 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.4035316 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.402310516 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.403726884 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.413440371 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.406593556 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.40531859 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.395622971 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.396918071 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.413917075 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.406262165 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.405108438 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.405121679 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.406770802 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.394940231 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.405433755 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.404664778 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.41394635 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.405036476 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.396800927 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.407135773 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.37030334 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.414594401 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.406891701 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.370854627 seconds)
  done (took 34.934983836 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.866757137 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.443168276 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.523577018 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.421773182 seconds)
  done (took 7.534844184 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.422503472 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.425001876 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.435002975 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.474615949 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.50164784 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.43343312 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.398418243 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.392436217 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.379123552 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.42452187 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.499613168 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.440228387 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.50867601 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.372021805 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.554276321 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.372240589 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.372756846 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.42355554 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.475932396 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.488842308 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.374223154 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.423565078 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.428639756 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.440952544 seconds)
  done (took 35.741707689 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.372773319 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.391150204 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.371415752 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.371343657 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.380655137 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.37188222 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.371604896 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.374065874 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.372348416 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.377303547 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.371640855 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.385246064 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.37172712 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.37194468 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.378513124 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.374319388 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.377628796 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.37149193 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.373483748 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.378645446 seconds)
  done (took 28.790205276 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.365095503 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.365824597 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.718583409 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.621222259 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.365305407 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.366583832 seconds)
  done (took 14.084189494 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.443378111 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.585751632 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.374708807 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.739317712 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.827486806 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.379254732 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.37463866 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.624944065 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.95190663 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.939570255 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.439005203 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.443414133 seconds)
  done (took 20.406203427 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.37397292 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.374203755 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.374896231 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.391123744 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.430189443 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.378239372 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.381358818 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.368225131 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.437661205 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.435715303 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.378728307 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.431974274 seconds)
  done (took 22.040307574 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455699886 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.369671074 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.371145074 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415100656 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375688129 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.582350877 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.386511348 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.134229148 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.380800596 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.644655476 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375674034 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46647312 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.625442103 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386587364 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.376931308 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.363084314 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.603552219 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879167223 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378923332 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370537454 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403561947 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.371474789 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.378714269 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.616069382 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.591069594 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371230799 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.632135316 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.370882273 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.662847819 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.391628741 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382055244 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371612537 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646163351 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047959319 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493588799 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.590666158 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381554361 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.390669284 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.394116968 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.378033325 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390297224 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.379826259 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382400688 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372569866 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.371001562 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371685262 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.143107516 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.381830304 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.370081194 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.373040149 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.645328944 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478068328 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.377349299 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.372755999 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378503339 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376453554 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.376544711 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.469980951 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943101998 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372083751 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394158413 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.380777881 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.37663599 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374438049 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01767697 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.379851171 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.378218718 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.377623735 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373718122 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.374151914 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.397675087 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373712801 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.399838975 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373176206 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.103252928 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.384306881 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382391435 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933679482 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390197135 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.382853833 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.602579553 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37532934 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37547933 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.372775434 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.37494761 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.114639018 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391066075 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.361332038 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424505354 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.129773365 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.621464646 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399802159 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400327765 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.599638697 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.360934663 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375756296 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.376170044 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385618954 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398210755 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.138202083 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401196626 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.380247286 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.633302965 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.588024527 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375963068 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.382399707 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.88945999 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401268258 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.400234491 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.391073789 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.604983127 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.98157375 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.400337589 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377290919 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40282526 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.377199661 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.176029736 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385574726 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.38569408 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.376941422 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670508206 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.194841687 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386826582 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445149905 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381584474 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.376849802 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378409646 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388100406 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.376943502 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.590143777 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399038118 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.395590049 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.378646407 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378286886 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.382935438 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385483338 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.388198868 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.603375471 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379623453 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662770267 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379692361 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378908971 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379087291 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.601998928 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.375935336 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.408198073 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.638195058 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379900084 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.385510982 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.396776512 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397649448 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478454065 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403386268 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.388123248 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.64324714 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.383723662 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.38445648 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380211292 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.389094879 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388038883 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.385623992 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385087953 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.986472786 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366737901 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.386851229 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.270403212 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.395753732 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448706902 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.38730038 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.601784868 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.392370892 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396605632 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.38968907 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.381748722 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.611695089 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.391474704 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.3815401 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.468961195 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.882638281 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.002312549 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.402551097 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.382351595 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.378914617 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.380232556 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381502344 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381445349 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.382186586 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.603103215 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.402572422 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.387472679 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.984502592 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393575687 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.382081367 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.396387344 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.395014953 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.390034024 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38263081 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.386404298 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39196972 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394217136 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.401810406 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.527370087 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.398246153 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.383009658 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.899290026 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.389576007 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.384897653 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.383997427 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418069744 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.384345707 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.235185301 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.642880837 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387383769 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.648679027 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.391347546 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.407877185 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.382582237 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389818411 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397248415 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.398001623 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397092025 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.395843957 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.384655998 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391278604 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951215817 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.139817779 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943696218 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393941021 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.397500997 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.389490906 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.145705092 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406207531 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38537379 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.625616435 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.144753223 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407185093 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.892295756 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.384286268 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.185980848 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.659409361 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.622049309 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387615705 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.40809501 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.66738412 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.605670007 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421586341 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.391818463 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393667944 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.371747827 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.979686041 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407628176 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.470032819 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.150385618 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418384903 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.395981211 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.459174408 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.390171749 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.836482067 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.413092935 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387325817 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.397192648 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.407242363 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.269201044 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.396286712 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388684879 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024338625 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.389817363 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.900766501 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412693708 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.611933215 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.406769594 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.391056353 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.385275153 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.397595531 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.643122222 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.655405667 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394549265 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.390680913 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949355773 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.249850751 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.394545058 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387703861 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.17338508 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408918856 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.69057903 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.396628934 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.403866838 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390424683 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.389290726 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390099308 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.386658279 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.396414715 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36530751 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900940306 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.417146329 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407645725 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395777742 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.240973406 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.64460912 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.403762727 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.996158255 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.623437104 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40442702 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419733314 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.394581216 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39129323 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.400738879 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.390501576 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.626534331 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.471900867 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.621093714 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.405830132 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.38310959 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.418628316 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.608928954 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.390099068 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.390809273 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.64718954 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.392973553 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.407518763 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.128866259 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4210471 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.39020109 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39610737 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.392306271 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416070927 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462143303 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616177964 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.40636918 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.402705541 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.817910109 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427069238 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400078121 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.406743532 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486725031 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398313484 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.410128652 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.169744008 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.000817728 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.173254302 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.008360964 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.672798487 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.396792065 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395166345 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393591818 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.542122945 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393370979 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667644748 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393786698 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.393103523 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420593859 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394114156 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404458632 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.613061721 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668151848 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395117964 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408646144 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397689168 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.394664474 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.405765697 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.604466008 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90201956 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962916583 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395661378 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.398839134 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.159973824 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672282361 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393463827 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394947992 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395025623 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.405209652 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.400165635 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.405055756 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396423294 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548208694 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.662772465 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087710781 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.427124315 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.423879845 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.168863883 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401355395 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.654494172 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393477997 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.6225927 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.01041271 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.128853456 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.663237386 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466918993 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.621480921 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.39839887 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544662909 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.405136198 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.395382653 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397665358 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.243061677 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.394494914 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.407296325 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.011356286 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.663801943 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.40158539 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.406723354 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420965283 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.406582476 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.621626975 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.154493529 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.62877034 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.407218904 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.404056546 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.396892417 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.011819024 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.680909878 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404527808 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.400702002 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.651051486 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.639879831 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.423617609 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.851155884 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.39468345 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966242033 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.370397962 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420473942 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409475922 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.132906666 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.017869093 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.41704272 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906961664 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401645656 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400492619 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677224738 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.406172996 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.411401975 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679224827 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.402778036 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.401184654 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629277385 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.012010168 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.188875077 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.418817616 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415162321 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.405248483 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399740759 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469983138 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402805719 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408171489 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.843274647 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.423299367 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40112411 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.415261797 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.398431679 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401013687 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.402161415 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399858631 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.407291578 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.389320949 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.40814017 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.416945772 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.502306902 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998484617 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424452997 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.075092704 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.731079402 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.657393945 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.404105262 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.391423658 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.40642809 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401809775 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401354873 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4016886 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.407315539 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972883232 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.403097189 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.417790039 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.405854559 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.619454852 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615723873 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.402613529 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.634036168 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409622039 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.42360533 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.389416904 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402682673 seconds)
  done (took 980.353770521 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.427904387 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.435486117 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.43185792 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.427959938 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.440248313 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.449261168 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.47165651 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.424452943 seconds)
  done (took 20.824289314 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.403687347 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.413710396 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.418007416 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.41257451 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.410919554 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.888178981 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.429472417 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.413799396 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.413422843 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.420826224 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.412897375 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.075209472 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.41401063 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.416669745 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.399607876 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.413712753 seconds)
  done (took 33.079513791 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.413362011 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.573847823 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.397504368 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.47259121 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.431766308 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.41270427 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.660204037 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.424831105 seconds)
  done (took 27.104247669 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.416400273 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.415917743 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.414235066 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.416234403 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.416618414 seconds)
  done (took 8.396947288 seconds)
done (took 1245.307673128 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.408677279 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.411858746 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.408625063 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.41251978 seconds)
  done (took 6.958658951 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.392201104 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.391732841 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.392757675 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.407099026 seconds)
  done (took 9.900065408 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.142845605 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.069913018 seconds)
  done (took 5.529787686 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.408491872 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.16971088 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.145769781 seconds)
  done (took 8.044972146 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.715183414 seconds)
  done (took 3.033739758 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.824018679 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.792062331 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.606813304 seconds)
  done (took 6.543478799 seconds)
done (took 41.327104837 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.407276727 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.767911088 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.564886704 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.416072421 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.570500728 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.564067074 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.216971321 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.408976713 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.409590652 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.422301936 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.408823612 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.56974573 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.128897672 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.755437267 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.130356621 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.66160002 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.580893138 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.41376554 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.421364389 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.410081466 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.21796106 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.409025747 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.427567204 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.409579175 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.57837629 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.554242391 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.408439304 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.657960956 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.408372219 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.409007565 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.555276956 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.409636191 seconds)
  done (took 83.996567012 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.412112853 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.416189081 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.418292436 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.415802416 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.408915254 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.416788584 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.410649842 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.416062847 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.410185086 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.411263798 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.437379073 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.41175937 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.412072886 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.41121283 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.414419538 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.410904341 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.435350314 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.422889739 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.410602108 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.410610802 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.413681715 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.424343733 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.411284973 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.410521883 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.428528601 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.412767096 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.446578256 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.410441204 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.428139204 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.411583113 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.42882894 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.428604842 seconds)
  done (took 78.691264377 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.411913168 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.415792459 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.412000122 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.411613285 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.411724064 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.41510185 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.413337864 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.413721296 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.421038605 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.418411349 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.415861682 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.412710763 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.429123612 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.412681063 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.413531652 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.41255851 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.412383073 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.414292556 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.414203112 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.430051179 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.413984464 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.425255415 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.413502633 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.413613757 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.416426879 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.415707993 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.413631844 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.431400256 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.414478677 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.412442368 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.416754978 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.414533346 seconds)
  done (took 78.63893111 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.609030289 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.419920605 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.421396848 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.353233055 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.421481034 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.421176465 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.41549654 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.611316602 seconds)
  done (took 14.998773695 seconds)
done (took 257.645279204 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.413523726 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.431780536 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.624422184 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.441707767 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.416137506 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.443864752 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.44140457 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.618144048 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.387935959 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.624302561 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.414879689 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.440730727 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.415054567 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.440553091 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.699108836 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.545952726 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.309495937 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.4172005 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.77497823 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.43449924 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.691231373 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.420388938 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.626118415 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.396798985 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.437696658 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.41778377 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.42021874 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.300105785 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.443886193 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.774219522 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.426073442 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.404100461 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.489273444 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.487686063 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.549635918 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.544461395 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.43456794 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.488711087 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.627243662 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.41905339 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.415876001 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.216258861 seconds)
  done (took 84.494307166 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.424538956 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.532405725 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.423659879 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.424824556 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.425153241 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.527668349 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.507419885 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.426500499 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.424627722 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.424100413 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.424599804 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.425903703 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.424635938 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.427015625 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.425445932 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.425620308 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.424606237 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.426811356 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.428174289 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.461861299 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.532565678 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.428780769 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.419555951 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.424189834 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.514975533 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.528861034 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.42557634 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.419980978 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.460019782 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.426556463 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.429300289 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.467815275 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.425823507 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.427840379 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.535421029 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.513747401 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.429699228 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.424134569 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.530675866 seconds)
  done (took 57.931453178 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.427901885 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.679809959 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.858107926 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.434621692 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.427709196 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.433006083 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.508893012 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.429421378 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.431687657 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.432808934 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.583656713 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.432645612 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.462184921 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.890731063 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.431761562 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.429167778 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.429626468 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.429585025 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.687882422 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.438101239 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.530132583 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.42992053 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.508981488 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.439524714 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.451727027 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.429649972 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.434588124 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.020242886 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.432086489 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.586370418 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.253249675 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.510591987 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.955720865 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.873772582 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.247307744 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.434013186 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.429446644 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.589642052 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.432023244 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.430356642 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.509787505 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.431215799 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.884076869 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.126304782 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.451172664 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.42959676 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.043762992 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.590074936 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.682978544 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.439980197 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.897133696 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.437897141 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.433342577 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.432512002 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.681996675 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.438592484 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.430403882 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.050159773 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.455212106 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.511333723 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.432997058 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.432056022 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.698206546 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.432110019 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.685632471 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.433908808 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.439740583 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.453380523 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.867889657 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.43686551 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.1442349 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.452195151 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.431840172 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.588518746 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.689160367 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.088677183 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.437857823 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.705527006 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.977356653 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.516468481 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.443233627 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.013323438 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.516395454 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.441889752 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.436370329 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.433833025 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.433572987 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.480769731 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.512001644 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.082849504 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.142340929 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.088476543 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.538345198 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.451634312 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.435154035 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.057440902 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.45490704 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.433612893 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.874692823 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.152460727 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.457841011 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.442698108 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.16082583 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.459222497 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.516831755 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.444219333 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.885645832 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.440292926 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.480325764 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.435344084 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.442529171 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.459083545 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.515602479 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.44119638 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.434752242 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.117613386 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.615626023 seconds)
  done (took 188.910183359 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.429010128 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.428435041 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.429089691 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.444502596 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.428474044 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.438806062 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.428353703 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.429719749 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.435816953 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.42968182 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.429932338 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.430414857 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.428511336 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.433858681 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.442947252 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.441881552 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.430048643 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.433003124 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.436548699 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.430029868 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.430471585 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.4555078 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.435759085 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.430425224 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.430756505 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.429325482 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.44052178 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.433235509 seconds)
  done (took 65.486627564 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.438755134 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.011568916 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.440557246 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.572913307 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.46102835 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.435090618 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.572808365 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.49970035 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.440185132 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.435485356 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.436453282 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.755838095 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.448535038 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.962279841 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.636727659 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.576358886 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.965979134 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.456542584 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.435449172 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.437192071 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.576288222 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.451581122 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.746448826 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.014236171 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.440625501 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.013808116 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.429620037 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.439124641 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.438112766 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.015835923 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.43865479 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.749277482 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.519886517 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.498776849 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.017176203 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.974078689 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.986958919 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.593016757 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.440003406 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.437729265 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.437570286 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.4296794 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.018130187 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.442853505 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.440807957 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.01235579 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.458069316 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.442272754 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.446330902 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.438437591 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.500050782 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.502185834 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.752819249 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.023091343 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.520254062 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.452394365 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.57603366 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.854896608 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.44306212 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.965954104 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.43104538 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.022827545 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.46210693 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.430471884 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.441255897 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.446712456 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.59524766 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.577209939 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.969138809 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.460475748 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.968645013 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.614006827 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.44043553 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.440369952 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.443737672 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.022065828 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.968799207 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.612423407 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.578790134 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.642542228 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.433198674 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.441568535 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.431979638 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.520815058 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.44114906 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.042297341 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.988144058 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.461497812 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.442614999 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.444469877 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.443377279 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.623840299 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.024882631 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.522781457 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.965706008 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.77417018 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.757303354 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.445855435 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.503394588 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.460026784 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.757759374 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.445078156 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.501221214 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.887379548 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.75893133 seconds)
  done (took 171.230976232 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.691542981 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.456627032 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.55813912 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.60369026 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.054077888 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.050473981 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.4374508 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.564874695 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.557374382 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.713259438 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.446135556 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.532143348 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.661625393 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.522513596 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.189730698 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.51794286 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.537447463 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.596709276 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.585257903 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.458812583 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.10767367 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.740092134 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.639518196 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.460379535 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.567890352 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.212429318 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.031886863 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.978476027 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.625332188 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.456287072 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.975712323 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.462335595 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.392831764 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.128971541 seconds)
  done (took 66.865313819 seconds)
done (took 636.245253783 seconds)
SAVING RESULT...
DONE!
