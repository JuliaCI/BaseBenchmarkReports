cset: moving following pidspec: 24699
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.341225405 seconds)
loading group "string"... done (took 0.487829036 seconds)
loading group "linalg"... done (took 8.048050689 seconds)
loading group "parallel"... done (took 0.174317176 seconds)
loading group "find"... done (took 1.30365655 seconds)
loading group "tuple"... done (took 1.984683784 seconds)
loading group "dates"... done (took 1.341354234 seconds)
loading group "micro"... done (took 0.253088719 seconds)
loading group "io"... done (took 0.682338238 seconds)
loading group "scalar"... done (took 41.600096038 seconds)
loading group "sparse"... done (took 12.685530401 seconds)
loading group "broadcast"... done (took 1.135924703 seconds)
loading group "union"... done (took 14.187510317 seconds)
loading group "simd"... done (took 4.853838534 seconds)
loading group "random"... done (took 9.798817224 seconds)
loading group "problem"... done (took 2.002653416 seconds)
loading group "array"... done (took 22.80640713 seconds)
loading group "misc"... done (took 1.461250126 seconds)
loading group "sort"... done (took 3.646934799 seconds)
loading group "collection"... done (took 19.825085437 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.544782422 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.148494557 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.158842584 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.158796881 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.217767041 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.147462744 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.161661939 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.11621609 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.991216002 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.190256352 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.159950828 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.51898433 seconds)
done (took 5.230802513 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.228680493 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.097225582 seconds)
    (2/2) benchmarking "String"...
    done (took 0.109613105 seconds)
  done (took 0.872095676 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.080805377 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.150907891 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.09680218 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.096869049 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.082951317 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.098840756 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.082119657 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.097073032 seconds)
  done (took 1.372572652 seconds)
done (took 3.225873099 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.745649155 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.288982847 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.225120734 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.484080545 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.18345322 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.220057287 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.679690444 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.335060621 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.272200245 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100986169 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.152605836 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.411240331 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.138076333 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.697547782 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.092843659 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.128801763 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.184023373 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.472559498 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.087553963 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.113019666 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.118690829 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.146243655 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.131567508 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094915176 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.187204798 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.098889513 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.190464272 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.111490792 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.082989215 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.292193822 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.20521136 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.687502326 seconds)
  done (took 11.062648033 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.11952132 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.142345042 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.100535851 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.160062736 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.140298973 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.086645787 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.103758673 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.083668658 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.126857329 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.182884688 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.135658887 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.144957918 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.098023254 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.08692961 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.123255024 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.250411098 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.127000094 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.109592932 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.103414638 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.107678694 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.12568685 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.116710502 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.1135124 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.11332674 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.16912587 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.211541441 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.116817959 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.130539241 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.100213104 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.117911008 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.146971477 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.150534186 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.09968085 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.084969108 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.178400458 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.127053915 seconds)
  done (took 5.31471871 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.193926931 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.125722843 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.174575751 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.166130912 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.145972458 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.161904853 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117791951 seconds)
    (8/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.161739277 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.241587314 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.215393345 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.166479993 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.146333591 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.11733469 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10088066 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.089589659 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.099309641 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.758543165 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.17009029 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.120182293 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.121185597 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109815714 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.103822493 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.718779553 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.090172729 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.100287418 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085818164 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.088928316 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.167748562 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101746252 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.188585975 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124272279 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085035452 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.138231001 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.214834698 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.128928944 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.137447963 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083451677 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.098939625 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.182256024 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.091865032 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.0996193 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.127974108 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.081307084 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.138212641 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.140881502 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.1014993 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.099630809 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.213402026 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.083810536 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.11604381 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.957648569 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.184170256 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.097108564 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.101615851 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.342344279 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.100858953 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10057321 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.098088831 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.244564986 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.137002988 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.100969297 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.082098045 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098281684 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.100558593 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.748439294 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082497028 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.843428495 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.08644142 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.109880646 seconds)
    (70/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.080242058 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101976957 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097988233 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091024284 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.107529487 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117068878 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.083643099 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.100752638 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.083175488 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.098731912 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.085166872 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.109585978 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103010507 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.083496249 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166521592 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.081742221 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.09576196 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.117609714 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127574521 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.090919357 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.100423493 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134359028 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085634927 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.100162892 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.122815346 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101231498 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.110750519 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101675164 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.130349167 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.100996086 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.165747525 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.083739902 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.132708822 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.104486504 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130907326 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.110632625 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085413066 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.105117598 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.081682615 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.097819611 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164052878 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082688123 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.100578291 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.085574656 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.114345801 seconds)
  done (took 24.051843707 seconds)
done (took 41.093210592 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.349307263 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.105571609 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.106015874 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.105795288 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.103498085 seconds)
  done (took 1.511680373 seconds)
done (took 2.2267958 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.288407526 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.178286373 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095799459 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.173300802 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.094623573 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.181432461 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.179974794 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.098613044 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.20567701 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.079555251 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.185667946 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080521549 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.097246046 seconds)
  done (took 2.681428363 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099166499 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118589303 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086899278 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114286476 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.096165876 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099303896 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112869581 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105815089 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113187262 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.10448521 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080129098 seconds)
  done (took 1.843959626 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.0982525 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117791567 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085873982 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113203665 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079768236 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113915105 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113227049 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104375198 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112961478 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.105267835 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.079562754 seconds)
  done (took 1.840454955 seconds)
done (took 7.074088719 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.098790649 seconds)
  done (took 0.809173066 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.033031287 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.921479377 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.119792983 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.159818915 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.333057835 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.190735067 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.596872295 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.132121002 seconds)
  done (took 15.420917009 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.133907122 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.087115424 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.119688418 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.088366603 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.102107529 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.104803132 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.085958557 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.104176094 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.103333254 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.087839924 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.102117696 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.10467788 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.088878426 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.10183206 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.088063201 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.103381941 seconds)
  done (took 2.381540396 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.139585281 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.138746006 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.092354647 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.110613079 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.106868558 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.090480422 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.110244018 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.107230479 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.103334246 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.091558672 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.109187006 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.108119817 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.089899974 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.097909818 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.108670498 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.094557416 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.1040217 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.108120331 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.108111833 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.094450469 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.109056838 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098475232 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.089347318 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.107946574 seconds)
  done (took 3.321720914 seconds)
done (took 22.650391966 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.164980045 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112047126 seconds)
  done (took 0.994164693 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.106144147 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.121818162 seconds)
  done (took 0.948754136 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.111768929 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097105754 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.138742515 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.116896248 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.098327196 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.082725635 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.134143979 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.09867078 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.083133284 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.098792962 seconds)
  done (took 1.78472346 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.089753955 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.116777014 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.109103541 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.121490833 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.097020581 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.102691461 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.112762 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.088993887 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.120200149 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.099591471 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.093313748 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.118539039 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.107888203 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.119774055 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.11309762 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.09164401 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.109623519 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.10427042 seconds)
  done (took 2.644067745 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.083220005 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.102379389 seconds)
  done (took 0.913022908 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.088361734 seconds)
    (2/7) benchmarking "second"...
    done (took 0.098953254 seconds)
    (3/7) benchmarking "month"...
    done (took 0.087745813 seconds)
    (4/7) benchmarking "year"...
    done (took 0.102862021 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.098516931 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.083583024 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.099007252 seconds)
  done (took 1.386653571 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.487657691 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.137316602 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.25974743 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.104320992 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.12509662 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.331050905 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.082821042 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.104989564 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.104379651 seconds)
  done (took 2.503538528 seconds)
done (took 11.896398043 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.096475723 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.120472791 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.135000082 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.475699463 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.123520205 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.083396569 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.164141206 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.261220468 seconds)
done (took 2.191931164 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.153468228 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.331034157 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.119321156 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.082617126 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.083132178 seconds)
  done (took 1.34989452 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08242607 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101552311 seconds)
  done (took 0.918096422 seconds)
done (took 3.157430624 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084061793 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.098946672 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.080528288 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.09884477 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.08051747 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.097663229 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.083552969 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.098956236 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.084251302 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.098101458 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098449295 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080131196 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096185919 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.130809066 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082716778 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.099990698 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.080538596 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.097335183 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08078969 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09666363 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082990202 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.096216896 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.096459817 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.083659299 seconds)
  done (took 2.974453736 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.112087626 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099799297 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.104887211 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.090397144 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.103584814 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.10468459 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.089431293 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.099095647 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.104471761 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.085649067 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102895959 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.102794165 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.086403145 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.102916352 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101377403 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.089550023 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.104923745 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099911743 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085637738 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.103620731 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.104648823 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085259026 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.103018487 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103993927 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.087127609 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103783889 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.101431065 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.084645707 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105079648 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.102936588 seconds)
  done (took 3.692280841 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.088908399 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.096583262 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081796889 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.103510759 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.081085111 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.102574187 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.096655317 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.082177124 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.098647312 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.080898626 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.098336493 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.08153115 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.097817463 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082510939 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.098947239 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100434871 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.093917094 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.097596262 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.080970358 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.097952639 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.084840681 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.096761709 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.099653585 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.080614639 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095924016 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.080525105 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.097464033 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.081963033 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097266332 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.09685082 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.084753067 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.100846294 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.080649375 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.105249365 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084829987 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.096722574 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.084833907 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.096974835 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.098036603 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.080711389 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.096645447 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.081860359 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.096464127 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.087884608 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.100555445 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083757356 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.096906237 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.099038401 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.081269062 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.10046741 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.081563548 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.097496295 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.083761038 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.098536724 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.100447958 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.080734157 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.097729771 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.080521677 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.097893089 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.080843544 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096622635 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.096770075 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.083765409 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.097836494 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.097535927 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.104404315 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.080921525 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.098925883 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.10078464 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083931758 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.099336788 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.095641604 seconds)
  done (took 7.366081623 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.086677537 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108703891 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083332418 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099160245 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095801057 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.08211928 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101507349 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081775851 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098824362 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116695787 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081783524 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099339366 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099247144 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.085977053 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097606661 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.084450471 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.108427389 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096190184 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.082631165 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100768247 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081995325 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101368104 seconds)
  done (took 2.821055241 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.218807752 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106103819 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.145832692 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.1250466 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.116674128 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09770496 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104683436 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.105935904 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088411589 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102920533 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102812138 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088478271 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.10668786 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102270351 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087373752 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.104901662 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104542979 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089783858 seconds)
  done (took 2.744082248 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.096724138 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.101015197 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.122846517 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.084655284 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.100952229 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086951785 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105874225 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.116278861 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.102581494 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.084775404 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.11086219 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10336438 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.087191074 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100687675 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086875704 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.099818201 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102633282 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084951005 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111615779 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106699343 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.090839914 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110488086 seconds)
  done (took 2.948311377 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100377517 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102812699 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.120983448 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088229719 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.099664375 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.085382969 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.107555919 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.100552105 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.093977513 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.10144239 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100697458 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085822441 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.107736836 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101026193 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.090318612 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100751298 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.086660298 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.100939507 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102489649 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083670313 seconds)
  done (took 2.712444915 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.124483688 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102413267 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.21174281 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10900871 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102005591 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.102688707 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.125927076 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.086293197 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10189807 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128925469 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.087062384 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102166972 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125789596 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.120791232 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.086899451 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125855495 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124477794 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124758725 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.085712332 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102058832 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.129115166 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102190576 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10834657 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102117787 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.102068007 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.085628143 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102844874 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.121663855 seconds)
  done (took 3.888666995 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084645862 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100542577 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.08132963 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.097888267 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.081689324 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.099122811 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.081552164 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.097642457 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08429928 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098093171 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.100490474 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.084436487 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.100173325 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.084019503 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100617675 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.084612496 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102420761 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.082613899 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098214954 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097451197 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.085298131 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100871965 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.085163533 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097819674 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081832493 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.100773681 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082449295 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098222621 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101286304 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.081150068 seconds)
  done (took 3.510816386 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.094737167 seconds)
    (2/2) benchmarking "in"...
    done (took 0.108709274 seconds)
  done (took 0.960712422 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.082092478 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11786234 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081671607 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104305655 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.106887952 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084844854 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109731824 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105542955 seconds)
  done (took 1.548746758 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.102394471 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.119745348 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.09064503 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.118731304 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.116613906 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.117635362 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.163898194 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.090256248 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.107332563 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083306834 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.118215993 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.100391887 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.09046427 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101220212 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090865495 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107790746 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.101962007 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.100613908 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.108398925 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.084101317 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102219935 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11315906 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08758579 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.098631045 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.103310041 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.096003233 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.111342699 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.08630141 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104180556 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.111285184 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.091446326 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095312377 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.101428335 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.090135232 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.102404472 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.09761864 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115234583 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104322194 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.093731296 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10740434 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.128037667 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.08354391 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.107977239 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.108036316 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095831386 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.106149389 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.090489408 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.100192277 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098199963 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.08746701 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.100385978 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084785552 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.096161455 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108361616 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.089710831 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115778338 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.087577396 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.1022864 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.104795486 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.087661123 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.108159076 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086933086 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103553983 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.101110345 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092140697 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.106458801 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108818987 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.083277434 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095712491 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.086223139 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.110029206 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124941242 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093853105 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.10673407 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106870417 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.085780291 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104981817 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090656557 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109924981 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.110432252 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.089360293 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.122443147 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109068299 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084541452 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.104441423 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.115467756 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.083346388 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.103676966 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.082516264 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117708856 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.100222753 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.085944332 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.098988748 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.094290734 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.104335171 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.101694417 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082527996 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110206407 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.078821921 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.106116947 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107607726 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08535791 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112042147 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.112267936 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.096493587 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109776513 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.112552346 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084992343 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.10560286 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.081453942 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107918481 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.103402548 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092109374 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.095123569 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087773417 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.103638293 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.106658374 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.09328932 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.099688928 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.089293402 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110065892 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.10832223 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083883063 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.098040091 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.089309653 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.105471323 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109625742 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092307127 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100760661 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.083136711 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.100290885 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.105892892 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.08879629 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.106788639 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.112450492 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088828667 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.095891991 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.086709001 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.1117078 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.10962542 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.085854318 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.103004035 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.107236226 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.086753308 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.100830613 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.092052893 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.10463391 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.08428437 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.10704364 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.104369091 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.083493693 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111665092 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.105067471 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.08470438 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.105982549 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.09503244 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.10516003 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.107209475 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084463793 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.108521154 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091368992 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.101198968 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101790103 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.084106446 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.112479078 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.088763173 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.100751549 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.098949137 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.098739928 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.100145944 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.089339506 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.100855383 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.104541799 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.090988225 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.103954142 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.085895154 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.103758614 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.133822218 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098645105 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107651888 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.108119237 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.096492377 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.107263443 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.104740898 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.089393712 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108330677 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.091037301 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.110832495 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.107929823 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.096377659 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.104812716 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.082540648 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108241661 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111790856 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.08510187 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.103902584 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.085224362 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.106784779 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.109681551 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.090705779 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.108037844 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100967553 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086708895 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.112069547 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.088900566 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.106143483 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.101848114 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.091848379 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.103153864 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.115121051 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.091794747 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.112655835 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107231634 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.083998811 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11189663 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084573646 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.108609902 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.100574646 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.083524705 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.101190829 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.091593326 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.10206971 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.089033864 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.09584647 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110583873 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093839536 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.10256956 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.085580487 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.107403484 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111946176 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.087704898 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106868585 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.090324589 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108296807 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11887617 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.085395193 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.105796054 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.113043926 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.090389719 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.097100133 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.092785711 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.102169215 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.102658401 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.084766228 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.101715806 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089331854 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.118777811 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.108209455 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.079765961 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.105680919 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.101390171 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.084454921 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.101639827 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.09358234 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.107611157 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.104506417 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094940857 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109109105 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.09174266 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106763232 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.106347082 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.091237571 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.109300367 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10623787 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.091795852 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.105584664 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.085478909 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.106234705 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.085210069 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.103879492 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.105430417 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.090594833 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.10353294 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09244073 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.106045875 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103278625 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.088916425 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.10899686 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088433553 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.104111176 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.102268542 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090593229 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10357795 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.085942399 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.106142096 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.102029235 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09396529 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.107227206 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094563041 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.103076694 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.100119576 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.091757154 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.106247501 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.114223731 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.092006883 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.109437345 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087970778 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.108190353 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.106466099 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096497564 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.101311508 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.096505736 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108964593 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103974741 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.089185973 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.103134319 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.08777856 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.102862351 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.105983557 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.092157202 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.104606824 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.086301863 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.108470738 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.106810192 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.087312197 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105625676 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.092703152 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.103711548 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.104637879 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.080946408 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.103377272 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085622003 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.108946602 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111959545 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.09167233 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.107301327 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.085762286 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109334516 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.103100929 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.082957846 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.118624468 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.119153785 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.092189513 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113120242 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085467071 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.105109485 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114148193 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.080969996 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.102434544 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.086807326 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.101229857 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112573735 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.091967641 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.112873913 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.086069452 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.103471796 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.100972175 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.092551731 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.102241831 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.08949554 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.104928416 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106615052 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.088940017 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102033331 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.091439386 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.107079791 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091713048 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110877267 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.103290878 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.088692308 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.108302512 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.101137324 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.085375285 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.103565778 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.089787011 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.109710403 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.084432932 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.101060116 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.107953935 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.089075198 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.104635952 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.087198807 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.105495403 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112112225 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086365651 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.107217896 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096020801 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.09890442 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.106736068 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.087972243 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.10838144 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.085317682 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.108086385 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107359719 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.092856311 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.112225356 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.091400211 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105159893 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104453505 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.087412267 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.108829002 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.09081849 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.109769324 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.103193621 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.092288074 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112850876 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.088266779 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.106115935 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10427377 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087820929 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.109191971 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.09205359 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.106904223 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.118473526 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.090226522 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.106601133 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110266644 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.091180525 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107965962 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092091847 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.106869611 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111269541 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.085398628 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.113848603 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.104483089 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.092430118 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.106266056 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.084861044 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104629861 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.086781665 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104672322 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.10959555 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.092219934 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.104173828 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.086478336 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.106647204 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.10703356 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.09519666 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113402039 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.106657365 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090501592 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.103371877 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.084500828 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110859361 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.084217282 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.106506343 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.10669458 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093719145 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.107403243 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.087747704 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.103780527 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.112698243 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092980345 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.109960618 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.101611144 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.092153888 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.109914983 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.089035033 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.10637121 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.104368125 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088718962 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.110477598 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.0890449 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.104798395 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112865602 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.091699369 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.111017814 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.087994845 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.104793953 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.104844671 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.085640168 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.110617487 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.088966046 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111599031 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.107837576 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08712936 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116091352 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.08690372 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.105094494 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.115441354 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087189956 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.112021889 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.103561895 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.087994474 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.112474765 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.09287607 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.103995264 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.103481284 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.08504813 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.107152015 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.08615349 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.102895036 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096735216 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.113510628 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.107149711 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086769742 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103638775 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.085735611 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.103127648 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.104547259 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093003875 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.106469057 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.096587656 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.103923094 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.103750726 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.086523187 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10502809 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090488118 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.108355951 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.103428739 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.085430467 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.103528086 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.08978226 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.112862232 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103457792 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.091317008 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108693211 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.089038611 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.106106101 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.113931119 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.083711561 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.109104663 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098473017 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.111279541 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105749929 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.093650846 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114025323 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.110313664 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.086243163 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.110421467 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.090386231 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.105813262 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.111134422 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.089124754 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120219493 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107603881 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.087170587 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.104735024 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.089959265 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.105028958 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.094357136 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.111054116 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.110958869 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.092416858 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.106994009 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.121368525 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089898217 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111917758 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.107388198 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.089789209 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.105075705 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087329764 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.104168747 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.085615149 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.10717376 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.111585801 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093371296 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.119040221 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.105204091 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097601804 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.113416308 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.110552647 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.084005455 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.104927413 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.087494499 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.104098201 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.092432993 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.103924073 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.104806147 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.085874763 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.105523657 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.087531219 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113071475 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.10848612 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.093057848 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.106796267 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.081629254 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.108591324 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.090639321 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106762683 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.102876176 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.091305503 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.111676171 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.093682683 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.116520285 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.106914386 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.089254159 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.107843593 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088299483 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.10515041 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.113068716 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087187323 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.109077365 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.087235089 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107189193 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.112024565 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091445686 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.116825908 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.108425649 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.089705949 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.11811332 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.094628481 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.103624469 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.103894885 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.093676166 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.107199478 seconds)
  done (took 60.535837631 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.153069637 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093608523 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10210078 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082058088 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120221062 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105894199 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082318899 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10581729 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105978069 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.088990453 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.101858468 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083186379 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116433512 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129386447 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120265071 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111029156 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083207129 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106092489 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083116965 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105517091 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.117350367 seconds)
  done (took 3.004775589 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.109126907 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.121223877 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.118974483 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.123695015 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112262273 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.100724097 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.118602538 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11919119 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.124313445 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11449989 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.104104783 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119233005 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.114662307 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.11417444 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094930697 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116728649 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.123960133 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.112766784 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.102557871 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.117867958 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.117045297 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.119288777 seconds)
  done (took 3.326990162 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.096840295 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.10937326 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.09117166 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.101690513 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.087304743 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.101445652 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.115110836 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.08511536 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.111108689 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.085973889 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.104882154 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.085762123 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.111030341 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.101026301 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.086626855 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.104580594 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.157992471 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.111087586 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.091187488 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.108494627 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.085316598 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.108991682 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.1043144 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.086196706 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.105095664 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.099371502 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.108484642 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.087791144 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.105838932 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.105477901 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.091188784 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.104057903 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.088966724 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.10657038 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.087013545 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.105066733 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.107411306 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.091494441 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.104212259 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.088626989 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.10806035 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.085751958 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.111209143 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.108455279 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.088475705 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.104462077 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.088790603 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.106930496 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.082544138 seconds)
  done (took 5.714314421 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.12174035 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159782473 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089009472 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.130554518 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.12577787 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.120476215 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.11163342 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.149690812 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.085324068 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.11013456 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.128170415 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.124477381 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.091557927 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.11572802 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.111058692 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.091804164 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.111987969 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.106812391 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.09605395 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.107225367 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.115175795 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.114782067 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.105469923 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.122157017 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.115465412 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.109457043 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.088945255 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.116064711 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.121896194 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.11660115 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.097301413 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.117322476 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.12469745 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.113107773 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086818835 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.112982883 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.128288515 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.092833267 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.112844204 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.105452321 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.094350494 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.116748195 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.114539038 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.128020451 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.091440581 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.113423612 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.110551872 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.084434992 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.122067134 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.115388824 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.121525463 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.125450159 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.095258255 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.111880688 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.116025176 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.10555282 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.110412082 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.108254255 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.095194351 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.122315024 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.105685488 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.114404794 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.103886206 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.112541228 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.119684005 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.124205086 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.093211181 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.115215452 seconds)
  done (took 8.570248818 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119458377 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.118739944 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.129609319 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.130086914 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.118583525 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.099865297 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.118226123 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.118577663 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.118842727 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106625462 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119021291 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.165670825 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.113902499 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.123086981 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.1002622 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.118932787 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.119289754 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119417889 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099464935 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119313719 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.119339561 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.128713621 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.11969002 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.130108968 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128736606 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.093508484 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.119191856 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.118552138 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.129505313 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.10031597 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128879776 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.119085304 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.119833139 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.130318491 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.128577617 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.099214611 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110438697 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118094198 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.099602354 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.118578525 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.113427849 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.129141652 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.0994573 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.112751355 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119347967 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.118883496 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.130153394 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.109367188 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.121993861 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.125857122 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.119084329 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.128883738 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118675088 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099326266 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.12925537 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.134831344 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129291856 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.131332431 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118819084 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.129683731 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.129693828 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.13484755 seconds)
  done (took 8.240626123 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.140475223 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101612698 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.128643731 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.104346364 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085787136 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.115946518 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105550891 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.086881091 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.121841278 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.122283094 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.124539828 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095708788 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.119909751 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.124144423 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.115613828 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.118100729 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095967322 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.115269382 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.121805537 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.116120042 seconds)
  done (took 3.081598158 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.09763789 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.129558338 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.109245349 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.096513662 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.111602952 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.114986013 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.09028921 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111459882 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108571885 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091955284 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.121476094 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.121018438 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088964887 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.116342621 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.121135479 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11644991 seconds)
  done (took 2.569964152 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.101983229 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.130867447 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.128319326 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.108898346 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.086431809 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.106114936 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.090968791 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.104971127 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.104913515 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.104720333 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.109887423 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.114661016 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.091182505 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.10722308 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.084875589 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.114051656 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.105008595 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.08653728 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.111718798 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.129257469 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.100581666 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.10827065 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.112690889 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.09120971 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.108962856 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.115548413 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.089610648 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.107584382 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.087248349 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.111315218 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.109250206 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.096411431 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.105250634 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.107900301 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.086245435 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.105773293 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.091072797 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.111738929 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.114895307 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.091612038 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.107479295 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.108401346 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.092021303 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.110123512 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.085056569 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.112645652 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.104807165 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.094946234 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.107621165 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.10856375 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.09140972 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.111376685 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.089698397 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.11993476 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.112936034 seconds)
  done (took 6.558204439 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103207183 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.113790936 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084032923 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.106216306 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.112484372 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.090801882 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.112987887 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091895103 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110897081 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.106554096 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090985167 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.114084106 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111048552 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.092446314 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110994907 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093027558 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.10440589 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109942641 seconds)
  done (took 2.690468332 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.094780688 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109183895 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.097121965 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.108853857 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.109009782 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.090889977 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104739899 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086710702 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107300852 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089066907 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108519515 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.111435385 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087325496 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.111297903 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088556998 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108595997 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.111659802 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086508269 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.109026045 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085136586 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110823218 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107865797 seconds)
  done (took 3.054906214 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.125625224 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.129920306 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.117239052 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.22039021 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.107536345 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.135848662 seconds)
  done (took 1.667845111 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113649357 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.147325122 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110193411 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092886381 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12365956 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115308326 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09472963 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113695248 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126286649 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127247134 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114671384 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106203165 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12554695 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12583202 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122485753 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121431546 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09422438 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115695469 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109754054 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133940611 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095155528 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124810981 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115124583 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115493255 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095397951 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12542947 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125774605 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127671141 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115964174 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126033898 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103159357 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115121315 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126351832 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127838799 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093371309 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125825931 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115001163 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135108687 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122406936 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124655646 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.093147839 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122482178 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126645353 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120770724 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106272557 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115368006 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122742002 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115016396 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094697654 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141947552 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121386534 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125718732 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123410474 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126913261 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105628982 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.161485429 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127628466 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105042552 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122890465 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127676167 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126630491 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121937142 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125889382 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127753115 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102042371 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124794594 seconds)
  done (took 8.665109308 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129888108 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110378361 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115629274 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128628665 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126352377 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095246905 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115916921 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115471988 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095848455 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110570179 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.159687389 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115903668 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126495681 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125752329 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095363272 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115109347 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115305431 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124566874 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091359131 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140819447 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114691282 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126329127 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125866341 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126654737 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127815231 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103130134 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115352451 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115202257 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094373543 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114327159 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122249841 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115989574 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125641002 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090523453 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126203853 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116556214 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095200169 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120775918 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116068886 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122205832 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125669809 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133509326 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094619752 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115374244 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128714111 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11529202 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094922852 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111807855 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115094865 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090799957 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127586041 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128458841 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127629691 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126069232 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116035318 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095886459 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116371387 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116842485 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094854242 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12244131 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125333578 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115600677 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142940949 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114897703 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095132054 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126838304 seconds)
  done (took 8.529298265 seconds)
done (took 162.11063369 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.104701226 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.143866872 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.123371469 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.151140075 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.110603291 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.122872153 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.142542291 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.125294412 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.089332243 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.110589418 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.088841316 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.112490095 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.153686152 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.109433398 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.109829364 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.090773899 seconds)
  done (took 2.727658271 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.206919479 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.276886191 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.127848468 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.087293872 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.11493114 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.088919411 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.109522873 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.117666731 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.091477037 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.108879533 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.08909452 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.11171954 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.088729784 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.110485106 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110312983 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.089319263 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.109186354 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.089037746 seconds)
  done (took 2.976824598 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.117280691 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.157545675 seconds)
  done (took 1.124286871 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.123931328 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.189062414 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.304887047 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.158132216 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.144271077 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.130916521 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.159279115 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.113504736 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.230354397 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.12788947 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.108512266 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.122564516 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.147066227 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.11877841 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.09808292 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.122395216 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.148127634 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.117219703 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.098782292 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.121365716 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.143781454 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.088617321 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.12094906 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.118450061 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.193348664 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.104223912 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.109681797 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.109288279 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.099603043 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.119166213 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.116943299 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.129748668 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.102887528 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.192822743 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.106481769 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.185661891 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.123004712 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.095041848 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.119759123 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.115009203 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.101793563 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.123208402 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.129187393 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.10079207 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.111505061 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.123935488 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.088902866 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.109017811 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.117911133 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.102313625 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.118233314 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.116448205 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.164011668 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.123016959 seconds)
  done (took 7.85723772 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.828852395 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.155921069 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117185997 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.933680953 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119447134 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130342367 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.823696269 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.139063869 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.243483805 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.809838707 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135795739 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.125868266 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.239403567 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.246132809 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.023947783 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.330588425 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.698247775 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.129100471 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.144177551 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.162511858 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121625474 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.142847305 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.112401689 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.460620346 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.097398826 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.115412289 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.120545107 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.104332203 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.190210458 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.093782789 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.117908541 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.190068692 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.28007313 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.194509621 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11900135 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.114904664 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092652965 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.201544977 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.278563533 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.229025734 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.184747454 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089592174 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.114220489 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124582472 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.113442293 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111730172 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.174138254 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.207257649 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.182801129 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117831842 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.124619359 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101193999 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124602679 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.175236353 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.126556498 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.336852615 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.33168874 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.114395706 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123717777 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.109755441 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.276385057 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128667908 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.241112648 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142662297 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.224775731 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092921278 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.792491811 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.179881545 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.114098604 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122024255 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.100490321 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120838583 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.124223311 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.175692202 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.417649506 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128163189 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.095899522 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114170194 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.23895822 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.093740628 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115382114 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.171457911 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12013178 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.123241532 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.105365319 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.126589931 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.180822141 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.26586676 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.127538777 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.101696122 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.119146341 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127473193 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.098018325 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.241345732 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.233913677 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.172255575 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.244566174 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.103714088 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.197397767 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.178357618 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124579655 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.18187893 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122267579 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129522292 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104221524 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.231582777 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.173364461 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.107885917 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.118982541 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.121251524 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.156159144 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.096595524 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.122763034 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.180256528 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.491905475 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.178235496 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.112191753 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.118946971 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101424623 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.192642351 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100476335 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.275682301 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124478391 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.180185543 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122010362 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.111865408 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100139412 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.195124241 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.105354038 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123124884 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126357868 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123562126 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.243761842 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.231759336 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127504719 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.227842012 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.18836767 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121732904 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.204691852 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.100953974 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.19819491 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101884652 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124807683 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119993457 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.784857049 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.104426081 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.12197305 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11908345 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.195956836 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092960466 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.128584386 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.115675887 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090151611 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.814790597 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.117592855 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.105046397 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.128475279 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122294747 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122424164 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.09843013 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.118780269 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.173244491 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244266265 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.124813407 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121706487 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.092956695 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.190521924 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.097961334 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.114938261 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.115404385 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.094948486 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123874458 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.097350043 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128924894 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.201470298 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.172602816 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.233510317 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.565848176 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.09303326 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.115970455 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.241301196 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115385652 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.301585554 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101228843 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.242283173 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.195382132 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.105056773 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.328915014 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.197196851 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.195965616 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.096043232 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.204792886 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090402569 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120694667 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.196670012 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092900227 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122956208 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.172100827 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.12915152 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12648472 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.972579192 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093167657 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.256575128 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.090467429 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.202113832 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098000384 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125118845 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.310271486 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.115718737 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.110395792 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.198015255 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096984886 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.115722351 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.890137949 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.093669824 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125234665 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122402303 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.235607333 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.171460027 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122714905 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100038827 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.124814122 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.173997743 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.240128902 seconds)
  done (took 45.83431457 seconds)
done (took 61.364030577 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.288363524 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.217073658 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.258197248 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169677 seconds)
  done (took 1.882342283 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.183048728 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.150394646 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.150547784 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.087929439 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.156443825 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.109609953 seconds)
  done (took 1.713924417 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.371519591 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.282945375 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.242625869 seconds)
  done (took 1.775330171 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.253709183 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.27466138 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.332822907 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.423534283 seconds)
  done (took 2.265857627 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.240874122 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.144956682 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.131867632 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.127961546 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.22434669 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.267421454 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.160161525 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.217147437 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.142136451 seconds)
  done (took 2.580685896 seconds)
done (took 11.09654282 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("sort", Float32, true)...
    done (took 0.277036616 seconds)
    (2/286) benchmarking ("sort", BigInt, true)...
    done (took 0.248047943 seconds)
    (3/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.142979848 seconds)
    (4/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.242878629 seconds)
    (5/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.274801511 seconds)
    (6/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.135369085 seconds)
    (7/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.227420752 seconds)
    (8/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.096013397 seconds)
    (9/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.132901859 seconds)
    (10/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.197049178 seconds)
    (11/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.226007416 seconds)
    (12/286) benchmarking ("sort", Float64, true)...
    done (took 0.243343511 seconds)
    (13/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.131498157 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.127989644 seconds)
    (15/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.251379421 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.097767457 seconds)
    (17/286) benchmarking ("sort", Int8, true)...
    done (took 0.236013979 seconds)
    (18/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.219606051 seconds)
    (19/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.22512922 seconds)
    (20/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.123624224 seconds)
    (21/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.241665369 seconds)
    (22/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.211809559 seconds)
    (23/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.136769276 seconds)
    (24/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.180913125 seconds)
    (25/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.208024448 seconds)
    (26/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.173947439 seconds)
    (27/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.182404084 seconds)
    (28/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.155259585 seconds)
    (29/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.208480113 seconds)
    (30/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.097909819 seconds)
    (31/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.092378652 seconds)
    (32/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.140219255 seconds)
    (33/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.094930721 seconds)
    (34/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.145310558 seconds)
    (35/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.202240579 seconds)
    (36/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.142179272 seconds)
    (37/286) benchmarking ("sort", Int64, true)...
    done (took 0.237891461 seconds)
    (38/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.179564737 seconds)
    (39/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.270706538 seconds)
    (40/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.102555524 seconds)
    (41/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.163692045 seconds)
    (42/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.11332962 seconds)
    (43/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.099674012 seconds)
    (44/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.120867495 seconds)
    (45/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.199325621 seconds)
    (46/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.072494226 seconds)
    (47/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.147037344 seconds)
    (48/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.195567405 seconds)
    (49/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.155629667 seconds)
    (50/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.139470966 seconds)
    (51/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.153808302 seconds)
    (52/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.12119025 seconds)
    (53/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.096388041 seconds)
    (54/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.119171292 seconds)
    (55/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.105166198 seconds)
    (56/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.157344742 seconds)
    (57/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.137158258 seconds)
    (58/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.068467034 seconds)
    (59/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.173805473 seconds)
    (60/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.187261703 seconds)
    (61/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.095047928 seconds)
    (62/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.198068124 seconds)
    (63/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.163195287 seconds)
    (64/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.090728202 seconds)
    (65/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.123184228 seconds)
    (66/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.11494371 seconds)
    (67/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.156057199 seconds)
    (68/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.111411174 seconds)
    (69/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.069688934 seconds)
    (70/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.125249627 seconds)
    (71/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.124796822 seconds)
    (72/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.149333981 seconds)
    (73/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.126928236 seconds)
    (74/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.14719116 seconds)
    (75/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.069514284 seconds)
    (76/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.206224835 seconds)
    (77/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.133167823 seconds)
    (78/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.096920498 seconds)
    (79/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.196182657 seconds)
    (80/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.186339315 seconds)
    (81/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.132963908 seconds)
    (82/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.111717325 seconds)
    (83/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.140852833 seconds)
    (84/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.185480499 seconds)
    (85/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.113370706 seconds)
    (86/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.119543865 seconds)
    (87/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.068989588 seconds)
    (88/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.102766984 seconds)
    (89/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.072414236 seconds)
    (90/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.128608593 seconds)
    (91/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.09052998 seconds)
    (92/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.130651849 seconds)
    (93/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.128669984 seconds)
    (94/286) benchmarking ("sort", Int64, false)...
    done (took 0.088926569 seconds)
    (95/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.078700893 seconds)
    (96/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.194000585 seconds)
    (97/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.123189116 seconds)
    (98/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.18433182 seconds)
    (99/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.098248489 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.139570677 seconds)
    (101/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.070578489 seconds)
    (102/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.125537478 seconds)
    (103/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.130643918 seconds)
    (104/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.09121876 seconds)
    (105/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.120654505 seconds)
    (106/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.125447054 seconds)
    (107/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.084401784 seconds)
    (108/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.069373979 seconds)
    (109/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.118578137 seconds)
    (110/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.097682273 seconds)
    (111/286) benchmarking ("sort", Float32, false)...
    done (took 0.183577499 seconds)
    (112/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.142046776 seconds)
    (113/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.192185597 seconds)
    (114/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.175930721 seconds)
    (115/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.118060705 seconds)
    (116/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.125747787 seconds)
    (117/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.128832732 seconds)
    (118/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.096130134 seconds)
    (119/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.191779536 seconds)
    (120/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.125069994 seconds)
    (121/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.072070281 seconds)
    (122/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.116203537 seconds)
    (123/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.092117729 seconds)
    (124/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.131759657 seconds)
    (125/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.069320249 seconds)
    (126/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.199496131 seconds)
    (127/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.099201425 seconds)
    (128/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.163669606 seconds)
    (129/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.149209012 seconds)
    (130/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.19517378 seconds)
    (131/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.093464902 seconds)
    (132/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.09696494 seconds)
    (133/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.098470453 seconds)
    (134/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.127192214 seconds)
    (135/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.174278474 seconds)
    (136/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.091698153 seconds)
    (137/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.072964264 seconds)
    (138/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.092322234 seconds)
    (139/286) benchmarking ("sort", Bool, false)...
    done (took 0.19279893 seconds)
    (140/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.070490066 seconds)
    (141/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.122787726 seconds)
    (142/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.139177405 seconds)
    (143/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.090859462 seconds)
    (144/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.122518393 seconds)
    (145/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.095795833 seconds)
    (146/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.123423281 seconds)
    (147/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.118957958 seconds)
    (148/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.099655002 seconds)
    (149/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.121479509 seconds)
    (150/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.071894762 seconds)
    (151/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.17610212 seconds)
    (152/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.198345187 seconds)
    (153/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.069222886 seconds)
    (154/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.113108507 seconds)
    (155/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.097934834 seconds)
    (156/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.123320331 seconds)
    (157/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.192665205 seconds)
    (158/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.117274651 seconds)
    (159/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.156515204 seconds)
    (160/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.113066386 seconds)
    (161/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.149957023 seconds)
    (162/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.113564516 seconds)
    (163/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.098170326 seconds)
    (164/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.190922066 seconds)
    (165/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.15128028 seconds)
    (166/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.105732418 seconds)
    (167/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.092709519 seconds)
    (168/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.093786325 seconds)
    (169/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.103326366 seconds)
    (170/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.100549011 seconds)
    (171/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.146843002 seconds)
    (172/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.16747594 seconds)
    (173/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.104136086 seconds)
    (174/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.361760073 seconds)
    (175/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.115789115 seconds)
    (176/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.090533937 seconds)
    (177/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.171572223 seconds)
    (178/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.175704829 seconds)
    (179/286) benchmarking ("sort", Int8, false)...
    done (took 0.200350041 seconds)
    (180/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.071858421 seconds)
    (181/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.115192643 seconds)
    (182/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.077459523 seconds)
    (183/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.070941491 seconds)
    (184/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.102071489 seconds)
    (185/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.098704404 seconds)
    (186/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.111864389 seconds)
    (187/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.140091527 seconds)
    (188/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.132291791 seconds)
    (189/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.114361731 seconds)
    (190/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.09680334 seconds)
    (191/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.102776644 seconds)
    (192/286) benchmarking ("sort", Float64, false)...
    done (took 0.182214292 seconds)
    (193/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.089668376 seconds)
    (194/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.123566942 seconds)
    (195/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.090101285 seconds)
    (196/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.113346008 seconds)
    (197/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.069614716 seconds)
    (198/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.184655944 seconds)
    (199/286) benchmarking ("sort", Bool, true)...
    done (took 0.235322142 seconds)
    (200/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.093715655 seconds)
    (201/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.07053764 seconds)
    (202/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.11196735 seconds)
    (203/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.096082788 seconds)
    (204/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.072205899 seconds)
    (205/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.094211671 seconds)
    (206/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.089506864 seconds)
    (207/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.113169732 seconds)
    (208/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.122528246 seconds)
    (209/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.114651065 seconds)
    (210/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.121856269 seconds)
    (211/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.09372386 seconds)
    (212/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.121919344 seconds)
    (213/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.06937939 seconds)
    (214/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.094126071 seconds)
    (215/286) benchmarking ("sort", BigInt, false)...
    done (took 0.230269989 seconds)
    (216/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.091614056 seconds)
    (217/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.10184548 seconds)
    (218/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.072945631 seconds)
    (219/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.101834718 seconds)
    (220/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.095765214 seconds)
    (221/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.093571084 seconds)
    (222/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.09589429 seconds)
    (223/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.119796097 seconds)
    (224/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.078349649 seconds)
    (225/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.139221548 seconds)
    (226/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.08932609 seconds)
    (227/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.1123017 seconds)
    (228/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.071542489 seconds)
    (229/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.188125278 seconds)
    (230/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.070221293 seconds)
    (231/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.114709748 seconds)
    (232/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.112442634 seconds)
    (233/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.097998707 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.113453747 seconds)
    (235/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.114564097 seconds)
    (236/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.102196484 seconds)
    (237/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.069936567 seconds)
    (238/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.09346909 seconds)
    (239/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.091580093 seconds)
    (240/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.07855976 seconds)
    (241/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.11260551 seconds)
    (242/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.112503739 seconds)
    (243/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.071520914 seconds)
    (244/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.089315181 seconds)
    (245/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.095411041 seconds)
    (246/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.130804383 seconds)
    (247/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.096739532 seconds)
    (248/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.113124948 seconds)
    (249/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.071151344 seconds)
    (250/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.122624369 seconds)
    (251/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.088897436 seconds)
    (252/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.094633866 seconds)
    (253/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.072453947 seconds)
    (254/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.113092082 seconds)
    (255/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.069835708 seconds)
    (256/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.070658893 seconds)
    (257/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.11533813 seconds)
    (258/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.071886464 seconds)
    (259/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.103247327 seconds)
    (260/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.115624882 seconds)
    (261/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.113615104 seconds)
    (262/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.068596733 seconds)
    (263/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.113676189 seconds)
    (264/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.069667967 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.12211312 seconds)
    (266/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.089748082 seconds)
    (267/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.104760501 seconds)
    (268/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.088517938 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.112549756 seconds)
    (270/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.089408178 seconds)
    (271/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.092587698 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.099319353 seconds)
    (273/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.092726162 seconds)
    (274/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.095996865 seconds)
    (275/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.093606416 seconds)
    (276/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.096794865 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.119211978 seconds)
    (278/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.116755188 seconds)
    (279/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.120598165 seconds)
    (280/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.074011633 seconds)
    (281/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.093678016 seconds)
    (282/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.070132975 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.119029909 seconds)
    (284/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.07199413 seconds)
    (285/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.119896442 seconds)
    (286/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.094577905 seconds)
  done (took 37.520884521 seconds)
done (took 38.406252995 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.102874314 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.154549017 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.123086435 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.118289197 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.126732599 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.11766321 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.097181095 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.125172786 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.103162338 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.128132241 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.125846112 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.071373262 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.123746475 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.099966977 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.12338969 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.144988128 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.1033555 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.120655777 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.122072546 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.089487224 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.122847711 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.088706637 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.114396155 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.071804372 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.124762224 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.098279465 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.118510936 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.123623337 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.089240919 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.113207689 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.095072917 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.120789879 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.089278242 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126887093 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.120162706 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.098830035 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.124926792 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.100714389 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.114787644 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.113663473 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.098019244 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.113334061 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.09705018 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.122131679 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.096644435 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.1183554 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.122418401 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.102721462 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.145269062 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.118809419 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.098236814 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.124822064 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.099316279 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.119856177 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.094750041 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.122298414 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.121921978 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.122210812 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.12212487 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118745427 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.097828713 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.123031757 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.09580264 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.12249376 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.123150539 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.101557848 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.126072484 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.095647112 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.125032133 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.119436076 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.090163954 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.122680039 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.093600322 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.113740949 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.100898275 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.125217608 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.090003844 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.119118523 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.121390496 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.095107166 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.113523809 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092697036 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.115585686 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.097153738 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115733602 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.072498335 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.117966436 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.096605896 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.112507171 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.122759527 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.096001091 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.120572782 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.093138846 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.125776355 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.090100262 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.119313877 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.113776716 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.090944899 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.116239587 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.094172047 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.11437011 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093313768 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.122877915 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.092015702 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.119479152 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.126776036 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.089378788 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.120526116 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.089795968 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.1138178 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.12955339 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.100602849 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.113869312 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095638278 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.113512379 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.09772248 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.113084401 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.090626062 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.112885337 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.113406905 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.096449513 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.114196979 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092805861 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.12121931 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.10419684 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.113501691 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.095029883 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.11668307 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.114623691 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.096941375 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.113939063 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.090207482 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.116159275 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.080112326 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117203189 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.090661767 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.122588419 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.0937641 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.122730391 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.116149473 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.100048416 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.118833587 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.096490612 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.11919162 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.089880856 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.099848929 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095765612 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.117222413 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.093071723 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.114674442 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.115965677 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.090024033 seconds)
done (took 17.573637659 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.089666448 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.189458414 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.160189455 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.150688642 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.136162432 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.090540992 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.125768859 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.147509228 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.092836789 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.147710332 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.137669413 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.135622029 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.130481638 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.114324272 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.114889367 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.094462498 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.116443603 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.107324708 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.15248123 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.137040936 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.170537548 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.114500368 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.127806524 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.138689517 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.12475378 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.14275136 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.091780726 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.119350711 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.095214533 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.131477001 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.135819172 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.095044829 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.1153099 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.112621136 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.131285607 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.123273562 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.090762863 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.12344037 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.090936435 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.11442311 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.145146439 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.136416744 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.096796416 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.121193071 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.095124505 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.123968726 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.093033953 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122969232 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.126327403 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.095997986 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.130171698 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.161566223 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.118548279 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.108057945 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.11393914 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.125666927 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.108466483 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.12359277 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.092454113 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.122697278 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.115041364 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.094656413 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.131695851 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.146192522 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.095766125 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.129996202 seconds)
  done (took 8.971428797 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.109434064 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.145379811 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.13399945 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.109194447 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.116277347 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.092246697 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.115001611 seconds)
  done (took 1.766269724 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.092763273 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.142767363 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.136298026 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.14177311 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.139669602 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.119269792 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.121500078 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.116718678 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.112948929 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.117595389 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.141775863 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.134055472 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.117612785 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.124290617 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.119982944 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.116153117 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.14319925 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.091843023 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119518229 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.119501453 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119633943 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135167808 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.093978219 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.116752026 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111598368 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.117423961 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.16523807 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097609759 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114825161 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.119869785 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090177473 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.156379097 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.135064923 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.100050661 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116092351 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.11204555 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.135022971 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11440882 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.10890627 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.122114684 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.134465223 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.093202296 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.117896628 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.090688316 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.121557601 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.106396939 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.120437359 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.118377465 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.09604991 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.141580574 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.092424297 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.134979169 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.09314067 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.12095721 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.11852088 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096548181 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.126654494 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.093906343 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.140969575 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115316933 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.112512759 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.136366019 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.134572427 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.112297791 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.119372465 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.110240101 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.134177753 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.120170978 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09361939 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.120689588 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.112825169 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.114125513 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.119330521 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.106625851 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119245652 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.120400615 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.144991534 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.120801937 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.103007596 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.119450781 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.09346884 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.117591375 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.144402783 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096548595 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118053298 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.096797741 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.119688039 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.115185291 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.091082997 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.12013116 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.091081322 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.118629774 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.096210326 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.117368504 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.095898876 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.136789084 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.118188201 seconds)
  done (took 12.3406773 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.094161833 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.118065514 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.098713393 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.11807361 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.094071024 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.117395597 seconds)
  done (took 1.597854227 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.12134522 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.120707409 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.131767074 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.098955075 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.159942244 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.13675967 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.11249738 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.126962335 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.137146646 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.106703056 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.136432106 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.137508911 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.142885934 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.09955089 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.136850668 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.123647262 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.112089401 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.128615674 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.130425119 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099972095 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.140979038 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.124660341 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.099865307 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.138283651 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.121642661 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.0999702 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.129370935 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.131035719 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.105935308 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.127236909 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.124055154 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.096277515 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.125404037 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.126902376 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.112305806 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.125214485 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124175645 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.098204462 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.128582569 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.121323611 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.113382681 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125477172 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.130871497 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.097277152 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.128107339 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.124827943 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.098054741 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.128973439 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.136800263 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.098040659 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.123175802 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.098970204 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.121008867 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.122398536 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.100199029 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.126072894 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.122192223 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.112549809 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.125430637 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.125476757 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.097032435 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.122329729 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.127853311 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.096537932 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.133896443 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.122490855 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.100597951 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.12518277 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125310555 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.099134009 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.123193299 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.120955849 seconds)
  done (took 9.616689566 seconds)
done (took 35.236186481 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.697665745 seconds)
  done (took 1.650940918 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.851989796 seconds)
  done (took 1.808249876 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.402638247 seconds)
  done (took 18.389632728 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.504655076 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.584835995 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.023540969 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.1799685 seconds)
  done (took 3.253158597 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.955918344 seconds)
  done (took 1.932840175 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.288672208 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.262275901 seconds)
  done (took 1.516372913 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.783042053 seconds)
  done (took 1.754536046 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.471572944 seconds)
  done (took 2.444294964 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.331555094 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.191829941 seconds)
  done (took 1.50114635 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.567655685 seconds)
  done (took 1.540715639 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.255984219 seconds)
  done (took 11.232285207 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.277091247 seconds)
  done (took 1.263617055 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.308961213 seconds)
  done (took 1.287059701 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.574948789 seconds)
  done (took 4.554732376 seconds)
done (took 55.088675659 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.102603017 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.130784591 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.105107703 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.128181628 seconds)
  done (took 1.439531763 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.108722468 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.125970229 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.108714457 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.1238975 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.134897006 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.099851538 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.12686158 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.131137364 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.099151722 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.126597917 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.100040939 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.123711046 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.128523343 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.101856306 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.121587213 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.127832937 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.104617332 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.12495416 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.128673533 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.100379444 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.122535396 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.102732608 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.128406271 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.122798352 seconds)
  done (took 3.805520952 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.103350577 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.122733799 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099909942 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.121967714 seconds)
  done (took 1.428462711 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.103137037 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.135907666 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.109176 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.128753087 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.136810681 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.109353265 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.121448693 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.095998172 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.122151971 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.1295561 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.095216511 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.144678475 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.136181949 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.103600631 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.131000814 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.092424902 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119804801 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.135803545 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.103638501 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.129320695 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.097044967 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.128296889 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.119615451 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.112526139 seconds)
  done (took 3.823803171 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.175702252 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.131066844 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.14304345 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.099510815 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.166124689 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.144086425 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.09173278 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.144544009 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.117860527 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.108787416 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.122836113 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.163686771 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.107446741 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.11682882 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.118200543 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.09117552 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.130635229 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.10590445 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.120719053 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.131554169 seconds)
  done (took 3.521374787 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.101903689 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.120414288 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.091951128 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.119942766 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.10275938 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.124690931 seconds)
  done (took 1.647564018 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.100433068 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.118388311 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.096784386 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.120707008 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.097734363 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.117352908 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.091658373 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.118184176 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.118294261 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.092433953 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.119703701 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.091934779 seconds)
  done (took 2.271319247 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.518025008 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.123570886 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.124139393 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.092953743 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.128153271 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.118014729 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.109024582 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.121570283 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.147777236 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.091533479 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.119549588 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.095177011 seconds)
  done (took 2.782073349 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232260703 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128731669 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28768562 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.363038321 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201992517 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169209533 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.281982745 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168053775 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.20770338 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160739588 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231894086 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183172964 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158189715 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20763364 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142906761 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.14721465 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19646658 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.27368824 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157925012 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244479462 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174765704 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17010614 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185484232 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156298388 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14230166 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177015916 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.099781057 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134362864 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189493867 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206469537 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194433029 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166836191 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161044353 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.464780171 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262907232 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198834345 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.289830851 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139639938 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.173263199 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.172195697 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263186343 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142486724 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209769731 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164316705 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135764279 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207948554 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.348417114 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.18263953 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.1491994 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145627903 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202848588 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225799524 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.198212726 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141367814 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.329104123 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155621175 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.16453439 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197829005 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213202591 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232879002 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19695956 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.123139391 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19526181 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224476312 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191927621 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.15947776 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.186014167 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153820091 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17717874 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.22295438 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179040006 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173246502 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.20951795 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117392122 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170666587 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201784504 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172627717 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261152174 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189708157 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.124777878 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171596522 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152918566 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112515967 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.198800924 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129275407 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21700316 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145165161 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.167338552 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216966618 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161525287 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162965103 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215163669 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178883433 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151337114 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.087835688 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158173973 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.158822019 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175157939 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141492665 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161819886 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154126073 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.135833471 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173962348 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.101487511 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21526818 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.094004315 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.363519543 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187049599 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.13103891 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167474013 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15301615 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.154103711 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189045413 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203608787 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14618614 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137423179 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215925304 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185026958 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.144151277 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.206991547 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.20595115 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.147508356 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152777448 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204494612 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243837135 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144574401 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204857628 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153226788 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138711529 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.109694268 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214781434 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160681617 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.163228299 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11333832 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.213932367 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206853545 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.129923365 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141514254 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202268099 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139494022 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135917765 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123315256 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150766742 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.139637786 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.146406923 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.15045715 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181787553 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181461217 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157583048 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168058235 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149491388 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244684187 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145162644 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.153575716 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123672207 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.123459341 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.200349811 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229462018 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134308653 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205755521 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172688371 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233479075 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173710235 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138425193 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17899921 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107317142 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.124599478 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200198013 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166072971 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163823282 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.223717563 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20543409 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.211938025 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.18614265 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170419001 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178958261 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.170371969 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153035878 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.140309337 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164498471 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160230897 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.126885634 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.116488304 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.13844708 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152323648 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146787213 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139033576 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200137259 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176625317 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.223672437 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16336395 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153964979 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187171736 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.132326617 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176644895 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.411501396 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153463824 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.199994114 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223565739 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193406351 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144614799 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206470023 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.125206301 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128124224 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.123759319 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.195861837 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113270949 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13857087 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167124935 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187256734 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.361634326 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176395201 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241336994 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18365695 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19656453 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.126270063 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.172714793 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182330812 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182942407 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.181315395 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118810666 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.152992615 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182295522 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155963218 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240465339 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172241506 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177784566 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228829622 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.153489911 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109362093 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152102925 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174055836 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157909376 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178212914 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149755198 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142727828 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.318849716 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.134175594 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166179089 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211954539 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16668798 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181760299 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.153821233 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191071375 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130862976 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166108625 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162051766 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167130574 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.111204959 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.337040532 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197002844 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148817256 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.348230646 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186249647 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135335415 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.316019897 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207560639 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.372975129 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141168759 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159169471 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163094001 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166439461 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.324823869 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180568427 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163543214 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215923111 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13398104 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.139273721 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1431443 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153192677 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157696245 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.109407309 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.151110634 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.209136753 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.113015509 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213810013 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15092299 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160451216 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175773862 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.126646801 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.148582544 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155655371 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247549161 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190165478 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192371802 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.152145414 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.18070948 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234498526 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102727669 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135824207 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.138532461 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181479689 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140525968 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197448256 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.221097673 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207190423 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188031143 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200672408 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115680742 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.123485616 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164069548 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174575346 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238536772 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148906167 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.126458766 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229040505 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.112358904 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136919322 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168309572 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298985329 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144724346 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219614702 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.082861743 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.292823211 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13011596 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136722193 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167418643 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190086463 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.139971605 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.155027999 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170433801 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156240095 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166999044 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153648228 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.224891467 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218709205 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233628901 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18680614 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.136648084 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162963435 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.324892094 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191300962 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190758903 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.113065099 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190945995 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226100576 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.196726868 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.147101688 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17310993 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17266935 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163143105 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220787388 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11431488 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235075197 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11145555 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227868728 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158388284 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148205848 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178062817 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.194084128 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144175129 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212795309 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189364341 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138710399 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110279329 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165449669 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210305218 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152721957 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.104195761 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210754385 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.101342827 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225927023 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24100014 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138957365 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159346527 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149087195 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140394745 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159720819 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163477718 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11434238 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.168294846 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196921202 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.138876065 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218093031 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208556494 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174598372 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.349182834 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145162689 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.711198958 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.107678023 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227204318 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123814464 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207914463 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125348219 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204212857 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16407232 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170361712 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202239407 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162744798 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.236199325 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226823525 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.184098703 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135609084 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163555617 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15150341 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.121218786 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157634623 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172593005 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162188707 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.150386467 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.211009248 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161707761 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.110586758 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144755827 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20365649 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150918238 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212719517 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181635761 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115310992 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205545681 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194741549 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137166544 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.187104097 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191538038 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146047724 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153013452 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.141273453 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.155832605 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269699665 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.10163815 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214210572 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192144814 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164800365 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172371965 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.152469127 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19754207 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160720691 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22095498 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148723071 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.161782122 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161072275 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11744008 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.134464766 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160143516 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173262961 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.154555 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166696294 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.168699676 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200814103 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.128050107 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12230268 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.320287064 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179375657 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243892621 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.111735878 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139910408 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165068039 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148828533 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.181940349 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185578372 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.139075215 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139466829 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.139161573 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.13517007 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.141756764 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161164844 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2023574 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.325188677 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237437885 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.141070847 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.256023158 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143503133 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160174439 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.118354881 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.109654883 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154035707 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15086156 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156210024 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.227492923 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242634039 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.150789978 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.138232311 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15598025 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.101671841 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140697182 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169290769 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165024218 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184646307 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145879166 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.110790837 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161176823 seconds)
  done (took 86.549478909 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.187473036 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.138909694 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.153013921 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.206163503 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.183110583 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.29755217 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.213813116 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.261297161 seconds)
  done (took 2.717421203 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.096908637 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.155853043 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.162303266 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.139169531 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.094948685 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.12333125 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.388125896 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.136333311 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.094425681 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.155182788 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.152156891 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.122056538 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.646029321 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.122970839 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.123088652 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.161180511 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.120079946 seconds)
  done (took 4.063680648 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.256027436 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.501865245 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.193668752 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.200727101 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.166757956 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.119621087 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.723438467 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.122820451 seconds)
  done (took 12.36318389 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.127809445 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.150028005 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.166992429 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.139662272 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.154137681 seconds)
  done (took 1.821690177 seconds)
done (took 129.206994163 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.100828599 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.131267314 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.101754172 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.133278629 seconds)
  done (took 1.535901971 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.09945068 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.073566411 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.103544957 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076388335 seconds)
  done (took 1.435510884 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.196695804 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.173167074 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.399728405 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.074333988 seconds)
  done (took 1.588805455 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.119657235 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.136269775 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.137164318 seconds)
  done (took 1.483463194 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.109575286 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.133069724 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.107140457 seconds)
  done (took 1.429755825 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.109644637 seconds)
  done (took 1.195660652 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.114476998 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.143951613 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.116057344 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.142439638 seconds)
  done (took 1.604330468 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.102408784 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.13110784 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.116290947 seconds)
  done (took 1.438119833 seconds)
done (took 13.162035046 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.110187733 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.433546467 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.421312719 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.113323716 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.729804947 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.412124368 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.040850544 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.150710035 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.173639155 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.125192405 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113667832 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.706580212 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.027122033 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.355471645 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.015064995 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.47242971 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.678995135 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122948812 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095132027 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.125160932 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.02569802 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.122580241 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124352748 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.096018649 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.708770592 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.429677135 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098802711 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.474037767 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095951515 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.133644387 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.384267387 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12527862 seconds)
  done (took 17.320181457 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.101023707 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184990743 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.135174084 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.09844017 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.131599359 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.097835932 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.127263216 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.125248487 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.189559798 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097911354 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.146173758 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.096226521 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.130441861 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.125891094 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.118991553 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.124581795 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125430716 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.097307828 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.124280907 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098405865 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.144145605 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096980985 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.125432072 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.123470258 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.097057534 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.138777095 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.126061488 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.096010114 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.124449494 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.106207398 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127517801 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.099743627 seconds)
  done (took 4.975243743 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.148117658 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.193640993 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.136315501 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.16003198 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.179674238 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098665422 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.206008424 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.151772931 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.192821935 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126355216 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115703874 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.125470919 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.160528587 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.099637058 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.147205486 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097072219 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126987155 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12575802 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.097563204 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12599405 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.116096842 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.124024979 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.126780971 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.097110788 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.125712192 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.139944771 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.099393013 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.125793458 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097392267 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.133821451 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127643379 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098568232 seconds)
  done (took 5.324538894 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.101310572 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.130392702 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.113551399 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.142798983 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.127383048 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.100943782 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.129610453 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.100050831 seconds)
  done (took 2.044279942 seconds)
done (took 30.755135799 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.113844062 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.131453879 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.110971079 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.137802573 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.134591136 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.110576697 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.123943711 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.10817233 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.138041277 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.105308789 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.141374683 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.123240308 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.097842962 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.123298298 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.109944244 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.130378217 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.137986865 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.105745996 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.139512732 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.109907717 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.126825129 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.137027041 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.106372468 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.139022972 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.111044141 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.139718045 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.140906511 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.102823602 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.125723721 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.098308054 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.129952596 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.108962204 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.126170447 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.141067583 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.101494655 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.129844604 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.097730948 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.129325374 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.137993295 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.108969942 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.132244817 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.109263644 seconds)
  done (took 6.199928529 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.113584919 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.146468175 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.110019715 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.112256773 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.09060949 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083564094 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.143229277 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.081944655 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.112049036 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.11354884 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.105090911 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.079071623 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.1088863 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.075303357 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.080149091 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.106547896 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.082223985 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077210751 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.107448772 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.079380074 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.11052367 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.075361881 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081824408 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.109076257 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.077713644 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.111134626 seconds)
  done (took 3.679759266 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.10348511 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.145295707 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.116637369 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.178956918 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160603116 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.133177513 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.109301589 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.14495981 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.112697682 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.124663365 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.128781345 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.126971562 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.143613834 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.104400994 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.127838709 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.141401089 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.110545582 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.127544889 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.10648007 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.14593712 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.142537311 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.107252055 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.144662531 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.136766114 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.096280245 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.127002415 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.103513847 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.138998527 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.103999273 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.135158924 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.131417206 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.09971159 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.127249049 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.137253864 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.10322002 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.126320556 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.116802603 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.139937806 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.134415631 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.097344674 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.133085841 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.098663268 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.147651222 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.165601607 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.096826521 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.13212628 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.099333571 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.136031144 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.125763939 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.114939101 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.135686133 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.097372237 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.128485329 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.126025735 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.098406648 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.14098692 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.09783243 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.127926081 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.105148913 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.130956577 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.137159464 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.100267576 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.141560632 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.096910426 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.133115286 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.126055393 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.096945883 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.123733197 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.119633228 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132234225 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.166906683 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.097071792 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.127532554 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.106424021 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.134246936 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131752101 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.097138745 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.141827666 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.105947669 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.128585799 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.136698665 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.100263856 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.128750823 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.114709802 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.12769955 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.127079911 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.097729971 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.132795545 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.099379373 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.127058013 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.111172804 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.125004228 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.128543664 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110116946 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.125119082 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.098652066 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.13203828 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.130593292 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.095557199 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138847261 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.102768676 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.125607954 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.136080299 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.096662142 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.128319791 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.106480241 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.130467558 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.096244895 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.130097795 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.132068421 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.096846937 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.129166322 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.099452656 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.127292392 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.135304231 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.104609291 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.133415992 seconds)
  done (took 15.429048944 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.239908101 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.223318227 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.194236903 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.302865769 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.138781471 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.151154406 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.220582051 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.162704344 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.097366601 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.165181404 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.17593481 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.190260206 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.176536826 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.186777789 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.177184151 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.126190429 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.146346001 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.14276044 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.25322359 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.271429258 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.147284437 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.13613463 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.166972559 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.165987886 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.110819335 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.136735028 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.14525069 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.118156519 seconds)
  done (took 5.982058015 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.113953899 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.159063504 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.132281786 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.119165632 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.15373197 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.12668103 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.101305338 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.128659174 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.110366885 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.14087463 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.126259391 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.103425237 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.13410116 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.135113189 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.097389858 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.136131927 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.106555922 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.128555438 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.12841334 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.101571394 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.137144543 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.105945216 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.129976878 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.096515442 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.135707731 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.12584422 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.090091913 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.148673696 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.126696034 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.119869729 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.125484346 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.106051909 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.140555251 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.128887619 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.097090774 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.128954064 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.100209019 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.128801568 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.098717074 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.124828346 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.124709416 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.081422927 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.096047194 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.141504506 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.133842619 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.083572633 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.134238094 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.103236521 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.127875506 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.124546084 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.100150257 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.130212024 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.099960565 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.135221867 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.099569765 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.128166076 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.100758958 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.11808876 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.10411878 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.12824503 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.088136993 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.124580359 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.131273198 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.092828441 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.135452036 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.102337386 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.125297814 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.099371554 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.130452961 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.132945393 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.099284542 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.13279067 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.094896817 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.128754367 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.099763862 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.132808019 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.100905833 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.124646411 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.126367358 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.097420403 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.106842396 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.097527971 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.076835017 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.130798243 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.125821852 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.096764838 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.130036947 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.104229768 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.143163182 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.128494178 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.107083121 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.127754266 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.096296765 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.129204242 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.085945248 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.129917904 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.143436599 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.11822762 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.127119637 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.125288458 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.11187108 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.129459511 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.096731145 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.108398575 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.106103017 seconds)
  done (took 13.486073572 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.13626876 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.157366251 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.12984747 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.116698072 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.161228276 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.162046531 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.104732145 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.13451046 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.128764154 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.117223243 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.12715777 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.106614701 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.128282312 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.111929421 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.161229248 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.137522608 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.099987812 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.142269452 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.131484857 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.17510234 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.116808142 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.146533363 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.116017872 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.127101869 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.133385564 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.115013644 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.165637242 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.141387762 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.111210216 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.14609979 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.111491672 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.164843731 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.147656492 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.101609545 seconds)
  done (took 5.645724949 seconds)
done (took 51.520056978 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.193066021 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.434685969 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.193341309 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.077734676 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.234315766 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.210276081 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.203280875 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.187477917 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.305176349 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.192664693 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.447743429 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.746321837 seconds)
done (took 58.543524044 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.236978029 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.344184483 seconds)
    (2/2) benchmarking "String"...
    done (took 1.474449402 seconds)
  done (took 3.931975466 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.741195727 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.134820544 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.447043631 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.213553579 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.190323788 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.478259295 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.926863681 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.585597257 seconds)
  done (took 28.086962369 seconds)
done (took 42.115368804 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.195685561 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.221390451 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.228561048 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.168581809 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.310358206 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.219635108 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.572450866 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.216874475 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.204100043 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.176190329 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.197881326 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.221815551 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.199234442 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.554669894 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.199115187 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.195000407 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.272506573 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.678916083 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.616804011 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.203441244 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.213186024 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.225696926 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.212540067 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.194929677 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.193888814 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.192738588 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.215862236 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.205622964 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.868016642 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.200183715 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.20930648 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.707225328 seconds)
  done (took 190.600579281 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.19263273 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.257570158 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.297660808 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.240337717 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.698715418 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.397443772 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.348407008 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.790434203 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.217363215 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.219364347 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.369557926 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.193567605 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.405955635 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.214417625 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.224913057 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.277072111 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.499742779 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.427014797 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.237590062 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.354598874 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.207964449 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.222587334 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.154660869 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.347556187 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.223754508 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.224671152 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.200966325 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.202518742 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.364428865 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.430086831 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.235031128 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.247555123 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.833357208 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.052235496 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.196560624 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.216694263 seconds)
  done (took 149.336666614 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.191848185 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.194649994 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.193988197 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.227623759 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.194665656 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.788563514 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.770858884 seconds)
    (8/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.193771966 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.698439877 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.638039387 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.590112177 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.467178427 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.193758235 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.291063216 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.207363162 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.196107784 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.210511027 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.234102711 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.199466586 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.194062385 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.784052118 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.212402581 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.384142388 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.372050011 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.211608553 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.228615503 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.583435686 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.193920403 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.22849469 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.527181574 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.244438543 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.196130934 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.567240203 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.342973958 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.309284385 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.201299992 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.229053947 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.195535012 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.477032679 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.197595485 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.196211857 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.198985273 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.195134868 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.861419894 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.196198692 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.790644124 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.201766855 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.151174678 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.195182079 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.19550949 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.795957108 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.922099154 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.212923811 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.197185371 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.195964004 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.194250911 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.195753619 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.228655851 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.654797556 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.298239795 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.215949256 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.204366021 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.226922068 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.193380916 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.43062309 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.193339433 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.578922931 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.256008597 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.413645382 seconds)
    (70/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.191690677 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.777711814 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.195542235 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.294396407 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.313633927 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.191757183 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.191257057 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.194136355 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.191765996 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.301623554 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.191225594 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.588277211 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.366702217 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.208534062 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.602823796 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.197757577 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.288241069 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.191916854 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.620544806 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.196909946 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.192357713 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.941171318 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.290634541 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.192440367 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.194610407 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.192441154 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.590345896 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.75044787 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.45808166 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.197685034 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.660150733 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.198647053 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.610780085 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.741491747 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.892554783 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.197728127 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.306691435 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.368432746 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.209407841 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.195007968 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.587855967 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.19786804 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.246411968 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.193711878 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.591142389 seconds)
  done (took 365.969688898 seconds)
done (took 707.017629991 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.785344381 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.782832159 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.895504767 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.77763183 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.740948938 seconds)
  done (took 10.089263137 seconds)
done (took 11.202573085 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.389204649 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.386997508 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.252580135 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.392216422 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.225216691 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.410451525 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.371720271 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.220320735 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.301917877 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.279674891 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.296789049 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.251503144 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.233275096 seconds)
  done (took 18.1205705 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.538591231 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.513571486 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.257597691 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.521621327 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.234434237 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.520973865 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.402693358 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.413451879 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.413946693 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.229428688 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.209715248 seconds)
  done (took 16.368513339 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.537682625 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.529679161 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.266991791 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.53312131 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.241558666 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.537364998 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.408282784 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.422616877 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.41808879 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.233890778 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.211553288 seconds)
  done (took 16.453421606 seconds)
done (took 52.057806975 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.206916131 seconds)
  done (took 2.317487685 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.243075278 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.407542416 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.226655347 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.213050052 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.208014129 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.20925862 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.218982956 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.206823853 seconds)
  done (took 11.047672062 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.205612137 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.205873056 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.207165224 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.207602879 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.202868813 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.206837622 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.202035684 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.20946068 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.207061841 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.204671898 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.204769237 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.20714037 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.208630698 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.204255981 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.205185675 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.205287057 seconds)
  done (took 20.409426611 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.207345547 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.204299355 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.202774442 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.205038042 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.205902619 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.209582067 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.207425015 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.204016726 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.205781376 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.204652547 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.204594358 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.204215017 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.208390562 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.20756303 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.208645964 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.205304911 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.205421088 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.204212479 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.206944948 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.202953659 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.207148401 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.207703421 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.206744503 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.20629887 seconds)
  done (took 30.06095448 seconds)
done (took 64.949546447 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.824721138 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.773759292 seconds)
  done (took 6.710610828 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.264390657 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.271220914 seconds)
  done (took 3.6562902 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.208784005 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.206133137 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.207999116 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.209023059 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.215888338 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.211624316 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.214133525 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.216187453 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.213527731 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.2148419 seconds)
  done (took 13.237219596 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.211297949 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.214373881 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.207290767 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.211372401 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.205013234 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.203206628 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.207802626 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.207068815 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.209967569 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.208872052 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.214637798 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.213436979 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.214192023 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.213335969 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.214375311 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.209192258 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.211027668 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.212612165 seconds)
  done (took 22.91433749 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.215592737 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.23696396 seconds)
  done (took 3.578782673 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.345002276 seconds)
    (2/7) benchmarking "second"...
    done (took 1.251868518 seconds)
    (3/7) benchmarking "month"...
    done (took 1.32328654 seconds)
    (4/7) benchmarking "year"...
    done (took 1.310825853 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.255406452 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.233068284 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.254471975 seconds)
  done (took 10.10010261 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.21414522 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.395789065 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.509301931 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.791175822 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.213761143 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.220232293 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.069832197 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.218113411 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.21707203 seconds)
  done (took 13.975744294 seconds)
done (took 75.288886578 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.219519211 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.215521631 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.429668727 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.219950688 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.218208428 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.501190279 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.224405391 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.330797653 seconds)
done (took 37.483661022 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.208066475 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.18358615 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.921076974 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.194819328 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.273854099 seconds)
  done (took 18.690361298 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.238430065 seconds)
    (2/2) benchmarking "read"...
    done (took 1.541148869 seconds)
  done (took 4.893955279 seconds)
done (took 30.910392596 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.208733322 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.216161687 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.209503013 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.211985619 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.208704823 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.209957154 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.209749259 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.211158763 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.210455536 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 1.213687429 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.209263756 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.207832001 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.206797612 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.212343824 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.211519391 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.212385281 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.207941222 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.210362244 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.20886243 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.206480807 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.210325575 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.20604687 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.209687073 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.208945354 seconds)
  done (took 30.151879607 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.212422242 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.209846496 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.213818574 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.216066644 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.211369449 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.215115154 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.215309794 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.209989694 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.216719026 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.217499586 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.208576607 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.209005815 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.212158887 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.2092618 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216877336 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.212986068 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.216268533 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.210659801 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217601922 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.214168203 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.216971277 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214239273 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.215276014 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.215814558 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.211394989 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.214769346 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.218944669 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.214931793 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.217248072 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.209535464 seconds)
  done (took 37.533947274 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.220277597 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.218749871 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.215073917 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.218220721 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.215453214 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.215607532 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.215878216 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.21572202 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.214017505 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.214476191 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.213881294 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.215820989 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.217047081 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.214977035 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.216587824 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.216850143 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.216641829 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.215625464 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.217274766 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.217409411 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.21720699 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.217149446 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.217706533 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.219665393 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.219313963 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.219063719 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.219852843 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.216966567 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.219204892 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.220323481 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.220019999 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.220990854 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.217570195 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.220520793 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.222806629 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.22116587 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.225431699 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.227293602 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.22035738 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.218203215 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.220565273 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.219234616 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.220646607 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.220396757 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.218897933 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.217444538 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.217365256 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.219316363 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.216218405 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.217376101 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.217103735 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.218488382 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.218597636 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.219213927 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.218605132 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.218881932 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.218870058 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.218951203 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.220044254 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.220063003 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.220585992 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.220998597 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.219106213 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.21977715 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.221178829 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.221023341 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.219544565 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.221522589 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.223401059 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.226418701 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.221781649 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.222148524 seconds)
  done (took 88.887838547 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.223771059 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.222876393 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.22071331 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.222272466 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.220912334 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.223014854 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.219980265 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222469283 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218931432 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.220758041 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222204368 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.219898033 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216979798 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.220199537 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.21887375 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.216826372 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.220809085 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.21825766 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.221075632 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.221569554 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.219920678 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.214483696 seconds)
  done (took 27.981195503 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.215596242 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.218159822 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.219119601 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.21674408 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.213465372 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.217029325 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.215103253 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.216218364 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216848122 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.215352014 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216760462 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221035441 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.219268069 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212491382 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.217335712 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.216343833 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.218103396 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.217153547 seconds)
  done (took 23.029809905 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.216971306 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.214731356 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.219528837 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.215460849 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.216085747 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.21843324 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.215025287 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.218373174 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.214134047 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.215234494 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.214021954 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215229934 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.215498838 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.209341549 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.211462856 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.208898638 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.212785631 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208280357 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.21405032 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.209843591 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.204423321 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.212758143 seconds)
  done (took 27.830025434 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.217156337 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.212618038 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.207056587 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.210948242 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.212457853 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.211846337 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.212093786 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.208260759 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.216445299 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.210059934 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.211915801 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.209787569 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.212172304 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.214633763 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.20851741 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.206904698 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.210179122 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.208888404 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.209908432 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.207422339 seconds)
  done (took 25.342304396 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.213129176 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.215577709 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.212129734 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.211404623 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.21188556 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.213214171 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.212952093 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.209220506 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.210875696 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.213642801 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.216254148 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.210820563 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.210724317 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.212350418 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.211311031 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.212964599 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.212168723 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.218323185 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.214048156 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.215893027 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.214556416 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.212701294 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.214004568 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.212429637 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.216565993 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.215807916 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.217521971 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.217795462 seconds)
  done (took 35.101336398 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.215682103 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.212269329 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.213149098 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.213338364 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.211857797 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.213355858 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.214086669 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.213075139 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.218936563 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.212944924 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.213819237 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.217468754 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.218351421 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.219331149 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.216561829 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.215140557 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.212625425 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.21121716 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.210841617 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212699196 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.21468054 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215862807 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.217893557 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.213120826 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211769804 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.220143759 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.21248756 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.216803651 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.216714492 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.214851599 seconds)
  done (took 37.570847632 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.235474298 seconds)
    (2/2) benchmarking "in"...
    done (took 1.231231318 seconds)
  done (took 3.591489458 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.213630201 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.214731466 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.21401311 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.217132983 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.215562403 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.217715955 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.213200972 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.214003993 seconds)
  done (took 10.845045761 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.214020878 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.216236249 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.217451838 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.219490569 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.213736881 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.213890493 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.222885887 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.235420254 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.216166726 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.217730039 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.225344091 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.225657462 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.216746618 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.214436577 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.212570149 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.220429227 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.214645955 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.212967599 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.211774491 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.217597508 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.212417837 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.217216582 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.214148306 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.21317069 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.21513453 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.224509453 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.226997171 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.216454371 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.210073636 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.21869995 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.215214753 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.215967433 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.214622521 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.219084066 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.214571639 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.217563792 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.227357695 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.231427151 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.227392151 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.230456936 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.215841019 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.213823428 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.218207111 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.220685925 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.219117286 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.21679244 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.217475102 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.20965019 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.2158441 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.222317529 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.223761865 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.220063734 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.215331134 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.223246002 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.21850287 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.227180691 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.234550812 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.22222329 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.228672482 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.227702121 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.243454299 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.235502327 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.222249516 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.217732419 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.229611832 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.242599447 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.225386813 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.23074788 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.218044119 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.219549359 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.224244054 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.244248971 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.239676428 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.220522809 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.219478254 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.219962511 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.216730312 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.221342782 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.226343211 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.235305251 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.220319488 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.219535609 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.22737161 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.242368236 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.220621999 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.218135663 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.218890341 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.221007846 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.223922031 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.233573902 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.235858422 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.21854005 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.220261567 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.219191428 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.217187443 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.217659847 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.218915957 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.223679073 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.220428011 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.218378757 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.220004105 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.224458392 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.228968176 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.216995248 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.219852207 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.22355818 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.232350728 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.22065822 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.225734871 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.233550872 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.221162821 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.221053908 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.224316776 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.217214877 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.224288245 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.230260297 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.21952113 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.222812293 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.218229157 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.21783722 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.230641276 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.243413765 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.221804187 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.218080062 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.22310788 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.228148412 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.218394508 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.223328859 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.220677732 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.21980229 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.217802862 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.225464612 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.22186164 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.222423859 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.219817714 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.224755394 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.223226548 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.219322859 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.221846922 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.220650514 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.221465608 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.224968551 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.219118707 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.226989845 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.220381425 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.223586662 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.22520996 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.232031967 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.224060479 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.220197177 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.219677367 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.222449807 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.22091136 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.222511607 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.223341243 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.223337991 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.220910018 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.223802422 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.227071424 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.225913173 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.223538529 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.219999306 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.227630128 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.223759159 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.22685298 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.226768771 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.22209799 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.223321269 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.226791621 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.225950474 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.223979787 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.222656445 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.225151124 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.230391381 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.224157136 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.224852004 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.220214893 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.226403944 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.224450756 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.221652313 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.226772644 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.235116755 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.225425961 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.231243268 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.23625636 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.228163963 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.219762292 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.224939268 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.224184017 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.226452848 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.230902857 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.234792237 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.237292112 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.248129598 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.228835513 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.228560061 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.226625949 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.231233863 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.229336209 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.223497893 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.228642612 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.227518266 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.226121195 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.227439985 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.226110891 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.225340729 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.22396391 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.227375258 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.226433525 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.228853926 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.2281109 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.230423473 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.224266548 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.227243306 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.22905274 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.228860722 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.225856551 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.21987788 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.227524257 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.227252183 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.229446632 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.225431475 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.229589951 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.238620032 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.226774388 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.226985173 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.228246639 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.227442234 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.22868108 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.230529232 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.226888994 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.238020586 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.245369749 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.224568712 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.23783577 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.23867227 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.224161819 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.228623077 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.226672564 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.220080745 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.232317731 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.232641603 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.224774278 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.225762912 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.224180723 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.228042259 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.227231537 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.235875297 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.239211751 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.22962284 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.227618327 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.229355781 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.22606993 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.226354444 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.226524387 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.227149632 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.230541221 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.226181674 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.229016795 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.228722141 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.229378456 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.228993085 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.229931634 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.229631283 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.23583724 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.231464711 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.240111142 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.234468215 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.233001703 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.23282909 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.233451331 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.230118002 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.227171438 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.239840376 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.251535095 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.238949531 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.243348076 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.229182265 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.23650645 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.247059082 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.231789384 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.232608007 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.233037994 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.229117668 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.229991372 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.228281131 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.234763695 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.231192016 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.228278422 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.235709679 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.234519197 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.230913644 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.232195909 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.229094753 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.231651505 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.233958096 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.231974677 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.23414401 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.234882312 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.233718082 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.228912779 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.233862906 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.242168859 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.247473795 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.234182825 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.232275058 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.230851114 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.232506411 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.235760606 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.234207078 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.232806336 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.24267526 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.238940884 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.24255575 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.233450072 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.242869202 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.242925787 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.233957454 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.242638421 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.231578242 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.23172684 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.234579103 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.234394295 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.2445676 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.246075371 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.237824254 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.238786515 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.234037044 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.23688373 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.235622797 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.236620075 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.233500533 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.235887907 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.243959769 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.250319725 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.237168412 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.235347974 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.231647221 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.238469933 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.233759467 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.229897022 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.239296056 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.235014653 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.236552943 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.237058451 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.236974889 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.236719182 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.234309209 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.237241617 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.230941771 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.236344165 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.244286387 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.251063907 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.238246595 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.236348482 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.243270859 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.247206514 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.244895681 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.252764372 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.236353645 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.236760954 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.238721032 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.239992061 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.238580104 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.23686697 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.237746136 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.239774883 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.242290224 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.232366575 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.239261058 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.23767345 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.241536977 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.238648855 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.249231964 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.258460962 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.241271327 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.243002379 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.233758538 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.24081415 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.243976387 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.238428438 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.239912675 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.242611482 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.248429131 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.246688182 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.239000888 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.238906751 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.237957576 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.23944838 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.238406032 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.239015625 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.239407832 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.239905963 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.240535738 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.240179731 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.242391846 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.2407902 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.24033908 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.241939054 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.238488759 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.249986202 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.253355913 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.240873293 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.242473388 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.239173988 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.240087138 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.241126747 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.24014098 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.243191766 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.240455744 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.24306557 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.248280933 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.245852184 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.242251064 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.241726842 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.240362118 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.237960732 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.244393745 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.243189376 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.241972293 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.24265027 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.240052716 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.243166813 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.242829925 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.243454174 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.242656916 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.239767851 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.241712851 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.246136472 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.248750812 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.241929852 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.23934688 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.242516943 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.242341061 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.242124839 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.243833631 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.250595266 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.260741054 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.24963862 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.25043052 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.246854986 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.244146219 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.248017698 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.251157607 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.243724435 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.242412953 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.243575221 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.245148649 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.2434994 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.24801365 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.245614122 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.248136895 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.258132631 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.244687044 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.252256994 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.260442973 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.244626082 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.246387534 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.246524986 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.245302506 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.241430876 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.245171068 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.244439564 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.252467152 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.258106616 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.245716447 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.247726148 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.244474562 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.245631485 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.250123098 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.246221803 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.246461868 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.242553455 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.245831241 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.245598128 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.245830163 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.243284491 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.245723574 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.244677921 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.248071168 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.250386513 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.244576091 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.248192329 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.245853132 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.247307556 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.246763637 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.247307962 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.244431076 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.244423937 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.243050321 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.248680322 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.2443907 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.248353037 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.246354368 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.248135586 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.245504297 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.247767326 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.24567728 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.253383675 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.252740702 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.242298309 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.243198801 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.246685936 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.250571359 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.245759835 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.244612034 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.240997029 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.238754773 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.238518963 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.23649506 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.236154403 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.237377097 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.248993407 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.256336538 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.236496273 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.232021563 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.231946343 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.229619353 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.228748926 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.23069822 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.236382409 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.234249485 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.239176031 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.235468173 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.239615311 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.249264725 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.233873653 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.233655169 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.235802795 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.239324328 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.237739354 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.232364467 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.232476296 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.234141167 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.247064536 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.247904893 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.241592303 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.258636317 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.247859114 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.235510251 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.235050808 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.232136889 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.234598884 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.234283527 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.234940059 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.232310692 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.234270409 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.234687363 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.235455442 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.240863826 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.235197592 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.235107243 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.230690166 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.234831867 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.23752333 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.232192081 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.231844343 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.232192581 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.232225533 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.232052768 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.232710792 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.233246041 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.249288272 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.260596487 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.231853995 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.232958051 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.229796035 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.237647255 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.234600242 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.24234172 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.244858974 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.232148322 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.235134045 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.236922504 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.234353987 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.233445873 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.235238427 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.23541846 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.232362084 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.232740817 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.247262737 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.252516504 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.240503298 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.252377242 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.236767411 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.236606613 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.236972058 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.235512667 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.23697972 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.23723121 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.237555858 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.2403726 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.235512912 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.237138783 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.240516007 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.244121439 seconds)
  done (took 736.179733138 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.235324275 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.234292249 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.23541411 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.235742377 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.2354305 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.235547551 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.235627614 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.235722384 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.234885342 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.234905805 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.236319906 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.234593854 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.235068825 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.235603969 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.23670099 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.233103354 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.235149978 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.235870354 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.236520925 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.237238561 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.23671334 seconds)
  done (took 27.090016055 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.24005319 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.236374419 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.236506539 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.238896696 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.236878004 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.239300253 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.236638626 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.238312377 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.235847709 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223204223 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.233143287 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229712598 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.226798824 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.227309949 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228335594 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.233536336 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.23137898 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.229495026 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.231545853 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.230340191 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.232232456 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.229626529 seconds)
  done (took 28.270934 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.232755021 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.231766733 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.230559398 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.230309622 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.230333162 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.229759426 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.231314588 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.233023666 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.231902423 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.233014018 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.23226034 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.233225641 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.239613626 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.236985479 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.23429491 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.230512457 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.377149472 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.233285932 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.232682098 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.233914259 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.230014233 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.235805898 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.243389155 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.228191605 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.228912295 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.231834293 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.232335676 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.229827574 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.232803689 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.231630217 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.235515499 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.232026549 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.230981879 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.236332474 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.231985752 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.235827543 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.237062039 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.234190745 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.23268508 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.232222434 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.243703227 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.250376558 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.234105136 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.240263569 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.247982603 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.235889202 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.23888615 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.242405372 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.23042725 seconds)
  done (took 61.767822884 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.234010699 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.235948684 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.231260727 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.235434261 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.236206052 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.235926053 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.236068516 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.235669448 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.233508488 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.23353474 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.237276138 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.233676406 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.233718993 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.236907104 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.236095806 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.23210537 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.234177498 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.233539901 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.231751682 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.231963739 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.230598661 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.2344426 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.2362845 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.232513237 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.237489741 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.235770782 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.234806786 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.236863008 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.23562292 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.235021025 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.236985625 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.237790044 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.237829662 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.235362042 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.23492689 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.237979667 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.237897076 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.233216641 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.23736741 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.234859218 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.237553955 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.238318266 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.239170889 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.238429376 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.236285183 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.23671112 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.236499897 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.23628599 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.237446849 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.238611545 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.241528965 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.236662046 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.238565997 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.236659341 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.239642413 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.237660086 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.237378216 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.238042043 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.24038779 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.238213352 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.238336768 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.240231892 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.238218651 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.239277146 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.239306744 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.239065523 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.237939567 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.240798517 seconds)
  done (took 85.220993254 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.239910087 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.240069087 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.239994065 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.239506384 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.240388296 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.241477707 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.238978326 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.240226016 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.240445772 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.240565037 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.241914294 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.23970505 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.240244017 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.241510504 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.240539619 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.241517336 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.241285852 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.240799629 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.241121132 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.241202427 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.242641656 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.240296023 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.242097533 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.24096642 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.241227615 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.24115757 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.241734756 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.240713835 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.243387126 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.241824565 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.242486795 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.242361788 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.242291163 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.242041533 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.242544057 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.241577375 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.242129866 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.241219321 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.243499717 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.242350559 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.241657997 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.243479404 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.24199597 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.242706173 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.241813849 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.242508164 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.243158797 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.243943803 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.238809353 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.243524971 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.242841031 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.242997329 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.243018986 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.244556272 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.242341079 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.243391944 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.245513584 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.243990318 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.244318945 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.24394101 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.2431703 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.243646766 seconds)
  done (took 78.144982796 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.243521163 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.244038925 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.242182462 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.241535717 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.245309174 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.243352739 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.24480887 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.243788269 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.244976352 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.244829354 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.24603736 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.243980798 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.244122998 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245537632 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.243886419 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.2448043 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.244056471 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.24506631 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.244569154 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.245502542 seconds)
  done (took 26.036791569 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.244416955 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.245889071 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.244019142 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.243314531 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.246518166 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.245028782 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.246674683 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246397486 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.242690173 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.247492549 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.246814762 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.248007075 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243621333 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.243286482 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.248724282 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.244091458 seconds)
  done (took 21.078121854 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.244544538 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.245736419 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.246628403 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.247282347 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.244900892 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.245173825 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.247539393 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.243937987 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.245105912 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.248022765 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.249487053 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.247453184 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.247109337 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.248288499 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.246149701 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.247885613 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.246228747 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.245824 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.248472173 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.248695611 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.246911659 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.245775656 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.24765337 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.247844106 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.247133309 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.247225738 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.246774682 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.247210469 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.245795133 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.249124961 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.246954088 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.245781141 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.24548582 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.245359184 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.248557707 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.247120208 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.249414951 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.250039586 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.249416718 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.250155831 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.249681111 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.245602269 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.248112081 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.250096774 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.246788935 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.249403074 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.248710722 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.247904307 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.24756085 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.248461248 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.251160199 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.24894138 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.249481584 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.250292537 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.249797963 seconds)
  done (took 69.769653882 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.24905699 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.251332424 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.247523927 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.250390883 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.252428265 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.247767201 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.249652907 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.250211429 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.249023772 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.250458495 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.249894536 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.252737267 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.24907367 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.251095635 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.249577345 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.249770519 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.249046474 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.249210734 seconds)
  done (took 23.653479913 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.249101093 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.248751642 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.252293872 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.249184389 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.249398821 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.252588816 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.249626252 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.251171999 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.251597359 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.249631883 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.248308426 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.251953946 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.251798952 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.253075876 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.249939929 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248343695 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.253488156 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.252466468 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.249678303 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.250366576 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.252377594 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.2523562 seconds)
  done (took 28.672531098 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.25205303 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.251797845 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.252266539 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.268058139 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.269791899 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.273651107 seconds)
  done (took 8.724702914 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258357099 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.252685113 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.249947522 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254575374 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.253792578 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.249980695 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.250438361 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.251264125 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.251528282 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.251465688 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.250094737 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.253402414 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.252350252 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.250644698 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.252968735 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.254081534 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.252749216 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.251030886 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.252536037 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.254805498 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.25174221 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2549632 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.250818367 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.252512416 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.251291767 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.251392969 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.25443182 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.252461371 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.251650761 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.253881614 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.254348361 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.252122886 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254775217 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.251982399 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.254852355 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.254683612 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.252794453 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255396367 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255072249 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.252040705 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.255493393 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256436467 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255615769 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255095128 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.256297376 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.252422055 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.25354312 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.252038646 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.253487714 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256600464 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.25599319 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255062177 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.25675583 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256958638 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.25756011 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.256520824 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.253465007 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254755488 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257314209 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.253597062 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254926778 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256271834 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255361456 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.253585739 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.255675252 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255864188 seconds)
  done (took 83.928382401 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.255196981 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.253048883 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.255165193 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255835143 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254705631 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254915287 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255173091 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254242774 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254712183 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255202895 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.25796451 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255035318 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257244148 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256566151 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255892311 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255223594 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257282326 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256208434 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255835913 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.25853555 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255676259 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256965501 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.25570428 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256768326 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.25654258 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258171252 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.257511916 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257998045 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.256872317 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.257032572 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256139012 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256879401 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256620837 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.257129528 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.25835979 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257044511 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258310576 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258147702 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.258130087 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260890481 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257326207 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260603735 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258644727 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.258371826 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257781943 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257104433 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258218018 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.259541435 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.259513445 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257827562 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258918163 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.259995963 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2588827 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258466017 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257848788 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259254149 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258846158 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26015684 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.259565265 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.261974617 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259933502 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257286079 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.262386885 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259874962 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259386454 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.259549694 seconds)
  done (took 84.162155794 seconds)
done (took 1711.682499342 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.424163 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.378444005 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.259166358 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.311143013 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.256232717 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.282391139 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.249092116 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.255153635 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.262269284 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.261338392 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.260359737 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.448923524 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.257403384 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.254798034 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.260665341 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.355529566 seconds)
  done (took 41.942963266 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.288150951 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.267240996 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.372693576 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.284496703 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.287387056 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.439536145 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.316680256 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.267623071 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.422269739 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.302647116 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.734887459 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.288869436 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.265310738 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.310491161 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.282939874 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.437289664 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.492669221 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.74437183 seconds)
  done (took 28.972566296 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.6712442 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.264612174 seconds)
  done (took 9.10307787 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.283414933 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.267017098 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.266864947 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.266916782 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.258485534 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.258106445 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.264984116 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.262488029 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.595182728 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.380228354 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.27718139 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.271366821 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.277792048 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.259950065 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.25745533 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.297474317 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.403943555 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.251155232 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.249720496 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.258251874 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.252078887 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.351866934 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.304011261 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.250937828 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.368696287 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.583716572 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.246392438 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.249096408 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.378637708 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.24462526 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.23585937 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.23990606 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.241988566 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.09836674 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.746739941 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.234767071 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.280408267 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.250081941 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.238008596 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.383843155 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.245236596 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.246378293 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.235222415 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.733454945 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.368140848 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.354857736 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.368946492 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.259415405 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.243740037 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.303732504 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.249200735 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.245121272 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.285840491 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.022121881 seconds)
  done (took 106.428392581 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.284657549 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.618787622 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.402406555 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.254808312 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.922795551 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.974648666 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.251475023 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.496532004 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.306312467 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.233339961 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.519317946 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.725264145 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.258571673 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.295353745 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.762491612 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.271435687 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.236908899 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.095312012 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.247841878 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.23726199 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.712359813 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.254999121 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.24128382 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.39985572 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.272207585 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.672435451 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.546280649 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.597298724 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.261051557 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.237762815 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.686713425 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.256428639 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.25421554 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.241099402 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.48736229 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.579166128 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.57211383 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.260763205 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.256036605 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.23891491 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.246064863 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.667948925 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.574517057 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.253745441 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.254333026 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.667131215 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.25167512 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.23848002 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.240330603 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.442207419 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.875867579 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.245129366 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.54997346 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.245268731 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.531864156 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.30297688 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.326659989 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.698113987 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.254153016 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.318546328 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.276533757 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.239436682 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.243183737 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.23564807 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.23035856 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.553553894 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.365278335 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.225584516 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.550936422 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.673392136 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.242583281 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.730443372 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.120486999 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.25209945 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.324979354 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.224973685 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.904494378 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.684380428 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.24965352 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.224610319 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.535260626 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.235458658 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.489100723 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.236875568 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.238664595 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.726814328 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.23341515 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.240524129 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.225421776 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.224206704 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.986740143 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.233893198 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.494335182 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.258704851 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.226963364 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.22323441 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.251742338 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.224211397 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.243358519 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.227930289 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.734850515 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.238812123 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.189090159 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.243129229 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.223599464 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.242277898 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.228670164 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.224508081 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.449229526 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.636467537 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.242349167 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.228128794 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.228615384 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.229080029 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.398468862 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.225348356 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.508081757 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.241336815 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.226926925 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.229703308 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.955168022 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.272526063 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.224817838 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.233056478 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.100797944 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.437311166 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.245390097 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.226096102 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.229462085 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.240059526 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.385212199 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.244783505 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.302725489 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.231090332 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.909319945 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.240024414 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.249631422 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.522299147 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.234775101 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.018472817 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.243130543 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.230829367 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.509940178 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.500023389 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.277378244 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.243755892 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.264330786 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.916582034 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.27559347 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.374831919 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.25676955 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.263707479 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.439676746 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.627626352 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.239329964 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.839585655 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.237601972 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.457638659 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.244707794 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.535013964 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.711618001 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.250777003 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.245966391 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.931917307 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.919127133 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.005408834 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.24755844 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.503894502 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.188654141 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.723878963 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.245030287 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.245156325 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.800138868 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.248582466 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.244271478 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.24369269 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.243639814 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.579943526 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.41443671 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.558072629 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.248339907 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.669433494 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.295691871 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.244643711 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.242483831 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.245168412 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.590602286 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.3215033 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.248610281 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.28167873 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.245066926 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.247534499 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.690825594 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.173596844 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.245112057 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.399079526 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.865049334 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.257534275 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.247450782 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.814701716 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.458698127 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.770904421 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.255374169 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.52766896 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.263273375 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.283144453 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.914849522 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.317341463 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.694915782 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.260438137 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.246916445 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.834188288 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.25460265 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.600322511 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.245056635 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.247154418 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.78146472 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.254886546 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.245262003 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.40885518 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.259059002 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.510229126 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.250446143 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.25910273 seconds)
  done (took 1087.994168438 seconds)
done (took 1275.608172926 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.250536111 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.252133526 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.231941916 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.251297713 seconds)
  done (took 26.142001321 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.26958939 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.253388498 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.259763588 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.256888198 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.260002601 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.255915798 seconds)
  done (took 8.717633931 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.310441619 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.248857351 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.24906423 seconds)
  done (took 18.964964759 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.448167495 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.460881736 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.564787442 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.270815406 seconds)
  done (took 9.906342359 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.249276567 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.246836165 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.250034263 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.249669301 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.261179166 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.265213605 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.252496601 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.251909663 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.261613353 seconds)
  done (took 12.441400303 seconds)
done (took 77.332383171 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("sort", Float32, true)...
    done (took 6.241113931 seconds)
    (2/286) benchmarking ("sort", BigInt, true)...
    done (took 6.240577334 seconds)
    (3/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.344320524 seconds)
    (4/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.589315387 seconds)
    (5/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.221463025 seconds)
    (6/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.578146715 seconds)
    (7/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.233870775 seconds)
    (8/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.949486335 seconds)
    (9/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.493413971 seconds)
    (10/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.878013919 seconds)
    (11/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.235271484 seconds)
    (12/286) benchmarking ("sort", Float64, true)...
    done (took 6.248001951 seconds)
    (13/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.482564258 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.302470319 seconds)
    (15/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.929206108 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.287937699 seconds)
    (17/286) benchmarking ("sort", Int8, true)...
    done (took 6.242904651 seconds)
    (18/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.243014094 seconds)
    (19/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.431601287 seconds)
    (20/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.378868409 seconds)
    (21/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.226101476 seconds)
    (22/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.442909515 seconds)
    (23/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.831216419 seconds)
    (24/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.232561832 seconds)
    (25/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.221813796 seconds)
    (26/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.288923166 seconds)
    (27/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.230850463 seconds)
    (28/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.174641585 seconds)
    (29/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.06325494 seconds)
    (30/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.287297154 seconds)
    (31/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.242501414 seconds)
    (32/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.251049006 seconds)
    (33/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.267425553 seconds)
    (34/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.24583526 seconds)
    (35/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.237472575 seconds)
    (36/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.829397516 seconds)
    (37/286) benchmarking ("sort", Int64, true)...
    done (took 6.245047676 seconds)
    (38/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.814325979 seconds)
    (39/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.252571711 seconds)
    (40/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.256529762 seconds)
    (41/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.936137008 seconds)
    (42/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.056365488 seconds)
    (43/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.363508411 seconds)
    (44/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.275727364 seconds)
    (45/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.261855314 seconds)
    (46/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.225986473 seconds)
    (47/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.026643215 seconds)
    (48/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.256018497 seconds)
    (49/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.301599695 seconds)
    (50/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.100691239 seconds)
    (51/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.622620598 seconds)
    (52/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.262554634 seconds)
    (53/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.359784084 seconds)
    (54/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.261834747 seconds)
    (55/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.247606233 seconds)
    (56/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.232932663 seconds)
    (57/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.58714152 seconds)
    (58/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.820064679 seconds)
    (59/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.231180394 seconds)
    (60/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.353479659 seconds)
    (61/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.312573309 seconds)
    (62/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.233145407 seconds)
    (63/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.345381473 seconds)
    (64/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.56955251 seconds)
    (65/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.246194985 seconds)
    (66/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.312447586 seconds)
    (67/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.501080556 seconds)
    (68/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.833702851 seconds)
    (69/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.809478391 seconds)
    (70/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.261853666 seconds)
    (71/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.262199232 seconds)
    (72/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.218617961 seconds)
    (73/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.373927377 seconds)
    (74/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.10678612 seconds)
    (75/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.939908197 seconds)
    (76/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.435282551 seconds)
    (77/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.003007341 seconds)
    (78/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.697863928 seconds)
    (79/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.736081002 seconds)
    (80/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.226611279 seconds)
    (81/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.601148876 seconds)
    (82/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.086232469 seconds)
    (83/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.250726558 seconds)
    (84/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.245149411 seconds)
    (85/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.615282185 seconds)
    (86/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.280009176 seconds)
    (87/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.490220085 seconds)
    (88/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.553767839 seconds)
    (89/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.241462593 seconds)
    (90/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.349190064 seconds)
    (91/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.252147625 seconds)
    (92/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.952515523 seconds)
    (93/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.560130474 seconds)
    (94/286) benchmarking ("sort", Int64, false)...
    done (took 5.416780931 seconds)
    (95/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.617348222 seconds)
    (96/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.649410396 seconds)
    (97/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.342167004 seconds)
    (98/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.068060989 seconds)
    (99/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.297669344 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.135851898 seconds)
    (101/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.230432608 seconds)
    (102/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.287774534 seconds)
    (103/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.552244687 seconds)
    (104/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.284545847 seconds)
    (105/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.991336738 seconds)
    (106/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.386551009 seconds)
    (107/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.758207612 seconds)
    (108/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.708940891 seconds)
    (109/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.331598183 seconds)
    (110/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.277219961 seconds)
    (111/286) benchmarking ("sort", Float32, false)...
    done (took 5.225482815 seconds)
    (112/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.510205955 seconds)
    (113/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.908544412 seconds)
    (114/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.247024662 seconds)
    (115/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.263413734 seconds)
    (116/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.306155819 seconds)
    (117/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.269905681 seconds)
    (118/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.978505849 seconds)
    (119/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.229773359 seconds)
    (120/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.270507216 seconds)
    (121/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.230761507 seconds)
    (122/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.270416574 seconds)
    (123/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.457253095 seconds)
    (124/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.33587225 seconds)
    (125/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.245181542 seconds)
    (126/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.748068089 seconds)
    (127/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.469881004 seconds)
    (128/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.429911493 seconds)
    (129/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.608859115 seconds)
    (130/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.230813612 seconds)
    (131/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.321058643 seconds)
    (132/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.231218534 seconds)
    (133/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.296448457 seconds)
    (134/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.285061902 seconds)
    (135/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.430670117 seconds)
    (136/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.308142302 seconds)
    (137/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.232981209 seconds)
    (138/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.47805774 seconds)
    (139/286) benchmarking ("sort", Bool, false)...
    done (took 1.764999189 seconds)
    (140/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.23285412 seconds)
    (141/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.2756608 seconds)
    (142/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.59801911 seconds)
    (143/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.293935603 seconds)
    (144/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.512027854 seconds)
    (145/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.386724814 seconds)
    (146/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.358617173 seconds)
    (147/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.961174566 seconds)
    (148/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.596169508 seconds)
    (149/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.522888733 seconds)
    (150/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.234539903 seconds)
    (151/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.231931237 seconds)
    (152/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.727359884 seconds)
    (153/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.749043452 seconds)
    (154/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.048573603 seconds)
    (155/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.298859563 seconds)
    (156/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.367893223 seconds)
    (157/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.232470122 seconds)
    (158/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.359439196 seconds)
    (159/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.054743365 seconds)
    (160/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.860501009 seconds)
    (161/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.233467448 seconds)
    (162/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.96799334 seconds)
    (163/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.279458111 seconds)
    (164/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.3476768 seconds)
    (165/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.822471056 seconds)
    (166/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.408588247 seconds)
    (167/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.544442336 seconds)
    (168/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.339575037 seconds)
    (169/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.457804137 seconds)
    (170/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.366634864 seconds)
    (171/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.028162556 seconds)
    (172/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.276958291 seconds)
    (173/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.375739647 seconds)
    (174/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.275448186 seconds)
    (175/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.376301786 seconds)
    (176/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.253843251 seconds)
    (177/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.291081064 seconds)
    (178/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.239444968 seconds)
    (179/286) benchmarking ("sort", Int8, false)...
    done (took 4.279550122 seconds)
    (180/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.23819251 seconds)
    (181/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.346007752 seconds)
    (182/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.599189057 seconds)
    (183/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.235054681 seconds)
    (184/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.962707766 seconds)
    (185/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.359425788 seconds)
    (186/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.455162893 seconds)
    (187/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.297564527 seconds)
    (188/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.59818193 seconds)
    (189/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.263104243 seconds)
    (190/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.289121688 seconds)
    (191/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.505924515 seconds)
    (192/286) benchmarking ("sort", Float64, false)...
    done (took 5.519153152 seconds)
    (193/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.267228165 seconds)
    (194/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.306183456 seconds)
    (195/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.656996853 seconds)
    (196/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.270289056 seconds)
    (197/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.037922084 seconds)
    (198/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.346654885 seconds)
    (199/286) benchmarking ("sort", Bool, true)...
    done (took 5.29596504 seconds)
    (200/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.492699367 seconds)
    (201/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.243316594 seconds)
    (202/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.321909201 seconds)
    (203/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.283871289 seconds)
    (204/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.680452908 seconds)
    (205/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.361431277 seconds)
    (206/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.108310731 seconds)
    (207/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.262762732 seconds)
    (208/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.919477538 seconds)
    (209/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.273907766 seconds)
    (210/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.47669386 seconds)
    (211/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.319344922 seconds)
    (212/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.283436666 seconds)
    (213/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.169192378 seconds)
    (214/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.239957848 seconds)
    (215/286) benchmarking ("sort", BigInt, false)...
    done (took 6.256897138 seconds)
    (216/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.335577658 seconds)
    (217/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.965155161 seconds)
    (218/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.237296854 seconds)
    (219/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.657806722 seconds)
    (220/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.307156142 seconds)
    (221/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.238421312 seconds)
    (222/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.294999185 seconds)
    (223/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.284544424 seconds)
    (224/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.488451691 seconds)
    (225/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.513234233 seconds)
    (226/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.664858986 seconds)
    (227/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.312551077 seconds)
    (228/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.239804739 seconds)
    (229/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.239947517 seconds)
    (230/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.304506744 seconds)
    (231/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.290506648 seconds)
    (232/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.670524521 seconds)
    (233/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.35493567 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.142571812 seconds)
    (235/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.28028598 seconds)
    (236/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.989244531 seconds)
    (237/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.244681367 seconds)
    (238/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.442260119 seconds)
    (239/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.348319281 seconds)
    (240/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.61526851 seconds)
    (241/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.149736411 seconds)
    (242/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.46843044 seconds)
    (243/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.310910969 seconds)
    (244/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.379823107 seconds)
    (245/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.476784362 seconds)
    (246/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.56824399 seconds)
    (247/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.286186013 seconds)
    (248/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.79906434 seconds)
    (249/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.253402272 seconds)
    (250/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.665966126 seconds)
    (251/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.660457085 seconds)
    (252/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.260398333 seconds)
    (253/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.241523101 seconds)
    (254/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.880990225 seconds)
    (255/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.601111906 seconds)
    (256/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.763611643 seconds)
    (257/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.385623076 seconds)
    (258/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.056047132 seconds)
    (259/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.028012616 seconds)
    (260/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.103714721 seconds)
    (261/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.278742013 seconds)
    (262/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.443236477 seconds)
    (263/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.282443368 seconds)
    (264/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.628624245 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.361153263 seconds)
    (266/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.978966574 seconds)
    (267/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.245756303 seconds)
    (268/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.349076321 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.379940494 seconds)
    (270/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.345955192 seconds)
    (271/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.751912307 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.077155595 seconds)
    (273/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.436985616 seconds)
    (274/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.300600027 seconds)
    (275/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.239583607 seconds)
    (276/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.391733718 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.303994409 seconds)
    (278/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.698427567 seconds)
    (279/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.277722495 seconds)
    (280/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.239114152 seconds)
    (281/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.263626925 seconds)
    (282/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.261345079 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.290676804 seconds)
    (284/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.24214025 seconds)
    (285/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.346964749 seconds)
    (286/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.68995079 seconds)
  done (took 910.500210889 seconds)
done (took 911.653678406 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.293028721 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.298232595 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.275256963 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.296424361 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.394181488 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.295629218 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.282361462 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.275761948 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.320860898 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.32537288 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.281498659 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.296014161 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.284092307 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.283877169 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.273464762 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.297917081 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.267309878 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.281179823 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.300410344 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.285759516 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.299753571 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.281420141 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.325458908 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.296056973 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.279850661 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.278403229 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.285296267 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.302064565 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.397004881 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.286865913 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.278419733 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.296937046 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.269262903 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.275480547 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.268557161 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.30358936 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.294837007 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.287634316 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.281537357 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.316039655 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.649443154 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.293552321 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.287916541 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.279372373 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.276627666 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.281752894 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.28449907 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.282039247 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.299544413 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.299484254 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.636170781 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.311011289 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.2889679 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.276176045 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.291139162 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.287385578 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.282527899 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.300337528 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.304696409 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.302660431 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.252805792 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.282538111 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.279576532 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.302496742 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.29480052 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.677246461 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.282821991 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.282333508 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.648096262 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.292811833 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.674311227 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.30300546 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.279524637 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.301869162 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.318464537 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.268461907 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.273679768 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.278837757 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.296658877 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.287987798 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.289536315 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.300354341 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.284147604 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.278822948 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.302364588 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.3005688 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.289796083 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.289022116 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.289600533 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.303644474 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.295148446 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.299218104 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.286183475 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.274714409 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.291648714 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.281702393 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.291057475 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.29309792 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.288460655 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.290065776 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.650731222 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.317406577 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.278685535 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.279544305 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.279117927 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.303646353 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.651910605 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.298401935 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.304572787 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.327213034 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.282676199 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.26135065 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.291421551 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.308213348 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.289325226 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.288456156 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.277646788 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.260978986 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.641033546 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.313574154 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.28437468 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.28862269 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.308307587 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.285301441 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.280255879 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.293081179 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.287327958 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.305839137 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.411647579 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.293265538 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.321764527 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.291082516 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.284823037 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.308123961 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.307484135 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.320149633 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.286008219 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.308056463 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.306643573 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.279899902 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.302683068 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.295187127 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.287265617 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.289542666 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.281512823 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.30796279 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.305551469 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.304835379 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.302872962 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.413431228 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.281168224 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.285368446 seconds)
done (took 216.821835892 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.341928953 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.278066546 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.362528422 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.280645679 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.378823721 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.378212996 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.280519828 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.279264011 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.277057865 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.662772682 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.277812053 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.278904807 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.278451936 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.27927966 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.363108593 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.281068088 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.277327947 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.62565156 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.280260157 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.352141257 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.2813317 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.28084316 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.279711772 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.662730323 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.281236168 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.278320225 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.35256168 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.281049644 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.62808816 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.285271902 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.277926697 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.62708365 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.37517463 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.30121786 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.293612781 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.28771573 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.380863594 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.2974958 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.367785312 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.366903522 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.371375181 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.321443869 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.283242639 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.282624881 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.283042328 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.286955021 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.280327657 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.307750305 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.282123488 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.280757476 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.629997363 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.29646561 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.294630837 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.282863018 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.284717618 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.305928606 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.281849119 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.285461001 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.378837209 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.282909728 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.346414842 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.664941881 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.667446473 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.2856929 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.282294487 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.282776742 seconds)
  done (took 145.014798063 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.352012522 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.356664504 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.392586149 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.298140419 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.334028074 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.397002077 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.296240124 seconds)
  done (took 10.612707438 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.291532235 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.284015086 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.332334494 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.333541088 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.287555068 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.46294434 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.286991203 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.297938603 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.283244529 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.338026974 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.286275606 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.290188604 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.294361399 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.283694134 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.334509242 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.296700735 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.401548968 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.290146494 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.287935865 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.445838809 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.283494536 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.291425205 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.338142153 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.298441159 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.288874488 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.29345575 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.106522103 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.285836542 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.284159222 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.287354106 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.286100785 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.361126629 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.287094086 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.288033721 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.284531148 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.403987533 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.286692309 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.283312385 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.287274613 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.283151855 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.290764997 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.291058999 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.288661104 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.284287572 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.29222902 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.310381132 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.288296446 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.287861445 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.288130506 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.287707405 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.337312544 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.288586559 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.285505069 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.284089756 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.341126078 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.293742528 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.288522735 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.286765628 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.287569772 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.284186577 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.450820102 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.335943948 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.289052873 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.338992906 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.290776718 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.289310409 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.289184135 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.289685079 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.343648135 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.287212781 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.339263348 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.289468985 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.468182786 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.315534964 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.293903188 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.291021442 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.292471974 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.287959668 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.291102056 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.295290255 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.287363487 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.293762807 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.297150713 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.289653479 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.285644241 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.459083598 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.395893119 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.288353858 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.306585158 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.296951207 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.288365481 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.34562333 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.296077884 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.286634153 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.343082116 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.403607581 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.341520348 seconds)
  done (took 149.167620174 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.29524684 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.300430931 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.298152684 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.313876495 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.307253921 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.291070252 seconds)
  done (took 8.998535445 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.291742754 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.290732889 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.29117344 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.292600189 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.293339566 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.291600243 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.29239349 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.291116611 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.294692162 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.293513356 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.293494667 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.298322953 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.295430019 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.293791006 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.293002827 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.29408033 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.295273376 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.289608705 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.292427515 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.295731548 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.400939429 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.295360717 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.29517797 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.294096789 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.297881784 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.29456846 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.3023835 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.293014871 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.293013806 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.302784431 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.310370744 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.294996612 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.296174961 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.302005587 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.296492553 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.298758731 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.297368956 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.298436704 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.291691114 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.295405311 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.298468585 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.295979818 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.295205457 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.303190776 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.294542274 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.299571222 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.302406504 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.306513923 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.296520606 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.29916144 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.29872434 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.29825724 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.296537153 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.297704994 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.299345079 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.310472237 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.303811253 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.297210666 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.295153245 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.295812119 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.295327266 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.295108897 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.297396306 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.30106793 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.291829282 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.302368676 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.29735684 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.299259558 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.295521359 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.296944854 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.301073398 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.295429533 seconds)
  done (took 95.665290014 seconds)
done (took 410.641411154 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.613510562 seconds)
  done (took 7.809147606 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.346195673 seconds)
  done (took 7.548394091 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.302078358 seconds)
  done (took 21.505074295 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.356475558 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.311984896 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.321276531 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.297610349 seconds)
  done (took 26.487052837 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.570804969 seconds)
  done (took 7.769054355 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.300984359 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.298102495 seconds)
  done (took 13.799428753 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.677046933 seconds)
  done (took 7.876997834 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.634210965 seconds)
  done (took 7.836274413 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.298968129 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.313411732 seconds)
  done (took 14.06868754 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.271149857 seconds)
  done (took 7.468677188 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.301606862 seconds)
  done (took 11.502880308 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.305418104 seconds)
  done (took 7.510648029 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.307629163 seconds)
  done (took 7.506553042 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.103525469 seconds)
  done (took 9.304606511 seconds)
done (took 159.19358807 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.28915714 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.288752086 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.291256484 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.290315417 seconds)
  done (took 26.357046318 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.329602895 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.332304387 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.333437407 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.342877575 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.336595003 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.332299858 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.324947913 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.32443588 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.343230395 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.334906037 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.332769324 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.33572746 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.331735801 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.324167888 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.334368022 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.333308989 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.345236095 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.334930062 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.323329899 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.334488443 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.303691421 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.343838356 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.335480889 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.301222569 seconds)
  done (took 33.151879727 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.82225547 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.372020379 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.453735939 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.353102931 seconds)
  done (took 7.199238093 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.353334787 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.355263858 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.364979218 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.405454559 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.438039394 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.365617467 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.325632599 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.324010207 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.308856522 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.357583145 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.430963854 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.369962883 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.439539377 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.301938418 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.503984544 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.303856201 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.30233973 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.353052677 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.405447562 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.419265797 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.30411199 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.350257382 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.356397626 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.372890108 seconds)
  done (took 34.013640275 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.301101395 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.320179672 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.300140478 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.299206823 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.306739358 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.301151858 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.300291289 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.299935742 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.299488418 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.305645044 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.298995532 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.312368131 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.298705779 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.300688678 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.308755107 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.302796226 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.307928886 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.301396773 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.303135446 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.305524703 seconds)
  done (took 27.275703087 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.293550422 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.135739447 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.645149423 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.551263436 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.298072429 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.303096305 seconds)
  done (took 28.427592378 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.367161257 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.517289925 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.308800358 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.642610253 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.736476728 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.319916416 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.307232163 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.533076012 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.838831085 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.834091315 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.362164411 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.37352461 seconds)
  done (took 19.344398396 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.308055489 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.302848677 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.315873008 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.319106665 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.353917069 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.323620668 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.308304956 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.295724751 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.361698188 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.376849484 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.324595151 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.355931333 seconds)
  done (took 37.151326457 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.384769263 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.340977252 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.213463638 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.394222314 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.013273418 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.511248118 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.322380358 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.025832529 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.316189178 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.575587695 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.301676492 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.394279019 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.555955524 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.306789141 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.306263618 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.214375983 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.539501871 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.77203404 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.303784183 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.257850424 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.326657275 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.313110016 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.298917859 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.526973565 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.528231236 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.278884016 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.563786588 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.081176746 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.578318435 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.31699004 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.31246983 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.302062179 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.576427911 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.195692862 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.397245382 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.511928092 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323987353 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.931729252 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.302401233 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.221516282 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.30669079 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.30463852 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3171544 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.305424263 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.238201327 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.308456207 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.316516433 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.309932693 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.016978866 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.30454888 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.552223577 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.400443759 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.310042644 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.873181757 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38351497 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.308849544 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.309519796 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395309354 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.89364307 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.437130941 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.321972795 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.246693385 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.313832155 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.218865195 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.897512309 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.322377823 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.308288348 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.309207667 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.237831666 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.218769312 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.323996804 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.453412117 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.329186225 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.956976071 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.964414963 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.32188845 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.236251069 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.841133001 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.312933867 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.245342816 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.534125541 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.081225835 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.243573727 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.259378095 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.241824406 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97826306 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.315266303 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.698813483 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.327205581 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.034730871 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.530559184 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343250043 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334742079 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.53040448 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.1860878 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.310783863 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.311384809 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435304698 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.327943397 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.012217426 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.255660823 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.309738963 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.567766765 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.519314354 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.310530538 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.224569141 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.092777895 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.313899931 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.334919151 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.31114171 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.524344332 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.884647013 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.335528872 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.486154127 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335517851 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.086413876 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027436015 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.316584071 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.31798529 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.314065995 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.575813295 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.034479339 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.201656189 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.379089624 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.31412762 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.307933697 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.280522236 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.159441585 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.206907406 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.499808708 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.328985023 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.326464772 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.314345154 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.260293839 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.311327947 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320463052 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.091243814 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.533188942 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.323082627 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.589924192 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.244336601 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457847429 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.319477465 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.534588512 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.470092322 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.32733819 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.569990063 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.312090337 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.331073104 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.330821601 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33264053 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413248405 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334910687 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.325208126 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.576422331 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.313699953 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.315819138 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.247270351 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.088555102 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.314449734 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.316421069 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.315609618 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.872894411 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310754888 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.320700457 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.285239656 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.323911037 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.380749807 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.317956126 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.522250961 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.504159601 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341803054 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.318547462 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.322654611 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.537503315 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.320352408 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.247198313 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.400477685 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.786654299 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.884104763 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.347004218 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.250274204 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.02640772 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.008608012 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.311495476 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.498938936 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.312768871 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.521859109 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.346413017 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.32097758 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.870069362 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335772163 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.261654374 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.326768553 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.327821635 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.592955116 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.325792164 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.491274271 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.485095322 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.323716365 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.331456192 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460034223 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.331552608 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.250303059 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.833854331 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.321091707 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.312656585 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.087867406 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350051361 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.266727091 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.463484306 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.594801367 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.325729503 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.561132303 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.345806065 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.351898918 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.312916672 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.315695932 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328411562 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.342666601 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.323633739 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.324960707 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.245648391 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.761056033 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888531076 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.020275682 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840041294 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.537533194 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.340595478 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.20576817 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.0344421 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.267553608 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.972671648 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.545127396 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.045066686 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.276272316 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.075643669 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.486396639 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.080202185 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.56857683 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.553405149 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.515082015 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.333210324 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.572104217 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.534387227 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353033012 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.329999155 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.252333206 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.83528615 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.288613712 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.322544843 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.405254804 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.369760433 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.322796486 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.10407777 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.361466816 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.991218277 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.969142895 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.865300966 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.70471691 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.317926052 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.352841405 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.490470811 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.351394345 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.849038937 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932757403 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.336968419 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.797520367 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.271205878 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.53102121 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.350883924 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.316937028 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.812310587 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.340119575 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.583229852 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.565326241 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.261323699 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.333916569 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.843396874 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.191431803 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.325331656 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.745163777 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034407089 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.320050148 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.603143261 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.337919557 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.504126918 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336493315 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.254259209 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.252755565 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.013267434 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.32252352 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.294221085 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.785951136 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.337741648 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.329823196 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.336264055 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.171427087 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.575053582 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.333095933 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.880331751 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.560451796 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.328873506 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344227096 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.322358123 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.320328686 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.299108881 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.214072775 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.556786596 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.388467828 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.54598297 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.249251267 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.181717761 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.349573668 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.532734048 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.219415648 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.323195887 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560945115 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.05214663 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.338067753 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.011966248 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360557116 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.322135814 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.346859373 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.333003669 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.341599956 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.407342673 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.533945129 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.354885368 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.333422019 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.960348231 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322132833 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.324850833 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.336658604 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418855053 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.558286205 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.514152255 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.107420588 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.890702616 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.042496259 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.907049898 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.588286485 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.331184213 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32499402 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.260737423 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47132908 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.850066473 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.597179587 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.455565815 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.322646881 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.345827195 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.324600504 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.33686949 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.541451835 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.599301839 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.194393423 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.321909497 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.010661071 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.473357622 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.334841162 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.538135023 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.792254164 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.857253521 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.441214061 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.324214431 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.043650709 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.615860013 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.41765068 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.328144813 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.916604862 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.338994878 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.009770814 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.330156086 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326678466 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473490186 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.576617918 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.274867966 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.335041313 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.485026486 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.100675041 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.28478679 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.583340523 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.740137657 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.538432114 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.908672833 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.020810923 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.591637115 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.396962544 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.538547713 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.447093737 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477016826 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.327887104 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.226466714 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.332230748 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.176102481 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.037131437 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.336380434 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.899656244 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.605844094 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.329429885 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.330511646 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352412634 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.335683737 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.548664286 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.056660081 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.557357686 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.338010815 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.33003028 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.911298854 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.899363326 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.600618595 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.272090961 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.331155237 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.551344354 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.584547477 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.352735744 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.782862957 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.041501149 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885626943 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.307492154 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348580245 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.343452145 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.017311249 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.908300666 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.544211873 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.826826435 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.995793456 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.335208202 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.609510409 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.332310469 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.339795483 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.610734376 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.33225454 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.342336745 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.54758705 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.913999204 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.104016317 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.340459171 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.325910343 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.272389304 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.556559452 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.407143821 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.265064012 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.329099129 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.73903153 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.349769293 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.459902865 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.341175574 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.334122729 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341342154 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.08842437 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.613413893 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.335596056 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.331357997 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.323445007 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.353738544 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425577517 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.237899932 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339270594 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.003688506 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.684254084 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.590975246 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.336595679 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.31536099 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.338219284 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334022459 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.048278752 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.301217391 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.332390031 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.881849009 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.340824624 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.349288361 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.33557101 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.550190676 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.546332575 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.336351482 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.554198946 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370237916 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.353914467 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.240592359 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.100270395 seconds)
  done (took 1662.317356578 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.350862611 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.345370441 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.351849582 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.406513659 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.3321272 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.355257441 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.350356973 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.347467333 seconds)
  done (took 52.081054817 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.336531077 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.487592045 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.370965999 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.345903189 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.340906964 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.345004533 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.781147986 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.363567002 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.344604118 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.346036031 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.33460457 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.348417086 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.939776819 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.35183139 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.34979595 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.344769329 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.350940825 seconds)
  done (took 65.321158101 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.241385028 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.600567894 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.965873139 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.406452399 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.370882783 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.34295168 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.832382098 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.352312704 seconds)
  done (took 58.357864843 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.347913989 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.34361854 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.343562751 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.343972077 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.349502072 seconds)
  done (took 7.97255922 seconds)
done (took 2060.173015267 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.339807434 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.341587424 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.339528832 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.344595197 seconds)
  done (took 6.604539512 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.315243848 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.998070208 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.313748844 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.329714503 seconds)
  done (took 18.199556184 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.375946354 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.350092117 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.986437861 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.907197689 seconds)
  done (took 5.135459541 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.089183867 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.10110808 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.085721626 seconds)
  done (took 7.520767409 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.339099644 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.340432679 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.339630757 seconds)
  done (took 20.260281145 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.624955981 seconds)
  done (took 2.868420841 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.484796732 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.534119924 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.650278288 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.65885024 seconds)
  done (took 7.572670576 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.721489814 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.706137731 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.520821063 seconds)
  done (took 6.188346441 seconds)
done (took 88.317887562 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.056220856 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.581280618 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.536407445 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.067926169 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.557028086 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.535119048 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.759436298 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.036354884 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.52990855 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.522874146 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.024387823 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.559350317 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.49087615 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.580719629 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.493365166 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.707101414 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.708728102 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.090333354 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.749633788 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.909438735 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.759704325 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.665553042 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.86008921 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.682959328 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.678077894 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.493492506 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.245327488 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.708029871 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.92914948 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.263595974 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.489509293 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.083121065 seconds)
  done (took 191.595652731 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.336579365 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.337702187 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.33798871 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.36166008 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.343697668 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.334697793 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.355009405 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.33882047 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.34504625 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.347098966 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.33804522 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.340555045 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.339045133 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.356975198 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.353987588 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.349186343 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.344377777 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.346534806 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.337841413 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.337545991 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.352356113 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.338225826 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.356798147 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.343153794 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.339392651 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.33715903 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.36678838 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.339341762 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.356477971 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.356728094 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.340287502 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.353812844 seconds)
  done (took 204.308709609 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.347612203 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.338927303 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.343443495 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.340644158 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.34416552 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.338941846 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.356671769 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.350987241 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.342694925 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.339744856 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.354403264 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.353279498 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.339031839 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.340112953 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.359537298 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.339560577 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.3369947 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.357259937 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.340391876 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.355499061 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.344305084 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.340375458 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.354456646 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.354191404 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.338886583 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.36415468 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.355077759 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.341337201 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.359133216 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.359269437 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.353541793 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.338715023 seconds)
  done (took 204.371244396 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.54658441 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.346671911 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.34623371 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.306011777 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.350800152 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.350369977 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.345317038 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.542920243 seconds)
  done (took 14.386344005 seconds)
done (took 615.903887426 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.559389105 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.291558163 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.542514875 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.367551757 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.134523327 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.386530797 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.369646292 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.530979151 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.267457726 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.546181355 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.53792571 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.382362321 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.680939106 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.368527285 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.619809502 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.464662502 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.243179111 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.374108003 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.682027182 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.906875621 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.626151454 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.778779286 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.544689714 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.250089882 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.687674525 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.769260323 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.028818961 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.241858588 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.386025915 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.68897001 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.967652752 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.326028704 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.416923072 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.42341086 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.477291044 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.458828464 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.27592577 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.419584123 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.559686535 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.540254146 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.886219228 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.090426613 seconds)
  done (took 91.352677444 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.333287829 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.331013231 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.329843218 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.332541156 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.333452039 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.331383812 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.331186325 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.332990892 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.332738363 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.328810761 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.332773608 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.332251115 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.328974334 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.332685341 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.330764733 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.330635193 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.33229244 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.33550637 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.331400513 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.335727901 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.334171321 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.330368159 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.332140278 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.332523211 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.33149876 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.331135206 seconds)
  done (took 35.883863902 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.348494115 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.58964483 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.764493576 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.363213326 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.349821686 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.354372249 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.426819548 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.349236837 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.358438158 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.352377893 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.498133339 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.35416839 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.384250604 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.779948103 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.362376184 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.354100154 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.354976694 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.353183723 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.597519145 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.359842473 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.448573963 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.35290791 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.425905234 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.362559968 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.37478264 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.35185615 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.356318496 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.937347349 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.365151063 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.500468888 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.099684371 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.428928802 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.889398581 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.780669236 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.111410421 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.359264006 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.355546836 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.504230397 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.352336887 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.352421617 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.423321594 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.351681285 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.753716039 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.01338126 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.368790273 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.350576923 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.95950009 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.521060689 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.585959209 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.369189861 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.794774904 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.363982126 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.357194687 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.354502525 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.586921596 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.358407599 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.351910486 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.958389848 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.383775074 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.428838901 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.361857768 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.355179263 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.60699294 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.36424342 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.592392156 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.354076142 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.360645707 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.375911956 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.760745547 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.357036514 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.042233962 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.375312293 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.353384654 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.501741226 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.595928557 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.996048942 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.371545186 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.61068102 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.906451941 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.441640412 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.360261 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.926727362 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.447605268 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.363928192 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.355933274 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.356940378 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.356689286 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.401509872 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.425811845 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.990431227 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.04116144 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.97638195 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.453777017 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.370802541 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.356866076 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.953818278 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.377569202 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.357719702 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.757922578 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.048089104 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.37386472 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.368038973 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.043091162 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.375973324 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.43368262 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.369036502 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.77289855 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.364509021 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.402753264 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.359674856 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.37043729 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.380261193 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.42946153 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.365463249 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.360868833 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.016104536 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.539720035 seconds)
  done (took 178.947657544 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.356746994 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.351396831 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.350966531 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.349213184 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.352754929 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.358216127 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.353351655 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.351477558 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.357218542 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.351797292 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.352246664 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.354282139 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.352822365 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.359084861 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.383068837 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.357094731 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.965039928 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.354902514 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.367026887 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.350788167 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.13953438 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.362491514 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.366113889 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.353015151 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.352736331 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.35883284 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.375589334 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.35964673 seconds)
  done (took 152.658046113 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.362805819 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.899677639 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.375325072 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.488782942 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.383401918 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.361098812 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.487541909 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.417024253 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.376260648 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.360285163 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.363971549 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.651099233 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.361194249 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.850689879 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.539888027 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.506581701 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.851831149 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.374971568 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.359063238 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.362767239 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.490077384 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.364916534 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.652750365 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.900388553 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.375880565 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.900082174 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.344069457 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.362762567 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.363241847 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.902478103 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.376250945 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.651492943 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.4370802 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.421221151 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.918532988 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.874060434 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.878952657 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.505165498 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.361712357 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.362227778 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.36455436 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.344981622 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.911528378 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.38331117 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.361499792 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.898118111 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.385265959 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.36624792 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.372163791 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.363840909 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.420654725 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.434994212 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.670806525 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.919306694 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.458609817 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.371745339 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.487624315 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.731061594 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.368247811 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.858787112 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.347130003 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.916609117 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.385262162 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.34752177 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.368128858 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.367218091 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.506438476 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.489767733 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.859043861 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.379189878 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.855868232 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.517992118 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.362510843 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.363686693 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.368490916 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.914529774 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.877753388 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.520987838 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.491900469 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.546699434 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.353231093 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.366307076 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.350049594 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.437713013 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.36405956 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.915642593 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.873185912 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.380372428 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.366771191 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.366621358 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.370058227 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.536690009 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.93155367 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.461375067 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.848257877 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.676137579 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.666362404 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.377734601 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.421678321 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.376118994 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.664407491 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.378242438 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.421588274 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.797908536 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.661947093 seconds)
  done (took 162.065575471 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.600471484 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.506714469 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.451362403 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.502866109 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.949993841 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.914477755 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.645968129 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.501478817 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.471528138 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.615387607 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.488370939 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.474962341 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.57225158 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.439706735 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.081433567 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.451233468 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.464974198 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.506504651 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.51477974 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.34618673 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.003082377 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.640237307 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.552938654 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.197714975 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.458111261 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.100080482 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.911811719 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.875127684 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.529561198 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.627265891 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.897537142 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.461997262 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.29059228 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.041991016 seconds)
  done (took 65.354581411 seconds)
done (took 687.508268523 seconds)
SAVING RESULT...
DONE!
