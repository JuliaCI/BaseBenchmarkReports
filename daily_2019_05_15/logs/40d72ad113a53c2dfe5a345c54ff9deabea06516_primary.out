cset: moving following pidspec: 19851
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.322420445 seconds)
loading group "string"... done (took 0.595906224 seconds)
loading group "linalg"... done (took 7.269980837 seconds)
loading group "parallel"... done (took 0.16929675 seconds)
loading group "find"... done (took 1.149389062 seconds)
loading group "tuple"... done (took 2.037591644 seconds)
loading group "dates"... done (took 1.294882296 seconds)
loading group "micro"... done (took 0.240007827 seconds)
loading group "io"... done (took 0.973782941 seconds)
loading group "scalar"... done (took 39.923905604 seconds)
loading group "sparse"... done (took 12.972864987 seconds)
loading group "broadcast"... done (took 1.024198678 seconds)
loading group "union"... done (took 13.794801129 seconds)
loading group "simd"... done (took 4.773814173 seconds)
loading group "random"... done (took 9.591011346 seconds)
loading group "problem"... done (took 2.036931738 seconds)
loading group "array"... done (took 23.011135708 seconds)
loading group "misc"... done (took 2.058478593 seconds)
loading group "sort"... done (took 3.545721725 seconds)
loading group "collection"... done (took 19.350829933 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.545056716 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.143883155 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118974368 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.141846419 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.188565103 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.134417131 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.147846309 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086192436 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.062218173 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.168441663 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.141854096 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.487369993 seconds)
done (took 5.135881869 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.203590612 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08904535 seconds)
    (2/2) benchmarking "String"...
    done (took 0.098085958 seconds)
  done (took 0.899964007 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066836893 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128107563 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.081653024 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068810345 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067978306 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082765069 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068083228 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066999903 seconds)
  done (took 1.283771508 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075641216 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070096862 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.085375789 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069237532 seconds)
  done (took 1.020320665 seconds)
done (took 4.204831827 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.909545926 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.241336627 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.188075708 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.461347944 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.151665194 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.191842661 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.667753176 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.330753498 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.212522848 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101471493 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.106826306 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.387925185 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.109539129 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.670044698 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077101522 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.105167831 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.160613461 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.438068092 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.080875066 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08296485 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103637139 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141384264 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.101933281 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07837374 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.1711162 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071489951 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.150286823 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.097478056 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068684382 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.246500017 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.191894079 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.693841737 seconds)
  done (took 10.551154853 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101781373 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.11919894 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070537752 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.142138552 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.104147607 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.088166723 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072669 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084214225 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.09272699 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.161492249 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.116335394 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.10766298 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.083350389 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071170099 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.102514272 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.214065358 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108456241 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08624538 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088660124 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076884383 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.124303453 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.084605883 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.095814524 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079344955 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.154437831 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.19719559 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113513768 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.11250138 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070096186 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082191376 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.133000682 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144349619 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067461054 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083164923 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.141573638 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.112430833 seconds)
  done (took 4.620916177 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.04823662 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.163879918 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093682516 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.156445611 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.087385789 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.112748027 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.084991864 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101737088 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.254584856 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.1721171 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.468544589 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128862588 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101067897 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068103702 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.084727712 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068705147 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.548667258 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.148762155 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105280999 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.108179668 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.091654269 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.073171888 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.367437341 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068817613 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.068040945 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086916793 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060481085 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.148899666 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069452636 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.347654028 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.073822891 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.090101443 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08862491 seconds)
    (33/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.102564174 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103032793 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.113332803 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.125915478 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068778464 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066657404 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.174134175 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.093349062 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.093470794 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.083390059 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068017719 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.107696968 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10597525 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.12279222 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.085082634 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069799339 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.185287682 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068874103 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.102116764 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.877123655 seconds)
    (53/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.067127453 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.167017451 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079450199 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.083607006 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.272308387 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.102587007 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065445978 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.081591084 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.244738273 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.166735803 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069612894 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067290466 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089502158 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069466064 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.371137893 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.085462598 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.780616248 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.0713052 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07937569 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.0873195 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068918334 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091160585 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074490987 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.103508006 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068548552 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.069442666 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.084970105 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066988647 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.086789742 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.08762141 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.207530812 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.085382983 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068923272 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066042833 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.10573708 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112475633 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.072491108 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066857311 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118674974 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070676146 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.085873198 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.10363297 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086418639 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.102629124 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.071367868 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.130230372 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068416687 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.140843455 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066671636 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.113531408 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.075559276 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113401699 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.093319013 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068162291 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.152738592 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.063707282 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081709504 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066621508 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064010935 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.08426384 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068144489 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.099596671 seconds)
  done (took 21.273879195 seconds)
done (took 38.213210368 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.300395823 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.094358356 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.093913386 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076708278 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.094846458 seconds)
  done (took 1.457399127 seconds)
done (took 2.225053783 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.122671338 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.119847831 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064935735 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115107118 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064880975 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.119606847 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116285216 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082887072 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117586625 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.069026514 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.114384613 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065204197 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064779992 seconds)
  done (took 2.035414695 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084689661 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085831923 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086818239 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083402306 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079893714 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083354438 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081041429 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107547122 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08127727 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089643686 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064926476 seconds)
  done (took 1.691435428 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083610369 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085195913 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086670652 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082437437 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080277691 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.0831565 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081152086 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104141469 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081473411 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091081885 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065053744 seconds)
  done (took 1.689947494 seconds)
done (took 6.17429305 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079654951 seconds)
  done (took 0.839161432 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.710118467 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.668679464 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.083122726 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.136958511 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.222244583 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.159687127 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.447048768 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.11284036 seconds)
  done (took 10.47698938 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.09190049 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.101678958 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070932371 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.08787042 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070671769 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.087541387 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073532008 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069841998 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.088116207 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072712029 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.088296906 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.07295563 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.088185148 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073654949 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068989844 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.085646029 seconds)
  done (took 2.122005341 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096162512 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.094455514 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.092554508 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077043594 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.091194921 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074659948 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.093188814 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076193653 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.089124558 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074022426 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092444656 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076272249 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.08962267 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067027039 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.092854383 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078775186 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088664805 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077106622 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.093140433 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076740352 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.093079674 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066322552 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.089573778 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077622165 seconds)
  done (took 2.895216638 seconds)
done (took 17.099138913 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.133474448 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07766552 seconds)
  done (took 0.978053646 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083340151 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099672327 seconds)
  done (took 0.955932861 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085487808 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.082591133 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.09163937 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.096294984 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.06752631 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.083999204 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.104930737 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067923782 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.0827382 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068377483 seconds)
  done (took 1.603155051 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070655101 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095031503 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072337875 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.099134409 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075676514 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.082462994 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075424359 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.085597605 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079933585 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.080578492 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073686993 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.100833206 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072979476 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.102400757 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075304005 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085534004 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.088959335 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069556607 seconds)
  done (took 2.261780929 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067855075 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068438876 seconds)
  done (took 0.910604252 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068532118 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065373623 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083940284 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067532572 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.08046813 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064246663 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080637008 seconds)
  done (took 1.286962096 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.413193529 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110456918 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.24857033 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.08994927 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.105755949 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.265296105 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.084984451 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072433731 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.09004151 seconds)
  done (took 2.295831998 seconds)
done (took 11.06533824 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081051843 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087919877 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112507589 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.427898244 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107190913 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.06817913 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.132743559 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.22199714 seconds)
done (took 2.018092946 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.1285123 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.615109255 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.396800189 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.211898231 seconds)
  done (took 2.005492798 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.377819133 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.09248606 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.07519234 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068880845 seconds)
  done (took 1.399603413 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067683138 seconds)
    (2/2) benchmarking "read"...
    done (took 0.07052048 seconds)
  done (took 0.92253943 seconds)
done (took 5.235418377 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068808797 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.102702328 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067300968 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.065130899 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.085650279 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.064799042 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065375314 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.085121489 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065066755 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066613037 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.084125942 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.070252916 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083342441 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067802134 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065124285 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081105506 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067981903 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065245026 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081558114 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.067859748 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06473954 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083660317 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065519011 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064793674 seconds)
  done (took 2.570393278 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087899147 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084672757 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073715341 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089359056 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071479651 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.089171358 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073186543 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068082446 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.090203868 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070051874 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088232698 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071241506 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.086174011 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072346633 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086213112 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072189881 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.089022391 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068479188 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073388788 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.088753957 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072713821 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084806121 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071418047 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089058154 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071544129 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087993667 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070779672 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.084377946 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073893383 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087711108 seconds)
  done (took 3.175434239 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072554448 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064909729 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.082739388 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072156507 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065469576 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.083473624 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.06518335 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.082463956 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066488084 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065274738 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.083324608 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064935301 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06523247 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082769618 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065923801 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.085093862 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082232226 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065897712 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.082791319 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065750543 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068371989 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.082098891 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065221389 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081435279 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066075291 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064756515 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.081694843 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065222555 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066465637 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.082489752 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068721944 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06777247 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.082433308 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.07206477 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.085228296 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065113471 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.070421206 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.081560013 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066354718 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.064959676 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.081029721 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065237129 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065174017 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.089187513 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065160993 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083978494 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065540476 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.066944847 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.083309217 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068943711 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.081110996 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065334424 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067514263 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.083375471 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069622245 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064314416 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.082858199 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064848812 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082306648 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065235929 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064508444 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.081829427 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067626459 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.066425979 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.097910317 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072860577 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.081599383 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067480046 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066241949 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.085054646 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067673501 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079226889 seconds)
  done (took 6.059794972 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.119257664 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092738432 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084839866 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067741672 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080302019 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066111814 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.06913088 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082477959 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06776057 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088794562 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06528671 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067036469 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083883537 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077874036 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082692628 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067738761 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087792185 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063824721 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065851771 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086818091 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06653135 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.085874469 seconds)
  done (took 2.513343793 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.188766247 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089510445 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.110950511 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092533208 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.086116026 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075202789 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071137148 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088357087 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0719474 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086497431 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069442034 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088420659 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068845115 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086166917 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070660756 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086113191 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072035838 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086448428 seconds)
  done (took 2.381245201 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079810638 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066970863 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.108842041 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067108899 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.086503767 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070272092 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090699914 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076326398 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.087257548 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067911982 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.093713219 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07063968 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.08664714 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068981944 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071233979 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084954048 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071103014 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084615919 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076464356 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090378597 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072529219 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093256287 seconds)
  done (took 2.559320466 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082899431 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069111318 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.103797134 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086772362 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064415095 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066634741 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.091763538 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06783755 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.090439976 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069428879 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06738806 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083480218 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072511546 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.084649228 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072252411 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085285847 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06984638 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067211162 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087185441 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063464323 seconds)
  done (took 2.341299792 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08984783 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085351841 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070063829 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094459594 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068747114 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.08645963 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077366486 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.085384881 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069358448 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.109786262 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069937588 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087954353 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078104821 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091008394 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069592126 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094325714 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076763741 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094030929 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068207449 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086400916 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.221953066 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069026184 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094395657 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069361058 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085800772 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068884026 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068593069 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09054639 seconds)
  done (took 3.221166461 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067525482 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068268757 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082262719 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065458194 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065104506 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.082336392 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065980448 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06566182 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084707775 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065416912 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067717957 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.084488321 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067774543 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.083993566 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068743063 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06792822 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085410445 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065503609 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06549758 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083058753 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067779637 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067475915 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.085104964 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065864674 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081247114 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067845983 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066159382 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.082594797 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067487718 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065389724 seconds)
  done (took 2.968785289 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077961301 seconds)
    (2/2) benchmarking "in"...
    done (took 0.092568934 seconds)
  done (took 0.97293976 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066219107 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082672489 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.083352654 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072453015 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089955619 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06860896 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.093190137 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072197926 seconds)
  done (took 1.428875147 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.084308797 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079411817 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.087990783 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079373169 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.096977845 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084524653 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.157230174 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.087083208 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074079602 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.08315978 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081580548 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.06677628 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.092138757 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068867399 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091230276 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075152695 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065765533 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.091314024 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071372565 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.084416582 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06996385 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094230373 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070169106 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064492065 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.087473895 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.077811114 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096921774 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069285483 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088571283 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075853871 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073456337 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.079936819 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068234823 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.086990132 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066679136 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.095307908 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084144332 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087235451 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077935214 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069204679 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096164847 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062970292 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.09021826 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074592483 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095408658 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.069193716 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068468213 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.080757598 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065748637 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087414208 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063550342 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068262168 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.080021702 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074986837 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.08877844 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079662907 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.06947821 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087951156 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071513368 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088614214 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074771887 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086861693 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070806912 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067350299 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094885178 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072669091 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094758742 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06440702 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062156801 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.083344349 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077737649 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10801675 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.075203402 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.086980632 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069703939 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.083256379 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07146978 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070059503 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090893309 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074809159 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085828841 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074140837 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092576236 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068690155 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070530011 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.093381925 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066449973 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.0882294 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066256113 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.10236626 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067081865 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.081963425 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066400153 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078581456 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088747062 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069143563 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082668394 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075365125 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062429546 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.086927666 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069262202 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085328084 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079996128 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090496792 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074390301 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093992156 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076459875 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067880475 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.089229893 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065799747 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086424282 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067662296 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074979209 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.079694449 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070918198 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.086242026 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.068716266 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076750872 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.084646248 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068274017 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092655951 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074104913 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083670233 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065138778 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071471796 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.085995203 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071651889 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093755115 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.066317357 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064140298 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.081131012 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072260311 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.085695362 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072423878 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090611528 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07105495 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062748168 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.083968884 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072858774 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094136529 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069097795 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068954671 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.092471967 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068894389 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084598871 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075028547 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08784375 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067908172 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073506276 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.087145361 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063130906 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088833096 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070365507 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067174727 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088919824 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07171526 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087755787 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069579251 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066346606 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.091846095 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068891058 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.08452126 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068643689 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083854116 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078595844 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069763678 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080926274 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06533772 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.09299956 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066203091 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067852663 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084875164 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069863229 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.086977959 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066342362 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067694183 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.087529269 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079023105 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.091095605 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06929685 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090825456 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079318118 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.085698355 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070906447 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067860363 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087380704 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069063457 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.09454347 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074258026 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091146345 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071393256 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.0638638 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091496819 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076096633 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.085488134 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.06663668 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066672649 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.090037007 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074559859 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089706493 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069684597 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083765193 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069695734 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070875271 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.08882018 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067888745 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084983069 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073585827 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.084370286 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.076339994 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069043743 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095761907 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070855696 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.081474153 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07157547 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083778789 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074665836 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063449721 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.084004347 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067872246 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.086430075 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.06757417 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070785852 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.080386936 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07531783 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092612063 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068839499 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067715154 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.085861868 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075419664 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086753908 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073063741 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.0711485 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092593583 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078691467 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.085894837 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071667959 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096593407 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.069630958 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.06280479 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.092218923 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067457826 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.084229614 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067587 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066870698 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089457043 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077158919 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092859331 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062565831 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.087393402 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067479378 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066862755 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081059798 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073311953 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.087797352 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069310968 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074850557 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087568833 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.06943619 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089238916 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068522675 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069804641 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.087117581 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071540277 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086699802 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.07061586 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067201311 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089680434 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067858286 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083275042 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070231003 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067603599 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.086561976 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073068603 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.086219741 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068509055 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070323656 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.088165521 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06938998 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.086075491 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067707586 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086782122 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069028676 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068596344 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.087925391 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063644949 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073005469 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.086069487 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074456282 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.084342136 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063856348 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088764871 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069246951 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070733782 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.084831331 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067401247 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085171221 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067306875 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.084653163 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073493401 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064292131 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094846753 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073999863 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084980911 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068593206 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.065857144 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.085661011 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066026 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.085153991 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067424244 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066735572 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.083720811 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071716964 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.087613557 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06737146 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067918056 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.085474262 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066551674 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.084732075 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061894534 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065665422 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.083556966 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066881902 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093548425 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068197529 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.08354595 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065957543 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067441715 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084248481 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063633232 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.091376414 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076208259 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.085347594 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074322248 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065217155 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.085538737 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076642569 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.07856023 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065390956 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063732442 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.084440521 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074988021 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086363533 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077087633 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085000452 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068595923 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065020076 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086764661 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06749792 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062613491 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.084148735 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071961832 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.085402595 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067739482 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.067819882 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.089280054 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069757558 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096166776 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.068047607 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086793362 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068816796 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06566432 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.085764019 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067955528 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088454221 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.070657456 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066388135 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.084133501 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068697384 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069051467 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.087386633 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068620272 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.087378329 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075270513 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066465086 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.08639335 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070135481 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.081754764 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069560149 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.083377036 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.0670499 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065478709 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.088006793 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069517632 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084509572 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074914216 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065188668 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084622296 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066518357 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.082112602 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066374136 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065973392 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083847823 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066414767 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.08480509 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073906586 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064272302 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.087090079 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066541423 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.084121443 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072716925 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084875746 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069149041 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090522778 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066793387 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068083484 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.091763206 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.069978871 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087148777 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06848601 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068347328 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089788009 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065799033 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.090506615 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067262436 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.084222323 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068181773 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064513018 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084360986 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.06671188 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06534357 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.090376967 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067493682 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.083401921 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065902435 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063736677 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.085190582 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069246121 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09118494 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069391544 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086830969 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062585358 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063792462 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084401236 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064771588 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084952814 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069866797 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07197269 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.086959275 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067695904 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.082426748 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075245159 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071715448 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.087958025 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06504702 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.087844672 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067265015 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.086105741 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067999399 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066852075 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085625738 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070928929 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.086312906 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.0684619 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.0750985 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.090362664 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070739058 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.088360432 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.06985216 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068959492 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.0828034 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069924611 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.088376843 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074398322 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070347323 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087252791 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079430641 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.084380858 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069053517 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089313633 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068955564 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072863233 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.082192236 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070033878 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087585886 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07012158 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063469049 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.087073599 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066652803 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.088403258 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068630235 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063608859 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.0976674 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077473739 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.090602725 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06829224 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06465268 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.081746008 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063340472 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.084485825 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068302496 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067855098 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.09425946 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065873331 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.083138145 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062455913 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06659548 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08961553 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071648413 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.084110527 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063738825 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067462413 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089832829 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073524634 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084854657 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068749246 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070987196 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.088796318 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066179516 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08952314 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065106035 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071311528 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100335723 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068762201 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087530119 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075234227 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09382599 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069625065 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.081075725 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069512553 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071613162 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.087305516 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070134496 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.087683481 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083869659 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089940202 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067498156 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066992567 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.089617572 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068230128 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.094580758 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06937446 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067844752 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.0914108 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070663277 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.095629671 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071102859 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094566019 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072229342 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.089713301 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.068237987 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068235193 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.086238688 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067492846 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068583846 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.088940718 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073278467 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.095206549 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065997112 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095377675 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075182593 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.086831227 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064336006 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06587555 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.086100189 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063727626 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.087390263 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.067004231 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066907496 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.085553024 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067779258 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069121415 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094074153 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069360738 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.088006078 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.069317167 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062342658 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.090030607 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070479811 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087637239 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065690634 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067627131 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.088722698 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072959573 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090944149 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066544806 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069066173 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.089146021 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06907568 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.082410359 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075793133 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067073624 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.089854834 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067854286 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086783284 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070080543 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07146172 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092232268 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069176962 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.08939347 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.077654656 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.090161344 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066096941 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065252567 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092675553 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066596317 seconds)
  done (took 46.899866687 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.109436156 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084763401 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064470631 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082779904 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077224522 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083937277 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063912077 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064475953 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083947098 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067716484 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.082954677 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064674325 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091919472 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087718438 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095865043 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068471953 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083522745 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065224394 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082900392 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066227194 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091745772 seconds)
  done (took 2.511814358 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077758007 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.091945302 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076261937 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097693274 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070258036 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.092364846 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075741836 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091734308 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096920576 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069713581 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.097466094 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073110623 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.088059629 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.06979468 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08743739 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073960562 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.097561465 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070194524 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.091792416 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075117908 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092282493 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075329327 seconds)
  done (took 2.676745706 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.06880479 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066967143 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.088065907 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063364207 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067490365 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.08210749 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072336695 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.083567632 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071337302 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064587984 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.084905895 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.073567041 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.08604283 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061822101 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066205417 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082424022 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.131744609 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069890031 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064522206 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.08589936 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061712633 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.086958724 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062611939 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061779078 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.084712829 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.07100093 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.087244609 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066210746 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067527547 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.085994785 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067713984 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.083505544 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.06940089 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068173828 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.085969217 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066813885 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.067031308 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.087136159 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063561054 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.084985858 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069085126 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064010107 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.086899577 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06950403 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065010864 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.085166747 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069954725 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.086322964 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063427231 seconds)
  done (took 4.524402924 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.086617614 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.132040541 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.090524525 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089534877 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.103276228 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.094862696 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071961685 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110886667 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064091691 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.08400423 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.08258678 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.102847988 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.084743094 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071602329 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.091521057 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06609168 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067069996 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084323902 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069551813 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083853485 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070292955 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091494117 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.099728583 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.08024409 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090404719 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067153589 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.086241132 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073574123 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.100460256 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073022839 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.091321444 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073583701 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.102928715 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.069173934 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087170815 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069677827 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.103952854 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.068143906 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089634912 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065284355 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.089225215 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.072059366 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.093694183 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.084583713 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.088104521 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072720763 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.087767343 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065311785 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.100347775 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06957532 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.095783572 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.102028837 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072232242 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.087874009 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072931159 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.102515034 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068343958 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.084769751 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071332022 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.100841724 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066303453 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090073111 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.082968991 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.088706814 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075821643 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.102183531 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.073686224 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091850735 seconds)
  done (took 6.716418629 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07741353 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093254091 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082912758 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102690323 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093338348 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075044293 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093579662 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074886649 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.094019044 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079507562 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.094454204 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115340005 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069863999 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096314574 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074762519 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095005464 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074311051 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094823166 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074452024 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.095023721 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.093271926 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083188834 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093867465 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.101812095 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.104904596 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.088779389 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07483744 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.094354623 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082877699 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.0951997 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10588185 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074359864 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.093173093 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101282369 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.087474856 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.093786504 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067637272 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093484975 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074301294 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093346191 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069621437 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102164864 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07427775 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.089270692 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074438437 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.094813736 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.101773142 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.086480801 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.097066621 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098492044 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075368889 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102409162 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073660963 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094531631 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.101948921 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.108269911 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103069643 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101835017 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07472756 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.103355982 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102130856 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.108302829 seconds)
  done (took 6.442200568 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090321601 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097325905 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099074992 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064349748 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066270671 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092108345 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067197755 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.085523367 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.078418411 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096446756 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080067087 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091463389 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074684341 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099411252 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091657393 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076405144 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091136661 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072392022 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097503938 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07236564 seconds)
  done (took 2.54242516 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077901226 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104796074 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070122099 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074064711 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.091679106 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074243084 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.09042447 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071234866 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088528392 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071274019 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098127491 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079030678 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088524293 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075257158 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.098428084 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074147188 seconds)
  done (took 2.19057195 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.081534453 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.098711419 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083315292 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088237479 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066532793 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.084559244 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068261271 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063591245 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.084746317 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.083007364 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088850849 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071234804 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.087929218 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067040541 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064233717 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091021693 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065063839 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.085277977 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069288736 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.102127209 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.079606067 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.085757633 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069617413 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.068773318 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.089568139 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.07310545 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.087968124 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065726498 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.08638013 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068951649 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.088171557 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.075997178 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.084040779 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067400428 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066131778 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.085287389 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06808275 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.087320442 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.07125893 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066516393 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085988317 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068031623 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.088259923 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069629416 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.083472278 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068737754 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.065059219 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.094234477 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066762332 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.088105438 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068968695 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.08867415 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.07001731 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.078269391 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.09211738 seconds)
  done (took 5.171983 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082202684 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071138602 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084377033 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066489538 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090685619 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070415024 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070273156 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090600956 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070094232 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085907969 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070658554 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090029413 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070593814 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070697267 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090070463 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071864052 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.084101774 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.0704991 seconds)
  done (took 2.267998657 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075048982 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068191535 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095511152 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068960499 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087023352 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070633152 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063415649 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.087223902 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067269671 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087078294 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068332715 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.06977383 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086455075 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071104922 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086792411 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069045646 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070283921 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086634141 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068178666 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083712279 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070604759 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066136923 seconds)
  done (took 2.535977004 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.074367872 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.095074769 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.165012825 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.109907949 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.084537751 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.101536734 seconds)
  done (took 1.50087001 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092462998 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102217171 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068838986 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109712915 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077098341 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089724335 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070776415 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089065943 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079811753 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102937405 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06929859 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099492034 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098251028 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078884295 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096219899 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075767121 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089890183 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069983734 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088659379 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10767181 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070751676 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097781281 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071397589 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089075267 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070151719 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098329526 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078944145 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104486455 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089272349 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079224475 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095605258 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070026717 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099055884 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10312522 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072257942 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098684239 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070485184 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109403829 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074678176 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098687636 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070196231 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096423391 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098058368 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075559993 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098491355 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070331923 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095050571 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069724586 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090774771 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115128414 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076086147 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098748148 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095882446 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079661805 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099100707 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114209276 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083409833 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098498825 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094974574 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08369995 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099036563 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075566632 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097526641 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101897819 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076374176 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098297975 seconds)
  done (took 6.722042828 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087375845 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108086629 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070248274 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104143918 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098406124 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070520759 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090115238 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070939597 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089741481 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070651996 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131321224 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071252346 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09892842 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098085668 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070747059 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090737838 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071469785 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098107152 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070532902 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115003244 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089630074 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078760542 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098211386 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098231771 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084837907 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096692477 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070649206 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090838443 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06968943 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090681371 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076224361 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091648281 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098118277 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069622788 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096705981 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070191724 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089584499 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075727893 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090095932 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075748297 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097960139 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106425421 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069907691 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0900881 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082608501 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09090316 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068878116 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088475936 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068772849 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087355784 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080751433 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101392734 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099626862 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095875414 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069283155 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087201251 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06926542 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087307117 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069174108 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092818447 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076135642 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087917036 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112587038 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069192045 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087709902 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076740608 seconds)
  done (took 6.566915722 seconds)
done (took 130.247006851 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.204583562 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184222249 seconds)
  done (took 1.258061912 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071425062 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.09711293 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.101572185 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129895387 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.086320266 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099895339 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.117440746 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078333733 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065330118 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086265809 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.0673331 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086345706 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131433598 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066789037 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.08574973 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068518859 seconds)
  done (took 2.316982781 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104564441 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.201112771 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111008376 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066769433 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101943292 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080632071 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.086962021 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.078695772 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.09643318 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067357017 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.078971011 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.097785463 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066336347 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.097156022 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.076233199 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.100049302 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066379583 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099643776 seconds)
  done (took 2.558760812 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.106458415 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145584774 seconds)
  done (took 1.13055701 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.202157956 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.122385831 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.20028892 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.412498821 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.204266563 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.274737617 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.17157263 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.17089824 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.156505853 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.169408934 seconds)
  done (took 2.960384919 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.10230805 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.173943353 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.314626221 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.140408036 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.087404951 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.118640689 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.140603922 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.090813687 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.104833442 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.102997341 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.082635453 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.099895225 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098696084 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.098976179 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075329571 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.099788625 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.12357864 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076147777 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.098415225 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078301569 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.120398796 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068589484 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076293514 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.096388084 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077567683 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.100505183 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066970221 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.088021003 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07756582 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.096119242 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079865783 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.117034075 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.099005861 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.133848831 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.083562323 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.134345921 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.100061401 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07377696 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.096965167 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074354589 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.100615505 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078871252 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.105661602 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078000493 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.088374394 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078252156 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.08784951 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068191888 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.101911063 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.079102325 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.10159071 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080067475 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.132857769 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.10010998 seconds)
  done (took 6.329141064 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.753221671 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.109433147 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093693107 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.804622392 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088172279 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104610194 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.709290215 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117305876 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.209573177 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.766172938 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.088555337 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.097750115 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.179260852 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.23365265 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.87700428 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.282864226 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.630846077 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104918954 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108780288 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.133833293 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.142239491 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.180313503 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.153858725 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.411900727 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.075378299 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093520128 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.140567952 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076515422 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.16335239 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.085951785 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.095440725 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.159572462 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.228538004 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.155448565 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097188698 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069219046 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092791559 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.152249069 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.222766554 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.195927731 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.160985278 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069205663 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.094377596 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.144852529 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134680675 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070587949 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.143868219 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.155221136 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.173876407 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075672265 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.097195989 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.141862067 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.139303932 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.142965885 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.099922963 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.261323536 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.288452651 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089613549 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098095495 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.102909509 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.211879573 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.10321835 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.199823343 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139249977 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.167028486 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090689947 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.730907241 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.146152924 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090853096 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074328112 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118666654 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093441497 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.138163525 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.144910628 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.361860091 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.160977434 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072749246 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089775613 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.185842166 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084714182 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094429613 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.145318404 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.075911856 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.125149611 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.168072716 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.146591067 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.15204549 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.209777711 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.144984406 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.140001247 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.095023232 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123810856 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.07438001 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.188067785 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.194051371 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.139910421 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.186750452 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.159984948 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.141441306 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.15096197 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075496665 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.172912244 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099846635 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.103439555 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140131168 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.193768071 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.123094873 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084748071 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094754025 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.141668495 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.124367538 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085045757 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.138398222 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.170012697 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.433215207 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.145859637 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066654903 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.108247319 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137363968 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.139797562 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09604218 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.213985215 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121475387 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.145688281 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120614141 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088385543 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.1196073 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.140229852 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077865537 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122010527 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.137619247 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097716074 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.215148124 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.192022913 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.079457167 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.195207118 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.160565739 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.095200528 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.149396989 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.118061871 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.145538947 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076285755 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.158783921 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074972175 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.745698106 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.143757964 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120313272 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073104427 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.165526716 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068746265 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104050978 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.102887615 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068526758 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.77229588 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085666249 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.100218329 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.083247128 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094882726 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120943753 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136816936 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073149305 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.137410877 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.203406076 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095092323 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097715952 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.104532677 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.138311842 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095715862 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.083769251 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.104492796 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.082215631 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121561174 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093968548 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082934241 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.144906618 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.161346529 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.170904354 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.568015891 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069994079 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.10278061 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.179757293 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090854023 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.241573496 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.155596214 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.17689126 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.139239142 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.100005641 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.290223386 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.142286793 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.165347535 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.084854074 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.14906359 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088425296 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.136533934 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.142098225 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069164666 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09638938 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.138783466 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.141702969 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.161195472 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.915143926 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090412774 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.203741831 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068461291 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.148282959 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095778778 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076594101 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.258986905 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070519734 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.165904602 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.142932662 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073572566 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.102951774 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.819423742 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103419874 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.140146322 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074205064 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.192978816 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.141049843 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.13516622 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.136354924 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09643405 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.138923315 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.18552767 seconds)
  done (took 40.434039007 seconds)
done (took 57.866626391 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.262221652 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.175955532 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.240239625 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.142145367 seconds)
  done (took 1.798786143 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.146786295 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.10711781 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120757184 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.087080331 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.105127292 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.088497601 seconds)
  done (took 1.556924636 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.413180311 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.272831081 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.237213489 seconds)
  done (took 1.825170698 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.264206187 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.211046106 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.445604774 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.296009092 seconds)
  done (took 2.249222754 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.178811765 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.116757585 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068313358 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.10642777 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.156791063 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.249228802 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.125892921 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.185634811 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079199809 seconds)
  done (took 2.218769351 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.196216074 seconds)
done (took 10.751975081 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.217999533 seconds)
    (2/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.121279243 seconds)
    (3/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.249829526 seconds)
    (4/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.122225571 seconds)
    (5/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.154245897 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.12959471 seconds)
    (7/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.265183958 seconds)
    (8/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.192447511 seconds)
    (9/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.138278883 seconds)
    (10/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.092827689 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.092630712 seconds)
    (12/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.162163683 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.100559192 seconds)
    (14/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.088743103 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.188821858 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07572628 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.125371899 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.157900158 seconds)
    (19/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.217141921 seconds)
    (20/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.080049064 seconds)
    (21/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.19024648 seconds)
    (22/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.111875815 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.101542863 seconds)
    (24/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.237459528 seconds)
    (25/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.163209843 seconds)
    (26/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.113007593 seconds)
    (27/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.07399625 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.132050772 seconds)
    (29/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.076034783 seconds)
    (30/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.093698704 seconds)
    (31/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.233279656 seconds)
    (32/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07367747 seconds)
    (33/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.078200891 seconds)
    (34/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.179600538 seconds)
    (35/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.092472468 seconds)
    (36/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.173529715 seconds)
    (37/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.172581756 seconds)
    (38/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074422857 seconds)
    (39/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.09514806 seconds)
    (40/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.188226728 seconds)
    (41/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.176941415 seconds)
    (42/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.07942733 seconds)
    (43/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.220786037 seconds)
    (44/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.181103232 seconds)
    (45/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.082819001 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.0952943 seconds)
    (47/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.091528683 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.108685022 seconds)
    (49/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.193340137 seconds)
    (50/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.176648429 seconds)
    (51/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.176956591 seconds)
    (52/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.113792433 seconds)
    (53/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.190685115 seconds)
    (54/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083515786 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065105884 seconds)
    (56/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.089853248 seconds)
    (57/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.109465168 seconds)
    (58/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.07220473 seconds)
    (59/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.063137538 seconds)
    (60/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.074112943 seconds)
    (61/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.072606933 seconds)
    (62/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.076837671 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.116758282 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.095192037 seconds)
    (65/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.170111219 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065201043 seconds)
    (67/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.115124032 seconds)
    (68/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052122163 seconds)
    (69/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.09290763 seconds)
    (70/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070627657 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.146268202 seconds)
    (72/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.102533552 seconds)
    (73/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.088145204 seconds)
    (74/309) benchmarking ("sort", Int64, false)...
    done (took 0.06677954 seconds)
    (75/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.190001394 seconds)
    (76/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.10929313 seconds)
    (77/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.084620013 seconds)
    (78/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.164650852 seconds)
    (79/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.094619321 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.174821749 seconds)
    (81/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.077070742 seconds)
    (82/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.15821184 seconds)
    (83/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.111033421 seconds)
    (84/309) benchmarking ("sort", Int8, false)...
    done (took 0.173059703 seconds)
    (85/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.128236305 seconds)
    (86/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.09937143 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.119711467 seconds)
    (88/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.155634237 seconds)
    (89/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.176726134 seconds)
    (90/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.089516518 seconds)
    (91/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.074553487 seconds)
    (92/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.093836969 seconds)
    (93/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.178186218 seconds)
    (94/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.172372907 seconds)
    (95/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.098785707 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.100454774 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.163641916 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.097936612 seconds)
    (99/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.098775842 seconds)
    (100/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.05308577 seconds)
    (101/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.07249711 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.164029976 seconds)
    (103/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.062497607 seconds)
    (104/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.124590003 seconds)
    (105/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.051639842 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.116652571 seconds)
    (107/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.145190591 seconds)
    (108/309) benchmarking ("sort", BigInt, false)...
    done (took 0.229818506 seconds)
    (109/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.068574696 seconds)
    (110/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.07630227 seconds)
    (111/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.157916374 seconds)
    (112/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.063132462 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.115017506 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.14701836 seconds)
    (115/309) benchmarking ("sort", Bool, false)...
    done (took 0.158374815 seconds)
    (116/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.096244576 seconds)
    (117/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.072021795 seconds)
    (118/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.157818246 seconds)
    (119/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051909008 seconds)
    (120/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.113236216 seconds)
    (121/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068943998 seconds)
    (122/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.078301791 seconds)
    (123/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.092089614 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.112810178 seconds)
    (125/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.09308039 seconds)
    (126/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073137445 seconds)
    (127/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052589341 seconds)
    (128/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.169658179 seconds)
    (129/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052251898 seconds)
    (130/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.195650919 seconds)
    (131/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.095136756 seconds)
    (132/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070424377 seconds)
    (133/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.157857291 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.06654587 seconds)
    (135/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051449999 seconds)
    (136/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.096632368 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.066563689 seconds)
    (138/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.190989433 seconds)
    (139/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.141836235 seconds)
    (140/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.097390117 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065897095 seconds)
    (142/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.129842303 seconds)
    (143/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073455517 seconds)
    (144/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052573916 seconds)
    (145/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.089407574 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091166326 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.111949348 seconds)
    (148/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.074038908 seconds)
    (149/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.06009895 seconds)
    (150/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.088526327 seconds)
    (151/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071981196 seconds)
    (152/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.092688205 seconds)
    (153/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.097440801 seconds)
    (154/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.130366049 seconds)
    (155/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120363309 seconds)
    (156/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.102712476 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.123642999 seconds)
    (158/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.094190801 seconds)
    (159/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074924106 seconds)
    (160/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051794521 seconds)
    (161/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.089744491 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091698898 seconds)
    (163/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.051998743 seconds)
    (164/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.092607445 seconds)
    (165/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.072815085 seconds)
    (166/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.100632221 seconds)
    (167/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.066100773 seconds)
    (168/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.121790343 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.076762398 seconds)
    (170/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.168994771 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.068191716 seconds)
    (172/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.072427129 seconds)
    (173/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.167670232 seconds)
    (174/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051209779 seconds)
    (175/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.103499004 seconds)
    (176/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.074051194 seconds)
    (177/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.098441037 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.110953349 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.088827063 seconds)
    (180/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.192550538 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.077025895 seconds)
    (182/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.052103026 seconds)
    (183/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.0738171 seconds)
    (184/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.065504058 seconds)
    (185/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.07280137 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.093978723 seconds)
    (187/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.052031267 seconds)
    (188/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.171420379 seconds)
    (189/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.05226691 seconds)
    (190/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067746288 seconds)
    (191/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.193893036 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.099575193 seconds)
    (193/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074810748 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.129641568 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089497753 seconds)
    (196/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.054601533 seconds)
    (197/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.094865634 seconds)
    (198/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.062333145 seconds)
    (199/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073343021 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.329423369 seconds)
    (201/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.124607541 seconds)
    (202/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.052124893 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065261196 seconds)
    (204/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.05037829 seconds)
    (205/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.073322043 seconds)
    (206/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.068176079 seconds)
    (207/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.093235946 seconds)
    (208/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.066533023 seconds)
    (209/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.067730043 seconds)
    (210/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.084007218 seconds)
    (211/309) benchmarking ("sort", Float64, false)...
    done (took 0.126264684 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065108958 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.097128934 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073548316 seconds)
    (215/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.074473232 seconds)
    (216/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054110832 seconds)
    (217/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064307078 seconds)
    (218/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.05220965 seconds)
    (219/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.074725731 seconds)
    (220/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051924616 seconds)
    (221/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052890935 seconds)
    (222/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.07401604 seconds)
    (223/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.065651225 seconds)
    (224/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066460989 seconds)
    (225/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.075270304 seconds)
    (226/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052662405 seconds)
    (227/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.052228614 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.092978705 seconds)
    (229/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.135021715 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.086907384 seconds)
    (231/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.051834073 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064987069 seconds)
    (233/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.091169725 seconds)
    (234/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.168996669 seconds)
    (235/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.087477768 seconds)
    (236/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.053330183 seconds)
    (237/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.068027426 seconds)
    (238/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.073094768 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065547814 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.161079225 seconds)
    (241/309) benchmarking ("sort", Float32, false)...
    done (took 0.128518785 seconds)
    (242/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.093615913 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087789402 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.10972137 seconds)
    (245/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068578335 seconds)
    (246/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072241211 seconds)
    (247/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.089630007 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089333355 seconds)
    (249/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051456409 seconds)
    (250/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.089253655 seconds)
    (251/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.07850888 seconds)
    (252/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.168793809 seconds)
    (253/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.094143309 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086614182 seconds)
    (255/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071694976 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.088229657 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.096849805 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086918456 seconds)
    (259/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.135422723 seconds)
    (260/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.088339242 seconds)
    (261/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.16528832 seconds)
    (262/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.103272904 seconds)
    (263/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065760812 seconds)
    (264/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.095913556 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086648668 seconds)
    (266/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.099407592 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073003769 seconds)
    (268/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.06491069 seconds)
    (269/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.110985103 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.074262627 seconds)
    (271/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052439252 seconds)
    (272/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.074977447 seconds)
    (273/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.062798463 seconds)
    (274/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051571464 seconds)
    (275/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.072883147 seconds)
    (276/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051630304 seconds)
    (277/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073901139 seconds)
    (278/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050715817 seconds)
    (279/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.088038947 seconds)
    (280/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051626474 seconds)
    (281/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.088490885 seconds)
    (282/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.05167152 seconds)
    (283/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051404375 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065396 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.095459764 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.116726014 seconds)
    (287/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.073763033 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064450912 seconds)
    (289/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.111351073 seconds)
    (290/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051374751 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064344997 seconds)
    (292/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.073997295 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073868033 seconds)
    (294/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053418956 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.113230863 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07190687 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065491613 seconds)
    (298/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.074905502 seconds)
    (299/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.05301897 seconds)
    (300/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051164072 seconds)
    (301/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.075312052 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071715473 seconds)
    (303/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.156924068 seconds)
    (304/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066937282 seconds)
    (305/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.053352758 seconds)
    (306/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.088473677 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.102396713 seconds)
    (308/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.089484827 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065688909 seconds)
  done (took 32.888313701 seconds)
done (took 33.803540199 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083628183 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.117315233 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077275006 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.118588777 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083383622 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.102258563 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.07503703 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079524498 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.104082345 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081188669 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.101083096 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054770092 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097260838 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075511238 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097056448 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.0922319 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.101037343 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072101964 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073574955 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.087318736 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074022869 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.0873804 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067830203 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055489687 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.099747985 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073060071 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072333429 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.09698265 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065542999 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.087699867 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069057353 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072707284 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087681764 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.07897014 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093683572 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073847554 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074891774 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.098606661 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068009359 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087150211 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073482155 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065930004 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.094528007 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07365067 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071268729 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.09322455 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074579484 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.100938389 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092460175 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090756021 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074621487 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.098723401 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077393583 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.093737643 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069435278 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073174046 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092651108 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092135855 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.096487537 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067655181 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073520265 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.096684117 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071350359 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.096422967 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073808848 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075138692 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098803851 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071427218 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097531829 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071451691 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065323064 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.096473676 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069751681 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.087474808 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076563672 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076626695 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.086436423 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071420256 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071781327 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.094054902 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065617507 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089614253 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068613353 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072304685 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090469164 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055574336 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069391031 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093751443 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065860917 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095663661 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072136009 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071913426 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.089129345 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076709815 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064938405 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.093545503 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066260053 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065846946 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.08938211 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069962075 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.087403621 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068225293 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075122865 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089558924 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071750291 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.101672489 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066286687 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072695909 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.0867033 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065838225 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.103702117 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075810983 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066057289 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090416854 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065230084 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073032074 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.088525384 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066513306 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06530887 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.088143623 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.07230087 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.087932172 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067991679 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072584315 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.102316066 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066324023 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068636227 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090766199 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066432288 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092766067 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066558598 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066432206 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.090132622 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.063492033 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068055987 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088254148 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073469039 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067985194 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.09694865 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067707285 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.096541671 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070779033 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071368026 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.093469401 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065277764 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059059891 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090410858 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067875983 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067463867 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.088964289 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067727111 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.08886174 seconds)
done (took 13.17547162 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068840482 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.172282405 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.129099838 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.098769948 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.113214791 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068447008 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.102806437 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.106277464 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.09348322 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.129347363 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089805425 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.110562371 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.117342912 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.091000012 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068270791 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.072203787 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.092587547 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.091167624 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.126940214 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085586221 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.139552423 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.088505891 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.120738166 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.091973431 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.113070604 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.103334961 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.089937367 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070878834 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068671794 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.116588547 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.108151161 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070014921 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066269001 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.121585747 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.116729918 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085634807 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087741567 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083896209 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087721226 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066237738 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.114118816 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.100025412 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.104602248 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081651974 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.095202143 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069382543 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.08980108 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085915162 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.113360984 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.08018945 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.110399083 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.134010494 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069101314 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.104971258 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065381381 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.109423292 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.08106077 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.091717435 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067218141 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090522298 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066385235 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069216618 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.111311173 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.11441936 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069991109 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.104962557 seconds)
  done (took 7.278374774 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.08690848 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.119298233 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085462422 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.109410498 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067290838 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067022002 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.091323784 seconds)
  done (took 1.59704428 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069476664 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091223096 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.116183663 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092718491 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.112266925 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.089029356 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.101068774 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067161598 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.107346394 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068793588 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087696415 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.128290629 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067800934 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.096919325 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090304893 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.09010914 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09084614 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.090546258 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070416547 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.114270424 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070328163 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.087046926 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.09220372 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067581702 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.105731561 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068228363 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.141666092 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073887616 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092695338 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072870188 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06722547 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.143571226 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.107416238 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081155016 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068903414 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.107640827 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083038745 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.091227137 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085941803 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.09749134 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083960079 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069918552 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.09375105 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.06776707 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073200147 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.103000155 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069062676 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.091176723 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070104551 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086711173 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090758705 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081331651 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.090124045 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071533428 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068584029 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095619187 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077356656 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090118247 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08762451 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068886957 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.106781939 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083654762 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.10413508 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083969428 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092470379 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081307631 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.104834067 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070440247 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069353255 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.093895057 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084459988 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.08759216 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068982704 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078465596 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.091902404 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090800985 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.112674613 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068653482 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.100231305 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067907888 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067608933 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.09065586 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091048419 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093931667 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067607825 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070926048 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094637519 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065679393 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.0663222 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.094556232 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066177755 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069602292 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.095348597 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068909168 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094810098 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.087402597 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069763743 seconds)
  done (took 9.351699248 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071144006 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070391179 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.095487658 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070588937 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070268881 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.094430656 seconds)
  done (took 1.460541007 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.101762696 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.095477642 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.085022973 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.098390455 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.108916521 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.108786003 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08616109 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.110203211 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087929369 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.106533065 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085073504 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.110419522 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.090862636 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.099683285 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.084553317 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.099520339 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.085746726 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102703953 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081414276 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098889071 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090410159 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.098223661 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075217422 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.08350855 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.095965705 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072356332 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101870602 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079597418 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.103879776 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.08275028 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097512254 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071687096 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095302582 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.083993103 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.10807338 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073926422 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097406936 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.073055003 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101655164 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07285659 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.108701809 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076711712 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.080637366 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.098321608 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.107965818 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075169004 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.074077019 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.103841332 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083977208 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.098810979 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.0741519 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.099047558 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.073391265 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.097252687 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075061918 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.109092597 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074622847 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.108793203 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075609004 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072564944 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.094785426 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071440637 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.107745316 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.070871132 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105259516 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.072069092 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.095454649 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073678664 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096685846 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073003016 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.071567787 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092958926 seconds)
  done (took 7.464540889 seconds)
done (took 28.115634278 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.6583573 seconds)
  done (took 1.637436032 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.775274283 seconds)
  done (took 1.757188597 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.688858058 seconds)
  done (took 15.677830392 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.622834319 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.766439936 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.810363239 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.133833542 seconds)
  done (took 3.315004062 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.893843841 seconds)
  done (took 1.905532098 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.240372902 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.245458011 seconds)
  done (took 1.475601475 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.736360551 seconds)
  done (took 1.730414365 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.284000335 seconds)
  done (took 2.27354859 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.328841085 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.18035038 seconds)
  done (took 1.506659771 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.523069445 seconds)
  done (took 1.519495354 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.528506453 seconds)
  done (took 7.531003906 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.232454599 seconds)
  done (took 1.244494877 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.274277649 seconds)
  done (took 1.274289883 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.136368909 seconds)
  done (took 4.137719779 seconds)
done (took 47.97494015 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080410462 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082251417 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10388357 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.07904271 seconds)
  done (took 1.340613634 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079720651 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075632654 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100520251 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072630108 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.100741349 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073900201 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.098350695 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077038464 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073018826 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097342827 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073275577 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.096023016 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076034536 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.09823902 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070864531 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076009528 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099632784 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07391411 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.099540466 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073981103 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070900963 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098144645 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.077222403 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.095079767 seconds)
  done (took 3.034585807 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079482309 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073224242 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097770876 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072318287 seconds)
  done (took 1.327529676 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079599215 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.117817921 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088928567 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076885885 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.115924994 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.109917565 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069201119 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069425264 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094355725 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076762884 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091010699 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.09896312 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.110366404 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077309735 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101867442 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066620118 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068240734 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.110089868 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076812862 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.100860885 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069920718 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.080105787 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.092150678 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090385424 seconds)
  done (took 3.145001413 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080017673 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.130348389 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.079092682 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.113483538 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092320192 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064894708 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.099232033 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.114944849 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.125650229 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.089528762 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070484503 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066200843 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.096391206 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065601653 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075587308 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.132423945 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.135614929 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068554686 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.12089701 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065631376 seconds)
  done (took 2.902414974 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077552863 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072109759 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.091905017 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.07139926 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079121009 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.100136191 seconds)
  done (took 1.507566731 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070413916 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069792902 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.093940242 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069306788 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073920782 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.093729246 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068731927 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068823135 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.093768272 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069787396 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068975687 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.092309714 seconds)
  done (took 1.944689717 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.392400819 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.092923797 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069463035 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.088229341 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071408104 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.090002812 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.0809454 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068043264 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.114395682 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067609059 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.091912957 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068987979 seconds)
  done (took 2.311806997 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266196657 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078752234 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.325640255 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168420764 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140091011 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156222704 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105506 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140851549 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.199784066 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138439165 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227778513 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200444006 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133209016 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16742424 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116113963 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.133359115 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185344337 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220538624 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130017048 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199173651 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206306606 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156613225 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179080677 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127122406 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134362978 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149521563 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.095817619 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081001221 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231088984 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159076444 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199370855 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138029097 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121050567 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205440491 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224766442 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194335862 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161389985 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084799647 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.157693803 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.162432075 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256571349 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114450578 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22319542 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110626033 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107226135 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175204117 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150100499 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.148293926 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.136928409 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114943854 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173342563 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23907209 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.165624423 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111650511 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13758836 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141362613 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.142783624 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129310091 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242312384 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192854583 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184986899 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071804681 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126172107 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185687318 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15969492 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.141888684 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.177594195 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094656421 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195170366 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186392964 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146487393 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199583222 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.155054188 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113551335 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147256008 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17112443 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15542533 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228177294 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155326054 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073970316 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152078326 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129050861 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106998172 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.144924964 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100967167 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234503589 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099371483 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.138881127 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141211401 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136770708 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135548982 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219460279 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177134378 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131015531 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066984223 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131483873 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.149250738 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174633959 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112812184 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134565137 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146929169 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.104187321 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166250404 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075573251 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152892237 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.104828031 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155471936 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165812443 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.105006426 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160701439 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105574336 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.131792418 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166737446 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22696303 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119647595 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085105223 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228814967 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156116898 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.132758072 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173087743 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.214036951 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.127384747 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103825516 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210547019 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247708491 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11900429 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201588861 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137813937 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110927651 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.089093548 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154530421 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13924884 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.147823099 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108029805 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.155534577 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225991086 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075534845 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121656086 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166512938 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107102997 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083045639 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139621723 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128044492 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.120636801 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.102029912 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.133534036 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194966451 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154215072 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134377199 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15308527 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124309796 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225994721 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090155959 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.130489398 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130586654 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070220549 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.164588605 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216722268 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079902184 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225999656 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.153225997 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131586483 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147547913 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108847385 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169409875 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078544446 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.096403692 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173083853 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137956639 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136331648 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.18376303 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130146267 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.154687712 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.151754192 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188655997 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160940076 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.163111209 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132207117 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088004584 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139923874 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179168688 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.074202921 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.120786464 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.083492453 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129489264 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122418372 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108364171 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172880377 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156022515 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127518518 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140826445 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098658757 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204946464 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077411274 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18404753 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.151408192 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098793633 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.217807487 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192498713 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195033003 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104282697 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206569712 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.073946415 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103062273 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.094406793 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186370332 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087113517 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111322374 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146753186 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178560958 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155781462 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191095043 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138280091 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149025906 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187167351 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071327297 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.14363184 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206223769 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154658678 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.133890558 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110796876 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.125011252 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175979361 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135689811 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245789549 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143529839 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152168075 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20767473 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.10473487 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106116901 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132552648 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166793852 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134125274 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181204589 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124723004 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114461574 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136672858 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.081957702 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131346664 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179815775 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149972617 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164959383 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.144027411 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161129545 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102913445 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143997549 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153866218 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155941623 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.067359493 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152024101 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226467938 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122859272 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146886761 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18486839 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104761873 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.153520605 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236434445 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175654733 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110634544 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136692311 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15520779 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157813073 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146960532 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169411644 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138261149 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165098345 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139667068 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.112350689 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088628689 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125377705 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133804424 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.122784044 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.139859834 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.145108994 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094885895 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185096828 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138887367 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11250739 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146105369 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.12378079 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.117208019 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098405137 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235167889 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149724873 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236015628 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.129277167 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179261643 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225357475 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10220754 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080054382 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.106827901 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170497433 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085941391 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189897314 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.098854191 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133793739 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156479353 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200273163 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096515791 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.094981257 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111757917 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188918673 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139757882 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101225123 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.133649998 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221661599 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.131354321 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081098498 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154358319 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133283033 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104003146 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262550292 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.063485022 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125684753 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07778534 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081570427 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182775538 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190351514 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.110012989 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.13295168 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14263302 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174387625 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159094762 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130253702 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100246393 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141323589 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206678427 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158881673 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.116287723 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114191142 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184265056 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190581776 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133724516 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.12281612 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233967632 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189405247 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.223106176 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.116325222 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144483783 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14592463 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112314786 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198972221 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109860938 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201862957 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109246902 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166827514 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131296083 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121729834 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159193764 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.126861342 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115032098 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180401558 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148860309 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126472536 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081017818 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147625866 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151950949 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134143433 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.10295049 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169610768 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073227868 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19659904 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205887311 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111053191 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134524096 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124050784 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0826082 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137494671 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13140616 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113811212 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.119507554 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229899675 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.118688892 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182385064 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198117297 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143779512 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170037091 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127408609 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.663238038 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078346688 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213878874 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148662647 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239391108 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125972958 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148493953 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138907139 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153165736 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176774743 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133036638 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.204635086 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163811993 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.148792511 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106455352 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131030563 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139766709 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.092425811 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135825641 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143289255 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144725871 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.128801125 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.150968535 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156299006 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.108852044 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096030498 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217318877 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147473612 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199485241 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174450901 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085758636 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151335504 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196485429 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080884804 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.177181457 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188968102 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136509233 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126199009 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081922688 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.13274546 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234779181 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.100904165 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1975597 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154013467 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138443677 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142376068 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.173771863 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16442068 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13691412 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156372749 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122821233 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.142803837 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145746616 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08596462 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.108306761 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137836775 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142704542 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.100418716 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131729221 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.143636519 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184780147 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.09810143 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097649221 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130933656 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174467539 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237110502 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.116089406 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109244407 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148890843 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141192282 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.145585684 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155407044 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.082286795 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110621332 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.108505539 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.113791834 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.138683056 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143475738 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132124744 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111873073 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227008547 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.111411421 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.25176832 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096592771 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13604407 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069921733 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.106188931 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123492191 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098643872 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137488876 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127793761 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234461584 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.098133716 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.117726974 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120265698 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073972437 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111251566 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160329143 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139401705 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151735351 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125236116 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063202709 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138451156 seconds)
  done (took 71.562913931 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.136052495 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.10330898 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.117218331 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.173287978 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.144227992 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.237627561 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.180314941 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.222376877 seconds)
  done (took 2.406617774 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.07149604 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.116205775 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.101574021 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.115238872 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.08906265 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068716812 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.294005234 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.110126437 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066734461 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.114478513 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.118914624 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.091702256 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.468553404 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.064922191 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.093300702 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.084485246 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067842859 seconds)
  done (took 3.22193183 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.432243842 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.627523739 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.449819314 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072885179 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.904451489 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.106764408 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.371837033 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.161542281 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.090622908 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.428130302 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.728740327 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.14697735 seconds)
  done (took 17.615762676 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077315715 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071578489 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.113345382 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.085952761 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.101867235 seconds)
  done (took 1.546705235 seconds)
done (took 114.86521758 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082226894 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.345406594 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052996894 seconds)
  done (took 1.529494392 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.085973469 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087914966 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.115134697 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.085675606 seconds)
  done (took 1.477565602 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.077408152 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078791419 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.114361789 seconds)
  done (took 1.37081007 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.281713445 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.164220465 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.088091348 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085527068 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080092644 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.107778357 seconds)
  done (took 1.375628116 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074244921 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076964807 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.102129191 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077732886 seconds)
  done (took 1.426616989 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.07852126 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054280339 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057089208 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.083923728 seconds)
  done (took 1.376159788 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.092030431 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.108406877 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080141135 seconds)
  done (took 1.379640001 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.109873846 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.114826765 seconds)
  done (took 1.327475561 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084119724 seconds)
  done (took 1.179643332 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098229129 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.140607289 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.154981379 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.137182066 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.164706782 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.136091915 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.11324426 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087552734 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.104587359 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.11720868 seconds)
  done (took 2.355939537 seconds)
done (took 16.509478923 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080309659 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.397595555 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362395034 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117527149 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670377636 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356331959 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.005569543 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.11981345 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122182985 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094924527 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083269488 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.676450831 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.003867487 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.348516849 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.991457003 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.318317803 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675707294 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06787042 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092721398 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068119144 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.960401868 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09360297 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067745043 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067758864 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.675258268 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370403317 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093719874 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.317802137 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067452894 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095257453 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354208491 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094238232 seconds)
  done (took 16.000593511 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072525688 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.147116985 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074877405 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083416523 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.098154066 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069084267 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.098343976 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068559889 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.151800135 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067392648 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111247326 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067651845 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.097063238 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069243025 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087048155 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094638894 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068302291 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068327773 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094457041 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068282918 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.11208991 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.0676466 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067782219 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094665126 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067645053 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.106305321 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068939977 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067579265 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094413495 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070127834 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.097534547 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068215239 seconds)
  done (took 3.84490688 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117241889 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.155996525 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073771754 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127931482 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112489215 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096273052 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.169104093 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092795493 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155830427 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070327617 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.114207626 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070042893 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.132295556 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070528989 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.117603185 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071080535 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071169002 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.098923517 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070428842 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098612478 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089932822 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096875674 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071479436 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070810872 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.097799328 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08403137 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096255754 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070997836 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070331545 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098990698 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073631706 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096995958 seconds)
  done (took 4.217686043 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07482822 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07731679 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.112296824 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085579948 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.098688507 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074323682 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074606695 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.099947518 seconds)
  done (took 1.801908223 seconds)
done (took 26.961283572 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080559926 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.07160538 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.102979975 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082953175 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.100911368 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.081101898 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06951358 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.102659581 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076575143 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072915836 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.102209774 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067744758 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.097295794 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067789925 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074041028 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.093900904 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079055693 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.097258498 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079542815 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079775965 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.097561163 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076419663 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.100810563 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079922591 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.106687023 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080180156 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.084186409 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.102536524 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069385094 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.098188434 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076577856 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.112716411 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071079567 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.08211071 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.098312569 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070073156 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.068877159 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.097010946 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082282678 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.103962163 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073039473 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.104386676 seconds)
  done (took 4.715802376 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.091393255 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093803476 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.116459352 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.067079171 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.101956368 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066933216 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.116699712 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.065673961 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.061158761 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.117191164 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.05752276 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060691435 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.091398782 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054725898 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058556822 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056385391 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.087640588 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056653442 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058740065 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.085532839 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057669238 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053321595 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.086235062 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062403866 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055898375 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.087735747 seconds)
  done (took 3.081842861 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077878907 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085920953 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.118137145 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130205673 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.135948667 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079028548 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.108749244 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089654615 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.114266909 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067731503 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071041524 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.122960884 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087209049 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.100859374 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067382594 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.113469892 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081776377 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069194875 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.100979447 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09039855 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.111056323 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.077415191 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.118779071 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080852501 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066857816 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096601441 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071353849 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.107994586 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074027645 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076979592 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.099722783 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.07026421 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.096983526 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078880691 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071530718 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.095944122 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089498903 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.104318097 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077866609 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067550388 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.097599325 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068348355 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.11413919 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.1113691 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.094794957 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074972571 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07527554 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.107563843 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069440397 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115680073 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079129198 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069152945 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.10087947 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067330195 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.095790114 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.0832653 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071769386 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.100676093 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077548221 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.097877928 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.080003574 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070570046 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109957975 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066786617 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.101720894 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066763286 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068154411 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.093607427 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.090772557 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068758651 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.135287128 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.06843765 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.095700216 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075908122 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.1019248 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073363106 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067917443 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109773023 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076990587 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.099611051 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078440289 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07313336 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.099801103 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087008439 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.097228809 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069680687 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.0690032 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100501832 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070464925 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.105165717 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080950605 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.06723634 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.097467999 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084898886 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.093783887 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068857054 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073662157 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.099234012 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067461519 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106160952 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073100917 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.095374786 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077749902 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066884387 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.098120938 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077385324 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.099532384 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067032007 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071953895 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.101268898 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068687828 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069389202 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.097878574 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.06871194 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.103520578 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074436153 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.07186775 seconds)
  done (took 11.330966923 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.196012681 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.186595062 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070069489 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.17870949 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076344377 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.107931837 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.181072692 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097089931 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.099106516 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070834292 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070754739 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.137461377 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.127851627 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.110700464 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.110826133 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070454654 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.117433538 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.107501527 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.186802308 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.180936806 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.118363947 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078667627 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072275609 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.100351582 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072504333 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.080209414 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.114442256 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.101921048 seconds)
  done (took 4.352171858 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083153917 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.133084226 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075795798 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090058824 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.121312532 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068706775 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.10124106 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068992739 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.107617792 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080293667 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.096147581 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072922482 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074662955 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.106274839 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068090078 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.106083586 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07808467 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069089089 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.098646496 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073135872 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.106261815 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080593333 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071401631 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.097303347 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076097236 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.098086399 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.067357489 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.117339751 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.06949073 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.121855367 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068415321 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.076012934 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.113336507 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070473865 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.098474067 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073398124 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.073163792 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.102627335 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071653766 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.06872939 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.098436404 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059939948 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06944844 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.112136723 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.076270273 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.090929237 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075891438 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.075094874 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.104289871 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067635645 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.101827658 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073224825 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.073045422 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.109069364 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074696427 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07516043 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.103925935 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.067625401 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.104616918 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072797916 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064789267 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.095913219 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073417743 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.06750879 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.104903529 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072117846 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.095503108 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071730829 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072876325 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.102217708 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071660463 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070350894 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.094428051 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069743753 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.100741054 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072869838 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071527439 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.094805476 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068022982 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068558606 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.083036256 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068386985 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054115311 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.099481513 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066002719 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065626328 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.098588464 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073625086 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.108810024 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068579508 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.101145821 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068460964 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067128799 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.099669788 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.064355726 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070611211 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.112649846 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.114287214 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070590248 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068083912 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.113975138 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.075129753 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068290922 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.086545835 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075886451 seconds)
  done (took 9.95589607 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.098773322 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.095337724 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.100128339 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082568701 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.123088576 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.09211106 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.104199828 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.074583404 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069934651 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.113679424 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.067636442 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.104686219 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067998231 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076313326 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.125121485 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075431918 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.099246954 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077339401 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.07176319 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.136170835 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083096123 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.111442008 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.080569513 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.098300425 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074155053 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080544234 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.127609789 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.079545125 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.108206247 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.086152947 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079226051 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.124435602 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.085671694 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.102783747 seconds)
  done (took 4.320303453 seconds)
done (took 38.862763895 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.194157182 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.40389291 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.187652784 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.103273654 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.211366495 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.200035551 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.201505699 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.189689395 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.39186726 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.190871047 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.426564096 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.809618527 seconds)
done (took 58.644880876 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.295131861 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.327636306 seconds)
    (2/2) benchmarking "String"...
    done (took 1.457740007 seconds)
  done (took 3.91613158 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.563640813 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.065996025 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.445127306 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.189192867 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.199796459 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.493675697 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.774795755 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.026339274 seconds)
  done (took 27.325086024 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.197155087 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.543703558 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.474534685 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.468694136 seconds)
  done (took 17.816229776 seconds)
done (took 59.049187789 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.216471283 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.228264212 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.189825769 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.17227627 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.293262609 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.221626352 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.492213392 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.438619664 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.200535305 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.175315003 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.20888791 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.196722333 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.190956755 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.483871872 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.202135177 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.190574121 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.25852967 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.648793446 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.573373882 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.191726685 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.195657968 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.249706937 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.191753517 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.20190358 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.201891059 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.189138457 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.1896111 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.18985507 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.383060064 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.195331436 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.276948271 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.668269957 seconds)
  done (took 191.037601606 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.191660702 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.216185476 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.296602635 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.24714581 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.668526431 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.387784219 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.32593635 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.740591003 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.205484797 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.196875529 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.446972878 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.190611251 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.507185857 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.155756936 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.202495875 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.290409253 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.493377063 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.503686558 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.206447628 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.468841357 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.209192542 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.415221201 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.327187672 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.395801055 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.204800584 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.200863852 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.217504341 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.202126725 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.38203923 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.430264729 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.218077298 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.204462197 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.749483814 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.051006741 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.219564237 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.200472974 seconds)
  done (took 149.705085248 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.455478071 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.191718737 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.193636738 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.193542597 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.221556277 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.191184779 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.71515837 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.716518207 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.692672086 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.729844697 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.252806909 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.414868859 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.194062635 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.285822718 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.20358849 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.195480369 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.209231977 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.221379521 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.194722935 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.194066527 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.717828481 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.208053948 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.306559227 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.199442075 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.19405625 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.224142418 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.588370313 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.191157719 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.224423486 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.301010241 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.507865621 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.235574336 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.194263331 seconds)
    (33/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.194551461 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.475936232 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.301394065 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.193182779 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.221879567 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.192954527 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.463662526 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.191878324 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.190891549 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.190957943 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.191645173 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.194570752 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.756897275 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.190553967 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.706122076 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.191065458 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.078666063 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.19301905 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.190388652 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.410264358 seconds)
    (53/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.191330538 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.598723223 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.190660828 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.189702841 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.191324011 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.189760227 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.188468262 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.218779251 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.435793513 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.284497064 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.190956481 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.193282565 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.218497165 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.190954427 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.264071218 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.191103456 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.453757448 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.245460538 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.41028847 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.697714336 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.191016566 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.282444343 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.308671742 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.190707453 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.189149753 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.190521151 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.189460126 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.295248565 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.191676882 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.564380058 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.194095257 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.191232933 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.248134149 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.283844424 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.189915819 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.453855226 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.190700889 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.190735876 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.859901794 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.280940531 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.190904672 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.190532247 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.191195999 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.569149751 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.694840495 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.354431881 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.191574359 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.391500123 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.192794821 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.57897905 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.676579221 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.748218905 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.191805012 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.296513225 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.194601946 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.193007739 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.190307161 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.221266604 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.192377719 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.251344898 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.18741783 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.585359773 seconds)
  done (took 343.05322051 seconds)
done (took 686.38350726 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.870429619 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.852103087 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.963294713 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.850159892 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.829660695 seconds)
  done (took 10.498335889 seconds)
done (took 11.631016299 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.36590348 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.365729959 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.244387817 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.365660045 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.218366265 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.381326445 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.342079711 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.211426765 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.288322689 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.259333896 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.28601082 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.235006411 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.214911977 seconds)
  done (took 17.910009805 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.484813808 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.485057133 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.254676544 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.487621753 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.228726424 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.494595006 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.37816126 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.387974489 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.375500504 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.205929104 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.204517798 seconds)
  done (took 16.122891636 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.495608057 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.48326812 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.256991719 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.493358162 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.230818758 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.500293321 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.378029056 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.392772667 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.377700803 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.204157949 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.204991312 seconds)
  done (took 16.150013405 seconds)
done (took 51.316777074 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.201162482 seconds)
  done (took 2.332405142 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.233636284 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.392240766 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.213926678 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.204839412 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.202292995 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.203381606 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.206385037 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.201342818 seconds)
  done (took 10.993521657 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.197536614 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.19980069 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.196828414 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.198586458 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.1978699 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.198158696 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.200008603 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.197169354 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.201051585 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.199243382 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.201334241 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.20112036 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.199687707 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.20164777 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.196976904 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.19783089 seconds)
  done (took 20.317849447 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.198884866 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.197652183 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.198127322 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.197592768 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.198598407 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.199906365 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.199699139 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.197327418 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.198251104 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.198117026 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.199863819 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.197814887 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.198555025 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.19821461 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.197996701 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.199552238 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.198345729 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.199035078 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.202343518 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.198937729 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.19989398 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.199328325 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.198485597 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.199017428 seconds)
  done (took 29.907814128 seconds)
done (took 64.684881038 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.125168068 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.738088603 seconds)
  done (took 8.996851445 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.201097606 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.200112006 seconds)
  done (took 3.53763606 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.201457765 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.20042291 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.201120197 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.201307745 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.20137714 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.200757856 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.201874972 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.201396369 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.200201738 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.201658924 seconds)
  done (took 13.146225083 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.201194416 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.200827884 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.197565653 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.201082662 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.20126718 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.197920039 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.201354291 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.199050192 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.202521579 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.198611496 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.200835975 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.199395177 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.199560236 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.199834332 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.201067905 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.198339573 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.200107675 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.198595448 seconds)
  done (took 22.738271129 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.201253419 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.202416104 seconds)
  done (took 3.539300809 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.198717788 seconds)
    (2/7) benchmarking "second"...
    done (took 1.198598222 seconds)
    (3/7) benchmarking "month"...
    done (took 1.197293968 seconds)
    (4/7) benchmarking "year"...
    done (took 1.198416263 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.198188604 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.198549756 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.199468042 seconds)
  done (took 9.523627473 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.202416794 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.375538957 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.456492402 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.806577429 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.202312035 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.204811991 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.007536225 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.206062585 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.20748659 seconds)
  done (took 13.804553428 seconds)
done (took 76.421055815 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.174396303 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.196088031 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.968880491 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.200741664 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.222294224 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.493490182 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.196554349 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.314763062 seconds)
done (took 36.903837602 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.197528651 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.895958357 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.892771116 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.192692009 seconds)
  done (took 11.116980539 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.183757812 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.064458578 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.182672564 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.151098277 seconds)
  done (took 17.719813457 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.771935661 seconds)
    (2/2) benchmarking "read"...
    done (took 1.526766341 seconds)
  done (took 4.435621624 seconds)
done (took 40.605581679 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.202448255 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.201181104 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.204100421 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.20107279 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.204096755 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.200944518 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.202488324 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.202490015 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.201468386 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.20341226 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.202502643 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.204309867 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.20317861 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.20221713 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.200598882 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.201581396 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.204468894 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.202771605 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.201844791 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.204505341 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.201723519 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.203650412 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.201106621 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.201348781 seconds)
  done (took 29.997551142 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.204074323 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.220146466 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.203011873 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.203494019 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.201909564 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.204253613 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.203734429 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.199910527 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.203057241 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.209549451 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.200623657 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.200631646 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.203834454 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.20149624 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.203267346 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.201944492 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.203662262 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.201069171 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.204357461 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.20072935 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.204579521 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.200352611 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.20205479 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.203849092 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.202564772 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.200876411 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.206195822 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.204906506 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.20734751 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.203249274 seconds)
  done (took 37.24959897 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.209592135 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.214115256 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.206900854 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.206273531 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.206951928 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.206453382 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.206906617 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.206626529 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.206462629 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.206220916 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.206317705 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.207241596 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.206486608 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.208080607 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.208083876 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.207081447 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.207381743 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.20679595 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.206635035 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.207231671 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.207857006 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.208475857 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.206876998 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.208190519 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.207725345 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.207178225 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.207732886 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.207771809 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.208362168 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.208702913 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.20946371 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.208497957 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.207889212 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.208647177 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.208573487 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.209395619 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.213822963 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.215413202 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.207954275 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.208451811 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.20860941 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.206386777 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.208330252 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.206848684 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.207877453 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.207329537 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.208207409 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.207793071 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.208939341 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.209132591 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.208562114 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.209443639 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.207230503 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.208810926 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.209106701 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.208478984 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.209602829 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.207762744 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.207348169 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.209102112 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.209040732 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.207779871 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.208485848 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.210672081 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.20946821 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.208514694 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.20962528 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.209360626 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.208476338 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.208758646 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.209580487 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.209189381 seconds)
  done (took 88.14081458 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.209833259 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.207744224 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.206830343 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.207520448 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.208157056 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.208673934 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.207001852 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.210093563 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208194795 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.210514738 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.208367995 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.208447467 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207924605 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.211987326 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.209467053 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.206839323 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.210025069 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.207894087 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.209850568 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.210840646 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.210805735 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.207228157 seconds)
  done (took 27.737380154 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.211820141 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.211348594 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.208148419 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.209791973 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.207666654 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.209976052 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.210961808 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.210795869 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211641996 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.208398496 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.210061035 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.210083987 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.210030118 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207746177 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.209807428 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.209107881 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.21244178 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.209712515 seconds)
  done (took 22.924225471 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.210337474 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.209560036 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.21379291 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.209142806 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.211190196 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.211827527 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.208300116 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.212253223 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.212433949 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.209314939 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.21198074 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.212846706 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.211883659 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.210168326 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212076166 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.209718229 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.211654776 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208913707 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.21244118 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.209617395 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.210682843 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.21273131 seconds)
  done (took 27.788093371 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.211562224 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.212052348 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.210050884 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.210536067 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.208975642 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.212794798 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.213405963 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.210571333 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.212860472 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.213658832 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.210727953 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.212880405 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.211405894 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.210780735 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.211266828 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.211065215 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.21467076 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.211313188 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.212935233 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.210603272 seconds)
  done (took 25.380293907 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.213578757 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.214315655 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.214664331 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.214310744 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.212641889 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.210697075 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.211923358 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.213449881 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.21302589 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.210983889 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.211850371 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.2160044 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.213895803 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.214626434 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.21388751 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.214874088 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.215645345 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.214450978 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.215581351 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.215404984 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.214364991 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.214695234 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.215085726 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.215633004 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.215833299 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.215871085 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.214612734 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.214924541 seconds)
  done (took 35.144518137 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.214458486 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.215663826 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.212438041 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.212629603 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.211461962 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.211838683 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.212104842 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.21262299 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.215240307 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.212624868 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.214932745 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.215512808 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.214856419 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.2150311 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.217134064 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.2155805 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.21506559 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.212933013 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.213275384 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212543524 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.216784171 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215737845 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.217915606 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.210062516 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208132182 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.208766883 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.207130353 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.210103515 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.210443194 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.207593436 seconds)
  done (took 37.539763082 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.229217056 seconds)
    (2/2) benchmarking "in"...
    done (took 1.23243259 seconds)
  done (took 3.605950252 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.204092693 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.213373633 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.209132362 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.207008781 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.208289404 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.21086522 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.210288911 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.20546464 seconds)
  done (took 10.818431874 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.210429443 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.210036214 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.210398255 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.211268059 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.209228368 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.210450437 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.21776786 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.223687844 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.211393051 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.210431543 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.216142964 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.217405443 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.215470518 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.210106304 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.209818961 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.211348608 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.20942069 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.21005863 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.210183277 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.210262176 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.210934008 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.216032725 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.212818264 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.206383682 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.210598967 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.222298087 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.216238409 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.210492986 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.209621931 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.219831389 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.209653727 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.206687395 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.210828121 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.211091004 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.209740435 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.21104641 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.221511174 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.228627952 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.220828247 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.213484113 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.212012877 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.210898082 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.216412712 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.216872127 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.216162661 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.215094844 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.212888016 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.209513002 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.213398844 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.216066805 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.217628364 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.212732951 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.210318021 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.220677592 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.217891426 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.221020703 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.226164989 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.216926234 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.221437341 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.225302161 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.228855364 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.219268818 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.216206607 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.212427466 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.222149947 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.237367298 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.223530365 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.223929748 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.210804837 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.215271682 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.225904378 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.22594568 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.220082087 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.210355684 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.209299252 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.210584344 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.212200177 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.209904964 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.222079531 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.230034821 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.211567892 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.213571767 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.221264986 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.231109662 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.210888836 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.210257148 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.215883636 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.211739335 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.213230007 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.224152763 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.226099164 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.21286463 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.212842018 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.213481409 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.215111453 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.215804873 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.211566979 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.215393621 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.211602871 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.215904412 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.214569121 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.217632413 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.222351011 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.214531182 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.214942578 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.223006211 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.213105272 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.212179624 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.225915207 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.212615613 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.214341445 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.215414377 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.22272305 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.212912236 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.216733817 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.222523841 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.214357479 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.216065787 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.214106561 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.215314278 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.223991785 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.240451471 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.217112344 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.215019008 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.219684677 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.226903716 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.215155296 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.219142423 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.214242699 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.212734293 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.213251804 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.217954903 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.216654858 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.217049642 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.217388446 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.218729129 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.213604385 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.214855175 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.216320989 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.216877857 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.216897766 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.215829125 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.216921613 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.219555642 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.216022441 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.217559314 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.224690475 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.215448806 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.217910634 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.217226411 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.213915906 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.217805048 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.218773941 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.216959919 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.216753015 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.216281605 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.214945214 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.216679666 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.216599448 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.216751547 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.217610478 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.217124366 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.219223389 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.21728151 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.221590286 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.215409716 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.215363758 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.217640873 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.217787698 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.219952422 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.21750444 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.216649589 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.219772051 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.224784751 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.217970934 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.217655013 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.222775735 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.217958361 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.217128966 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.218737065 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.219923334 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.225640614 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.216888583 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.225832195 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.217809625 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.220180884 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.219261826 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.220457816 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.217844351 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.2170666 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.220447605 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.225173983 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.231620348 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.229835298 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.218628885 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.221448859 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.21981822 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.222447842 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.224428356 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.219320485 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.219052095 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.220263809 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.218413599 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.219625363 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.222040245 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.219750663 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.219098759 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.219031303 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.219189922 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.219688403 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.21792179 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.220411199 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.223203739 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.216855413 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.221096537 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.21882978 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.219447358 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.21877934 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.219490333 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.21958732 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.219641067 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.222266825 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.230735728 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.21684153 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.222093838 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.220142065 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.220605853 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.218303727 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.219506662 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.222723385 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.219878549 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.22805271 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.234464604 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.221851586 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.230018202 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.233096078 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.220559706 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.224372661 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.220274985 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.218489721 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.22219721 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.229939573 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.222141917 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.22153229 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.221365828 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.220012772 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.220071735 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.228075737 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.218991279 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.22160858 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.222463521 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.223071448 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.219431733 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.224113627 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.223101722 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.222741515 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.222715713 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.220030923 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.221647485 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.223204122 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.222292149 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.22327691 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.221173224 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.22352779 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.229839469 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.229046357 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.223469029 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.225983972 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.222893998 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.225957742 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.22301754 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.223285426 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.223391459 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.236195905 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.230783878 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.231217068 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.224906213 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.223477085 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.229315364 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.222747598 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.226906859 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.222602364 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.22409257 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.22272667 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.220348447 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.219886229 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.223781148 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.221975081 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.223242861 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.222176159 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.226203178 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.222747106 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.222109969 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.223715342 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.223908474 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.223327308 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.2226114 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.223302143 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.229394072 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.224861138 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.223496295 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.22391098 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.233375207 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.236833319 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.226987285 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.224127452 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.222882675 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.223565334 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.225106032 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.224223646 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.226506455 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.229686842 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.225704658 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.234580139 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.224143678 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.234198478 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.223775427 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.225544553 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.230715891 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.22139571 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.224057939 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.2242937 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.225663842 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.232527475 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.237017466 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.224454305 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.228359513 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.223948953 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.224445555 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.222782032 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.224730001 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.224180806 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.226035696 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.234094342 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.238490133 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.228779917 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.226609084 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.221402019 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.224790675 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.224250992 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.224961915 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.232358584 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.224712386 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.22623995 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.225276433 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.22655852 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.224161901 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.226669162 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.226096377 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.223200092 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.22724763 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.235171895 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.238609732 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.230941423 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.226133071 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.238312707 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.225549422 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.234394201 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.240930787 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.225728254 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.22631368 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.227001253 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.230035944 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.227348724 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.228258317 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.227108205 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.226246643 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.22901997 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.227256131 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.23105396 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.225731441 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.227569888 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.225971952 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.234463526 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.248411525 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.227333488 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.230900031 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.225291878 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.229413154 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.232906506 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.228168077 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.226173397 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.228702212 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.23761388 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.234828292 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.226651354 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.228040623 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.227659656 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.228468501 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.227619741 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.227825197 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.227908031 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.227994118 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.231091529 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.226888695 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.233013302 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.227892304 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.232001115 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.230683116 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.230090387 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.240651881 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.227457581 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.231452571 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.229479352 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.228686603 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.231577729 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.229800921 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.230293105 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.230413277 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.229608746 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.229513098 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.23528886 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.234217403 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.234032009 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.229336412 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.231844857 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.229997428 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.231837814 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.229285543 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.228285013 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.230750932 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.230123793 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.229957541 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.231021734 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.229239053 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.228577284 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.231518881 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.230586212 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.232734403 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.234670846 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.23042753 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.226964434 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.229086248 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.229823418 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.229283769 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.230323796 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.24111612 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.231957336 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.240437691 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.237094221 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.234506558 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.230496557 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.232676404 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.23839388 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.228369876 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.231282743 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.230618259 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.231646221 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.231908525 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.23453653 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.23085474 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.239182661 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.230663752 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.230832435 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.241866836 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.245614073 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.232938809 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.232317675 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.236207147 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.231063065 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.229240381 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.230654642 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.231363039 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.240822379 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.246593694 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.231252002 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.233351503 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.231282584 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.232124781 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.235920023 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.2305911 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.233098451 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.228543379 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.233064126 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.232447458 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.231967758 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.229976528 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.230947928 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.232545172 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.234019067 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.239876124 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.229942574 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.234550424 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.2312656 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.232813239 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.232463626 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.231882363 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.22960965 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.232075173 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.233588163 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.23186763 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.233116766 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.236894401 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.231307694 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.232704891 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.233412887 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.231690996 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.235763062 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.242196097 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.240649303 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.230308612 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.233327201 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.23397743 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.237606353 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.233507023 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.234297771 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.234974545 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.238231744 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.234746735 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.233954464 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.232538585 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.23531019 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.251571789 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.246198106 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.235710327 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.235457807 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.240443797 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.234717482 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.233618642 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.233592416 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.238840525 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.235701032 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.241473188 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.233868805 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.24137925 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.247730479 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.234534624 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.238205526 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.238314711 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.242777233 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.238598597 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.234609143 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.235782697 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.23896301 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.253734453 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.234800194 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.244137625 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.263835734 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.250880119 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.235792262 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.234060125 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.233893035 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.235906879 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.239098796 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.236023236 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.233863345 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.235062809 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.236689632 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.23627527 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.243212089 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.237499826 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.235153104 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.236223085 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.238071212 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.238763316 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.233918511 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.237302016 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.235584538 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.236893667 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.235229904 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.235383952 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.236153332 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.249402271 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.247202054 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.23722861 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.237284679 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.233285877 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.241957843 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.238059457 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.246358717 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.243972848 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.237552103 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.236282972 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.237909514 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.23661308 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.234777593 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.238554453 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.238608943 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.23643702 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.234648632 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.250564502 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.246679872 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.243991518 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.238830235 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.238122535 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.235838728 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.241070155 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.237517561 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.237551127 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.240163439 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.237259392 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.240718596 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.236741351 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.237448156 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.240438041 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.244763678 seconds)
  done (took 731.877266876 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.235506081 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.234596111 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.235940611 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.236320389 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.234844801 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.236368022 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.235648593 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.235996734 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.235848961 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.235915398 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.237067989 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.23711903 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.236620083 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.238810839 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.237430298 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.236729137 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.238797535 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.236766085 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.236856202 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.238044612 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.237535815 seconds)
  done (took 27.141407234 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.239713057 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.237280043 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.23818273 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.239371016 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.237574735 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.239147357 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.238251629 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239905183 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.242046709 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.238030099 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.240931311 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.239487553 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.23767775 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.238878991 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.237877964 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.24054086 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.241072538 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.23846296 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.242009401 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.238019173 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.240125133 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.237918134 seconds)
  done (took 28.436495325 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.240331847 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.240943627 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.240585841 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.237396733 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.241073876 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.237509099 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.242742793 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.240892729 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.240717667 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.24156183 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.24073675 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.239290404 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.246683796 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.245430463 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.245460204 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.240497808 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.385854772 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.242705274 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.242687839 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.239982672 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.240070103 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.250333697 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.23857241 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.23939087 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.240009878 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.242083335 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.24343673 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.246052439 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.244464146 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.242402887 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.244304455 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.242284853 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.241695311 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.245962199 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.241695015 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.243966135 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.247164237 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.24260394 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.23919992 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.242334832 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.251422998 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.261754079 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.244105624 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.250760392 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.243077621 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.243068533 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.246517452 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.252200558 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.240277775 seconds)
  done (took 62.240928817 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.243249481 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.243161312 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.24180818 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.243602938 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.243351132 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.244554271 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.245122509 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.241812075 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.240901522 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.240632094 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.24378994 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.239905477 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.24011606 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.244181325 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.243824136 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.241440887 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.241015397 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.240273654 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.240751323 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.242339144 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.240220241 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.243872515 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.244866356 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.242411874 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.243694207 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.242111701 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.241311929 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.244380224 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.241813366 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.241747758 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.24397279 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.244686237 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.244993918 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.244206874 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.241905257 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.2450293 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.245244446 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.24215601 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.244072181 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.24390285 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.245265169 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.245555155 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.246215015 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.245788659 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.244273825 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.24305116 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.24249256 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.243456194 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.24409361 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.246163128 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.245456286 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.242288731 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.245412578 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.241979023 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.244900431 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.244936305 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.243003051 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.242730848 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.246260031 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.244060202 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.244235466 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.246832316 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.242983305 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.245753505 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.244963498 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.244073469 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.243897658 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.246235105 seconds)
  done (took 85.738678923 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.246669476 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.24587104 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.245791802 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.245973846 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.243527225 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.245236517 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.245509012 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.245633851 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.246273331 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.246422369 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.246328589 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.246786061 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.246898381 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.246051096 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.247599251 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.244912566 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.247004577 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.24720689 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.24662524 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.246371769 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.246256263 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.246257279 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.24623084 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.248373344 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.247214628 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.248085952 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.247217909 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.247985836 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.247257455 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.248124647 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.249319611 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.248337879 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.24752796 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.248520488 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.249506616 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.248765038 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.247626787 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.248117644 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.24927842 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.249110712 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.248072104 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.247140339 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.248655995 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.248379966 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.249451637 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.248368341 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.248309972 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.248658694 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.248678928 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.248810596 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.248821337 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.249414574 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.249582087 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.249686158 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.249470831 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.249772105 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.250403643 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.248346852 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.249460713 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.249339189 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.250310712 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.249668241 seconds)
  done (took 78.541659124 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.249262569 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.249498838 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.246011417 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.24672553 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.250855844 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.24783771 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.249716386 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.250173029 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.251442265 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.250739323 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.250720797 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.249097761 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.246823632 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.251987756 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.2473738 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248266829 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.24836109 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.247692566 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.251815489 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.248654684 seconds)
  done (took 26.166747897 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.249498535 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.250970815 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.248294401 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.249587415 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.251893435 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.247720416 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.251716892 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.252761426 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.249521154 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.2512471 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.252216244 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.25259023 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.250970254 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.248833882 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.252324663 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.250561635 seconds)
  done (took 21.195485713 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.251072693 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.251960876 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.25381297 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.251721268 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.250692673 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.250941361 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.25313952 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.249838243 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.250409542 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.252782349 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.251793389 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.252571412 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.252194244 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.252054961 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.249501649 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.25285803 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.250614144 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.250103564 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.252606767 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.252101672 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.250360555 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.251844263 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.252797056 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.253222571 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.249869429 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.250527383 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.250982608 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.250977933 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.250545347 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.252965622 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.251408189 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.251096678 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.251645647 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.250383079 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.253494186 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.251229598 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.255439801 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.253701975 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.253856709 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.252430109 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.255080877 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.251517415 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.253192157 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.254047144 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.25203859 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.253878553 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.251361645 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.251771798 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.251770418 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.252266247 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.255144466 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.255161932 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.254144182 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.254356349 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.254167928 seconds)
  done (took 70.058259763 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.254850021 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.253797014 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.251260218 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.255321607 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.255252671 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.252448899 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.254951269 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.252310103 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.252656408 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.25487293 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.254167663 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.255103626 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.253334534 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.256633891 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.254330963 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.255676345 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.254919552 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.256121202 seconds)
  done (took 23.765695647 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.252658888 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.253572248 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.256605864 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.253573644 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.253518633 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.255986955 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.254124235 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.256181782 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.255864075 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.253846116 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.253064222 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.256928988 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.256296554 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.256529916 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.25549403 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.25378235 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.257253511 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.257432488 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.254481531 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.255233332 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.258220207 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.257290466 seconds)
  done (took 28.808449613 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.254574914 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.255137531 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.271744761 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.297184663 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.282108107 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.255775955 seconds)
  done (took 8.806052255 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255709929 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256027263 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.254404163 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.25643758 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.256848604 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255291479 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.253805998 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254279947 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257389616 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.25495892 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255208425 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.25678036 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257418278 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.25528832 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257999774 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.25831684 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254928659 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.257411826 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.25595952 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258315153 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.253640204 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257730082 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.254912142 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254747058 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.25457726 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25550003 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.25793205 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255676863 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255789293 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257359946 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258351426 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255640009 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.25952095 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.25671539 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260666463 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257940977 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.25630147 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259656196 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258570676 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256043221 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.258935685 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.26102647 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256575347 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.253897005 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.256376972 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.250875872 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.252185918 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.253879716 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25497952 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259228546 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.246181786 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.245651501 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.249390356 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.244281947 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.247836323 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.247770066 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.244504531 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.244941454 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.238162584 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.234355535 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.232495886 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.236255255 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.232587572 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.232728246 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.236711356 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.234247627 seconds)
  done (took 83.857001532 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.228887005 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.228336597 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.228500249 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229399833 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.22785622 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.228122236 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.22863558 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.22612777 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.231402752 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.231198178 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.233164368 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.231045134 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.229851986 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.230778575 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232574448 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232406274 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.233309856 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231957059 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232065138 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.235253105 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.232862302 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.233086372 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.23161982 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.231971394 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232350768 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.234642824 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.233519487 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.231612977 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.232308299 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.232994193 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.231909503 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.232477884 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.233614914 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.232206556 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.232092327 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232621259 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.231607926 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232416626 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.231273608 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.234628934 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232847419 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.235874449 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.232538687 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233112373 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.233570726 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232751737 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.232382616 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233283006 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.233997119 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.23317461 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.235515311 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233175185 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.234108327 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.234002018 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.232998664 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232739168 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.233782665 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.232562658 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234164402 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.235303163 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232448173 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234686687 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.237011188 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.234727786 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.235947035 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.233864257 seconds)
  done (took 82.51698943 seconds)
done (took 1706.614274823 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.262020773 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.260723359 seconds)
  done (took 13.692083212 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.389940988 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.343690771 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.224965789 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.233296347 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.225762822 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.220132667 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.242692061 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.22446283 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.22432004 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.224199698 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.225147726 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.412850618 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.28102988 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.225828937 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.224792921 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.319096708 seconds)
  done (took 41.411049811 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.247958325 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.233396663 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.328286478 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.248972167 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.252772065 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.395818106 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.279578278 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.234300349 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.374294766 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.26536178 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.579399051 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.250003737 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.228456102 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.189255654 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.242604207 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.38930615 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.441007379 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.588557266 seconds)
  done (took 27.934238992 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.604385275 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.260773295 seconds)
  done (took 9.028989852 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.233709979 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.250845488 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.240348123 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.252924717 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.236099678 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.302049477 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.24474603 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.244231922 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.255688949 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.279985935 seconds)
  done (took 63.710471862 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.232072996 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.215841386 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.216954202 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.214264567 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.206224485 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.208730249 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.214286576 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.20807201 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.281181447 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.325259484 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.233612579 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.222491227 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.215818915 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.216037891 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.212751938 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.249249104 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.367319181 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.213130337 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.21169121 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.22209886 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.216122013 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.29597218 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.251680118 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.21479271 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.323285432 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.305850228 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.222830844 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.2222884 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.352333365 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.213855798 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.215059623 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.216518933 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.217073789 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.759315368 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.657111552 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.22141824 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.237757386 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.22700974 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.214496172 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.335128342 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.21669181 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.224785539 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.210630567 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.630117519 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.373843115 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.316371912 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.297997462 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.221680119 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.218179761 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.273178297 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.217117652 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.21744063 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.243116925 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.931298599 seconds)
  done (took 103.353568051 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.254484741 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.695028536 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.376948876 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.227562265 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.956588737 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.854089669 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.210270233 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.45495082 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.238226088 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.2088933 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.53924833 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.669710881 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.214671861 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.245649086 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.86096377 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.281635381 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.21030633 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.948327353 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.213282243 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.2132525 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.617290276 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.224611371 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.225854656 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.37803785 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.248166219 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.630870143 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.499379612 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.640802213 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.218900646 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.210545874 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.63622261 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.215385948 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.222487386 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.213995244 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.465069075 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.529041023 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.512454837 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.214719267 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.222694778 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.211027943 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.249071046 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.633812282 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.522201398 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.215885739 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.215296971 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.638663104 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.213095143 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.211845511 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.209841855 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.408659789 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.94330858 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.212790249 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.497354014 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.214448222 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.480234179 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.250528545 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.250284621 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.664965765 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.216899796 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.257340352 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.224555572 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.211775739 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.217368884 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.213836058 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.217500292 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.519887377 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.40854144 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.213467824 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.519658149 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.628483856 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.212061683 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.700723137 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.119816462 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.240915051 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.29249779 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.220028393 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.762084625 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.665384196 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.225010547 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.213860195 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.510228443 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.218053626 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.516250718 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.227299084 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.22691383 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.630661163 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.231283706 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.223481745 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.21313094 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.21658945 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.853764956 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.215831725 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.464519855 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.282175241 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.214447606 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.214359327 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.244735777 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.219775742 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.214023648 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.216969628 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.698113596 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.222156537 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.48629298 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.231746863 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.215903379 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.216898881 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.21533815 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.214910619 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.428059869 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.703955751 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.219968022 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.215165147 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.214775814 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.225597132 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.356758296 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.217549232 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.480455986 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.21722745 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.22691165 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.218758884 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.906337842 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.218654924 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.216013454 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.224222129 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.035210216 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.421512111 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.231382202 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.217210374 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.215515566 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.238170871 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.434221221 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.218111173 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.25937444 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.215383192 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.881104168 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.222360515 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.217630515 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.602448227 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.223200046 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.076199625 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.238772867 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.217008842 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.508991161 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.473371971 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.256108015 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.216661588 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.22976704 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.859031723 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.232065951 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.354757059 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.233811179 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.235898893 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.411870879 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.584915592 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.217223392 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.782661446 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.21873034 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.425025507 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.220244487 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.521191637 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.664268996 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.21866894 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.22384625 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.879801265 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.879258062 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.855004945 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.220909039 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.531699684 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.212733726 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.655816947 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.217744639 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.21825524 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.659443719 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.219838241 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.22174519 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.218452531 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.218515008 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.396694015 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.391116798 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.045688986 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.226090825 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.639810706 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.248587376 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.218457011 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.224904143 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.221066365 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.570692646 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.299463241 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.217756559 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.238136238 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.220483415 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.221495645 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.653364686 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.163368923 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.224217449 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.369957437 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.808278185 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.221889636 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.21952654 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.839056318 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.451544343 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.690015466 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.258002325 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.490056351 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.2291763 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.256695564 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.903379204 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.261733017 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.693359265 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.222173556 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.220556847 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.769666629 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.226772751 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.564403756 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.220046542 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.225302325 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.712661729 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.223925119 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.227525292 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.451922645 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.220491572 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.475937409 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.223039646 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.269533801 seconds)
  done (took 1082.887227281 seconds)
done (took 1343.188596877 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.220573848 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.220119983 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.209815873 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.221370968 seconds)
  done (took 26.034036876 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.229812824 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.227372516 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.2272253 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.225394581 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.229326206 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.225505414 seconds)
  done (took 8.527465791 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.286764234 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.217406335 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.220687073 seconds)
  done (took 18.888739296 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.419888654 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.371913942 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.549369329 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.135955796 seconds)
  done (took 9.64207343 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.228825956 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.228630506 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.228715456 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.231642476 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.230353794 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.231206796 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.230256989 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.232433063 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.232257311 seconds)
  done (took 12.236955266 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.709768177 seconds)
done (took 81.202073261 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.552361199 seconds)
    (2/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.215347985 seconds)
    (3/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.215635596 seconds)
    (4/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.327177961 seconds)
    (5/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.754896518 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.832821102 seconds)
    (7/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.191004843 seconds)
    (8/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.544953141 seconds)
    (9/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.394253213 seconds)
    (10/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.237045278 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.454570495 seconds)
    (12/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.942198437 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.260476808 seconds)
    (14/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.233414273 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.333574425 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.245400406 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.44350357 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.056975511 seconds)
    (19/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.516683603 seconds)
    (20/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.246405717 seconds)
    (21/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.683852255 seconds)
    (22/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.240547841 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.377671498 seconds)
    (24/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.66300977 seconds)
    (25/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.312927542 seconds)
    (26/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.304357701 seconds)
    (27/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.247892882 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.209035223 seconds)
    (29/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.336019612 seconds)
    (30/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.326049302 seconds)
    (31/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.211280897 seconds)
    (32/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.246154474 seconds)
    (33/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.33670164 seconds)
    (34/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.555565879 seconds)
    (35/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.914495473 seconds)
    (36/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.506882351 seconds)
    (37/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.472273025 seconds)
    (38/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.257630352 seconds)
    (39/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.259166811 seconds)
    (40/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.610637654 seconds)
    (41/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.236497004 seconds)
    (42/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.307620909 seconds)
    (43/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.417669127 seconds)
    (44/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.438174132 seconds)
    (45/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.496937488 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.333043335 seconds)
    (47/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.479533967 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.451649764 seconds)
    (49/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.216173655 seconds)
    (50/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.223065423 seconds)
    (51/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.659272771 seconds)
    (52/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.234852589 seconds)
    (53/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.981568439 seconds)
    (54/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.374100687 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.059053802 seconds)
    (56/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.27723989 seconds)
    (57/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.906277665 seconds)
    (58/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.976773323 seconds)
    (59/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.973055305 seconds)
    (60/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.221682679 seconds)
    (61/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.723538894 seconds)
    (62/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.333086851 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.613128691 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.835900732 seconds)
    (65/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.216204845 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.00232148 seconds)
    (67/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.236612381 seconds)
    (68/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.210747365 seconds)
    (69/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.286936609 seconds)
    (70/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.288407726 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.250370109 seconds)
    (72/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.206731253 seconds)
    (73/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.901914365 seconds)
    (74/309) benchmarking ("sort", Int64, false)...
    done (took 5.335896555 seconds)
    (75/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.222962233 seconds)
    (76/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.762807632 seconds)
    (77/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.221682867 seconds)
    (78/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.808093937 seconds)
    (79/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.253102855 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.24698059 seconds)
    (81/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.230811477 seconds)
    (82/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.723774395 seconds)
    (83/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.212186936 seconds)
    (84/309) benchmarking ("sort", Int8, false)...
    done (took 4.287721149 seconds)
    (85/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.575962377 seconds)
    (86/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.236697155 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.655716124 seconds)
    (88/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.561401379 seconds)
    (89/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.212795556 seconds)
    (90/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.279656278 seconds)
    (91/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.228744956 seconds)
    (92/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.268567005 seconds)
    (93/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.226770218 seconds)
    (94/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.45744665 seconds)
    (95/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.258917689 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.276101858 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.322179736 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.215100209 seconds)
    (99/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.316860006 seconds)
    (100/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.513969734 seconds)
    (101/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.448983168 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.334514858 seconds)
    (103/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.79612497 seconds)
    (104/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.240391091 seconds)
    (105/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.754258605 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.047704926 seconds)
    (107/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.237247836 seconds)
    (108/309) benchmarking ("sort", BigInt, false)...
    done (took 6.222916936 seconds)
    (109/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.342132506 seconds)
    (110/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.312839641 seconds)
    (111/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.485765319 seconds)
    (112/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.430262213 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.273122242 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.227584936 seconds)
    (115/309) benchmarking ("sort", Bool, false)...
    done (took 1.725426362 seconds)
    (116/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.249270254 seconds)
    (117/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.686836996 seconds)
    (118/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.38172119 seconds)
    (119/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.76223781 seconds)
    (120/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.494466481 seconds)
    (121/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.293704677 seconds)
    (122/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.23945149 seconds)
    (123/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.731202119 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.313142876 seconds)
    (125/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.900967 seconds)
    (126/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.486139098 seconds)
    (127/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.660025228 seconds)
    (128/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.72218019 seconds)
    (129/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.263180881 seconds)
    (130/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.531509233 seconds)
    (131/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.372648134 seconds)
    (132/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.248487062 seconds)
    (133/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.920440772 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.568855411 seconds)
    (135/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.391658061 seconds)
    (136/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.348922551 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.74048495 seconds)
    (138/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.987087196 seconds)
    (139/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.226417762 seconds)
    (140/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.232877233 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.92350729 seconds)
    (142/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.349442339 seconds)
    (143/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.257636827 seconds)
    (144/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.216864936 seconds)
    (145/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.36101464 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.340344685 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.203254613 seconds)
    (148/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.363249917 seconds)
    (149/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.565068246 seconds)
    (150/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.232563572 seconds)
    (151/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.371893884 seconds)
    (152/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.312551282 seconds)
    (153/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.240221206 seconds)
    (154/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.39623966 seconds)
    (155/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.232465299 seconds)
    (156/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.351722897 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.253717936 seconds)
    (158/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.257351993 seconds)
    (159/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.253203895 seconds)
    (160/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.410380868 seconds)
    (161/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.281487485 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.603022467 seconds)
    (163/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.203908176 seconds)
    (164/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.459065179 seconds)
    (165/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.490859235 seconds)
    (166/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.752625002 seconds)
    (167/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.640745577 seconds)
    (168/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.560797369 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.617442459 seconds)
    (170/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.245640036 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.23940936 seconds)
    (172/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.0019964 seconds)
    (173/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.426877377 seconds)
    (174/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.601044666 seconds)
    (175/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.933697536 seconds)
    (176/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.351902017 seconds)
    (177/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.2416018 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.217990272 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.764680753 seconds)
    (180/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.233332017 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.074456218 seconds)
    (182/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.442631934 seconds)
    (183/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.408708279 seconds)
    (184/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.371421719 seconds)
    (185/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.26051758 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.2590653 seconds)
    (187/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.54555027 seconds)
    (188/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.218936188 seconds)
    (189/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.820949632 seconds)
    (190/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.233451942 seconds)
    (191/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.282707555 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.283848649 seconds)
    (193/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.259076133 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.306209079 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.492401703 seconds)
    (196/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.224797559 seconds)
    (197/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.888324946 seconds)
    (198/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.363194808 seconds)
    (199/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.243033855 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.360322743 seconds)
    (201/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.387350271 seconds)
    (202/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.932175474 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.292254254 seconds)
    (204/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.369830333 seconds)
    (205/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.461331838 seconds)
    (206/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.283011097 seconds)
    (207/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.245815303 seconds)
    (208/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.434232655 seconds)
    (209/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.34190844 seconds)
    (210/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.922459368 seconds)
    (211/309) benchmarking ("sort", Float64, false)...
    done (took 5.456069564 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.79364108 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.765156708 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.448438898 seconds)
    (215/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.520598754 seconds)
    (216/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.230636176 seconds)
    (217/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.887709145 seconds)
    (218/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.217733976 seconds)
    (219/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.66645287 seconds)
    (220/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.465053622 seconds)
    (221/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.243896356 seconds)
    (222/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.972684713 seconds)
    (223/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.312015167 seconds)
    (224/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.232816421 seconds)
    (225/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.221609421 seconds)
    (226/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.770084329 seconds)
    (227/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.569102769 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.256782574 seconds)
    (229/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.394478098 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.029680166 seconds)
    (231/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.526603421 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.277360684 seconds)
    (233/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.320270059 seconds)
    (234/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.23224952 seconds)
    (235/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.919555109 seconds)
    (236/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.038993825 seconds)
    (237/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.385511914 seconds)
    (238/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.221498607 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.572588633 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.243589838 seconds)
    (241/309) benchmarking ("sort", Float32, false)...
    done (took 5.197136935 seconds)
    (242/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.321665536 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.58620245 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.970505347 seconds)
    (245/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.295107492 seconds)
    (246/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.263177037 seconds)
    (247/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.256112209 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.980703035 seconds)
    (249/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.797642086 seconds)
    (250/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.247218067 seconds)
    (251/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.937081446 seconds)
    (252/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.782374098 seconds)
    (253/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.319320917 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.463051897 seconds)
    (255/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.262405691 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.63443166 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.294289177 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.430960533 seconds)
    (259/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.741922768 seconds)
    (260/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.250335464 seconds)
    (261/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.236384417 seconds)
    (262/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.459674223 seconds)
    (263/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.510567613 seconds)
    (264/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.262112235 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.567293973 seconds)
    (266/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.281795933 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.263901613 seconds)
    (268/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.360797286 seconds)
    (269/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.252497617 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.624853913 seconds)
    (271/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.737768473 seconds)
    (272/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.044260465 seconds)
    (273/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.442389045 seconds)
    (274/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.657049813 seconds)
    (275/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.220904432 seconds)
    (276/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.024954889 seconds)
    (277/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.249024995 seconds)
    (278/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.469381048 seconds)
    (279/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.249864912 seconds)
    (280/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.642242194 seconds)
    (281/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.323746843 seconds)
    (282/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.737658814 seconds)
    (283/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.775147521 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.8501781 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.329825636 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.340932532 seconds)
    (287/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.506778079 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.319812879 seconds)
    (289/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.265766078 seconds)
    (290/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.367261595 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.354013161 seconds)
    (292/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.778027776 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.391589913 seconds)
    (294/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.271631882 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.075423759 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.293056136 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.078046725 seconds)
    (298/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.664305249 seconds)
    (299/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.531606623 seconds)
    (300/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.399716334 seconds)
    (301/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.23110555 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.262868252 seconds)
    (303/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.238701369 seconds)
    (304/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.246984833 seconds)
    (305/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.809092897 seconds)
    (306/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.019359403 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.31268296 seconds)
    (308/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.363450951 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.63220323 seconds)
  done (took 877.498348293 seconds)
done (took 878.664441418 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.271516493 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.262327927 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.249860394 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.268815314 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.360763789 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.280136493 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.260794272 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.253469333 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.298126641 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.298601642 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.249273045 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.278987196 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.24978357 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.250784337 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.249499328 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.26376117 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.161541705 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.250060633 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.266507876 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.257272285 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.265507756 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.248160127 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.299430719 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.281652281 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.253282015 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.253697911 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.251509848 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.269337585 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.36056723 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.252390923 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.250256656 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.262620686 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.156973331 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.24877359 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.245531173 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.270169282 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.259469307 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.259282431 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.252240617 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.281548726 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.518249233 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.24984482 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.251440427 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.251296321 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.250231222 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.256980223 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.249577662 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.254505442 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.2660606 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.26503456 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.521177248 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.266601063 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.25065125 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.250220508 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.263796187 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.252281488 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.255441557 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.26752039 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.268026055 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.265760459 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.158915889 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.257624869 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.255248127 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.268183187 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.255276505 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.568037562 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.247882983 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.257845231 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.523760711 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.257501403 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.573134297 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.261042083 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.253293213 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.266307512 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.284924013 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.170755643 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.249628191 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.252681337 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.26126277 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.251690205 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.263518623 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.266587441 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.256257003 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.253356258 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.268474352 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.285160487 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.26539938 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.253884815 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.263763573 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.272940377 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.257897146 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.263775046 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.25683848 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.247585096 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.26327944 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.256061346 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.257146493 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.253374351 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.25551183 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.264835524 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.528644243 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.269831522 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.246022563 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.249936187 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.248080595 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.267193974 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.525097131 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.251078616 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.275991374 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.301828868 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.255526367 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.164916646 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.25702974 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.268991539 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.264423146 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.257951576 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.251099372 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.164223838 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.541343936 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.269498045 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.257620087 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.254296947 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.26632154 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.256067151 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.250306979 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.174103167 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.253534034 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.264242826 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.370384573 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.264473391 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.285014013 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.248833603 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.256112492 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.286663138 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.266830404 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.284502173 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.253940231 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.267464492 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.26738052 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.250652908 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.261593201 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.261490024 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.255959828 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.26266348 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.250714707 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.284049416 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.266437113 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.265225063 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.273763932 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.378285776 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.25328856 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.166822492 seconds)
done (took 210.77955376 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.311145592 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.253354403 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.339475616 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.24771444 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.350971248 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.351909218 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.251215652 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.251273276 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.251297913 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.628182013 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.250125898 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.251686772 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.251372239 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.249618414 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.335465217 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.2530727 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.251633871 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.591549976 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.254265403 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.324206757 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.253617636 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.251554457 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.25457827 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.63759211 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.251437135 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.247412965 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.325633325 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.253963579 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.603363367 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.253658001 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.252152758 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.604513646 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.342603894 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.271815011 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.263876199 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.261971694 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.351834479 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.270290076 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.33661804 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.334415946 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.347010997 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.292398242 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.255221327 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.252883648 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.256842627 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.258005879 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.252031743 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.283396671 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.25318386 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.253631796 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.592564419 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.263736736 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.252530194 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.255519893 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.254961509 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.282734395 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.250310319 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.256688151 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.343269484 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.254017922 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.319358253 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.637827642 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.630234049 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.254967621 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.253016944 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.252628967 seconds)
  done (took 143.119514176 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.314563668 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.32942639 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.357515828 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.256296959 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.302205641 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.362927165 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.256484015 seconds)
  done (took 10.369289214 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.257118783 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.251306915 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.306319333 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.305566713 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.251837011 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.401878073 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.254923767 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.267191918 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.251709183 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.30750053 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.256493736 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.257119304 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.264272504 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.256757309 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.300604365 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.266451831 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.370308778 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.258569225 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.256610876 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.414735089 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.257259556 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.264787169 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.310301023 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.268987909 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.259726408 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.264564036 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.83651659 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.2584083 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.256148561 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.25882903 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.256935287 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.297052358 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.259005863 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.254605332 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.256513531 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.371518933 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.2547553 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.256003485 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.260745729 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.259397666 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.254181756 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.256567288 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.257013751 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.256943029 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.255762846 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.277698742 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.257686384 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.257575304 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.259165985 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.256745349 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.310551356 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.254864852 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.256098175 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.257873737 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.313693455 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.263121299 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.260030591 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.256991014 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.260536651 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.256558348 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.417470895 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.303822071 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.258054824 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.306921903 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.259953162 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.261516688 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.260783288 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.260262968 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.316679931 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.262051638 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.309109543 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.25754858 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.421780983 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.283387263 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.257500613 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.263153372 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.260837893 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.262058042 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.2550272 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.266573127 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.258062819 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.262758868 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.26757522 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.258827536 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.259538288 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.365853418 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.371381986 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.257975562 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.273417157 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.264330452 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.258135333 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.315409667 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.259689778 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.259717589 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.315781355 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.376639411 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.314825659 seconds)
  done (took 145.877252766 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.265041925 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.267810646 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.26310788 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.276192774 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.262235368 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.263871431 seconds)
  done (took 8.793482129 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.263592835 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.262636766 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.261952027 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.26486522 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.261577253 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.262358213 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.263380711 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.264223761 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.266380804 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.261167336 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.266582858 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.269206509 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.265368693 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.264558685 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.264545983 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.263357661 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.265361244 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.260162844 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.263517542 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.264014355 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.368984006 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.26416243 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.26265549 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.265057808 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.269047188 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.264345506 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.271341744 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.264403745 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.265345793 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.27218584 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.26672307 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.266304617 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.264413165 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.270199318 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.267412911 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.265250056 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.269151822 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.27039815 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.26236486 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.267057723 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.270500247 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.265945232 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.266475891 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.271127016 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.267289588 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.271109309 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.273458431 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.272608342 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.263705412 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.270698468 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.270087378 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.265286294 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.26756321 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.270350022 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.271164302 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.270537201 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.27442652 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.266396566 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.26608567 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.265247772 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.268230782 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.267636546 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.267042958 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.269865399 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.264234813 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.271708539 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.268460429 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.270730583 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.267037566 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.267463117 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.2716296 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.263446619 seconds)
  done (took 93.511164943 seconds)
done (took 402.856918598 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.420562023 seconds)
  done (took 7.618895568 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.487552742 seconds)
  done (took 7.68889764 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.300434797 seconds)
  done (took 19.506600946 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.299206014 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.269823538 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.258487134 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.26299288 seconds)
  done (took 26.290677419 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.430765171 seconds)
  done (took 7.630177221 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.258807845 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.257556517 seconds)
  done (took 13.714769941 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.626845335 seconds)
  done (took 7.826399609 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.311010906 seconds)
  done (took 7.517609911 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.27430048 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.280070217 seconds)
  done (took 14.010940428 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.249449959 seconds)
  done (took 7.452249425 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.822772367 seconds)
  done (took 8.026039933 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.270756424 seconds)
  done (took 7.471809564 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.265682222 seconds)
  done (took 7.465806512 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.457880985 seconds)
  done (took 8.661607706 seconds)
done (took 152.082415988 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.260891683 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.265220546 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.264455108 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.264901819 seconds)
  done (took 26.257056596 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.303590308 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.302921476 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.304670624 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.312494289 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.305713471 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.304081446 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.29480935 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.297403076 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.315147081 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.306350596 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.305334935 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.306839958 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.323368637 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.296096374 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.305642619 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.305238832 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.315829821 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.30342982 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.296796599 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.308134079 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.27149816 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.315824894 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.307285596 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.272297633 seconds)
  done (took 32.483687562 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.465758489 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.342707883 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.424170325 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.320886641 seconds)
  done (took 6.757592327 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.321795243 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.325558491 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.337052003 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.375468893 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.403141718 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.334527826 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.298316115 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.291675603 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.278076072 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.324813551 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.406614256 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.339950015 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.408858303 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.272252717 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.459553363 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.27142081 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.271383325 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.322956428 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.375883866 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.38899439 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.272210051 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.32132544 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.327400198 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.340692391 seconds)
  done (took 33.273427621 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.270649949 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.277494771 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.277671608 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.270531751 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.27118874 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.272556867 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.278193539 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.272974414 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.293155351 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.273561141 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.271827317 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.271097327 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.270238523 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.272292124 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.271067305 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.283429326 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.284496384 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.271256575 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.275462962 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.277542525 seconds)
  done (took 26.710833349 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.265027371 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.119204141 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.616884551 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.521784066 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.267045683 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.262881486 seconds)
  done (took 27.259238812 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.33366095 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.453024808 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.273384722 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.590972364 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.669680217 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.275198601 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.273055401 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.486589972 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.756434835 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.755910666 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.321645789 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.334323631 seconds)
  done (took 18.730579698 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.276584933 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.267266069 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.265941172 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.284166618 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.323287531 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.277993151 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.279490306 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.266436093 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.323407137 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.326977348 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.278062736 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.323659549 seconds)
  done (took 36.7010201 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.356306264 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.315508968 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.161031777 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.998080491 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.644943967 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.476398419 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.038854447 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.683187911 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.273424781 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.543681812 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.976369962 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.371733628 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.523283253 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.274255563 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.270774233 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.219303047 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.494825341 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.72525269 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.26956219 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.957469169 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.294579774 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.282399182 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.050322149 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.295847212 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.480760925 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.401624505 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.562247162 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.270161976 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.522431061 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.281729598 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.280415566 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.269971375 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.544224687 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907626399 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.363871713 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.282161202 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.939064289 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.985916343 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.258748039 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.966601319 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.737523133 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.272432086 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.279602957 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.271323941 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.204250059 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.28112076 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.691656331 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.277271323 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.98268673 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.269544303 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.280298078 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.365560019 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.274915995 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.084903448 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.300222145 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.268781196 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.268672787 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.277705928 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.845991828 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.428312042 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.275939193 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.205106564 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.378306069 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.964853967 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.841652013 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.370829073 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.274027988 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.275393905 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.205250798 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.052708538 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.288673653 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420012129 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.290910805 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.924088476 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.915420361 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.9997949 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.214514185 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.791295021 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.275602596 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.208011338 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.499495999 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.269793578 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.208355117 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.214197218 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.207455982 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941255174 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.281067253 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.628486044 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.277096284 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.686577354 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.284897384 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.288486538 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296012264 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.49609795 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.157303475 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.271362203 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.747175836 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428899812 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.290353543 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.689982897 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.207297296 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.273621708 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.527929703 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.483255971 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.276264739 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.231106447 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.458285735 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.28495762 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.289496165 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.273096546 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.285423582 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.802288228 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.286959622 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.438366514 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.29231929 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.274142674 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977734593 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.286085138 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.374080446 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.012377237 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.517580468 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.009356813 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.274730566 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.356514518 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.278157768 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.271204441 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.077193019 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.788566621 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.277383779 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.279361044 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.281803102 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.28451306 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.275310363 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.221727704 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.277109303 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.022798089 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.279174711 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.496492768 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.281974153 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.552031099 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.210905033 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423551342 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.35961069 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.495527319 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.393115962 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.274257803 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.534623269 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.276981784 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.276377944 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.287687584 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296167291 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.374925331 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.298339292 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.282278089 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.531375668 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.279419117 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.281034292 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.083496464 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.703448858 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.276916901 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.279635039 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.093770373 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.802349951 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.256434299 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.278388565 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.167052212 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.291148757 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.340967938 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.283147581 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.288240191 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.927093093 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.052508562 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.281864022 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.286903802 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.501012422 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.288122276 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.086588745 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.358619937 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.457427583 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.808424605 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.290333143 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.212540452 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.988247805 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.97102608 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.277953561 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.214851649 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.275924062 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.284539824 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.289538803 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.501925421 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.809697346 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.279060444 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.99799933 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.285435513 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.289801002 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.283011128 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.279397524 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.903231794 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.455406488 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.290249005 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.29125755 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422293694 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.293620678 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.21368763 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.282435011 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.285909091 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.280460472 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.279763937 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.312522296 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.00278711 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.747370402 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.532374531 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.932529688 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.292782309 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.172664675 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.307724612 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.278954604 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.792706109 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.292933802 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.290079702 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.291152755 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.29161031 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.061816784 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.938971341 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.847313214 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.946950121 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.763116995 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.17389766 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.288635559 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.280997414 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.705117374 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.215825363 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.837629637 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.45462472 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.700609517 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.224663938 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.458989718 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.398700491 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.981313524 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.290860825 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.507192742 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.171451367 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.797922395 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.303870427 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.493134688 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.315327229 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.27984232 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.210574417 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.800569925 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.498556633 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.795856671 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.36100302 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.700518485 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.804602838 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.295240172 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.27927235 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.579433617 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440138869 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.996139091 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.453346213 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.287613803 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.043515029 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.756835998 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.284944385 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.500868901 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.858325903 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.288184472 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.466184151 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.219532885 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.292549274 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.292013131 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.281214538 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.421526197 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.288378158 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.536783233 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.288122207 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.215951094 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.284013755 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.76726973 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.139739089 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.286382899 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.280864251 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992757068 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.29236894 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538932051 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.291034275 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.897011117 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.290297054 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.215516498 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.217481459 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.977045215 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.289641964 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.257633327 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.74144382 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.373516543 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.262112775 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.298065558 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.129213576 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.539978431 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.297710048 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.815982427 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.510887335 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.042441477 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.307523665 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.38559076 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.84805119 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.282824775 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.283831387 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.521385576 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.099837802 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.50135378 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.201387298 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.190936307 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.283579146 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.49850372 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.281994907 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.078871865 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.523217595 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.999951087 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.298013656 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.949725544 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.310716542 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.062386414 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.210139346 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.38537827 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.292249175 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.362852989 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.294749775 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.294946654 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.294086651 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443400387 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.073711337 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.300692027 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.298168941 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.379718847 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.47926192 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.899888049 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.290130992 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.823587969 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.964175527 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.824631195 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.298314461 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.285685225 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.286378417 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.215670309 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429672007 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.507347972 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.557496684 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416442527 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.428152327 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.310502937 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.863556805 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.301225098 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.511164098 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.560696509 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.181582025 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.291798002 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.298102723 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.285554575 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.29543191 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.497452722 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.7568816 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.819217452 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409369522 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.288321423 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.710221408 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.563181584 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.287837756 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.287310428 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.879059547 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.294725262 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.59177578 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.293485658 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.111574785 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43417042 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.298550771 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92802284 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.297724868 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.445297408 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.059583126 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.035664678 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.545217478 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.709121102 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.301839392 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.825835935 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.932686639 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.553437134 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.354958539 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.30069737 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.403984185 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436270186 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.289599143 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.289779474 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.288821172 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.134025369 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.001241938 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.300908607 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.832743356 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.56019925 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.286923276 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.286513214 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.314635293 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.299368018 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.513016529 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964635146 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.516227566 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.298976194 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.296158317 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.106322467 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.831043835 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.303036534 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.224307759 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.284859096 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.513456535 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.527550981 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.312284983 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.743276489 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.001375011 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.827417822 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.26191302 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.313115756 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.29011853 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.939136697 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.831560315 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.919660594 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.761727482 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.851386235 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.295246812 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.565043308 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.296847177 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.297528757 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.567647134 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.294972454 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.292995854 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.302527362 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.829903513 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.000482155 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.298285962 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.046903248 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.229239936 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.635401283 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.901673473 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.230311138 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.294728964 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.463996423 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.293308654 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423469777 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.297626078 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.294848911 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.29632113 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.026161135 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.567534159 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.294927896 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.297537198 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.926262864 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.298477611 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.300036673 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.513897672 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.291214922 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.968496312 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.643162444 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.547674629 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.294205562 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.279276905 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.29757493 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.294520648 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.280226789 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.48133661 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.509560533 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.823005595 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.298135609 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.303469514 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.298273992 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.510675251 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.50497826 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.122774123 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.318026723 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.304248296 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.309943143 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.200045483 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.80278977 seconds)
  done (took 1552.099439674 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.314989759 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.312346739 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.316693276 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.347375815 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.340386085 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.345853155 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.376520747 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.336124208 seconds)
  done (took 51.918310191 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.306801698 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.514011059 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.324284115 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.293774355 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.303789721 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.300291219 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.706064594 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.296080138 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.304408101 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.304846927 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.3011223 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.298127089 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.873099664 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.304338202 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.305784674 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.282307257 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.304010461 seconds)
  done (took 64.560702841 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.295224045 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.52923111 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.367834145 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.3093348 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.023685465 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.292910381 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.604769652 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.292784188 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.303475503 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.33667056 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.943214338 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.30912419 seconds)
  done (took 82.842519651 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.301469058 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.302909785 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.301146224 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.30194661 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.302150252 seconds)
  done (took 7.741522754 seconds)
done (took 1968.540699642 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.683252498 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.931279766 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.917188749 seconds)
  done (took 5.083830867 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.446146097 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.49590311 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.615694537 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.62086802 seconds)
  done (took 7.416040371 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.575184044 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.680131907 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.475182483 seconds)
  done (took 5.966575864 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.579113267 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.302827011 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.372386308 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.29737634 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.299757985 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.299064344 seconds)
  done (took 20.13403669 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.301912308 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.305655511 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.302599944 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.305781307 seconds)
  done (took 6.45390246 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.283955068 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.019442993 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.284049908 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.292566197 seconds)
  done (took 18.11696195 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.047699924 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.062894221 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.046163002 seconds)
  done (took 7.394717767 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.302620125 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.143780567 seconds)
  done (took 9.683236864 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.614258262 seconds)
  done (took 2.851687897 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.434460008 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.568673687 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.244087472 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.205380263 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.277418669 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.762027371 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.774843088 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.39763175 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.19627106 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.256372808 seconds)
  done (took 26.35579545 seconds)
done (took 122.627063717 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.832612525 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.531789982 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.501782557 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.805558075 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.521285061 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.503210374 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.511221649 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.771491916 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.348919138 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.304952386 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.803933381 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.525172907 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.668760358 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.299735625 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.669483921 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.304244672 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.527685623 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.865803194 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.556770372 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.725622271 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.510167801 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.435091065 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.645074048 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.503751603 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.528837566 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.455350113 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.032738291 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.546795351 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.659738055 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.094272888 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.455541928 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.899030351 seconds)
  done (took 186.58473396 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.301583968 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.298101332 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.309727196 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.312205938 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.30641222 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.306261407 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.298253294 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.296870795 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.298080168 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.297916182 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.303585938 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.29928501 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.298205134 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.299606891 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.313762292 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.299673059 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.297666883 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.314618796 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.302335046 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.311742694 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.305033345 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.296006706 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.318877497 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.295216592 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.316488238 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.298851064 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.31845474 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.309467819 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.294899391 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.293635467 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.317021961 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.302228122 seconds)
  done (took 202.970335781 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.302603036 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.308326983 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.301080252 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.316271009 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.304088634 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.302731868 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.31903139 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.303771757 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.305010053 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.305096374 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.303644885 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.303388395 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.300909855 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.300864004 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.302744526 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.302652342 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.299062325 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.304389747 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.315129044 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.316019226 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.302115267 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.300136275 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.311887788 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.30087442 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.304640151 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.306722478 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.300722233 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.319960978 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.29781043 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.311484663 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.306460366 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.319417831 seconds)
  done (took 203.039869542 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.499999985 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.312109188 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.312536264 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.245118261 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.312469842 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.312726917 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.308905733 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.500055087 seconds)
  done (took 14.045242724 seconds)
done (took 607.876831998 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.509712975 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.233811427 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.502754226 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.334332584 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.041925196 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.335636011 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.334384359 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.490419385 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.21958623 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.494997195 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.495760944 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.330510416 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.640235583 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.332403637 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.570150497 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.419786398 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.150894964 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.256074012 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.632399689 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.79619585 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.57325811 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.721039046 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.491757833 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.210270367 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.641258458 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.722297825 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.9497236 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.147694168 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.332526693 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.635973292 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.856446015 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.205274867 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.38603832 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.368500971 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.423651474 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.407763863 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.193861034 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.366699521 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.51126497 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.484056708 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.805262576 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.036846628 seconds)
  done (took 88.83775186 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.301199115 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.302957687 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.299863128 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.302576473 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.300318316 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.302478889 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.303313621 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.301676169 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.302829729 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.300352696 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.301741391 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.303463604 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.300081481 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.304061764 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.299523675 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.302533196 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.303099456 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.304260608 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.301946855 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.301901491 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.302494608 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.302887419 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.302281529 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.302305734 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.304189257 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.301021582 seconds)
  done (took 35.101911369 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.315799463 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.538659348 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.708442539 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.322965969 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.31562634 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.319845536 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.385836682 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.315820936 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.316573359 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.318984701 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.464360607 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.318431176 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.347836125 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.721018237 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.319098345 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.316796187 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.314980106 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.312888975 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.546772757 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.326879436 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.385682136 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.316700653 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.386934977 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.327864169 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.320159707 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.314305679 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.322121138 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.800590055 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.318889983 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.466110375 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.013471346 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.385442946 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.753558968 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.720174587 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.018332632 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.318623712 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.317308018 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.470445056 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.320259264 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.31870706 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.386944742 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.318404832 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.719206694 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.926437435 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.334530464 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.319389094 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.822399298 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.470521445 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.537168463 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.325586889 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.736785406 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.321400832 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.320535814 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.318926393 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.536526839 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.324039537 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.317662629 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.829811569 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.320339932 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.386320318 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.318387963 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.319926771 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.555858876 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.3199882 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.545534263 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.321075086 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.327275952 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.319522775 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.721819019 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.322846659 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.948811138 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.331879997 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.317219016 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.465372522 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.545721099 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.850487591 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.323321718 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.56057232 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.765319737 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.386270022 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.322061334 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.790787179 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.38882224 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.321970538 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.320556735 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.320573627 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.317715416 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.361854361 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.386675316 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.884632779 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.938245426 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.845042554 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.391612998 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.332137688 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.32141873 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.834767834 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.334788018 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.319479752 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.720325476 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.949014262 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.33285391 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.328846781 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.930417926 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.337134838 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.38991541 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.325562656 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.729750437 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.321537227 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.365315231 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.320331629 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.329066176 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.324091244 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.391168287 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.324485986 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.322475708 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.92110154 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.488422635 seconds)
  done (took 172.718890588 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.312609354 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.310361808 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.314433285 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.31090711 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.312999914 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.3189819 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.311916585 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.313018738 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.320706623 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.313508597 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.314471109 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.314168603 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.312758949 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.315988009 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.320011113 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.321945229 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.926641252 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.315756508 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.313778229 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.310214943 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.095674138 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.316454804 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.315086368 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.309788767 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.314786056 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.318488495 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.320528237 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.313262137 seconds)
  done (took 151.461190365 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.32034821 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.844051698 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.323518897 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.441174198 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.340425161 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.321872979 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.439200081 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.375444007 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.323845424 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.319815149 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.3196081 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.601582216 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.323768594 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.792496497 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.491433456 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.44038428 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.794021756 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.325374204 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.321198195 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.322318651 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.442848875 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.329563672 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.604438964 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.845206808 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.324534219 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.845340587 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.314125425 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.324693441 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.322870481 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.846068727 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.323136653 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.605526615 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.393317372 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.378206699 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.847691478 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.794724258 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.795617727 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.454075081 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.322087892 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.321274188 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.322134373 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.312670262 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.838396759 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.31816977 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.324183717 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.830861254 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.332549645 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.325791028 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.331994849 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.322294096 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.376840062 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.380062761 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.601341174 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.835462571 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.385520742 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.344648649 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.442357627 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.692598979 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.327248432 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.796018765 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.313215531 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.847428328 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.327832636 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.313982789 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.324595351 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.329594228 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.45983858 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.444074901 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.797638495 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.325954562 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.797494507 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.459306663 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.32375526 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.324201685 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.32546745 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.842879588 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.794302116 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.46105841 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.447475482 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.498148936 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.315650544 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.324403013 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.314595577 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.397190225 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.321274707 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.843958744 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.794168364 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.327296455 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.32683807 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.326471649 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.327198099 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.483582848 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.846472854 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.391502759 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.794093344 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.6180491 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.600002207 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.323335656 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.378859732 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.326453988 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.604828566 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.324655431 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.377386637 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.756549854 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.606386313 seconds)
  done (took 156.725208051 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.548292759 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.452219146 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.409081425 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.429932063 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.828476804 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.867084781 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.439642044 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.447200084 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.427183786 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.55984274 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.418485421 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.418846476 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.496993868 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.397934371 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.007966852 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.391296678 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.412301598 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.447923749 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.430002726 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.293490661 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.922528942 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.590858864 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.485290997 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.363010893 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.412636041 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.039732699 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.850701771 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.817621892 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.484574845 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.502877528 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.815012161 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.398065935 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.232294994 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.948512165 seconds)
  done (took 63.245540374 seconds)
done (took 669.331026953 seconds)
SAVING RESULT...
DONE!
