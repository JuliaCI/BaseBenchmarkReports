cset: moving following pidspec: 8383
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.38300366 seconds)
loading group "string"... done (took 0.505648414 seconds)
loading group "linalg"... done (took 8.519812217 seconds)
loading group "parallel"... done (took 0.172005007 seconds)
loading group "find"... done (took 1.285990837 seconds)
loading group "tuple"... done (took 1.982275718 seconds)
loading group "dates"... done (took 1.318616669 seconds)
loading group "micro"... done (took 0.210796836 seconds)
loading group "io"... done (took 0.578091303 seconds)
loading group "scalar"... done (took 40.811311449 seconds)
loading group "sparse"... done (took 12.8938065 seconds)
loading group "broadcast"... done (took 1.030126969 seconds)
loading group "union"... done (took 14.022202357 seconds)
loading group "simd"... done (took 4.880369321 seconds)
loading group "random"... done (took 9.746567905 seconds)
loading group "problem"... done (took 2.061821879 seconds)
loading group "array"... done (took 23.343335504 seconds)
loading group "misc"... done (took 1.073909376 seconds)
loading group "sort"... done (took 3.518391832 seconds)
loading group "collection"... done (took 20.9505412 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.579802105 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.134010644 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.145981629 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.17200511 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.205479108 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.137001062 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.154834475 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.459108467 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.058335361 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.213920349 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.140972121 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.521964662 seconds)
done (took 5.669737674 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.223428095 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.072533288 seconds)
    (2/2) benchmarking "String"...
    done (took 0.125872819 seconds)
  done (took 0.891250429 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.073651226 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.172896114 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.091748538 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.107896372 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.108471364 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.091312551 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.108366825 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.108186601 seconds)
  done (took 1.48473214 seconds)
done (took 3.375623437 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.77982171 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.820473879 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.548304026 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.124216238 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.15409443 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.128462952 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.308027631 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.161371904 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.107720921 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.112462722 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.174639885 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.413696117 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.479511699 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.001613109 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.106040467 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.127547348 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.078965492 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.713744615 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.077954428 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.130186992 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.49316747 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.107386619 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.114048567 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.12286153 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.204973355 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.113320427 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.179542247 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.106321451 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.731597931 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.100032608 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.182145907 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.095466873 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.15682318 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.224529093 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.075876255 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.105652262 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.7286258 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.187004353 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.108812678 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.09103739 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.697839984 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.07585615 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.191899159 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.105267776 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.107572532 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.188098963 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.114110251 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.075151835 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.097587872 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.084853849 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.177779337 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.447743698 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.103919607 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.140592562 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.093327457 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.715355719 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.09203726 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.154237175 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.123921341 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.107048939 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.095422751 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.089803768 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.179513509 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.103679463 seconds)
  done (took 19.878525301 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.116730143 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.138048221 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.091501163 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136522061 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.137183222 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.094090722 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.081297073 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.091173881 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.107558566 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.179429085 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.134162703 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.142090662 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.072592295 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.093844616 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.113944648 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.231451774 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.117379748 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.117592302 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.078582519 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103598106 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120522386 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.110050888 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.105418476 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091915916 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167028239 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.20222893 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.119389836 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.119938432 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.076724226 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112286841 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.139702623 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.158139983 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.073955473 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.091245111 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.176840926 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.103617811 seconds)
  done (took 5.057684307 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.193169732 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.117435709 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.18261046 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.171868567 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.148936937 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.160568684 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115227271 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.260981159 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.172685076 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.178430698 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126043567 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.096409655 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09175375 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.078763047 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.090919747 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.761536348 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.123623957 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.165795447 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.121888872 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101415532 seconds)
    (21/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.160056269 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.07907239 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100899245 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.095372283 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08338473 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.12849804 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.307526778 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.18372471 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082007396 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.217104788 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.097432512 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.106694868 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128365125 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.192865609 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.125004083 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.114164261 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099615402 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078300295 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.212112256 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087451012 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.092424799 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.102361107 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131770431 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.135245884 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.095050731 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.08747152 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.241748302 seconds)
    (48/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.079261689 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.076996395 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113521901 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.013265092 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.196230218 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.092100487 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.09318651 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.336768035 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.112838765 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.081649025 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.094906631 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.277443688 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.131056554 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.077530431 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.074765495 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099337655 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.075971509 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.401386525 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084708217 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.966893766 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.095365839 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.151645239 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095223925 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084531364 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099697612 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083031942 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.113868993 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.078955056 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.094655096 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078073779 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.093721669 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.076971375 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.097375228 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.096140999 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.098277524 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.076404564 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.159756586 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.081747664 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.113918947 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.113452179 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106414371 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.097354419 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.074695111 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128424613 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094849352 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080598604 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.136225512 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100225053 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.094896121 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097268398 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.140269152 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.093051442 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.161597848 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.093614312 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.121052038 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.081423968 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12537168 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.115594063 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07712063 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098030448 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.074653426 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.094459857 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.144676639 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.091278204 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.077338106 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.096879343 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.089042361 seconds)
  done (took 23.115860798 seconds)
done (took 48.747950654 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.416489435 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.106922652 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.10798521 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.106895961 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.106466937 seconds)
  done (took 1.616750827 seconds)
done (took 2.365667657 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.317539521 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.193975342 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08446034 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.186644327 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084738128 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.175186783 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.176515448 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.096985885 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.203652615 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.080070362 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.164302022 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.097612651 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.100922131 seconds)
  done (took 2.738636617 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088761803 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114093998 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.079447671 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.089158734 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.09098397 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088290975 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.105052617 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115315525 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103905565 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082017564 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088991617 seconds)
  done (took 1.790082143 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087604723 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111528471 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.078815815 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087442118 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.091380788 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08743066 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.105717179 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098985471 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.106052784 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082798182 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091314857 seconds)
  done (took 1.773974376 seconds)
done (took 7.042654318 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.121468454 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.792929209 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.120214056 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.167601931 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.328096473 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.194185147 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.627846528 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.130563767 seconds)
  done (took 16.422475262 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.123200487 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.095004434 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.078375768 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.094981413 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.078812143 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.096779644 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.075771535 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.094806805 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.075073698 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.092596258 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.077691076 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.093852575 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.075507915 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.091875046 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.075173652 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.079135876 seconds)
  done (took 2.207821509 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.111405063 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.11037484 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.099074772 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.08421944 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.098489334 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.079966643 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.100470255 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.097958792 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.079355958 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.096000079 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.085070742 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.100719932 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.083105187 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.095556527 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.082723084 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.101401455 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.078204666 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.098391997 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.099092375 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.083068753 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.10106726 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.081050557 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.099133057 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.083548822 seconds)
  done (took 3.084209488 seconds)
done (took 22.460411994 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.162173027 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079997955 seconds)
  done (took 0.993244269 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.097050943 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114783762 seconds)
  done (took 0.970100448 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.103731389 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.093758813 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.131450593 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.09401598 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.094885776 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.076814857 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.126266936 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.09466953 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.077480558 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.094540015 seconds)
  done (took 1.745680364 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081371683 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096750097 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.085528763 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.114968861 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.088049309 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096176886 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.081746566 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.097531957 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.082253065 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.093139209 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.100501482 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.09694755 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.100555361 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.11491914 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.082791469 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.100491249 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.086723286 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098421365 seconds)
  done (took 2.457889564 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.077276473 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.078593836 seconds)
  done (took 0.91538054 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080720584 seconds)
    (2/7) benchmarking "second"...
    done (took 0.09220602 seconds)
    (3/7) benchmarking "month"...
    done (took 0.079522965 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096632273 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.075659024 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.092067381 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.075392904 seconds)
  done (took 1.352614693 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.465857173 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.178784184 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.317341112 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.110829387 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.129560674 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.338953769 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.130752908 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.108608959 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.109249997 seconds)
  done (took 2.689723458 seconds)
done (took 11.882417324 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.087752098 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.129631382 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.472965776 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.112342912 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.074727423 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.153554144 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.255449753 seconds)
done (took 2.047111766 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.334701837 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.118880579 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084109188 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.075691128 seconds)
  done (took 1.372846672 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.076166379 seconds)
    (2/2) benchmarking "read"...
    done (took 0.08185381 seconds)
  done (took 0.922359646 seconds)
done (took 3.060989753 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099284337 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.136534765 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.092185858 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.089738507 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.103237135 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.070388305 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.088808558 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.070065191 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.089939709 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.084375879 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.090198117 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.072613724 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.101670564 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072906504 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102670663 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070144417 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091179908 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.203399995 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.089544468 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070498729 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102249947 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101595805 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.071183236 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.101477531 seconds)
  done (took 3.063707629 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.09996235 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.092929987 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.080185979 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.098611188 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.079018071 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.097427307 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.080670583 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.092257582 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.096725869 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.0768797 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095538488 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.079919042 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.093802958 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.078625563 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094176053 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.078613727 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.097732961 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075450922 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094420689 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.079017353 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.098180576 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075463187 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.096514322 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080900592 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.095263483 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.079348875 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.094213615 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.075567209 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097319128 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.096022021 seconds)
  done (took 3.415982373 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.080753025 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.071962524 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.090748153 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.083396753 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.089576164 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.077138874 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.08994606 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.072919563 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.093841803 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.072935925 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.07713259 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.090910241 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.072601651 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.094456538 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.076603673 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.097476945 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.089962983 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.090443503 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.072973114 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.077319296 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.096355652 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.072445821 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.093628113 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.072775415 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.090089254 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.073078858 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.073635186 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.089682024 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.072844709 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089967255 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.078494648 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.096937174 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.072700013 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.102362504 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.080144102 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.072600946 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.097751653 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.071800398 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.095057505 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.073892292 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.090998396 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.073447342 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.091234443 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.084669884 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.076434455 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.092589927 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.073509069 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.095616294 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.076467522 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.096926458 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.072987012 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.090080835 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079226038 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.078295643 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.096159147 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.072286879 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090965976 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.071948521 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095094579 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.072640617 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.071979511 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.089939731 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.078931537 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.091054439 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.095814707 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.101329393 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.072226347 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.095793962 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.076298941 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.098380111 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.078106128 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108854702 seconds)
  done (took 6.828346831 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.076996511 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100727885 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.075098959 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.074826457 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088330882 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072962314 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097472086 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073653155 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092551246 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.090677578 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090772277 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074129861 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09236622 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077152217 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090924157 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.074455566 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.099973521 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071364133 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.090470521 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.077196797 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073776956 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.096081128 seconds)
  done (took 2.625327643 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.217084388 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101667335 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.136293191 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.0927419 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.111018364 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.109439675 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.080449823 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099323765 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080470452 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101168377 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101203333 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080023228 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110965823 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100814781 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083611763 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102805619 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08096557 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102323634 seconds)
  done (took 2.669592792 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.089085218 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.094480423 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.099771177 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093670352 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.076365314 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.096690881 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082947719 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109740631 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.079344848 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.09380293 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.0863886 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096110189 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.078623277 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093991117 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078879011 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.093886196 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.078802825 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094497236 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086704026 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099581635 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.101226269 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.086618294 seconds)
  done (took 2.767918375 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093380893 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095799654 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.098215216 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.09858087 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.074436847 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.096102003 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.08383676 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.094306646 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.087931381 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.09605683 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07742906 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.095219844 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.085007054 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.0942958 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.082817973 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094197517 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078496946 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.094893287 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078399091 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.094113104 seconds)
  done (took 2.57411187 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116948725 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.108296979 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090420753 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120388239 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108967983 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094217388 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119630372 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.090182432 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109215951 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.120846713 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.090986392 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109441853 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101669397 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115697013 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107957736 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102286549 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120079824 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120063692 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.090630223 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109081773 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104767733 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108730635 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119961207 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090753646 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.108894798 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091001261 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107859738 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097371885 seconds)
  done (took 3.755356402 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075352302 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075602226 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.09197112 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.073145627 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.091446946 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.073136431 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.072446655 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.091744329 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07535248 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090786292 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.075599465 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.092870109 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075256863 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.07510663 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.093129552 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.07480562 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092785971 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.073170863 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073142195 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090090727 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.075470748 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093320668 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.075257156 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090671863 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073296759 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.075822978 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091448364 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073064393 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093659213 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07348389 seconds)
  done (took 3.226537934 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.083952399 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105489098 seconds)
  done (took 0.974797525 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.074359646 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110243274 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.073473745 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.079843628 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.100095441 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.077073903 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.103759942 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099559431 seconds)
  done (took 1.501787651 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.100206559 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.114610038 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082122264 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.106698124 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.095764268 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.113553729 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.158222665 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.082631605 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.102879327 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.077347191 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.113539209 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.07675959 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.102734613 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082276288 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.103106394 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091611269 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.095151937 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.086689875 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.102036145 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.079369031 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100535568 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093223311 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105270122 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.083650726 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.097599323 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.08884985 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.108777067 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.106038714 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.080995812 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107319231 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.083498006 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.088152149 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081469184 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100757268 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.077778842 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.112648775 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09388922 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.100610639 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.086203654 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101431199 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085823133 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094180664 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087933139 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.102715811 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089942486 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.100428307 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.082726295 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094541612 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.078128432 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.098312396 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.075624915 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099047149 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.071179262 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104540381 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.086828315 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113684596 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.079430749 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.099928701 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.08191906 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.098348771 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.08425479 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.099381459 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087656097 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.098563112 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086881013 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.105353031 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084504595 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.094021329 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.07068801 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.095933756 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.087198037 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.120075181 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.088458479 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.101185524 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082924728 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.096196224 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.082109555 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101454569 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.084060877 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.106431285 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.081626459 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102606466 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.086693589 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098641703 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.080774005 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.101879984 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.079228345 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.097809271 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.077675758 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115775904 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.079198097 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.095811828 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.078728953 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.106505298 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.081281522 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.098748613 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.077788232 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104686907 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.071365833 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.101373217 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083486486 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103765126 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.089487606 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101342304 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08266393 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.104133819 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088127331 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101609893 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.080970437 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.091671987 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083032218 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.098317388 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.086056433 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.089110052 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081989603 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.100338123 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.082299971 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.106156323 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.078370029 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.100366387 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088091616 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106605995 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.079647829 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.091562887 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.081865281 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.100046704 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086764611 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.10750437 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.079744112 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.094143616 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.075770226 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.10490564 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.081594072 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.102624753 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.082365441 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.101255766 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.071229941 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.095982255 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.081687547 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.107505677 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.081304351 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.102668475 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.087286905 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.102629355 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.07985542 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.106472466 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.079695722 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.095736286 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.087535796 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.100048218 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.075525044 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105353824 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.080627707 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098214606 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.082097139 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105572059 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.082231665 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.101688275 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.079441772 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.100588107 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084077657 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.095914662 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082869032 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.07953702 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.107729287 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.099536766 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.075823445 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.074835592 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.101779674 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.078702881 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.099339557 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.078016874 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.101135967 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.082774067 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.096729222 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.081283989 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.099860558 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.092750467 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.109258984 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083640908 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.103370917 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.088558516 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.100873005 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.084630125 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099461701 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084436286 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101734456 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.0866979 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.102723859 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083852071 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.100406007 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.073701929 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.102423613 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087615508 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.096460666 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.077691909 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.09576515 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.082017892 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.108212834 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.081149881 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101592995 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079819717 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103592034 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087950213 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.100407781 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.082017604 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.096489025 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.081530572 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.086741521 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.101619343 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084284543 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.107446857 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.101877598 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.076044712 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105799968 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079556335 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.104462247 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.076244972 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.078672511 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.096581875 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.082878492 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.101725772 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.080901535 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.089847448 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087346439 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106533523 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.082166543 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.096406442 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.081755879 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110742667 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.081049243 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103764381 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.082460927 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.104010362 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095565426 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.096589287 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.082435152 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.108547763 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.082384191 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.089481604 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.084440635 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.098451716 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.076493682 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.098618679 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.07959881 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.11003417 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084703055 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.101869474 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.071788132 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.100909009 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.080068369 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.078531304 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.095283974 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.105919847 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.083075422 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.10125018 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09104334 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102593622 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.083768438 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.102258829 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.082092974 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.102149263 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.083424847 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.101359831 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083399144 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.099655361 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.078316405 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.101115268 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.077455883 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.077645278 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.099763466 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.082888973 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.102331778 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.083985966 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.100049444 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086578776 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.101508898 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.083205731 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.119242294 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.097838499 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.078589159 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102501887 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084031383 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.10012826 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.08161465 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.094684999 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086847926 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.100572855 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088110583 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.099932907 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.073732383 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.101126087 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.081750154 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.102301421 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.08382206 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102282112 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.080497923 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.081252988 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.100874612 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109602599 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.079050324 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.107814133 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.084329683 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103243563 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.08231791 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.102667305 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.080416961 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.096225658 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.082679674 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.102650412 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.083232997 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.099421304 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.084510974 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.101068614 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.081540258 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080376958 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.10210956 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082862789 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.103132955 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.071538764 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.096566474 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.077947589 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.100767979 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.085439508 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102035539 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.080875244 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.0994187 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084639164 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.099126782 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.074858366 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.104800511 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084268409 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.102006258 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091933547 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.097409517 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.08207488 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112272091 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.071759627 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.098639523 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.078034491 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.097662888 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087809439 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102017219 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.088581703 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.102553055 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.07904117 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.073953946 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.102916975 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.080179787 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.091290821 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.078051418 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10537666 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.08004433 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.0996912 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.083761926 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.10483394 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084425001 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106175588 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.081596053 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.101553328 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.082585127 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.093933499 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.079097696 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.097765915 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.083067101 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102978402 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.079743892 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.075271607 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101348615 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.084199158 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.102966389 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.081415932 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.101058734 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089076804 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101390208 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.082761534 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107858258 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.072548513 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.102639726 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.08142711 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.102318515 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.078496157 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.103329306 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.084772262 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104146724 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.088187002 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.102076619 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085973068 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102096674 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.079813206 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.10168966 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.08296341 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101857957 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.078751712 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103373488 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089429473 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.098194503 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.083940478 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102375429 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.080169081 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.083990776 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103567797 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.102186567 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085979642 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.083217237 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.103530511 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.086448045 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.102154904 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.084953415 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104668167 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.081605879 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106684476 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.079903174 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.109481382 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.084492213 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103497481 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.082638598 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.099408702 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082025021 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101357708 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081317816 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.108033584 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.084630825 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.09839076 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.079030655 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099144399 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.082724742 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108354126 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089501885 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.103188371 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085284434 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.096429359 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.076165556 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103645447 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.080442104 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.101128535 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.086159079 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106378637 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.083340283 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.100369569 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.081732787 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.107635712 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088130055 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.104795216 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.080267852 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.104216325 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.084095191 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.102673067 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.080911035 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.101372512 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085124976 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.10440748 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.082497295 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.098875363 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091927651 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.1075415 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085622533 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.100589562 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.085661845 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.101888414 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.077062761 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.104397777 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.083131188 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.105404776 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.08367422 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102427414 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093493611 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.098056526 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.082346008 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108449773 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082745117 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.108393608 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078602883 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.103367494 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085839295 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104714861 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.077375041 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.097841088 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.080143955 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.10270634 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.079866141 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.0773878 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112746254 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.10783669 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.08441309 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100971901 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081725081 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.076902161 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.096864801 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.079725911 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104802273 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.082379264 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.110505232 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.079408554 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.099233201 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.077470758 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102258319 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085047663 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.104944597 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.076294817 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097081061 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.080248968 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.103979474 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.091485213 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10131875 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.083493284 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103334764 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.083372372 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.099245727 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090050944 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.095212624 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.084362988 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114112005 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.084878093 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106482818 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.086663452 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109901959 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.085091786 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097204896 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.085411401 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.103919906 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.085189051 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.105207521 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.087616623 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118828807 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08482872 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.099314936 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082424518 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.103011694 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.079902027 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.11029354 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085649526 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.104711553 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.085998505 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.102181365 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08603764 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110181242 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085488613 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.104197034 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.083591907 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101507265 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083322233 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101087605 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081961862 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104760901 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.086084097 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103048863 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.086423482 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.099269192 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09350352 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.110287142 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.086278008 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.095456459 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.07975718 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.100079518 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.07785774 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104562138 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.077906063 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.080923735 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100846164 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.08154684 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.105663987 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.086983217 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.103657152 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085239988 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.1024485 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.073304206 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.107213806 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.084770379 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105775815 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.076115173 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.102972934 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.085681958 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.107482229 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089114893 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.101380458 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.084327012 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.102180528 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086903476 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097354061 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.087748011 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101046538 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.082461204 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.099877103 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084374712 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.085909371 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.104727991 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084913632 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105786596 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.083655749 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.107506572 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10633039 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.077091635 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.076346322 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.105737928 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.080913757 seconds)
  done (took 55.899292542 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.143758173 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084727543 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074564094 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094906276 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120098581 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079072287 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093982335 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.079265899 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.098658709 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.088597362 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.093854204 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074849265 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116916375 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12243886 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119465349 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.08948137 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094651418 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.079420673 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094767605 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079533657 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115661828 seconds)
  done (took 2.873706737 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.100248832 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.11310304 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.111164798 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097269178 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105537877 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.112863121 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.091642687 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113326482 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.117147453 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087663064 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117394943 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113312624 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.087010883 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.106494202 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106761804 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090657316 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.117268612 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084936553 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.113814423 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.11116246 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089436048 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.111400995 seconds)
  done (took 3.131882428 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.088282925 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.082810705 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.108046931 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.074030016 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.103346158 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.074518186 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.108826596 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.077157957 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.107610859 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.084486555 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.100722235 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.083554993 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.10752903 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.073841682 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.081338215 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.096979077 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.087202845 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.103102614 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.08439537 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.097246035 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.123019863 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.077971201 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.077345711 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.100754897 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.091807725 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104771483 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.083424683 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102340687 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.08082484 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102787431 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.076728094 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105563124 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.087543754 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.100267643 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.080658767 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.103630698 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.084128267 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.077122937 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099605235 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.086623716 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.098269513 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084250901 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.111069882 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.079834 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.096662505 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085416595 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102431892 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.074717117 seconds)
  done (took 5.242466206 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.114986725 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.151758794 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.08139414 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.142813132 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.118395042 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.09217708 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.104014267 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141386626 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.077216544 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.103297294 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.120842961 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.096656429 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104610794 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088785595 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.106958851 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103782967 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085557209 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.09837923 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.088354912 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.10245331 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.087985157 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.105760268 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.117971985 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.094537836 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107194188 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.081738964 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.100284362 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108182282 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.094870009 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.10899397 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109622969 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090926084 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.118331404 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.081643828 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101555038 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.085283385 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.120579427 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103881835 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08597093 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.097512849 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.085538355 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108743124 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.086374225 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.120982368 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104301074 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.084881153 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103395667 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.076850338 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.115553519 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.106873224 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.093434636 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.117028745 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108633216 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.084020023 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109434426 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.11779378 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.083552244 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101320097 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087557533 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.11434081 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.077253041 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108061052 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.116427044 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.086324921 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.112979723 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.116692191 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.085750671 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108023525 seconds)
  done (took 7.931771484 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111357131 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.108907324 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100670426 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12166869 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10897204 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.088437075 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108288383 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.108288972 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.089644249 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117146915 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.088880123 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.15821738 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.105928394 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094754517 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.109125885 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108918132 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.088968849 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108861127 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.089533051 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108233056 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.088978592 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121232091 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108997159 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.11972122 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.102176203 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105432663 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089115381 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.109462702 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121338428 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.088985607 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122607419 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.109078079 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.089357701 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121129743 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.122212601 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.089249521 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102797471 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.088989873 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.109107965 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.108745805 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.086290118 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120239209 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.089036011 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105893732 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088446968 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.109318257 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120862511 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.121706196 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095411287 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116479663 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.108382541 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.099697117 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109445336 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.088502852 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120614427 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.129267481 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120647858 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120305126 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.088637024 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.121517076 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121045239 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.13028552 seconds)
  done (took 7.500350689 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079891965 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.079420888 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098374581 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.077901292 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.100347825 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077779563 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079421841 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.100390752 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082381209 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099763651 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080618612 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097239626 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077592829 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079638324 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097915642 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077049588 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098268675 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.078143375 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079471084 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098146088 seconds)
  done (took 2.586388115 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.088699016 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.121355749 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.081342322 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109620563 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.082881667 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.109179122 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.082660185 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103659474 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081034624 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103614333 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092384519 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.11403377 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100658397 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.088306034 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.114457916 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108091678 seconds)
  done (took 2.432109855 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.100587192 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.122053836 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.126819274 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085272928 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.099615516 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.088411124 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.103377672 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.076238686 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.076324697 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.110350467 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.086121761 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.107724487 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.082788155 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.099504658 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.080342416 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.107545684 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.076122687 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.105302057 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.083348386 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.125183032 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.085042871 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104314989 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.083765878 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.103077359 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104326202 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.086937444 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107789979 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.079191071 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.099608973 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.083879475 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.10458363 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.089324594 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.09731379 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.085499457 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.09929904 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.078512041 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.082752379 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.105216623 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.10634812 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.083311728 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.078421526 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104728592 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.083420746 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.103650921 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.076440518 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.10444386 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.077070343 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.106897096 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.082021177 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103288108 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.083131061 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.109317035 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.088105579 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.112962902 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089511158 seconds)
  done (took 6.065414357 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095627321 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105391218 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085497008 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.098358727 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084311409 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109558603 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.084755758 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.104758622 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082432402 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.098019135 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.083908158 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.105165102 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083280802 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104700311 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083647259 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105310086 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077155681 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.082123275 seconds)
  done (took 2.530884222 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.086169448 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079719505 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.108407367 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080457315 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.101361307 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082798206 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097165223 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.078859474 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099635612 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.080694518 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100499697 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.083189284 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099712489 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.08366437 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07960182 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101770005 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.082151111 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098940786 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.081107408 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097486314 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082726773 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09952358 seconds)
  done (took 2.844281616 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.099241393 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.133532335 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.094426822 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.143590687 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.106470212 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.084392788 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.114997484 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.084651393 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.124236395 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.08360923 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.104614772 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.084339536 seconds)
  done (took 2.11457287 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105520473 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138338284 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.081605144 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104458516 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094876143 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107430044 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105751418 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086391693 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120149341 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11970449 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085891584 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121545271 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120022527 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097921843 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115814279 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115793166 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086170209 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106893912 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081611012 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129138015 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106637768 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1211813 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086484371 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106304996 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086690438 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118205379 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120926693 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120448403 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085955332 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120917768 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116121917 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086130598 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120251729 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119560535 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084540839 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120700855 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086200853 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129303926 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116059446 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119596061 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.083531431 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11606049 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120555931 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092967609 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120685007 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106847249 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09428375 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106618214 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085719033 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135392053 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115751019 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117229148 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094304199 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121188092 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120066436 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134958242 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120511071 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118085247 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094751614 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121014953 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117275387 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095277752 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118586777 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120198392 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114847539 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097652398 seconds)
  done (took 8.044689179 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120857189 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105098047 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085555766 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120847137 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119168639 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106670608 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08720544 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107451041 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086523144 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103736005 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153127218 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086277753 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117973524 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11896326 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086196981 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107495318 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085532001 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118829534 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103994017 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13638819 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086674576 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118883496 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120419333 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118965429 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099655803 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115894133 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107304749 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086901077 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107530684 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085988841 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113726341 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085268018 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119767458 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103023724 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097490481 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107690621 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1062834 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093985495 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107370297 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095014518 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119311212 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129895811 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106824216 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085909808 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121502313 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106945088 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086656753 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10394031 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087173216 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103245244 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121648369 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100364055 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12099768 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118988153 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085934877 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108361733 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10728551 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086352765 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10773822 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095002336 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119163195 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107185369 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136089364 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08704179 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10697654 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119147166 seconds)
  done (took 7.883833903 seconds)
done (took 151.249783943 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.099997517 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.137902484 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.094943914 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.166535426 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.080916596 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.137746417 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.114959173 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.118425177 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.081594054 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.102136957 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.081886701 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.104960979 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.147421108 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.080469667 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.103408309 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.084324348 seconds)
  done (took 2.601102334 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.178410906 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.286391192 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101258165 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.109098926 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.087250733 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.10653864 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.086751013 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.110379169 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.083120982 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.114838468 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.083901349 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.106491438 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.093021492 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.105456041 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.082132407 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.106304161 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.114293491 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.086807486 seconds)
  done (took 2.915376641 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113207284 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.147754163 seconds)
  done (took 1.131689158 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.116978734 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.182576482 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.295083769 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.396753899 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.110381377 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.126041516 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157951446 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.100945402 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.222868741 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.105053559 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.127241718 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.109175889 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.112141987 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.11459302 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.112567583 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.087927439 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.137056376 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.089898351 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.111456456 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.088448689 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.134763807 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.109720623 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.094067502 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.110894022 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.184726019 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.123827372 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.088086252 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.109867387 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.089042414 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.110789496 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.093763841 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.12434629 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.12446481 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.167149333 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.114678979 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.161985323 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.116775294 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.087666354 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.110791474 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.087709874 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.11304635 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.111877272 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.103186543 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.109219982 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.088575444 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.116312468 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.089076654 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.110438113 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.116153175 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.096743947 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.117023105 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.093728054 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.18386527 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.096206006 seconds)
  done (took 7.662305645 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.788253204 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.149697506 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.087022771 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.892189036 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.140037935 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10223588 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.789970787 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.130504583 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.236174119 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.785416863 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.126260589 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121928552 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.207438476 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.271522077 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.119383803 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.334006184 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.694077396 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101018656 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.138182699 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.14982985 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.093580039 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138282492 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.128293755 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.456478779 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.087783428 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108602588 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.092816863 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.123141925 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159141747 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.109004891 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.091811232 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.202556662 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.265274974 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.181835844 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110814661 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.085095048 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108204073 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.168548418 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268817583 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.195816834 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.174353483 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105053505 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.085869586 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122083392 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.129764404 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.083522151 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162283261 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.194895997 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.174850405 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090967577 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.122622391 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.118290225 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.099264063 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.181630598 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.085117899 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.338069922 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.341213365 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086121214 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116260376 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105441424 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266855472 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.109007192 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.204757097 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.136931495 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214801178 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.086511805 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.787762378 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.166218183 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.085350351 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119519011 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.116532879 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093976903 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121620422 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.16891128 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.390673675 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124466948 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092353842 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108110266 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.208768431 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086045751 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109182856 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162656383 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.110078551 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.096358394 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125463534 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123352273 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.172028895 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.25105 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124463267 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.095157824 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115025365 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.122561748 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.088843887 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.21055224 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.221153862 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.157787416 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.211286753 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122251187 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.164499994 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.18786009 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098060877 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.170049835 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.117450903 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127584763 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099308256 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216592078 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.141330514 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.109979174 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093182465 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117190827 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.144271378 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.089836284 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.116865177 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.169703015 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.482653391 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.164134576 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.105657424 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.09000716 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117950895 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161640132 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116703535 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.241638866 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119769575 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.167827016 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117633191 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.083805754 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.117838003 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.165681932 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124210841 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.095808106 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123079803 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11858584 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.249974175 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.227311044 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.102750067 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242240687 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.178881984 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.097529106 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.196320891 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.096107817 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189881932 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098308019 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121169083 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.088786919 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.776627202 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122117404 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.095007132 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115373761 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.1938208 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086644355 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.110129647 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.087258675 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105271481 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.777387603 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.111082861 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.084911032 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.086901788 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119885621 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.11758657 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.093481745 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115642504 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162375799 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.236171756 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12230677 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.094836782 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.109075106 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.159977431 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.087917151 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.10951837 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.087028531 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.10947887 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.097367934 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.11431586 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.088972255 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.193887342 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.15887777 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.223339802 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.557522573 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.10842477 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.086871593 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.233174902 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086190239 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.306596646 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11742177 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.204425005 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.189101903 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.084687266 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.340546824 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.169175095 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.194674139 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.089341852 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.195223736 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.084541126 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.116137318 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.162590831 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.086009535 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118281532 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.15812252 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.12781984 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.124097077 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.143008246 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.109528257 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.227017439 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.082808967 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.192617512 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.088568814 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122350617 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.308872497 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086703322 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.1295789 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.162461651 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113696192 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.087490338 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.699702574 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.109858648 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.096418663 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119503227 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.2268682 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.165980201 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117380338 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.094442535 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12294486 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.16354291 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.232126799 seconds)
  done (took 43.719977598 seconds)
done (took 58.897190365 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.307297736 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.259208174 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.290556506 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.191022064 seconds)
  done (took 2.017802614 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.175197583 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.148758196 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121248685 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.106648284 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149655383 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.08372849 seconds)
  done (took 1.680478596 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.431259627 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.383386631 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.307880075 seconds)
  done (took 2.022863613 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.247456305 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.27202934 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.320732505 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.425692812 seconds)
  done (took 2.26801005 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.20321414 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.097944893 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.120273861 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.136009354 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.166514182 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.171013521 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.139271011 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.147692903 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.103566753 seconds)
  done (took 2.233719282 seconds)
done (took 11.121564148 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.277527208 seconds)
    (2/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.210217872 seconds)
    (3/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.150216738 seconds)
    (4/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.256310052 seconds)
    (5/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.105524922 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.128158997 seconds)
    (7/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.238861831 seconds)
    (8/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.18661094 seconds)
    (9/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.099276358 seconds)
    (10/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.211255184 seconds)
    (11/286) benchmarking ("sort", Float32, false)...
    done (took 0.172458636 seconds)
    (12/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.194018136 seconds)
    (13/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.201313759 seconds)
    (14/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.113587112 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.091774919 seconds)
    (16/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.12401449 seconds)
    (17/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.115467886 seconds)
    (18/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.229708609 seconds)
    (19/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.115750459 seconds)
    (20/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.182109055 seconds)
    (21/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.091305284 seconds)
    (22/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.140961082 seconds)
    (23/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.116638182 seconds)
    (24/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.089496537 seconds)
    (25/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.178781569 seconds)
    (26/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.210783149 seconds)
    (27/286) benchmarking ("sort", Float64, false)...
    done (took 0.170334148 seconds)
    (28/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.255987319 seconds)
    (29/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.209034235 seconds)
    (30/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.094884816 seconds)
    (31/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.118471852 seconds)
    (32/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.153874826 seconds)
    (33/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.195258342 seconds)
    (34/286) benchmarking ("sort", Int64, true)...
    done (took 0.219090862 seconds)
    (35/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.219474506 seconds)
    (36/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.114272683 seconds)
    (37/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.108788099 seconds)
    (38/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.1194062 seconds)
    (39/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.12530912 seconds)
    (40/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.115157214 seconds)
    (41/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.148798538 seconds)
    (42/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.096529442 seconds)
    (43/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.194528579 seconds)
    (44/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.124588066 seconds)
    (45/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.108085317 seconds)
    (46/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.125881535 seconds)
    (47/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.140518958 seconds)
    (48/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.072985481 seconds)
    (49/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.114237295 seconds)
    (50/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.104132852 seconds)
    (51/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.118668439 seconds)
    (52/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.19343984 seconds)
    (53/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.095765496 seconds)
    (54/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.097610999 seconds)
    (55/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.088577265 seconds)
    (56/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.114637382 seconds)
    (57/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.123190213 seconds)
    (58/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.111789598 seconds)
    (59/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.08859373 seconds)
    (60/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.162695474 seconds)
    (61/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.110018429 seconds)
    (62/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.08982112 seconds)
    (63/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.113985023 seconds)
    (64/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.09100003 seconds)
    (65/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.111087484 seconds)
    (66/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.1298393 seconds)
    (67/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.114955923 seconds)
    (68/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.101614125 seconds)
    (69/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.141963745 seconds)
    (70/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.188856593 seconds)
    (71/286) benchmarking ("sort", BigInt, false)...
    done (took 0.228698829 seconds)
    (72/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.123728329 seconds)
    (73/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.160446737 seconds)
    (74/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.181795382 seconds)
    (75/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.114268428 seconds)
    (76/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.187374864 seconds)
    (77/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.092182279 seconds)
    (78/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.105253202 seconds)
    (79/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.100342579 seconds)
    (80/286) benchmarking ("sort", Int64, false)...
    done (took 0.108327886 seconds)
    (81/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.075537251 seconds)
    (82/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.186196036 seconds)
    (83/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.083312111 seconds)
    (84/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.217217658 seconds)
    (85/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.115128839 seconds)
    (86/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.096382647 seconds)
    (87/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.181291647 seconds)
    (88/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.094010259 seconds)
    (89/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.155053219 seconds)
    (90/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.201224315 seconds)
    (91/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.084161253 seconds)
    (92/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.12307677 seconds)
    (93/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.121608022 seconds)
    (94/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.139835944 seconds)
    (95/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.119793409 seconds)
    (96/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.220581992 seconds)
    (97/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.101759916 seconds)
    (98/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.097328455 seconds)
    (99/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.170087279 seconds)
    (100/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.121458891 seconds)
    (101/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.118931337 seconds)
    (102/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.076537757 seconds)
    (103/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.181841725 seconds)
    (104/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.098941748 seconds)
    (105/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.122433772 seconds)
    (106/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.132420381 seconds)
    (107/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.144017302 seconds)
    (108/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.178989291 seconds)
    (109/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.074376077 seconds)
    (110/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.123350305 seconds)
    (111/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.095180663 seconds)
    (112/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.180752521 seconds)
    (113/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.107464232 seconds)
    (114/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.076196142 seconds)
    (115/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.123090091 seconds)
    (116/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.166876716 seconds)
    (117/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.149603348 seconds)
    (118/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.189088563 seconds)
    (119/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.075708577 seconds)
    (120/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.121085158 seconds)
    (121/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.087598565 seconds)
    (122/286) benchmarking ("sort", Bool, false)...
    done (took 0.181219609 seconds)
    (123/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.119824861 seconds)
    (124/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.095154055 seconds)
    (125/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.156922683 seconds)
    (126/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.07280833 seconds)
    (127/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.137100136 seconds)
    (128/286) benchmarking ("sort", Int8, false)...
    done (took 0.18948733 seconds)
    (129/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.114248213 seconds)
    (130/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.095418537 seconds)
    (131/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.121347912 seconds)
    (132/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.145014441 seconds)
    (133/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.072705321 seconds)
    (134/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.086029275 seconds)
    (135/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.134575094 seconds)
    (136/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.119408745 seconds)
    (137/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.084863807 seconds)
    (138/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.086208573 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.108175115 seconds)
    (140/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.088518839 seconds)
    (141/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.115120149 seconds)
    (142/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.184582279 seconds)
    (143/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.072082346 seconds)
    (144/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.072767589 seconds)
    (145/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.096848581 seconds)
    (146/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.131664501 seconds)
    (147/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.182113485 seconds)
    (148/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.12341867 seconds)
    (149/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.073909374 seconds)
    (150/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.122626506 seconds)
    (151/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.109009443 seconds)
    (152/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.120491075 seconds)
    (153/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.088669738 seconds)
    (154/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.170748095 seconds)
    (155/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.19669999 seconds)
    (156/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.108948532 seconds)
    (157/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.089039122 seconds)
    (158/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.110183724 seconds)
    (159/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.087653785 seconds)
    (160/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.181246867 seconds)
    (161/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.114523914 seconds)
    (162/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.171957578 seconds)
    (163/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.135601177 seconds)
    (164/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.079409756 seconds)
    (165/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.178580126 seconds)
    (166/286) benchmarking ("sort", Float64, true)...
    done (took 0.228140751 seconds)
    (167/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.178162831 seconds)
    (168/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.09070591 seconds)
    (169/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.192559338 seconds)
    (170/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.115055821 seconds)
    (171/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.129531266 seconds)
    (172/286) benchmarking ("sort", BigInt, true)...
    done (took 0.271043546 seconds)
    (173/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.097574932 seconds)
    (174/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.115500053 seconds)
    (175/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.073716127 seconds)
    (176/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.075119127 seconds)
    (177/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.114171272 seconds)
    (178/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.080285988 seconds)
    (179/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.096248355 seconds)
    (180/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.09874753 seconds)
    (181/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.108367713 seconds)
    (182/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.088100682 seconds)
    (183/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.09801038 seconds)
    (184/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.147820875 seconds)
    (185/286) benchmarking ("sort", Bool, true)...
    done (took 0.217088257 seconds)
    (186/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.10132396 seconds)
    (187/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.075745027 seconds)
    (188/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.112479698 seconds)
    (189/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.0901844 seconds)
    (190/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.096147616 seconds)
    (191/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.116073415 seconds)
    (192/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.116183994 seconds)
    (193/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.07338562 seconds)
    (194/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.110725825 seconds)
    (195/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.10812754 seconds)
    (196/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.1331426 seconds)
    (197/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.072253713 seconds)
    (198/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.099552497 seconds)
    (199/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.073905306 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.114448903 seconds)
    (201/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.187250208 seconds)
    (202/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.100119597 seconds)
    (203/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.121039469 seconds)
    (204/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.090748651 seconds)
    (205/286) benchmarking ("sort", Int8, true)...
    done (took 0.217087319 seconds)
    (206/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.135502103 seconds)
    (207/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.086120331 seconds)
    (208/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.097631124 seconds)
    (209/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.108173678 seconds)
    (210/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.113715903 seconds)
    (211/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.07295736 seconds)
    (212/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.115756213 seconds)
    (213/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.076193443 seconds)
    (214/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.111397603 seconds)
    (215/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.085283298 seconds)
    (216/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.09916757 seconds)
    (217/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.076279606 seconds)
    (218/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.080020868 seconds)
    (219/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.13435227 seconds)
    (220/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.087371218 seconds)
    (221/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.136342894 seconds)
    (222/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.115577557 seconds)
    (223/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.072264861 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.090854602 seconds)
    (225/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.115161507 seconds)
    (226/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.190230704 seconds)
    (227/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.077224673 seconds)
    (228/286) benchmarking ("sort", Float32, true)...
    done (took 0.228077541 seconds)
    (229/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.108302448 seconds)
    (230/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.087946713 seconds)
    (231/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.108796327 seconds)
    (232/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.107537541 seconds)
    (233/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.11744694 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.091118047 seconds)
    (235/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.101408658 seconds)
    (236/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.076538805 seconds)
    (237/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.121441441 seconds)
    (238/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.073351568 seconds)
    (239/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.114997129 seconds)
    (240/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.090901964 seconds)
    (241/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.123483795 seconds)
    (242/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.091210806 seconds)
    (243/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.096797381 seconds)
    (244/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.085008628 seconds)
    (245/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.121833587 seconds)
    (246/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.081163247 seconds)
    (247/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.114727862 seconds)
    (248/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.089785786 seconds)
    (249/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.112250498 seconds)
    (250/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.078987591 seconds)
    (251/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.098166429 seconds)
    (252/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.081236394 seconds)
    (253/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.126538356 seconds)
    (254/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.076657647 seconds)
    (255/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.073779673 seconds)
    (256/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.099656107 seconds)
    (257/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.0906663 seconds)
    (258/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.097789636 seconds)
    (259/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.073993631 seconds)
    (260/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.115118383 seconds)
    (261/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.072463692 seconds)
    (262/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.116475321 seconds)
    (263/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.073729187 seconds)
    (264/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.137283984 seconds)
    (265/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.09874808 seconds)
    (266/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.103480887 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.093436534 seconds)
    (268/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.115099856 seconds)
    (269/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.073709902 seconds)
    (270/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.11057437 seconds)
    (271/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.085995473 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.123041545 seconds)
    (273/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.090999426 seconds)
    (274/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.117238908 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.087169371 seconds)
    (276/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.100577698 seconds)
    (277/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.073968121 seconds)
    (278/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.072213648 seconds)
    (279/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.113313042 seconds)
    (280/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.243089269 seconds)
    (281/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.174227463 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.086136698 seconds)
    (283/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.102353712 seconds)
    (284/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.090378846 seconds)
    (285/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.159286543 seconds)
    (286/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.089488773 seconds)
  done (took 36.666707626 seconds)
done (took 37.577180245 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.098635731 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.150779537 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095726875 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.139373926 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.098638744 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.124575676 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.117468752 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.096717164 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.122720492 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.099490052 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.121910671 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.079738702 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.119697754 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.095486245 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.12030149 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.116158689 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.122901029 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.091398687 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.111818275 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086567887 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.112280507 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.088545375 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112961994 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.079132528 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.119864031 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094110836 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.115119147 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.095993649 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.11369564 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.085872009 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.111236029 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.091590901 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.109924622 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.098242867 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.113474352 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.087485971 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.119761002 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.094357638 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.114495815 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088813038 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117378974 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.088341247 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.114841239 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.093117508 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.088066212 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.111004445 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.087793403 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.122467545 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.141125645 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.088621449 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.117495413 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.094503215 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.119531146 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.092262853 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.110530242 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.087549453 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.112992814 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.11616476 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.112197819 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089071301 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.117367772 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.091866859 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.111200018 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.087790683 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.087509967 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.119499849 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.095643501 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.111169907 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.094005143 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.115245499 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.084037125 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.112039762 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.08610214 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.10997042 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.093801113 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.119255972 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.082955289 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.112199879 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.091933617 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.114213478 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.087670337 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.11053097 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.089512922 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.112948429 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086115056 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.079501027 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.110226761 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.090426133 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110712347 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.08737905 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.114783385 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.091411674 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.11389376 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.096661955 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111793558 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.088836788 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112346978 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.088833876 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114675096 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.0869954 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.107698391 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086732995 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.117286251 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.085008839 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.112607264 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.098056995 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.110175395 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.090994114 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.11094099 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.086997756 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.124661213 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.094658071 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.1131709 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089001412 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.110323526 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.09090758 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110082852 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.086913935 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.08582213 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.112537391 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.088865561 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.112820671 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086624774 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.115401261 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.098681627 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.108889323 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.087022836 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.129177293 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.088672113 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.116107395 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.089917009 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.110671685 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.087318663 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.108176389 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086982259 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.10988176 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.091192016 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086845607 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.11395517 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.087870836 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.112681746 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.089149102 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.113511546 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.08843386 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109339527 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.081934424 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113789859 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085814736 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113631071 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.088218671 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112729681 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.083700568 seconds)
done (took 16.569329568 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.095280071 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.186150428 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.146712493 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.148999809 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.145781162 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.105683638 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.124693739 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.144277794 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.096778159 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.141956598 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.145105862 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.109795901 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.149879985 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.121176782 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.129683592 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.095282788 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.119518348 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.105328078 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.153542693 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.140050783 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.145085959 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.096491354 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.140981394 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.13967968 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.09542247 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.14000748 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.122902656 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.09483176 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.122395601 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.112742134 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.135885776 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.098270509 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.121325686 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.13260707 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.102293149 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119687031 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.10510162 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.115839575 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.120114529 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.096057994 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.135864103 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.106790184 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.117107919 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.128141205 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.09472277 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.123886595 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.09455087 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.118528028 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.09592272 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.114815599 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.125406415 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.114792663 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.117953167 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.09755964 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.120133698 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.119675182 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.097173593 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.123264071 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.09755334 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.122841358 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.119457281 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.097584513 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.124503727 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.136389188 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.0952661 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.12212954 seconds)
  done (took 8.880475937 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.109755044 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.146562668 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.126590528 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.102214745 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.122582126 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.084390173 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.108562276 seconds)
  done (took 1.766601797 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.085837803 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.139856324 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.117509837 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.142886454 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.135277775 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.1209659 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129526631 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.085450885 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.1355386 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.123160424 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.113375579 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.166255214 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.086107053 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.122253552 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.145113328 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.086012478 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.144881717 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.085547795 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118183332 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.143204644 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091317003 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.132438126 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.100344321 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.111782657 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.106969837 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.112911931 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.175818011 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097111358 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.110713477 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091869663 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.116783198 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.181095853 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.107573783 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.122472808 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.084275826 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.140038826 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.131477657 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090084296 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.135979624 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.090117658 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.132331056 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.092406539 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.11826356 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.09133921 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118136647 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.100890594 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.122662779 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.119797124 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.090826042 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.139688073 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.096352875 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.133796611 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.087199332 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.115906121 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.096404954 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118049797 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.100438219 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.116366332 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.139613113 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.0927369 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.137809307 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.111807779 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.132742957 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.137746273 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.102584902 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.134110547 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.107079341 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117097381 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092957227 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.121003468 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.136839976 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.089647142 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.122245899 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.101499941 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121003871 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113301522 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.139778903 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09036544 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.12366788 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.090628457 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.114583489 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.08635588 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.128333442 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.090118645 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113671685 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.103590865 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.124116849 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.116803903 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.090760352 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.133750907 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.090808412 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.123262505 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.096709814 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114898569 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126091699 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.11423272 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.122294762 seconds)
  done (took 12.163833154 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.088569834 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.087979256 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.11883859 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.088975075 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.113436673 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.08841429 seconds)
  done (took 1.565295123 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.117918064 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.116957693 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.102587259 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119477897 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155111857 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.111130709 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.13680928 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096859134 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.132793999 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127597192 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.110649532 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.138225544 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.11656098 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120081475 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.136838472 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.094484489 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.137430461 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.091545802 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126977211 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.091355812 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.130622674 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.094851069 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116771063 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.109826991 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.120719193 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.120189882 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.094369833 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.128433512 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.100559239 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123710444 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.094214596 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.1204707 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.094427274 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.122249988 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.137597834 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.094547683 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114915386 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.097156727 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.121667592 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.095860976 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.138059569 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.090917418 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125665969 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.097245089 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.1223797 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120633172 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.097469881 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.119601584 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.111407861 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.122716483 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.096658159 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.121216977 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.094727447 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.122369008 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.094839261 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122496936 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.122266769 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.112316208 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.120126382 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.094308172 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117851656 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.095728931 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123467924 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.094867278 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.121850877 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.097608873 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.120175345 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.090935556 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116742187 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.093974051 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.122103762 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.09134329 seconds)
  done (took 9.133668871 seconds)
done (took 34.473952388 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.67011631 seconds)
  done (took 1.647095261 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.820002217 seconds)
  done (took 1.798521413 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.643531068 seconds)
  done (took 18.649166046 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.468194283 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.561576469 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.992701413 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.161686443 seconds)
  done (took 3.163117272 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.964358057 seconds)
  done (took 1.961787124 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.294175853 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.23435627 seconds)
  done (took 1.512739852 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.812588295 seconds)
  done (took 1.808813072 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.505521788 seconds)
  done (took 2.493963217 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.34159521 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.197964138 seconds)
  done (took 1.539754234 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.566176091 seconds)
  done (took 1.559298315 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.886693104 seconds)
  done (took 15.885199158 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.239044004 seconds)
  done (took 1.246897698 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.293067144 seconds)
  done (took 1.289450411 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.628834411 seconds)
  done (took 4.626381608 seconds)
done (took 60.171447384 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.096642137 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.100143058 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.126490905 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.097217824 seconds)
  done (took 1.413129806 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100906015 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120793271 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.097991583 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120916339 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102045193 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.12157973 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.093544616 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.164484424 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121343151 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.095983769 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120334777 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.093315595 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.122968993 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.093869626 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.118232548 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.096530292 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.124538515 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.09547704 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.12167836 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.095617126 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118183727 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.09642305 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.122625499 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093103786 seconds)
  done (took 3.658697896 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.098042957 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.09184171 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.118960573 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.090698555 seconds)
  done (took 1.406016626 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100413833 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.133482806 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.106830321 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126405712 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.107395111 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.132615322 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.115641542 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.089357857 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.092422518 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.127587665 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091721274 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.136170878 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.13296204 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.085701266 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.128106583 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.087259046 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.113529849 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.106907044 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125707153 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.100510458 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.115525625 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.09957553 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.12351589 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.103926574 seconds)
  done (took 3.690807335 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.171405953 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128480323 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139438485 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095627974 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.165078455 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141865876 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.089128814 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141743304 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088687323 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.128087122 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.093316612 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.168404478 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.124764938 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.092638205 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115805868 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.09656111 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.125687981 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.099059728 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.118666367 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.105250748 seconds)
  done (took 3.439739418 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.09748124 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.116431131 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.087678071 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.089393981 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.123530004 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.0926463 seconds)
  done (took 1.620700017 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.086479818 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.08612047 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.112367524 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.085162213 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.116308451 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.086191726 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.084732164 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.112665404 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.08641032 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.11183982 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.08543046 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.110400958 seconds)
  done (took 2.177083487 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.37802041 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.115658091 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.115242879 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.090780127 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.094626972 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.114773655 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129262779 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.08972838 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.145426073 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089187335 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.114973548 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.092804985 seconds)
  done (took 2.578867874 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204459401 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093733061 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261785581 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.348896915 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153715031 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163290334 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.27896631 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161962714 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.182336722 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136601388 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191671348 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155267347 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151169078 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175352423 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110464527 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.174646454 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172219129 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197235741 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147124129 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201984179 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161229542 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165747739 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176291629 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150148061 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135378404 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128362237 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.116856145 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09975488 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196751605 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166939847 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172529851 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146840979 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109654815 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223354631 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211744961 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176470472 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.305791241 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131883354 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.188895808 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.179052499 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24855626 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112105196 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191956173 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151709116 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128484126 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179644109 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156732228 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.178630731 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.101489923 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139934612 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181200755 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174252473 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.176682557 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134766329 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300342866 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143905201 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145051856 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181182231 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182863024 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186981293 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167215473 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.118461644 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183864011 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178536716 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177151858 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.143936383 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.16520321 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09612344 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171672032 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191568085 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174272701 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161832049 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.211553194 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13181398 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134212354 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165679741 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151164552 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177343443 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159592473 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.091922549 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148124599 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135929314 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098891364 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.184754215 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121350038 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201086938 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106129824 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.212714198 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201501675 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156390197 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131380329 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16012626 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162861253 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145133317 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.118652886 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116109229 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.159100666 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155135419 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130946742 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127295698 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141361667 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.126726834 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151779653 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.094770416 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157722538 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.132375356 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16392921 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135032849 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.127010464 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162016904 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147390202 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.128205672 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167665162 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182118705 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131041103 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130923467 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190681328 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157510232 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105513325 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17278068 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.184154797 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.163069483 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136293045 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167468448 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190969278 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139668217 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185189984 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110426812 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132391285 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.149470178 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15774212 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154703292 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.12707071 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128413512 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.150939438 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189030069 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.124964072 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107194047 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172285518 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126307825 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100098767 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141798969 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133499755 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.113162491 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.146146125 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.135543212 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153396507 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129868282 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151545752 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156390096 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140138073 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189117323 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130670386 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.157164345 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117314276 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.118416625 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.177039974 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181784807 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099165584 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222837069 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.168413228 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197391082 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160529866 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130445568 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174134643 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099310402 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.117508164 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163797519 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130492287 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1596235 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.179052718 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219921122 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.164982984 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.151331115 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119352665 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163763489 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.170588408 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15442333 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.144708278 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16119634 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165725638 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.093639079 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122568872 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.125462821 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112306256 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130393367 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102530695 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205928098 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133472341 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.214710644 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157793896 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112443474 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177633334 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.124966593 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163921567 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.170306432 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13819134 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.18044107 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177925516 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165359902 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112963499 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17359946 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.118949378 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.093927885 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.132574974 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164848924 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102463231 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13341465 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141136876 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179763282 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173166881 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148727397 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20126388 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163612797 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187739338 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.120970349 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.133714974 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166535828 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155756065 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.182424073 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10533223 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.155700479 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175482471 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140266339 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184870744 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161077846 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167261074 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195875813 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.155270464 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128377892 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119635051 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16228119 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138800858 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164779125 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14290746 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105626191 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15244254 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.132613075 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095205161 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176257919 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142294312 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177897568 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.155057782 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169980558 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124261635 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141184718 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132180936 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144264447 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.116645982 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168865626 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184344647 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143434079 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155970374 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172073411 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099914821 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.309032316 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184985503 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181168978 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134505917 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141212333 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159527779 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129121354 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161618009 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176496793 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142786494 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177653588 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157004366 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.141427501 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10575922 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145704903 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148773906 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.119831974 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.131015699 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.153388956 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.14011576 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180817244 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140424435 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127919784 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162989488 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.145937624 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.146024722 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112429545 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197771294 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157258041 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175902355 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.154786065 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.165273336 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195978659 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122832528 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098745646 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.126466578 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176529578 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101975912 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157340734 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.184879284 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224491836 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157098988 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164771157 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107809884 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.119225729 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127671892 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14752485 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223701799 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112838538 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.133631703 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186749447 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.149578857 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098945663 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160689411 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288407468 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140570707 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17298228 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.115446936 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.274221682 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095576998 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12886187 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157395812 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167904375 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.108290513 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.180806893 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161476466 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14217993 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130447358 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136555213 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188418658 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230867125 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168163309 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173634576 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.11298671 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156398798 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16150021 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174659096 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143354254 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.14302264 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131212083 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179350535 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.184214149 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.131739857 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162028422 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160671002 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158170309 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171487285 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103632628 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227157628 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100276108 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163941378 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139724636 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121178457 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128274377 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.21144897 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103565193 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17345517 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155870486 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129928031 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097158312 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150074492 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157850008 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13917886 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099010591 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175345038 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.124027073 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160511081 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14853578 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129247394 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152383894 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11425643 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138500514 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141300794 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144263899 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105025355 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.168511698 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180395623 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.101306288 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201250419 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176173953 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161648902 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155678011 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113500378 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.665241377 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.098306722 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178577428 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146506253 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182699222 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147045533 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165856785 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159506717 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118513388 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166690176 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148478221 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.220292601 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165775296 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.15590133 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099698246 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144134341 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142808191 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.130247992 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120208258 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163277928 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139686271 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.106989286 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.155158635 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143680905 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.142863753 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107427672 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181235102 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145586843 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178903788 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178162798 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137402615 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16471553 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172477265 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099608576 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.157796663 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168503347 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140217761 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148938104 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.101265255 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.134386685 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178027226 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.093126623 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157937244 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157870791 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160033111 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160242919 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.131904122 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129086995 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140139411 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159643754 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128200196 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.123805495 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15590683 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129873961 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.097041962 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153950903 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157122751 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.155952042 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094645433 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.170357964 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17886742 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.094105764 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131624058 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286175121 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156096032 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188995359 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.151025075 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103466134 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142877481 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153951097 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.152664761 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156827439 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.098098307 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131892541 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.100431737 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.180297318 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.151567002 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155699361 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182876572 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158074124 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198906295 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.104570615 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.263333214 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138377992 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153060898 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.099936935 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.12861885 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140980075 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103822572 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142147298 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189640045 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177379656 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.151541016 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.11209098 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125281677 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125400393 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103376886 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160586487 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152482895 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155309408 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113187908 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.116447469 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141959361 seconds)
  done (took 75.078142097 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.144594443 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.130510836 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146957482 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.193685646 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.164058931 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.241458962 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.203989488 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.224077081 seconds)
  done (took 2.541438138 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.09979904 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.156700652 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.138359649 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.123605509 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.089944148 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.331690883 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.1361098 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.121466586 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.118494329 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.16131857 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.090810138 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.534878812 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.120638892 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.122614203 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.085773385 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.114046545 seconds)
  done (took 3.634222245 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.259262341 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.541017379 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.123178966 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.245085606 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.224683248 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.15108732 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.75303118 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.156600917 seconds)
  done (took 12.552795544 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.120087806 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.138787257 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.132730115 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.16173491 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.117786573 seconds)
  done (took 1.77845056 seconds)
done (took 116.565266116 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.093501937 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.123567431 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.094965461 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.125293351 seconds)
  done (took 1.529900969 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.106684055 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.078219473 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.1100403 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.077485917 seconds)
  done (took 1.470741438 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.421400597 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.108249638 seconds)
  done (took 1.666562568 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114191631 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132094711 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103969031 seconds)
  done (took 1.453748758 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.101201205 seconds)
  done (took 1.208986384 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.096106114 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.096601898 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.139462214 seconds)
  done (took 1.438310331 seconds)
done (took 9.875280008 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.110448944 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.436949343 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.384190906 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136328767 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.691420375 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.405614282 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.041540399 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.126442984 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165560596 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.117665201 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.106553871 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.697980666 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.993542793 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.376024735 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.979249936 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.374191188 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.670316212 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.119473627 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094526693 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.118614353 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.987246966 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.116843202 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.089915477 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119374113 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.667740865 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.421621182 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.088942277 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.387738941 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.088134895 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12357162 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.375369774 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.116894539 seconds)
  done (took 16.821785668 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094179509 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.177320275 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.096900698 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.119495517 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.092787822 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.119643387 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.099012476 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.131873333 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181511728 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.08893701 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.136018615 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.088175454 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.123728342 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.088936833 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.13889277 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.089238827 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.120182968 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.091484288 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.124676868 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.090889016 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.137735693 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.088225366 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.119054203 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.090707688 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.116999268 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.101910922 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.089802192 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.131333969 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.117495636 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09614082 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.091702037 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.118857521 seconds)
  done (took 4.696302899 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139717716 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.186336526 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.127071141 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.122578418 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168463377 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.090731891 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.201962996 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.156515915 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183107384 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.117939634 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.107292897 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.117768824 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.124852881 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.118375278 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.110090846 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.117751691 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.091690897 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120475685 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095746658 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120273758 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.10920262 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.117417162 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.091485951 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120852357 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.089575864 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.131549555 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.089453729 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.132129603 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.088686007 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124189937 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.092595248 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117486728 seconds)
  done (took 5.034621445 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.095925794 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125963384 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.105970433 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.134882002 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.091654532 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124398417 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097040916 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.120111188 seconds)
  done (took 2.002423135 seconds)
done (took 29.659330852 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.105905608 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.094705672 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.132328986 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.101648769 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.128298859 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.102443257 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.1168576 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.100111899 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.13083296 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.097365444 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.133229484 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.087625647 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.089967124 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.117189754 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.102177893 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.122218252 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.104011169 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.127456678 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.109003071 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.134041325 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.089615721 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.12952654 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.098263878 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.13954919 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.108988373 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.138368388 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.133015602 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.095367036 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.089114446 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.119600512 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.103187901 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.141097865 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.091157429 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.135078544 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.095232298 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.12201363 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.089722518 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.120250852 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.104779046 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.128384926 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.094839796 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.129143829 seconds)
  done (took 5.835262611 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.116565983 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.162187279 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.089792306 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.120510082 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.090650833 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.158093211 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.153901567 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.090164922 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.089749621 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.143940864 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.146165404 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.089858553 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.119441657 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.09015209 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.088871014 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.120247795 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.112417224 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.144057259 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.148658963 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.120677366 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.164553501 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.151321957 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.12412542 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.143361143 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.160231218 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.125464365 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.140857304 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.154498237 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.116800351 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.118049929 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.120132247 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.150983688 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.088542887 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.119150176 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.130010428 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.154945689 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.147236203 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.159782508 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.120302483 seconds)
  done (took 6.104490315 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.098185187 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.103611543 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.139658509 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.185137512 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.12554912 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.132830587 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.098905881 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.137981784 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.105774081 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.119745835 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.090870024 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.14990571 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.105121155 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.127191463 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.090257963 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.133704767 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.108488894 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.122341823 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.093840751 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.139003558 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.107401025 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.132541531 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.102246944 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.129911023 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.089654704 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.127490847 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.092072058 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.13484143 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.094237299 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.126588086 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.092608379 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.123503497 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.092448059 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.130118666 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.093017283 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.127123659 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.111953347 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127607779 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.100657144 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.151407017 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.101094836 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.124650049 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.140808773 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.129477947 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.11886627 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.097257214 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.126426838 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.098231316 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.088573277 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.137744563 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.09982242 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.119617084 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.134106761 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.089595053 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.088607948 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.133923985 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.090396755 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.122771634 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.097840086 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.126152113 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.109312576 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.124104979 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.103831724 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.120642416 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.095678621 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.119988937 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.089894602 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.124968376 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.111466834 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.121919324 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.130011801 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.119606969 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.094839076 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.127188156 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.096101372 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128334696 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.089545966 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.132682321 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100325797 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.093081696 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.128899443 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.09363344 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.123652559 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.106837413 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.13403746 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.126660745 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.095065083 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.125470346 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.093990816 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.089240765 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133772371 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.09199765 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.122950047 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.104888055 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.12015166 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.092457906 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.125616271 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.093774277 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.118017272 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10345452 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.12412477 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.089096744 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.128969872 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.090721768 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.123301851 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.099225835 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.122982519 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.089578083 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.09506175 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.125157594 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.088949825 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.122849069 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.094242099 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.122292013 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.103004753 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.127422934 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.092462661 seconds)
  done (took 14.390920881 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.235753115 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.216686378 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.192688689 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.303370003 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.143000457 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.117731536 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.214629921 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.166114725 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.090163764 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160945526 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.176724097 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.18876053 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.175941995 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.187454573 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.173694787 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.121722735 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.109329664 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.174053721 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.216738466 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.297451491 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.110541604 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.136315611 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.163513376 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.161166591 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.109771633 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.137471814 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.113530707 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.141915092 seconds)
  done (took 5.875405279 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.107286816 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156652567 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097923282 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.146216555 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.14815474 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.090765029 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.125202906 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.0911105 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.102716095 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135408996 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.122035447 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.097598751 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.12649352 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.100084695 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.120557957 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.100157639 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.130768241 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.099395276 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.123323374 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.094791049 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.134556046 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.109441008 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.1261314 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.092854363 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.137207425 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.092156971 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.123673506 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142449356 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.098963541 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.146621091 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.087023538 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.130621624 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.1049711 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.121789704 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.094170125 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.124150696 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.092665882 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.092455142 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.122521241 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.088205823 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.120573648 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.081398794 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.12272172 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.105518711 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.127894075 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.088342524 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.126190079 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.094871448 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.128575992 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.087125628 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.092334508 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.12306445 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.094281302 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.132473048 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.093560506 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.128139778 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.09376387 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.124034011 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099097024 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125184008 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.087982707 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.122079589 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.096713093 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.124977272 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.099332047 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127197285 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092496444 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.122947092 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.09612829 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.096660911 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.12344167 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.09905987 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.118416083 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.091261774 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.13081502 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.098296247 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.125049441 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.091693184 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.123181668 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.090339187 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.07828683 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.120502974 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.077878345 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.125589941 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.089555625 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122659261 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.093220452 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.126167496 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.106326388 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.130692201 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.098509143 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.121446297 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.092607405 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.125428881 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.089426702 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.12534133 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.107802845 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140328293 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.089006888 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.118870215 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.106025871 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.122643644 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.089446966 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.082591826 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.133635526 seconds)
  done (took 12.782851276 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.130988203 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.172253839 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.122101228 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.109681461 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.155124896 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.162767959 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.098509803 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.097759919 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.12214156 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.108690058 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.125210138 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.099652035 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.124893395 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.104240505 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.163085776 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.131124156 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.092285974 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.104392374 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126144168 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.17564067 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.109895833 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.161075551 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.161973759 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.093632228 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.12709981 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.158448112 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.134544133 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.134387617 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.103757089 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.163613645 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.134703444 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.135145816 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.164432846 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.126769166 seconds)
  done (took 5.592813389 seconds)
done (took 51.689381842 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.220084748 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.431476551 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.203883887 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.20469169 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.258077886 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.231524681 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.229270559 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.397796922 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.027445045 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.198463261 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.204528427 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.204827963 seconds)
done (took 27.951846521 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.28445071 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.367373661 seconds)
    (2/2) benchmarking "String"...
    done (took 1.538017078 seconds)
  done (took 4.041706397 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.20718816 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.203829956 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.449959662 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.215832965 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.205023308 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.222317438 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.211017524 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.221638943 seconds)
  done (took 15.864827023 seconds)
done (took 25.536810537 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.27043624 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.372709048 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.456949357 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.236290466 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.206337287 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.218338939 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.212027272 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.245161469 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.219690656 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.208314693 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.220032662 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.459819079 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.223997373 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.585025705 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.212291805 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.219289042 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.223884768 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.416526973 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.220171163 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.256558854 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.195064762 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.216115811 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.226846811 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.242106905 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.216563038 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.22453916 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.215656107 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.223395479 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.397260532 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.220189691 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.250121082 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.212526167 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.217287857 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.218540036 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.320375968 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.238952015 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.386398087 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.217255446 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.197383093 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.215853151 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.411471636 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.619484918 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.208987775 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.209882426 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.218193862 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.283505007 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.199432713 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.936002206 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.212115311 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.22225271 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.258043973 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.586579482 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.213408721 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.223393467 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.218561812 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.440253003 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.209000912 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.251176808 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.240326204 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.224482361 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.210273244 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.211427456 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.256224867 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.211504846 seconds)
  done (took 143.950491339 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.210983507 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.216175387 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.215736424 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.241207873 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.210858369 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.216723775 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.211174211 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.21066017 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.214853206 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.215655042 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.211848294 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.211889782 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.215945445 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.188875181 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.212361308 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.226992294 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.211351755 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.233950967 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.230129032 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.212305647 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.235132655 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.213027922 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.228752482 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.213221533 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.250821087 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.29761411 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.234401587 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.239490663 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.211145246 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.212785343 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.259054332 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.232173775 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.853318498 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.070546295 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.224337069 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.230306409 seconds)
  done (took 80.665959895 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.21243096 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.21325425 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.21377294 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.246573295 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.214337774 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.810053784 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.816841255 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.950817137 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.675450059 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.585001557 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.493410139 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.21389548 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.309627161 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.228074278 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.215670264 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.230664856 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.242837262 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.215585807 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.214971658 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.816435413 seconds)
    (21/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.219107567 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.227255067 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.394537982 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.229761336 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.247868257 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.615227889 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.389451867 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.21924949 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.250397063 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.556012184 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.264075155 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.214110121 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.598917826 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.513504974 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.331215848 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.216624377 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.250249483 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.215812062 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.49920804 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.215874582 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.21631621 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.220531272 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.901797119 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.215413229 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.814413189 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.221047527 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.176286505 seconds)
    (48/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.215443955 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.215282563 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.216997395 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.224372817 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.895933814 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.23227151 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.216728744 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.218581327 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.217766642 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.216842185 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.249150244 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.239293889 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.332952818 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.218502754 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.220313385 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.248657836 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.217579269 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.272371279 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.221568155 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.465415927 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.299741171 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.334647284 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.820957063 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.221852834 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.316341166 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.339738985 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.218235276 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.219276892 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.217185191 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.218915521 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.218174762 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.329185092 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.218751969 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.653236656 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.398015069 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.235362771 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.58358775 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.218681697 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.317657984 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.221300045 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.598265136 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.219657472 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.2207469 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.982551667 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.318286822 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.220178643 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.220024402 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.220866483 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.653849782 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.821632464 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.4882597 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.219917488 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.529832317 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.232928948 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.661858847 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.792990249 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.898406649 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.222368987 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.334497709 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.399614802 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.237055821 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.221525088 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.582992406 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.221064063 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.279663121 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.220597388 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.620090976 seconds)
  done (took 367.499957957 seconds)
done (took 593.255809042 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.938525787 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.891235768 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.02504839 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.91362489 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.879712671 seconds)
  done (took 10.797567172 seconds)
done (took 11.946582424 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.415840651 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.915660193 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.28418632 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.41732734 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.255617262 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.434871944 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.396911199 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.243364496 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.332191034 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.305357635 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.331505405 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.27687191 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.257138302 seconds)
  done (took 19.01770272 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.563787321 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.222391724 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.302851507 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.561910388 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.261749084 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.58030012 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.436116221 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.240762782 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.434362168 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.238066484 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.23489534 seconds)
  done (took 18.229186204 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.608942016 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.224084378 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.306986273 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.568273219 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.262793749 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.582290959 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.435923061 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.241098441 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.431029444 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.23843394 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.235714532 seconds)
  done (took 18.287347407 seconds)
done (took 56.686557382 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.266207194 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.388652911 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.248880388 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.234542532 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.23127209 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.23318972 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.237082849 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.232547871 seconds)
  done (took 11.223720868 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.230704066 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.227892513 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.230262821 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.22768937 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.230386146 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.231694179 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.230111874 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.230907077 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.228771141 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.229058506 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.232458871 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.232151095 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.22852815 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.229877974 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.228885048 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.231944967 seconds)
  done (took 20.833050274 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.23024996 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.22940371 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.228849833 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.230446852 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.22961851 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.229014432 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.230980334 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.230067838 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.228505129 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.228314974 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.229801408 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.22898425 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.229340032 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.228398955 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.230304455 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.230531492 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.230299212 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.231521066 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.233719358 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.229142181 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.229411714 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.228916316 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.230302095 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.22910382 seconds)
  done (took 30.669973181 seconds)
done (took 63.876579457 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.239044799 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.246062361 seconds)
  done (took 5.637804819 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.289300535 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.294481427 seconds)
  done (took 3.740555456 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.232622755 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.232674096 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.233508647 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.232981175 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.23230083 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.233807853 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.235706521 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.233850643 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.232378152 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.232965385 seconds)
  done (took 13.485405858 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.233551184 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.233247904 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.231534508 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.233504452 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.235307691 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.230777258 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.234305301 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.234842444 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.235453221 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.231415446 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.235456119 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.233608034 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.235680746 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.233297136 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.234742369 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.232743453 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.232615217 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.233314539 seconds)
  done (took 23.361287303 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.248008514 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.257049461 seconds)
  done (took 3.662364328 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.36280508 seconds)
    (2/7) benchmarking "second"...
    done (took 1.2748809 seconds)
    (3/7) benchmarking "month"...
    done (took 1.343113948 seconds)
    (4/7) benchmarking "year"...
    done (took 1.332696164 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.276000567 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.254525252 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.274935548 seconds)
  done (took 10.276628243 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.236591294 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.431813542 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.546223015 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.813633325 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.238732194 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.241548389 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.109713209 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.241700723 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.246005862 seconds)
  done (took 14.263643275 seconds)
done (took 75.580812351 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.231911864 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.2568516 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.246107193 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.252291708 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.575114175 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.255937756 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.234750316 seconds)
done (took 16.211521875 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.221214497 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.222271937 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.228221202 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.246250116 seconds)
  done (took 10.076762786 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.246934318 seconds)
    (2/2) benchmarking "read"...
    done (took 1.554085059 seconds)
  done (took 4.962934711 seconds)
done (took 16.198680311 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.240159705 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.234924919 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.237602547 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.235406475 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.239354162 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.235599875 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.235923541 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.238195406 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.241197594 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.240172167 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.239164628 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.239432002 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.240110946 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239740836 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.234990137 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.236160847 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.238784066 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.236151946 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.239178408 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.23559723 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.238222013 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.238566494 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.237014835 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.238667864 seconds)
  done (took 30.870180444 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.241100809 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.239828499 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.242189978 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.240483574 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.239944781 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.240835389 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.240651513 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.238888102 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.238888747 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.239624778 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.236994424 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.237266195 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.241632431 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.238170847 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.240104712 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.238610406 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.24111284 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.238240504 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240841395 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.237541192 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.240878061 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238318746 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.238758298 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.240653061 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.239572791 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.238346736 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.240397141 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.238358371 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.241112656 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.23858053 seconds)
  done (took 38.348130538 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.24557632 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.249390305 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.240999168 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.241539294 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.240527282 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.240609013 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.242321395 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.242223041 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.241642882 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.241292752 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.241170864 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.242109977 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.242072539 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.241579203 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.243033593 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.242636804 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.241208203 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.241593245 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.241894863 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.242292952 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.241807219 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.243184712 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.241632748 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.244190051 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.242819545 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.242541731 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.242641605 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.243361042 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.242148529 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.244275497 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.243494933 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.242859034 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.244156828 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.243259309 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.243236209 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.244919388 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.248058755 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.253648902 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.244796622 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.243623217 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.245913634 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.244240452 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.243201292 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.244496384 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.245072022 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.243885283 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.244386355 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.24568464 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.247082885 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.24473592 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.246382867 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.244281391 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.244936939 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.244262053 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.244804422 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.244820916 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.245777162 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.246612814 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.245659688 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.247060461 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.245021349 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.244379133 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.24348743 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.24661676 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.244674384 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.246680286 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.246472525 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.244853797 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.246449922 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.246961627 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.246409621 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.245482193 seconds)
  done (took 90.741240747 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.248643432 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.246437218 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.244546563 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.242925943 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.246304892 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.242436592 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.245232056 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.242764219 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.245902388 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.246291836 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248222353 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.244869845 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245311855 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.244078229 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.248005048 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.244738618 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.248882735 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.245137168 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.249960744 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.250531955 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.250186421 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.246513711 seconds)
  done (took 28.58534041 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.253375205 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.25084478 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.246001808 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.247000851 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.248400202 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.249847762 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.248494114 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.251463234 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.248895845 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.245898318 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.246172429 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245832623 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.249435191 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245582628 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.244576961 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.246353132 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.246561647 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.250160791 seconds)
  done (took 23.633222715 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.246052249 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.245980623 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.249298554 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.247400308 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.245210963 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.248591979 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.247217961 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.249294254 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.250616727 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.248005101 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.247991067 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.24892345 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.249984183 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.246747815 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248372644 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.245278749 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.251334353 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245454252 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.251592043 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.249048916 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.246700221 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.249898334 seconds)
  done (took 28.625087075 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.247564265 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.247614169 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.250189158 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.251781754 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.247790169 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.250409457 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.248575524 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.24929824 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.252033506 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.252416067 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.248380241 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.251873262 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.249770159 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.24938395 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.251196446 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.248840956 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.250211772 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.248836706 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.249701981 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.25018747 seconds)
  done (took 26.164570285 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.256423065 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.253101992 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.255106758 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.255805966 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.25292004 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.253631947 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.250806934 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.253216475 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.25544912 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.252894898 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.254023305 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.255577009 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.255418107 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.252897021 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.252508482 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.256377743 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.253311521 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.251668472 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.254895109 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.254096699 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.252458879 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.251737752 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.253839174 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.256989524 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.254625088 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.251729861 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.254256081 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.253788207 seconds)
  done (took 36.28208613 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.254892117 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.254374775 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.253797631 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.253500232 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.251431589 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.255775713 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.252293878 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.252966206 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.259000079 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.252473878 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.254012193 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.255327123 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.252738255 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.254942038 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.254431644 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.256505656 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.257819901 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.254172489 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.254908119 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.251926854 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.255481068 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.258886682 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.253659331 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.25388814 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.253923752 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.257759763 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.251055649 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.252863766 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.255105034 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.25522534 seconds)
  done (took 38.809513543 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.295158295 seconds)
    (2/2) benchmarking "in"...
    done (took 1.301481776 seconds)
  done (took 3.769736416 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.25573283 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.254559628 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.254062617 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.253275746 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.253381861 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.254608439 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.257536893 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.254411449 seconds)
  done (took 11.212908104 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.258664628 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.257570847 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.255618767 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.256515475 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.25849951 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.25733135 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.263083135 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.279420873 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.260420292 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.255888862 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.264336104 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.265058997 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.258882137 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.256504613 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.254565419 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.257472624 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.25793969 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.262270737 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.260405817 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.264562038 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.257625528 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.264684712 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.262908646 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.25766428 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.260197979 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.271658432 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.266166951 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.261289595 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.260070397 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.263823663 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.260315226 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.26185509 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.262508307 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.265658276 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.264428996 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.262517152 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.271196321 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.285647476 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.268663043 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.260251317 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.264407218 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.263308289 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.264082257 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.261057667 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.263432607 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.260854538 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.260711802 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.26297571 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.265861472 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.263384969 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.264536281 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.261887904 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.260777606 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.262422181 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.261717049 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.269000397 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.282802702 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.265914233 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.273346256 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.276407813 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.278758204 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.291739313 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.26636649 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.264902691 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.276184356 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.294507247 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.269026791 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.281357714 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.257485152 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.263290391 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.274055586 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.279367998 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.295235773 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.264274346 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.266340504 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.270162514 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.267461049 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.262398689 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.270047375 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.287731338 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.263251048 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.265479256 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.276977615 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.292070417 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.264508551 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.263658714 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.265186978 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.262386984 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.266265372 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.277967429 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.282694495 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.26484042 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.268403116 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.262977234 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.262862065 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.266258626 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.262580747 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.264792985 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.262026368 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.264623224 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.26266112 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.267998549 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.278482587 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.261447187 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.264285549 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.269707928 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.266829501 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.264168101 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.272334273 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.263741875 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.264732114 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.265809111 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.274989776 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.261206858 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.267498985 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.274781079 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.265722716 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.266810028 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.26541748 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.268285833 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.279112227 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.29648279 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.265306524 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.267111039 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.27385796 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.28064524 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.266846188 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.269635529 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.269535458 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.262396307 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.263918134 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.264565354 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.266481681 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.266611978 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.265474921 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.269135639 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.263805288 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.270142024 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.269205895 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.270776363 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.270500261 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.27086403 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.265130222 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.268037417 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.26820876 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.270269006 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.271443657 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.264650795 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.267585967 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.264723928 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.264695335 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.266863953 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.26560211 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.269225104 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.271117063 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.267584606 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.266067188 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.266313023 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.269234442 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.267421245 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.270367114 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.26567377 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.273691539 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.266731284 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.274135479 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.26660101 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.264228677 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.266729349 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.266896636 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.266827399 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.267111258 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.263660406 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.270661463 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.278064239 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.269675749 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.268080229 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.271248276 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.267311974 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.271237717 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.273033964 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.273365082 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.276299144 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.269673133 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.276685751 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.268916199 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.27147488 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.268444795 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.2665568 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.26666749 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.27054099 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.27366178 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.276843432 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.279902735 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.294322549 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.27025351 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.273475742 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.269055276 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.269365163 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.277571971 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.271047147 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.268483003 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.270072788 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.269882708 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.268680318 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.268952453 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.269348697 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.273167139 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.27314229 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.271638465 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.269811042 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.271158095 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.270312104 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.272775444 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.268568088 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.274131712 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.270423885 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.270788462 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.267808603 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.267566936 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.27012481 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.2693184 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.271324786 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.276483039 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.266774631 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.272285848 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.274246617 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.273265108 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.271173901 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.274871397 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.274347666 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.273689886 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.279627247 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.294788105 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.272703782 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.280291773 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.294577632 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.273168872 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.278010009 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.274238283 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.268519102 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.275514894 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.281585358 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.273817695 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.272224981 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.272473507 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.272581064 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.272981675 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.278806124 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.274854317 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.273871086 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.273174891 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.272239079 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.269026085 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.27221592 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.272383778 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.272857176 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.276037243 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.27242789 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.273275968 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.274508114 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.272957577 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.275013143 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.273193278 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.277535678 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.280368503 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.279006333 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.27396982 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.274537555 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.275052587 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.281826032 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.274973085 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.27360363 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.272278836 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.288514424 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.3024063 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.281900821 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.293572184 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.274351254 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.280869621 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.296955735 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.278079833 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.27287018 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.274561582 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.273113699 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.274092101 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.272834708 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.274169026 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.276994646 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.276682986 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.27604203 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.278328806 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.276576513 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.274450444 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.276704122 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.275937729 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.277607383 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.280420127 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.277368674 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.279959242 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.279449287 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.277894695 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.275897712 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.281347646 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.294480201 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.278040387 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.278773655 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.277587395 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.276875153 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.277332345 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.276147089 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.28366466 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.285881099 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.280712881 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.284912504 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.279990958 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.288263265 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.278423906 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.280829717 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.284626832 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.274742975 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.275615627 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.275306628 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.278577871 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.283315212 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.298814936 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.280201561 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.283106269 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.2791443 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.276400636 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.282544243 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.27984922 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.280350099 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.277290252 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.285497146 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.303103188 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.282839438 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.28169732 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.276421292 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.278860251 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.278629545 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.279609383 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.280982038 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.279351049 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.278835468 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.279261047 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.279369926 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.279459318 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.281114953 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.278936268 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.280281032 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.281649882 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.28578366 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.305995537 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.285136517 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.280574394 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.290321345 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.284385206 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.287312143 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.307915845 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.281165379 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.280523467 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.282344435 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.285667169 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.281075367 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.283513082 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.279434698 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.283879726 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.283658645 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.279598167 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.285152696 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.280443125 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.283207254 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.27985535 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.291126622 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.308492749 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.279793836 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.283955292 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.279926974 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.284645046 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.28828069 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.287597697 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.280668878 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.284970817 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.291608359 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.288442698 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.283607259 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.280678992 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.282326297 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.281280215 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.281364301 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.282984396 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.285287026 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.283710991 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.281661284 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.282366423 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.289262955 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.278669577 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.282361882 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.285426916 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.282189422 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.290047287 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.2819765 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.278593624 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.282242761 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.283204045 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.284268866 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.280922414 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.280700843 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.284879394 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.281428814 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.284309205 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.29083859 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.28964507 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.283229494 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.284207116 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.279954015 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.285210654 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.284181576 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.283843325 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.282803288 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.283897439 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.284336549 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.282666395 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.285489725 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.280345712 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.28362569 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.283092656 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.280770421 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.286930173 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.290943908 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.283313837 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.280987789 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.282313391 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.285408484 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.283120873 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.282564009 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.291026462 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.287953404 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.295329384 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.2932772 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.289165297 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.284435181 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.286819683 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.292069228 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.282919222 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.285104339 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.284153695 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.286556342 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.285548876 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.292572044 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.283767439 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.290171105 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.286640584 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.2859429 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.291260346 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.31013789 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.287169973 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.288501916 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.292671055 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.286827741 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.284498104 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.287091891 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.283373062 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.292809438 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.307618005 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.285703227 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.284799695 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.287068685 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.289979736 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.290394318 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.285708155 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.288140335 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.284520646 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.285228273 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.287358367 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.2913441 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.282206475 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.286360103 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.288000955 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.293263302 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.291448763 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.282767325 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.289328101 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.286525055 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.287189882 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.292791352 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.294635695 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.290633443 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.28476223 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.288052781 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.290631558 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.291607002 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.290748944 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.287526926 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.291835661 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.291864321 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.290605357 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.295098109 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.299595666 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.295460729 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.29100589 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.291942971 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.290293476 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.289884417 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.293407729 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.289869696 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.287832885 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.2904534 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.288854958 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.294675771 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.295239437 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.288902426 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.306558121 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.313655696 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.289683153 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.287680955 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.290729658 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.291068452 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.286696005 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.290365807 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.291206625 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.295930539 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.300276624 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.290752661 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.294488549 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.307857447 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.292085798 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.294512616 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.296885154 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.29915941 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.292849948 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.288066983 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.289704184 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.296031135 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.305561348 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.291680219 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.300580486 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.322566126 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.311314571 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.290926453 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.291700775 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.289739174 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.290913545 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.294688618 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.290731717 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.291952699 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.292542376 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.290707992 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.292191811 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.29693502 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.294844452 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.296758491 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.293504864 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.290994173 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.291392741 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.290566501 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.293703867 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.291652566 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.291450875 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.292105095 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.294430632 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.296992721 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.306388391 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.323943724 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.29513864 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.292126722 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.29159054 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.295689211 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.295593451 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.303938145 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.303100787 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.29389216 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.296519007 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.300737901 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.294450684 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.297954641 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.294214866 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.292811177 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.295409428 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.291656923 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.306160791 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.326154668 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.301716899 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.298789315 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.29127665 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.295120346 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.295150121 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.298378692 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.298367972 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.297625811 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.298090298 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.300360009 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.299730796 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.295888666 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.298899229 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.302753938 seconds)
  done (took 763.765764562 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.298412425 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.288471948 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.29002239 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.290838409 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.293426347 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.291958639 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.293441711 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.291863195 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.293147376 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.291311952 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.294215863 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.293446425 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.296612205 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.295139775 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292722988 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.294093268 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.292471692 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.293412848 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.294406655 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.295886901 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.294708273 seconds)
  done (took 28.372049163 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.298768575 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.293207978 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.294680441 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.296295393 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.295816525 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.297752304 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.296470246 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.298921105 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.301146378 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.301789591 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.303862885 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.296455248 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.296068564 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.294213209 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.295369696 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.302083349 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.296630552 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.295665196 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.302037192 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.303320014 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.295452377 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.296423138 seconds)
  done (took 29.764419858 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.302196215 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.304126858 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.29797985 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.294837138 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.300620776 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.295685996 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.299388467 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.304052856 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.302658502 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.299959967 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.298987011 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.30279778 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.310673505 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.307231882 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.300743218 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.299788469 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.302128554 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.298676041 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.299011682 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.303072115 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.304339704 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.297085897 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.292888818 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.301027401 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.301291606 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.301694473 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.304494133 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.303941998 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.302480931 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.307532116 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.304518169 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.30594205 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.306648627 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.301681886 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.299307469 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.308052665 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.300428328 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.300848422 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.303894878 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.312750064 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.328550534 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.301086714 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.308803897 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.325028565 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.307020628 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.310570954 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.313997176 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.303463024 seconds)
  done (took 63.803473053 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.308840069 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.305127809 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.299643488 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.305410771 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.301328577 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.303784202 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.302945306 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.305720491 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.303059711 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.304116419 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.304342907 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.299078575 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.303333096 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.305713187 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.304162974 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.302870914 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.299103768 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.298449546 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.299370365 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.303196485 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.300352184 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.302747663 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.303444072 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.30004867 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.301403983 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.302228486 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.305641507 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.304108522 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.301170663 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.30147838 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.302497747 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.309803546 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.30796601 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.302144328 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.304102866 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.305294024 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.30134392 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.300480829 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.304095181 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.303326366 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.307230705 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.307665647 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.304690901 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.307527717 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.303369349 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.303747165 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.304748726 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.30743009 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.302740458 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.305524563 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.30527342 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.307234572 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.308906466 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.304885211 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.305502365 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.307977498 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.305077332 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.304788337 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.310460626 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.307159839 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.30642262 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.305538357 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.304439538 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.308839812 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.303897108 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.301793918 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.304972829 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.306301722 seconds)
  done (took 89.910290949 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.311053787 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.305148427 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.307143196 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.30705741 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.307591125 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.306688298 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.309308562 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.307918489 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.308680393 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.306175228 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.307613522 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.306695921 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.30439871 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.304285942 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.305819656 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.305968742 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.307029404 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.30576669 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.306806584 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.308242699 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.307095938 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.308413269 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.309144282 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.310734285 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.307299419 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.307970675 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.307115873 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.307104819 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.306252725 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.304090583 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.308565398 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.307320518 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.307022037 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.31184419 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.313957978 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.319043412 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.313525908 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.312844683 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.307953037 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.308634502 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.307576375 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.308244802 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.309403498 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.307705481 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.3056034 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.310236586 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.308816471 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.310810118 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.309416754 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.308165412 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.305929018 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.310462101 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.31068948 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.308245425 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.309603102 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.311772395 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.307968165 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.309693341 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.307189048 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.310853395 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.309118248 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.309114137 seconds)
  done (took 82.347687328 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.313081637 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.309119114 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.30681824 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.307591307 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.307450404 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.307994641 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.309903819 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.308091575 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.309183811 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.309612006 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.310168004 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.3057316 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.308859486 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.311571796 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.307955055 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.30786046 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.309320662 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.307086272 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.310045892 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.308481161 seconds)
  done (took 27.402788253 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.306841997 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.311064134 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.306647706 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.309244574 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.310965113 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.308615222 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.309196166 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.309613071 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.309015641 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.311590607 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.310166801 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.311550725 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.310461486 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.314352891 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.311391157 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.305851577 seconds)
  done (took 22.18240602 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.313758314 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.311076264 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.309489003 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.311054916 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.312340558 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.307989574 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.312396131 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.309775467 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.309896423 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.317090539 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.311641313 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.314574315 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.314993879 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.311999062 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.309878926 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.312483678 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.311075071 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.310228331 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.315549025 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.313813331 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.313635172 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.310725625 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.313755219 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.31357896 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.313477519 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.313623307 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.310101717 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.31065647 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.312780571 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.313384226 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.313694608 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.31856724 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.312959186 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.31326926 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.315815004 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.31751981 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.314698554 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.3145114 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.315491584 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.312067678 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.315483568 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.314573226 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.321337834 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.320329413 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.315907565 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.320006565 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.316343977 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.317020262 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.314464856 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.312005209 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.316904392 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.317835503 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.318970237 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.318801272 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.315434114 seconds)
  done (took 73.501149795 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.322307626 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.316915783 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.316233918 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.314663478 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.315078525 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.319982617 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.317130385 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.316406218 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.317568306 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.319714481 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.320405108 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.324165089 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.314944543 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.318625209 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.313094913 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.316745312 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.313400552 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.31423333 seconds)
  done (took 24.945248976 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.319637078 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.31814699 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.321666924 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.315932097 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.311620341 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.315937374 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.317641707 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.321025359 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.316122324 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.3189592 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.318309189 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.318018696 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.316871375 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.318204905 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.315545993 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.314336559 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.315963739 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.316297308 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.313487405 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.314540455 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.317972236 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.320344228 seconds)
  done (took 30.212212556 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.321687319 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.316013535 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.316477086 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.334088538 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.340726251 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.32074725 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.31905611 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.320875071 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.340403159 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.378332461 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.372804107 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.347448237 seconds)
  done (took 17.262710789 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314271543 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316886712 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.315241594 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317629906 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316154136 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31586808 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318570801 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317024759 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318767675 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313893635 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31578218 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318114502 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320471943 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318822294 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322344518 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319014849 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315577426 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318528852 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316604896 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318059014 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315357694 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316270664 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31284885 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312858586 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311736221 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312392576 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315181661 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313772766 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312921078 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315804429 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314573392 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312695188 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315346775 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312779268 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315586281 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317125905 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314451092 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31485413 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315569711 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313553907 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.315907187 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315622897 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316158689 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313110334 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315765912 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312465813 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313726921 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312987693 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313993871 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315323673 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316003411 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313062916 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316413307 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316954594 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31681461 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317833012 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313593892 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314007682 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317296072 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315590147 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312825949 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318438798 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314443833 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315013774 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318179469 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313388473 seconds)
  done (took 88.062340654 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316772664 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.314407851 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314995364 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313645177 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313600182 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31387904 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314319815 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313734499 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313945 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31306026 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317004975 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316630217 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314348545 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313397622 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314748494 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317720804 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313450846 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314970514 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314498472 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316499578 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314088213 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313964518 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314781761 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314225241 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31373157 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316156182 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313932686 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314001531 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313772284 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315783852 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313286705 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312700051 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313667671 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.313173116 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313988859 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313568973 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313789483 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315167092 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314540007 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316365882 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314611588 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316669424 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312953205 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314149133 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313151705 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314071113 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3138768 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315171872 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313122117 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31387405 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314798828 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31391266 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314168987 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315437338 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313436374 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314613055 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314070966 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313989434 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31484767 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316712995 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316284661 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314146688 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317052968 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314682352 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31667964 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315883649 seconds)
  done (took 87.996472835 seconds)
done (took 1787.73099845 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.479607831 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.433854456 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.316741847 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.336218665 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.316639552 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.311279216 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.327230369 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.317899217 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.31626397 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.316641327 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.316411636 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.50405934 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.311588848 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.316899845 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.317122269 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.410716458 seconds)
  done (took 26.882828284 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.348030657 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.325586599 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.445604222 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.347475506 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.346669266 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.517000507 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.383367105 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.326797764 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.50511188 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.366564008 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.329083734 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.347167071 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.322410463 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.325658417 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.341314194 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.519037229 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.59632701 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.319326992 seconds)
  done (took 29.245231331 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.814864023 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.35165541 seconds)
  done (took 5.401080032 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.343329312 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.324006915 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.323013711 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.322638414 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.326526141 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.312485221 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.32221213 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.320237992 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.317395058 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.45593732 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.32391342 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.334168124 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.344868016 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.324465588 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.320183302 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.363227653 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.500747166 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.323266111 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.321036303 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.329296099 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.323648939 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.410056815 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.366593878 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.321290284 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.45845552 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.329921653 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.332478358 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.332426461 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.459829805 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.323571699 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.323392522 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.325000515 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.326994507 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.248265142 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.857574555 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.316290716 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.350118116 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.334393629 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.322674251 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.467511043 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.326093005 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.329869417 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.32277001 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.843354536 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.473071366 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.4478779 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.343999706 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.330835033 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.325745853 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.391320112 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.326739143 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.327036393 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.371919138 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.171350347 seconds)
  done (took 84.953302324 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.329741876 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.316941684 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.494688481 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.336854744 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.317479275 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.323350346 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.343174088 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.639412957 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.333165045 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.319346315 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.682931326 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.905250264 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.350586279 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.367562702 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.162122806 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.367711581 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.321452868 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.32149862 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.338982048 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.323015688 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.881230747 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.318070766 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.31835431 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.580476033 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.360427451 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.842058755 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.319074364 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.335611604 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.325311105 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.319979671 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.846671018 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.348111564 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.380921597 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.319530155 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.595756008 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.727643652 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.685782008 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.331018948 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.355417441 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.322908408 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.335679015 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.832134976 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.711371976 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.323843497 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.33717964 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.851300158 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.324146938 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.319318945 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.327594053 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.566913739 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.318133682 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.320600494 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.317874158 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.32500143 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.3185521 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.385722644 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.382711818 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.853581056 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.324512145 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.319456679 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.340212951 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.320105755 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.325506081 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.318128681 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.320888543 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.707230193 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.488693319 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.325990041 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.692119071 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.847123177 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.348724482 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.911562845 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.341376815 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.338156339 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.331863693 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.318415298 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.319552515 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.830037073 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.349687901 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.319169004 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.686352527 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.329721773 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.64958846 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.337828672 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.322184887 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.91016398 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.331905185 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.323639972 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.324805944 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.324437348 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.337623874 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.321656168 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.602366868 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.387803171 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.316569192 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.318310763 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.325974208 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.317942636 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.336509896 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.319979305 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.909072858 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.343049044 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.318234909 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.320571905 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.318767541 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.343093826 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.319877792 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.318055147 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.583255257 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.318643802 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.318646968 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.321043936 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.316842979 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.323157822 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.552517612 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.322787739 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.651211082 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.326569065 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.318005264 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.323730433 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.318697027 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.371319757 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.317481199 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.316826972 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.244810555 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.617868771 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.335556622 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.318294586 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.319541131 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.325200038 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.319706579 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.319118292 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.33860547 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.325458727 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.087951146 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.360595507 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.34362842 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.318196314 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.321018285 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.319820247 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.325187698 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.318638919 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.614273654 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.587428897 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.497514297 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.322051003 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.317963182 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.060269802 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.378728156 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.498510464 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.338022806 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.319407222 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.566339658 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.525685779 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.319948284 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.321470808 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.321302514 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.577553 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.323000377 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.62538734 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.862425195 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.341952039 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.329684851 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.079069483 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.062408755 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.325956591 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.323459408 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.650819222 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.337936 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.318570728 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.320363902 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.319207303 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.319506343 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.341713356 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.323733491 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.317749035 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.317228991 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.451129237 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.509474667 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.33582631 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.325287396 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.827835525 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.408434141 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.329684865 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.31740079 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.31866698 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.316760952 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.369241025 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.318609434 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.335278708 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.319314948 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.328058933 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.878807461 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.318570528 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.320380819 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.508135368 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.99653096 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.343108845 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.318199534 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.316473977 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.193551404 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.840111348 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.342081005 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.635523224 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.329695206 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.357887461 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.318615426 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.428919693 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.846308201 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.326113621 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.318417005 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.957795258 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.341540508 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.855706681 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.317449857 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.320275492 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.892647371 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.338349528 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.32024551 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.318943415 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.317588301 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.626502969 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.318076507 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.337945197 seconds)
  done (took 496.142161107 seconds)
done (took 643.85578408 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.316228684 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.318182921 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.31231897 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.322714844 seconds)
  done (took 10.504404835 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.326206603 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.322422938 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.323310534 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.323302143 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.325984119 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.324387419 seconds)
  done (took 9.18145486 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.315697428 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.322436556 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.323304168 seconds)
  done (took 8.196632748 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.519675407 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.344705856 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.640114107 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.349088772 seconds)
  done (took 9.091743031 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.325123975 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.323259454 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.328034848 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.327625953 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.328370105 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.331129724 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.329217431 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.329998088 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.332022628 seconds)
  done (took 13.192002926 seconds)
done (took 51.402355826 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.3085055 seconds)
    (2/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.352882609 seconds)
    (3/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.34695151 seconds)
    (4/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.313230949 seconds)
    (5/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.314036007 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.580273538 seconds)
    (7/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.608735359 seconds)
    (8/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.320462708 seconds)
    (9/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.365512094 seconds)
    (10/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.306680574 seconds)
    (11/286) benchmarking ("sort", Float32, false)...
    done (took 2.325052711 seconds)
    (12/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.319950677 seconds)
    (13/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.650662043 seconds)
    (14/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.757295498 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.352865015 seconds)
    (16/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.344935726 seconds)
    (17/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.925632109 seconds)
    (18/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.307874272 seconds)
    (19/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.437202246 seconds)
    (20/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.322505627 seconds)
    (21/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.351375993 seconds)
    (22/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.329680201 seconds)
    (23/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.320032249 seconds)
    (24/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.384148608 seconds)
    (25/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.307754926 seconds)
    (26/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.376734603 seconds)
    (27/286) benchmarking ("sort", Float64, false)...
    done (took 2.338961802 seconds)
    (28/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.305521264 seconds)
    (29/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.327640785 seconds)
    (30/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.4167439 seconds)
    (31/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.434498018 seconds)
    (32/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.267687486 seconds)
    (33/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.303406562 seconds)
    (34/286) benchmarking ("sort", Int64, true)...
    done (took 2.336673362 seconds)
    (35/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.307749992 seconds)
    (36/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.042618429 seconds)
    (37/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.319103885 seconds)
    (38/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.457699952 seconds)
    (39/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.318571122 seconds)
    (40/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.658426726 seconds)
    (41/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.904039125 seconds)
    (42/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.306866509 seconds)
    (43/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.805348985 seconds)
    (44/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.331636957 seconds)
    (45/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.401606078 seconds)
    (46/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.31028866 seconds)
    (47/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.733449584 seconds)
    (48/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.806900342 seconds)
    (49/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.431948699 seconds)
    (50/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.331303581 seconds)
    (51/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.582488268 seconds)
    (52/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.91248366 seconds)
    (53/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.317285127 seconds)
    (54/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.341416492 seconds)
    (55/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.344784551 seconds)
    (56/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.345302949 seconds)
    (57/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.13327702 seconds)
    (58/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.400438832 seconds)
    (59/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.328870363 seconds)
    (60/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.309827059 seconds)
    (61/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.380536071 seconds)
    (62/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.555670064 seconds)
    (63/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.14096208 seconds)
    (64/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.347325015 seconds)
    (65/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.384333615 seconds)
    (66/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.651396044 seconds)
    (67/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.347134362 seconds)
    (68/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.331141945 seconds)
    (69/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.326127422 seconds)
    (70/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.307862364 seconds)
    (71/286) benchmarking ("sort", BigInt, false)...
    done (took 2.321500204 seconds)
    (72/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.324206358 seconds)
    (73/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.152577456 seconds)
    (74/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.05883812 seconds)
    (75/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.701509424 seconds)
    (76/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.325690333 seconds)
    (77/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.363077844 seconds)
    (78/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.343067313 seconds)
    (79/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.484037395 seconds)
    (80/286) benchmarking ("sort", Int64, false)...
    done (took 2.32097257 seconds)
    (81/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.308965928 seconds)
    (82/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.329954503 seconds)
    (83/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.308071375 seconds)
    (84/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.308598225 seconds)
    (85/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.345607682 seconds)
    (86/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.348241778 seconds)
    (87/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.315835135 seconds)
    (88/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.414431557 seconds)
    (89/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.308312534 seconds)
    (90/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.329781215 seconds)
    (91/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.788502652 seconds)
    (92/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.321645604 seconds)
    (93/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.325365246 seconds)
    (94/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.324434069 seconds)
    (95/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.428369594 seconds)
    (96/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.241750474 seconds)
    (97/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.323746072 seconds)
    (98/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.329799842 seconds)
    (99/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.314498212 seconds)
    (100/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.544753908 seconds)
    (101/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.338702371 seconds)
    (102/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.312587262 seconds)
    (103/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.433621424 seconds)
    (104/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.330546012 seconds)
    (105/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.345462944 seconds)
    (106/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.333145151 seconds)
    (107/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.354240796 seconds)
    (108/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.310593442 seconds)
    (109/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.382633793 seconds)
    (110/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.547237912 seconds)
    (111/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.380718674 seconds)
    (112/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.310796731 seconds)
    (113/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.543157884 seconds)
    (114/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.336388768 seconds)
    (115/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.407182039 seconds)
    (116/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.310325666 seconds)
    (117/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.497366062 seconds)
    (118/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.311509369 seconds)
    (119/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.312429178 seconds)
    (120/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.374046612 seconds)
    (121/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.422980685 seconds)
    (122/286) benchmarking ("sort", Bool, false)...
    done (took 1.83576552 seconds)
    (123/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.347689554 seconds)
    (124/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.457813487 seconds)
    (125/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.014497533 seconds)
    (126/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.811178988 seconds)
    (127/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.591398343 seconds)
    (128/286) benchmarking ("sort", Int8, false)...
    done (took 2.323261611 seconds)
    (129/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.040963066 seconds)
    (130/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.602108592 seconds)
    (131/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.215950497 seconds)
    (132/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.370889373 seconds)
    (133/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.247345514 seconds)
    (134/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.322417194 seconds)
    (135/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.32345166 seconds)
    (136/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.439845595 seconds)
    (137/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.810670553 seconds)
    (138/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.351184623 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.04457607 seconds)
    (140/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.449921205 seconds)
    (141/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.351811606 seconds)
    (142/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.312102834 seconds)
    (143/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.146738042 seconds)
    (144/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.319747204 seconds)
    (145/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.21523275 seconds)
    (146/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.042657005 seconds)
    (147/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.312959046 seconds)
    (148/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.059261786 seconds)
    (149/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.329155101 seconds)
    (150/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.190349431 seconds)
    (151/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.341703289 seconds)
    (152/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.347711586 seconds)
    (153/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.412122177 seconds)
    (154/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.313712465 seconds)
    (155/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.342714567 seconds)
    (156/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.043926862 seconds)
    (157/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.326272521 seconds)
    (158/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.431963127 seconds)
    (159/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.407469795 seconds)
    (160/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.435699752 seconds)
    (161/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.336229307 seconds)
    (162/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.318442325 seconds)
    (163/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.333358253 seconds)
    (164/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.665353742 seconds)
    (165/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.311948448 seconds)
    (166/286) benchmarking ("sort", Float64, true)...
    done (took 2.341233723 seconds)
    (167/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.316222349 seconds)
    (168/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.352790185 seconds)
    (169/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.314242894 seconds)
    (170/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.323470976 seconds)
    (171/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.65601892 seconds)
    (172/286) benchmarking ("sort", BigInt, true)...
    done (took 2.331818373 seconds)
    (173/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.369767926 seconds)
    (174/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.352451637 seconds)
    (175/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.315499235 seconds)
    (176/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.315323993 seconds)
    (177/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.348144976 seconds)
    (178/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.32179205 seconds)
    (179/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.329482996 seconds)
    (180/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.331000477 seconds)
    (181/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.081667297 seconds)
    (182/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.325892397 seconds)
    (183/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.321026341 seconds)
    (184/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.315181137 seconds)
    (185/286) benchmarking ("sort", Bool, true)...
    done (took 2.327255588 seconds)
    (186/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.314821717 seconds)
    (187/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.317012579 seconds)
    (188/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.437690371 seconds)
    (189/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.413121411 seconds)
    (190/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.314952279 seconds)
    (191/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.188746892 seconds)
    (192/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.143818038 seconds)
    (193/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.185392042 seconds)
    (194/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.336809744 seconds)
    (195/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.32902663 seconds)
    (196/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.356864732 seconds)
    (197/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.887333762 seconds)
    (198/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.321143673 seconds)
    (199/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.331808685 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.862041721 seconds)
    (201/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.457872065 seconds)
    (202/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.326540212 seconds)
    (203/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.562459626 seconds)
    (204/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.438140708 seconds)
    (205/286) benchmarking ("sort", Int8, true)...
    done (took 2.325205925 seconds)
    (206/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.341599348 seconds)
    (207/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.351673119 seconds)
    (208/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.472182783 seconds)
    (209/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.346282388 seconds)
    (210/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.38875883 seconds)
    (211/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.471229823 seconds)
    (212/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.712382892 seconds)
    (213/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.333228976 seconds)
    (214/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.369457539 seconds)
    (215/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.332099045 seconds)
    (216/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.317338296 seconds)
    (217/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.325331957 seconds)
    (218/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.324111398 seconds)
    (219/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.328895854 seconds)
    (220/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.376874983 seconds)
    (221/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.139395818 seconds)
    (222/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.379029069 seconds)
    (223/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.642600405 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.198899182 seconds)
    (225/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.710748659 seconds)
    (226/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.345151257 seconds)
    (227/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.32168213 seconds)
    (228/286) benchmarking ("sort", Float32, true)...
    done (took 2.330041399 seconds)
    (229/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.316864243 seconds)
    (230/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.430947696 seconds)
    (231/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.527105357 seconds)
    (232/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.358583438 seconds)
    (233/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.331517923 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.18555125 seconds)
    (235/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.31765539 seconds)
    (236/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.335046969 seconds)
    (237/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.057005018 seconds)
    (238/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.89545952 seconds)
    (239/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.361066679 seconds)
    (240/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.921720289 seconds)
    (241/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.467705412 seconds)
    (242/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.12414167 seconds)
    (243/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.795772079 seconds)
    (244/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.197047333 seconds)
    (245/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.714637661 seconds)
    (246/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.319878893 seconds)
    (247/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.190917746 seconds)
    (248/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.341670574 seconds)
    (249/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.339296522 seconds)
    (250/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.352372082 seconds)
    (251/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.325416965 seconds)
    (252/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.329662452 seconds)
    (253/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.342686985 seconds)
    (254/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.31839474 seconds)
    (255/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.341735843 seconds)
    (256/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.320885696 seconds)
    (257/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.423539893 seconds)
    (258/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.319682697 seconds)
    (259/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.31880088 seconds)
    (260/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.660737155 seconds)
    (261/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.674387955 seconds)
    (262/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.335844134 seconds)
    (263/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.062016285 seconds)
    (264/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.384084654 seconds)
    (265/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.36160587 seconds)
    (266/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.32951699 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.450479654 seconds)
    (268/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.354146514 seconds)
    (269/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.574062432 seconds)
    (270/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.416653903 seconds)
    (271/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.444643406 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.331413514 seconds)
    (273/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.444388639 seconds)
    (274/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.331188127 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.387070271 seconds)
    (276/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.322729944 seconds)
    (277/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.319265801 seconds)
    (278/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.484101998 seconds)
    (279/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.334835796 seconds)
    (280/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.333353398 seconds)
    (281/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.322817178 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.363742838 seconds)
    (283/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.326615337 seconds)
    (284/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.377106894 seconds)
    (285/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.436512169 seconds)
    (286/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.419625394 seconds)
  done (took 562.589830118 seconds)
done (took 563.827001725 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.37132946 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.366618367 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.344875608 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.370771713 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.460273862 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.525536035 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.353909906 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.35017756 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.393930949 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.399001084 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.34851262 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.524575801 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.349550331 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.345678471 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.349979356 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.359933283 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.339317878 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.344777952 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.365709701 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.357468525 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.363511371 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.345645076 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.399119018 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.524731934 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.350681013 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.351013162 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.352615059 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.369457091 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.460517387 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.352770236 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.352176053 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.361824748 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.342642489 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.345773816 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.345589609 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.368311435 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.360399402 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.35844268 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.355421756 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.380849424 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.340382803 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.353051379 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.348972242 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.352239211 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.349573879 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.355929852 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.351061469 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.355764103 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.363385122 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.36638707 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.337369062 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.37111233 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.352703219 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.35311715 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.36220324 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.349601947 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.35503949 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.367548707 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.370370074 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.36769915 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.339930132 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.363979817 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.351178505 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.367669855 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.356968098 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.340530287 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.354767973 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.35593412 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.340392248 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.363328089 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.352531645 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.358536917 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.352957776 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.364645564 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.382129357 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.353816921 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.354945181 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.352399357 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.355930717 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.350682724 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.358904855 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.365833381 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.359117544 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.354513734 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.366502915 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.529397662 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.363998964 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.354805402 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.361794518 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.37206706 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.360260483 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.360494188 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.356916522 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.34673598 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.36214999 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.355995444 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.355941918 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.356342958 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.35840269 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.364908597 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.343764375 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.377557877 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.351059898 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.35164533 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.351869794 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.367907441 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.341081037 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.357214538 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.377084041 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.402098433 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.355098019 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.336785735 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.357245855 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.370720649 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.364534525 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.35854218 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.351894172 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.345371965 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.35379065 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.368357124 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.359237319 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.351380527 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.373831713 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.35698058 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.350990217 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.34386156 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.379567339 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.371480868 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.474474758 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.367763375 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.38585056 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.352893166 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.360551454 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.387742794 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.371556036 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.387289333 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.360219568 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.373986989 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.373304207 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.354681677 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.363933313 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.368053888 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.357146996 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.361940172 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.351098636 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.384659093 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.368171384 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.368612719 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.375494584 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.473467525 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.357281 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.347844444 seconds)
done (took 225.022729448 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.409716595 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.34830206 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.444659679 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.350065849 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.446976061 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.45283199 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.349020173 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.347124118 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.350346406 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.727272291 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.347686151 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.348751776 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.348564292 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.349509925 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.430428821 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.349079786 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.348305615 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.689007116 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.35296268 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.42582779 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.348653086 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.354712896 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.348992357 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.732309948 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.348831117 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.347354467 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.431011312 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.352297899 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.695981948 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.347392163 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.359305841 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.695013023 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.438486036 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.369220278 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.358819619 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.353727195 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.446661644 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.374118348 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.435392736 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.434188444 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.444445113 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.386874441 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.341276749 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.350657152 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.347710879 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.345606486 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.346411554 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.373990185 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.346218472 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.34704248 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.685284158 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.361037439 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.358590698 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.348823738 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.346465457 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.371311117 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.348202825 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.350091518 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.440888521 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.345509121 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.410623881 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.731216478 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.723609392 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.348632773 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.348733571 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.344570407 seconds)
  done (took 105.543317607 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.416513771 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.42525188 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.457949305 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.356245643 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.403083012 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.460083128 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.359154685 seconds)
  done (took 11.134479679 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.356802853 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.349655845 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.400811908 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.402932419 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.348109557 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.561705868 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.352128054 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.364365883 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.349654938 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.429756325 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.352528415 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.353935511 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.358321894 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.35255462 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.398498352 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.364404254 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.467881661 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.353976386 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.354876309 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.502844262 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.350255324 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.361862937 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.432174639 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.362958112 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.351622435 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.361179315 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.282135271 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.354349954 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.347011452 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.35333097 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.348695573 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.451980882 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.352989574 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.350919406 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.351535595 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.514974151 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.35223714 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.348593637 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.350570418 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.353702403 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.352595169 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.351876402 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.353217792 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.351159076 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.355496073 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.377579033 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.355595535 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.353477031 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.354420094 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.355517472 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.428690695 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.356015519 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.353112463 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.352136573 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.432679572 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.360681349 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.354313487 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.351914594 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.355547583 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.351474734 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.504813013 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.40468959 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.35488976 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.401158538 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.355452297 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.354352706 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.353546787 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.353882123 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.447042807 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.353443465 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.404323155 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.352016684 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.575423148 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.379029838 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.356847888 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.358596215 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.357467565 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.356877895 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.35375758 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.362332139 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.353859105 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.357152513 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.360466647 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.353886229 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.353643003 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.539505985 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.509098672 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.354494818 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.369726899 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.362724735 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.354280564 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.430616077 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.359503247 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.352590497 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.408665826 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.471202496 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.439712783 seconds)
  done (took 140.098526097 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.361075093 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.365184232 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.361024144 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.379710987 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.357366661 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.35779293 seconds)
  done (took 9.447414748 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.359659138 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.358583184 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.357187399 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.356720389 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.356253205 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.358387501 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.355372771 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.355639256 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.360386171 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.358508993 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.358183971 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.360081169 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.359488209 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.356915501 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.357831357 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.359869518 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.358805809 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.354896415 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.357443157 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.357821728 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.359940853 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.357790583 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.357625335 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.360150018 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.359138669 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.357722277 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.366327775 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.356847948 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.357824035 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.364065765 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.375752842 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.358856661 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.359270534 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.361515706 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.361399088 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.359649845 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.361944744 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.359315561 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.356133881 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.357894996 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.360955817 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.360865448 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.360823259 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.363906651 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.365035174 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.367452627 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.367244449 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.368681145 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.361559758 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.363420233 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.362700859 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.361122407 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.361167986 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.362489354 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.364619054 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.380200001 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.364738042 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.362372585 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.360926419 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.363442525 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.362748514 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.362070561 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.36181116 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.364919266 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.360095209 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.363668423 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.359336777 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.363312495 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.361814466 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.362319567 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.364940114 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.36070707 seconds)
  done (took 100.267621604 seconds)
done (took 367.751007849 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.76738217 seconds)
  done (took 4.041194149 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.458233226 seconds)
  done (took 3.732143076 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.607675416 seconds)
  done (took 21.881861542 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.38461269 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.362652815 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.360723512 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.352492703 seconds)
  done (took 10.730625225 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.582368222 seconds)
  done (took 3.852223912 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.35263073 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.352304252 seconds)
  done (took 5.977948827 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.613651897 seconds)
  done (took 3.877194013 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.752933629 seconds)
  done (took 4.01654013 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.363866997 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.355007736 seconds)
  done (took 5.992100317 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.325239432 seconds)
  done (took 3.581775808 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.052407171 seconds)
  done (took 16.310921387 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.340852099 seconds)
  done (took 3.594228529 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.353506755 seconds)
  done (took 3.601634286 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.740576782 seconds)
  done (took 5.981111145 seconds)
done (took 98.443427038 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.322928611 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.323823915 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.316164429 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.317105116 seconds)
  done (took 10.520166761 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.356663017 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.357706382 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.357190915 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.367374523 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.361236631 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.357926851 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.350494208 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.349896701 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.366526109 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.357685261 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.356450134 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.356378103 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.353991077 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.347289275 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.358338116 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.353420832 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.364644532 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.353523623 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.345514064 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.356630763 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.320345107 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.362348989 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.366470763 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.318559077 seconds)
  done (took 33.736089575 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.811508392 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.388950568 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.470091325 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.369976102 seconds)
  done (took 7.27146284 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.369276344 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.370964144 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.38227995 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.421081639 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.455276515 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.381040908 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.345179747 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.339591879 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.326090096 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.371857334 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.446899995 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.386706109 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.454173772 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.319976221 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.501888315 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.319320468 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.320447203 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.371084176 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.420774167 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.435634038 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.319876926 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.372997791 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.37394757 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.388536192 seconds)
  done (took 34.4254522 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.319035286 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.337747851 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.318615893 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.319507818 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.327511707 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.319382536 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.319728693 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.320834567 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.318966282 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.324805343 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.318304621 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.331456584 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.318239112 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.321932432 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.325073884 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.320183047 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.326564779 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.320068789 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.31932258 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.326116717 seconds)
  done (took 27.686603706 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.313083341 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.312333789 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.665567009 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.569449164 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.313861641 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.313788256 seconds)
  done (took 13.720074203 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.386171406 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.529385112 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.327734348 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.659636918 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.746749839 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.329398227 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.322134749 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.561015349 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.868509943 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.851450227 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.384275607 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.393023878 seconds)
  done (took 19.592775237 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.315625018 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.324142784 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.336427605 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.341010274 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.374575816 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.332473858 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.329995871 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.315306435 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.383609324 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.386361668 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.335646057 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.375778095 seconds)
  done (took 21.386127563 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.405768723 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.317261541 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.315710742 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38359792 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344374622 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.530075568 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.390427843 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.041345939 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.338069122 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.589743416 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321329554 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.417033445 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.57600091 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320948336 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.329009601 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.31420249 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.547353225 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.804053351 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330995404 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328073982 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354475576 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.320655316 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.349001217 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.538730173 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.542020581 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.321445188 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.583015976 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.321176076 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.599208742 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.344637843 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335225321 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.322533506 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.597698955 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968276198 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434880228 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.526318554 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331177486 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.328118521 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.318244959 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.321669352 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325362765 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.326654726 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.322163834 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311890227 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.311773544 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.324449535 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.027190158 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.336520367 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.309407617 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.311048031 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.569550771 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416881981 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.316270158 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.311013217 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369363653 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315416501 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.314696818 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40546835 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885938011 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32487384 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321711264 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.336236819 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.313768466 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332021889 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933837802 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.322170906 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.315852301 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.315919295 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312913371 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.324844513 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.337013382 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312682011 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.338168964 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313322366 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.994073505 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.322809933 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340741897 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.849882799 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315078513 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.31905368 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.541946519 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312044186 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311540613 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.311552439 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.313021789 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.008477314 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.321997243 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.314775939 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.336256558 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.012761553 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.541788267 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331886143 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337209751 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.536775549 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.300037314 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313442139 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.320409865 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323676766 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335983027 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.016879809 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332703052 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.317652364 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.570881999 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.525365229 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31450858 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.314509475 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.785449574 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342379558 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.337341237 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.325875405 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.530648071 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.893991198 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.338895975 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31539123 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357239713 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.313787399 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049808289 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324849199 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.327910462 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.315431372 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.600243334 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.107669412 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317556602 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.383680203 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.321311637 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.315354172 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.327661177 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325578823 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.315402041 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.515452008 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344199989 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.334573943 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.317235701 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316678183 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.317969339 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316387712 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.326827241 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.539632283 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329537784 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.600803229 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317056569 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317755984 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316505517 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.538978128 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.317506462 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.330768089 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.577949753 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317118328 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.326194368 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.336983795 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336469433 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.417898088 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339303634 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.330492712 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.579942049 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.322048531 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.32233833 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.317119778 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.344940981 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325152065 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.324572819 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321386572 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.895636424 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306389341 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.327200366 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.207992594 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.332943867 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.386432435 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.3255783 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.528916483 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.332561799 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323746916 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.333127587 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.315146191 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.564793745 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.329330652 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.332031909 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.40695913 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.786450394 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.904632143 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.341289106 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.318614881 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.316725569 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.316307303 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318889581 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318946179 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.319777409 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.527815306 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.342623828 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.332607992 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.90077361 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330495565 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.332913322 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.334163123 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.33277163 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.326114563 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320310962 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.317165221 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345022075 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.341373143 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.339848587 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465617167 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.33761942 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.320400976 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.838547102 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.327568564 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.321815641 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.321871922 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357039154 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.335108731 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.131917242 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.580715551 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.324740543 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.581832624 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.345326574 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.339760585 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.320379801 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335618566 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341728715 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.340024217 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357695223 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.334759942 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.333904358 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331997638 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891106133 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.0395279 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855896928 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.33290069 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.332752551 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.330343722 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.03080684 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340844465 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.322309461 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.55328022 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.035710772 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340471743 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.793904852 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.343125594 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.071089918 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.582882248 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.561661477 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.326952941 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.337715877 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.592599287 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.546008002 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359713801 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.336608229 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332631489 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.309161172 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.873688556 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347792391 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.410508627 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.032694648 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354314984 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.336111969 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.365747752 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.337843411 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.725045944 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.353020542 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324681091 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.324091232 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.34918469 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.134082163 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.332279038 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325476235 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942975207 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.332259712 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.805670129 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350665591 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.53426118 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.347370562 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.330517726 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.324499497 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.331716657 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.588986831 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.579289424 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335110472 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.328601482 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86469493 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.190947574 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.333225936 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324880265 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059504043 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333129201 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.613085105 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.336600471 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.338396789 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335445296 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.3264923 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326731492 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.323266946 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.33444518 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.303183473 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.80430892 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.329941365 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337404986 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.33970836 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.176467115 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.583094121 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.341157511 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.896763115 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.562053464 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.335696607 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359493929 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.331603732 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327103402 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.3242494 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.3274628 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.563550084 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341306773 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.559709934 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.330666417 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.314994862 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.340005838 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.542241742 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.328207683 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.328522866 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.575947727 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.33527025 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.34602883 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.047200859 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36277915 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.328062897 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338450714 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.338454104 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.360580215 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.398170815 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.539269973 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.34945738 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.340522333 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.72777246 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354972406 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.340236553 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.343563674 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424617204 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329544373 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.350701798 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.112339718 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.904373221 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.060322638 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.917727229 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.600830614 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.341259124 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33322365 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330070982 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480277939 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.330118064 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.605361233 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329599321 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.332082643 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363349581 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332376395 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345301219 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.551813002 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.606771209 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.331129167 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33970739 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341829538 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.330848481 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.342511069 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.541899924 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.815127368 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.876658323 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334379281 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.336244888 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.050280457 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.62810855 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332489346 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.333188301 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332463605 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.353199718 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.369860442 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.339819195 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339335948 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489969451 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.58413401 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997608389 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.36138341 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.361085086 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.107040565 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332670716 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.599150186 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.33117482 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.553901306 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.918195752 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.03137504 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.605995067 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.404435038 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.545033948 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.341679153 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481897969 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.341186708 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.341118334 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.335094503 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.179123726 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.331740041 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.344713565 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.917771294 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.607894047 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.33902561 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.342581965 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367497132 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.344667564 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.557779475 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.042573039 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.56015185 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.346429054 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.343338789 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.336191951 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.917090275 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.60679225 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346253554 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.340868994 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.571961977 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.581747114 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.360645948 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.789835784 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.332888554 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.884099071 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.308523221 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358262479 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338510211 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.036392794 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.927367229 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.345301718 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.827962013 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.341190792 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337431587 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620287189 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.342953601 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.337349874 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.622138487 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.341534713 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.343910375 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.557996272 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.920273465 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.091897696 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.364961927 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363790583 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.347344978 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33804014 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346554498 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346712839 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346834105 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.756063616 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.365340172 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338729677 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.350310255 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.337470579 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348950098 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.344200913 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34013918 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.345579126 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.343804225 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.327399734 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.350942759 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444167791 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.897289221 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363443998 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.016908001 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.673232866 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.596276623 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.350259485 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.335935177 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.345135781 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33995604 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34036832 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341233974 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.345334714 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912606642 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.353039286 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.358637797 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.343941037 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.556501586 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.552989432 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.345020854 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.561105972 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359113232 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.36225762 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.3271031 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340599507 seconds)
  done (took 948.864799731 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.382005926 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.379277284 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.36525907 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.393945415 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.359562722 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.391937612 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.445696333 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.368329132 seconds)
  done (took 20.343258639 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.348009718 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.359941415 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.34694465 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.358851749 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.346093258 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.81283794 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.37391544 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.36015666 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.352834745 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.34780789 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.357117302 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.014219655 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.377226509 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.346820361 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.350070213 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.36110592 seconds)
  done (took 32.079078801 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.258766875 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.467243354 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.150879621 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.362924322 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.378557548 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.342818696 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.546611693 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.37027627 seconds)
  done (took 26.13985696 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.355813749 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.354357789 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.353702161 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.355282693 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.35530829 seconds)
  done (took 8.034273373 seconds)
done (took 1205.040562839 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.347593894 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.349746775 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.348257084 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.35018865 seconds)
  done (took 6.65503774 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.331189834 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.331536942 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.331887228 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.353431695 seconds)
  done (took 9.608136669 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.038428386 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.980002492 seconds)
  done (took 5.27846131 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.345034103 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.109785467 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.082337501 seconds)
  done (took 7.797449318 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.638015626 seconds)
  done (took 2.898575322 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.754656992 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.712790723 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.538557061 seconds)
  done (took 6.266531303 seconds)
done (took 39.763868625 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.343514216 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.61194613 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.502653603 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.349530915 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.50732618 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.502272472 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.074634604 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.344279606 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.344994483 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.369698392 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.351030004 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.508317991 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.056846816 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.596144258 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.058605147 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.597339414 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.507429523 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.345496487 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.352734603 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.355283919 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.079316032 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.350247059 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.345604041 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.347451479 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.517469989 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.491694465 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.346681505 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.597616172 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.349175592 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.357916885 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.499549817 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.344970418 seconds)
  done (took 81.56959556 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.34734945 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.362179119 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.347786246 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.346384231 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.34699701 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.35405049 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.346793682 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.346629071 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.347301242 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.355353497 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.364122118 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.347018662 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.348879027 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.351868025 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.346322012 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.352190945 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.347096439 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.370641685 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.357212685 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.347495973 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.350204998 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.352432602 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.346260392 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.363790635 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.355448063 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.36357452 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.347976885 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.348021852 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.347671257 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.348132753 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.348148822 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.364519858 seconds)
  done (took 76.532877099 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.347179711 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.351127548 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.348959957 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.352369337 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.34960361 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.35913878 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.350282017 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.350722349 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.347612748 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.379093331 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.359500607 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.347359884 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.348897106 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.347580307 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.348541707 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.348422424 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.348998877 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.372320974 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.347896008 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.353290544 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.351140055 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.348848251 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.348988936 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.349857537 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.368109262 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.350887345 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.349302572 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.349628469 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.374472049 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.351767995 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.358195201 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.350755939 seconds)
  done (took 76.576532888 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.552472132 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.358192591 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.357669571 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.310983343 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.358027077 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.35900886 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.351172026 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.554303134 seconds)
  done (took 14.469038338 seconds)
done (took 250.408026776 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.350539293 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.357684471 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.563370119 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.377978272 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.349100688 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.38724573 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.37781644 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.569840408 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.335131895 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.588728743 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.368124044 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.3867904 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.353460848 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.385004677 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.629041576 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.503281296 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.278951756 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.351519714 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.705083289 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.369551259 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.621983474 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.359948973 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.645569548 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.320413243 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.377958291 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.374338817 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.350112811 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.257175128 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.394688915 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.695081089 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.363480892 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.349069471 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.46040182 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.45810113 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.575433605 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.517541086 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.35979897 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.44393385 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.572353745 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.352485471 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.352668003 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.138345512 seconds)
  done (took 82.196572594 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.359184123 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.482215806 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.359150074 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.360449306 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.360001375 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.487397439 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.457248556 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.360375107 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.359965505 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.360055557 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.359855132 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.361593759 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.360634935 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.361097331 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.360913793 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.361141089 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.360374752 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.363397935 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.363590664 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.409193145 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.49156032 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.384163453 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.353976493 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.359448423 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.467463074 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.504106562 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.360507464 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.355350647 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.406208681 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.361530381 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.364872142 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.41054521 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.362386433 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.362752491 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.485558636 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.464961579 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.36475664 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.361402927 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.485505944 seconds)
  done (took 55.586339908 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.363755313 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.603519995 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.780413543 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.377740635 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.363390223 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.368405949 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.440016645 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.365855659 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.36843102 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.367907839 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.530120756 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.366798936 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.398443552 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.800530045 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.375444306 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.365059259 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.365936513 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.36438491 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.61400405 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.38389149 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.460705865 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.366694417 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.440504298 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.384872228 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.388384274 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.367440832 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.371434237 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.932694166 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.368326303 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.530551466 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.129164451 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.446738996 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.906846665 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.789524984 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.138929987 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.374942673 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.367147368 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.536050511 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.369123577 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.366217795 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.442554838 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.367808999 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.78620125 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.047595537 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.393936592 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.366198491 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.957011537 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.53706711 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.600935587 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.384461864 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.812115097 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.379664664 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.368871387 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.369413105 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.598829171 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.383950859 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.367748325 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.969182656 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.397335632 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.442890437 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.377441249 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.367708844 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.625535807 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.37273444 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.607249586 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.370601201 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.375749258 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.387835521 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.789051834 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.379560545 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.064269038 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.395604928 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.369159131 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.532346346 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.610259942 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.988240329 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.372649223 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.628785424 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.926727839 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.442505333 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.381622047 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.926804061 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.455065064 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.382404217 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.370609641 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.370308638 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.367750284 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.471176315 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.441425344 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.007152412 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.056180685 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.004268488 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.471517111 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.391945444 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.371382703 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.972737727 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.397828877 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.369700709 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.786765333 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.072207492 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.395385153 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.378362275 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.066496712 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.398146806 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.44685508 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.37604656 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.80068836 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.379339631 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.422380228 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.371104141 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.376731811 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.394313816 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.447772425 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.375723801 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.370717238 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.034273613 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.561508279 seconds)
  done (took 180.898669888 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.367284191 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.364311234 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.365207671 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.364012221 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.364292908 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.37376151 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.363296694 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.364628017 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.371033801 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.365103419 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.365778097 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.365114182 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.364536099 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.369601954 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.377635301 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.373040234 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.363898625 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.366030214 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.366461123 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.365504692 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.364649793 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.388246488 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.36546114 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.366328711 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.365190734 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.367467398 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.371344348 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.368669838 seconds)
  done (took 63.577197946 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.372666498 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.912821003 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.383964666 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.500613299 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.394773533 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.375020776 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.49922934 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.427901013 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.376025697 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.371710769 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.372437603 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.662601929 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.37538473 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.874172162 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.568942378 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.509748517 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.879414178 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.400906767 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.372782552 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.371540515 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.501988098 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.388051358 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.666327619 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.928698391 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.384232551 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.918494439 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.369928997 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.375147016 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.374658118 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.918089405 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.373630532 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.666238443 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.448938012 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.433354812 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.917859371 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.868781816 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.886633374 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.518981803 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.384103051 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.372881224 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.374254233 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.366919466 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.919958904 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.377540721 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.376466322 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.916594976 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.394098494 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.376300493 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.381313074 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.373440874 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.434255196 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.435886777 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.669498029 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.92623418 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.452252741 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.396038162 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.502196482 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.752036767 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.412026815 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.875016206 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.390248249 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.924358756 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.397067457 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.367382672 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.375934231 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.382410885 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.521304694 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.506691326 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.879727981 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.396585225 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.875517732 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.546537663 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.385855233 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.377288265 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.378990871 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.923336938 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.878804245 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.547381537 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.50956094 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.569714741 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.370191706 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.379879109 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.369942921 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.451821835 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.38605263 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.927543117 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.896630225 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.404644614 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.380962383 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.380598119 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.379989256 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.548423423 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.942474953 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.453356504 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.877936869 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.698592618 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.673112984 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.381343698 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.436701059 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.395058923 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.674556238 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.381775734 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.435207249 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.806148951 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.675374436 seconds)
  done (took 163.538137034 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.612987814 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.393979184 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.479946431 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.527322732 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.969992259 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.969000518 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.373094017 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.525044181 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.488672495 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.631782846 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.382196804 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.468227634 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.587597059 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.458430895 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.096253312 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.445571885 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.471889056 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.535892776 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.515623587 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.374812909 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.014106037 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.670266414 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.569715955 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.394632124 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.480622722 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.128890672 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.945197309 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.90409553 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.557246935 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.375180996 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.891442106 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.401133073 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.325693498 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.04151578 seconds)
  done (took 64.294876239 seconds)
done (took 611.358330155 seconds)
SAVING RESULT...
DONE!
