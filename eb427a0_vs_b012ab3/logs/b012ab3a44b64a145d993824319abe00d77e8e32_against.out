cset: moving following pidspec: 12039
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.388859523 seconds)
loading group "string"... done (took 0.50732422 seconds)
loading group "linalg"... done (took 8.538717533 seconds)
loading group "parallel"... done (took 0.172476351 seconds)
loading group "find"... done (took 1.35040645 seconds)
loading group "tuple"... done (took 1.938047892 seconds)
loading group "dates"... done (took 1.319856733 seconds)
loading group "micro"... done (took 0.207966419 seconds)
loading group "io"... done (took 0.572265717 seconds)
loading group "scalar"... done (took 40.672310108 seconds)
loading group "sparse"... done (took 12.866802048 seconds)
loading group "broadcast"... done (took 1.026831631 seconds)
loading group "union"... done (took 14.016251357 seconds)
loading group "simd"... done (took 4.843440298 seconds)
loading group "random"... done (took 9.719635344 seconds)
loading group "problem"... done (took 2.078339694 seconds)
loading group "array"... done (took 23.187823075 seconds)
loading group "misc"... done (took 1.068748828 seconds)
loading group "sort"... done (took 3.497364381 seconds)
loading group "collection"... done (took 20.858072768 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.580366141 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.134077659 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.14615276 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.172939385 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.204908748 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.135036854 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.155192616 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.459325526 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.029836104 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.209790666 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.139298648 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.521427673 seconds)
done (took 5.630733001 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.223549593 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.07372683 seconds)
    (2/2) benchmarking "String"...
    done (took 0.125293253 seconds)
  done (took 0.887147349 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.072765023 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.172261854 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.092180229 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.107197558 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.108118975 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.090927727 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.108189328 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.107947667 seconds)
  done (took 1.476225024 seconds)
done (took 3.356210902 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.771469226 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.829334797 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.482572606 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.127995581 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.152863549 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.127839946 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.303752454 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.156496197 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.103194858 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.112648327 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.174486564 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.352776622 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.481160642 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.929740841 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.106691814 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.126839472 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.079059919 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.692722892 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079281473 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.129533949 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.495326226 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.106695926 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.113916538 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.123682695 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.204445928 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.113912672 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.182325155 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.107452841 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.668746161 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.100515641 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.182842842 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.096238473 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.161341507 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.227275209 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.076774848 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.106099259 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.668951318 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.190973469 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.108746481 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.092304319 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.66442641 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.076690015 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.192954385 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.104998072 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.108742256 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.187672832 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.114648189 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.075114932 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.098011883 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.085398342 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.169758503 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.462155726 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.103695796 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.141884116 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092930806 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.695980705 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.093934931 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.154163211 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.123958449 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.107990142 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.095381192 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.089248732 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.170354576 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.097545955 seconds)
  done (took 19.486256777 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.114906347 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.138503675 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.091833534 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137505119 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.139129361 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.094132816 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.082350269 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.091572991 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.108009541 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.180121967 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.134886477 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.142214649 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.07264376 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.094324847 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114228663 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.230316275 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.119126317 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.117193608 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.079154589 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103500533 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120799742 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.109871205 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.105818594 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091661894 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167085995 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.204968381 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.119804024 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12161673 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.076346349 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.113516964 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.139702885 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.160482372 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.076003614 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.090256126 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.178118171 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.103138074 seconds)
  done (took 5.069661161 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.192930418 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.117444116 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.183216662 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.172789941 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.149383058 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.161669756 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115674119 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.261085682 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.162157154 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.176899713 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126349669 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.096599583 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092322543 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.078939032 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.092061328 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.757982832 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.125106795 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.164708617 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.121202909 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101078792 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.079241883 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.374285285 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098394114 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.076320313 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099626424 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.068116955 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.184178784 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08248739 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.215927531 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.099979466 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.106980794 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128422655 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.191982333 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127295306 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.115942399 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099977419 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078327243 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.211469057 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088290613 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.092026187 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.101070789 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130827484 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.132837356 seconds)
    (44/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.160661621 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097069784 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.228032224 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.106332314 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.077959504 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.11427125 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.027326202 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.199037303 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.093331889 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.094558241 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.335312715 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.112563653 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082141492 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.095109423 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.280425741 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132501268 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.077106421 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.0744847 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09937694 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.077214836 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.409206472 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083762727 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.996766331 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.092554889 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.151479038 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095482093 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083839121 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100457696 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08273769 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114425195 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.076973727 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.094210163 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.076687547 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.07481053 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.099262659 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.111340972 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081789649 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.093804162 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.14337644 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.113340671 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.112163678 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108212855 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.096537873 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.076094212 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126851798 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093608261 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.079860342 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.135629823 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081779397 seconds)
    (93/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.096882077 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111371241 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.096462088 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.079405521 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.138479772 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.078271506 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.191584854 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.078995274 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.12218721 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.096749762 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109415826 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.115995604 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093858598 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080774387 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.095132961 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.074477658 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.093037773 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.143505747 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.078693468 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.092741431 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.079566123 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.107548885 seconds)
  done (took 23.175106979 seconds)
done (took 48.419285731 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.416135088 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.107148295 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.107886318 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.107026326 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.106234136 seconds)
  done (took 1.610543411 seconds)
done (took 2.351548547 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.318096623 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.194322453 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084236016 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.187763366 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084113159 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.175114074 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.176091703 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.097243068 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.20356907 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.079973282 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.164619953 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.096937686 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.100427697 seconds)
  done (took 2.728877351 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088394147 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113038531 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077244073 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086468299 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088886928 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086877484 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.102607564 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107675015 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103437694 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.0806946 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088395028 seconds)
  done (took 1.758877226 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088314482 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111829783 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077572834 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087818603 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089982417 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087513749 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104132721 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097333111 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104601077 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082928475 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091172327 seconds)
  done (took 1.761717512 seconds)
done (took 6.980760252 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.105477833 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.689463515 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.120502202 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.167540785 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.327932619 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.195116564 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.623046015 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.132067683 seconds)
  done (took 16.294012366 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.106852925 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.110657606 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.077211959 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.093842677 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.078254381 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.093303133 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.076757131 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.093777803 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.077670864 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.09555158 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.077712635 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.093740039 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.075563301 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.094429489 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.075786786 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.075664564 seconds)
  done (took 2.199728072 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.111932294 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.110865929 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.099529999 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.083709541 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.098254362 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.079313408 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.09980007 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.097947724 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.078794665 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.096243983 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.08484502 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.099547094 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.082239022 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.094961835 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.082956248 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.101651757 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.078514368 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.099180155 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.100026056 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.08335147 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.100417491 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.080946695 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.099431565 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.083755569 seconds)
  done (took 3.076189223 seconds)
done (took 22.309337878 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.161305373 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080612426 seconds)
  done (took 0.987323614 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.097441585 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.115502695 seconds)
  done (took 0.967800459 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.1029244 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.093515207 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.131633998 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094391978 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.095294672 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.07676696 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.126025799 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.094941762 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.077383921 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.093966333 seconds)
  done (took 1.741097506 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081436424 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.097894872 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.086622489 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.115252105 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.088071581 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096546756 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.081484228 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098207321 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.082485532 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.092943834 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.101638547 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.097639039 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.101168924 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.114067623 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.081973136 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.100383076 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.087631058 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097641085 seconds)
  done (took 2.453615196 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.077036721 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.078325279 seconds)
  done (took 0.911636267 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080547243 seconds)
    (2/7) benchmarking "second"...
    done (took 0.091568741 seconds)
    (3/7) benchmarking "month"...
    done (took 0.079553299 seconds)
    (4/7) benchmarking "year"...
    done (took 0.095699046 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.076152429 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.092069601 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.075947416 seconds)
  done (took 1.348007907 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.464421359 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.178470635 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.319748197 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.110111768 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.129348931 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.338778446 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.130628662 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.10886065 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.109626762 seconds)
  done (took 2.686948701 seconds)
done (took 11.848732916 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.087483225 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.129290187 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.474149638 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.112310777 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.075022364 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.154107667 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.260467693 seconds)
done (took 2.050012825 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.335094066 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.118119637 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083722558 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.074884532 seconds)
  done (took 1.366193142 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.0756175 seconds)
    (2/2) benchmarking "read"...
    done (took 0.082349237 seconds)
  done (took 0.917917533 seconds)
done (took 3.044328965 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075093301 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.074666403 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.107436701 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.090137559 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.074844203 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.074512062 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.091241841 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.071743087 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.092921122 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.074373702 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.071489544 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.089008565 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.074393765 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.091999954 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074488793 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089132101 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072180466 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074376508 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.207713054 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071939696 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089159459 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074562918 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.072252862 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.088355843 seconds)
  done (took 2.878570615 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100176762 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09295139 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.081184599 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.098167562 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.078797918 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.098000624 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.080498083 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.091806756 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.097098889 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.077771095 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095511841 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.07870526 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.094291673 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.079042921 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0937682 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07865414 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.097935681 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075787935 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094468748 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.07947064 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.097906399 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075428242 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.096026249 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080300851 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.095655592 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.078746631 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.093885174 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.075892189 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097036538 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.09615457 seconds)
  done (took 3.414390268 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.081062557 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.072157707 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.090325157 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.083548904 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.090071202 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.076589549 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.088908874 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.07328574 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.094003243 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.072550042 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.077861199 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.09011973 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.071889569 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.093713766 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.076558914 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.096943329 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.090673208 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.089852016 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.073676928 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.076316188 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.095402226 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.072104922 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.093064757 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.072174869 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.090089905 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.072133017 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.073465648 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.089920119 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.072773517 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089878041 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.078276882 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.096705444 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.072286792 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.102785312 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.078938691 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.07264123 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.09754152 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.072011023 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.09410948 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.07206643 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.089558938 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.072699088 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.089611676 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.083469742 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.07595811 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.091727013 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.072114448 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.094364065 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.076185262 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097200418 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.072147497 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.088601842 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.078396751 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.077317358 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.095919504 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.072805852 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.0903277 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.072071337 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.094018118 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.072414698 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.072041844 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.089465822 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.07911835 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.090788621 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.096096202 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.101428403 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.07258559 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.095803895 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.076267252 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.098442086 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.078532647 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.109340112 seconds)
  done (took 6.800299693 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.077638073 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100769409 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.074924087 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.074443501 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089929463 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.073635119 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097315618 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073231841 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091845605 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.091826033 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089915319 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074542396 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092863342 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076573742 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090923727 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.074772093 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.100488973 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071351161 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.090231463 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076770363 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073311439 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.09648864 seconds)
  done (took 2.623833784 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.218560886 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101172972 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.135965974 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092223486 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.111408332 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.10950483 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.079855849 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099459929 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080067065 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100547279 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101560661 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080949407 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.111211618 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100527981 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083416827 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102465316 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080564539 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102592465 seconds)
  done (took 2.665416154 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.088866745 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.093180567 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.099034109 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093658985 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.076173761 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.096331726 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08254936 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.1083745 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.078114711 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.094052114 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.085836716 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095218736 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.078209514 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093246209 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07915101 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.094136755 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.078001639 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093418869 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086877309 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099743479 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099921241 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087730262 seconds)
  done (took 2.7550225 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09318829 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095003558 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.097335762 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.098409267 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.074275963 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.095092373 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.084572845 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.093775455 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.087269616 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.095585701 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077414995 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.095189523 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.083608616 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093187246 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.081450216 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093793285 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07827835 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093439382 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078415926 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.092437518 seconds)
  done (took 2.559077539 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117087876 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.108185179 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09299807 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119736038 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108169838 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090554838 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119876493 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.090264075 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107920824 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.121702224 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.091231527 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108427144 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103517817 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115022353 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107279664 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101869483 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120295472 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120449322 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091288356 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10715399 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10434761 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108168756 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.12001951 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.089979854 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.108129102 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09104535 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107960735 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097244819 seconds)
  done (took 3.747148185 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075475998 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075238259 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.091451764 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.073305023 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.091366182 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.073622708 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.072614079 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.091056712 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07588786 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.0910733 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.074894268 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.092633317 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075432835 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.075059486 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.093402691 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.0753831 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092083513 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.073255977 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073070626 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090613931 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.075643723 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093023364 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.075901705 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09132542 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073103999 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.07639482 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090918707 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07233199 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0933117 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073678304 seconds)
  done (took 3.224574766 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.084659335 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104714873 seconds)
  done (took 0.971049184 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.074480368 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110343189 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.073227316 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.079143339 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099618298 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.075703121 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.103209934 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099968697 seconds)
  done (took 1.496608537 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.100144434 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.114145809 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082614683 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.106776159 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.094644712 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.11323796 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.157380406 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.082314397 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.102535218 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.077643599 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.114782905 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.076800364 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.102810613 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082251321 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.103248464 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092200167 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.09518495 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.086682407 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.10227534 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.079142528 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101085598 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092189555 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106109567 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.083437208 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.097129764 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088555655 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.109606204 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.10633293 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.082386208 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106960072 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.083864962 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.08811695 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081287028 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100261203 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.077411718 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.112960307 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093784507 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.100347574 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.085825522 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100688084 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086082007 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093267894 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088618345 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.103321208 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088868809 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.101672021 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.083845689 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.093702441 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.078034525 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.099522171 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.075119242 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099008843 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.071076333 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105474004 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.086125489 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112994943 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.079748041 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.099566718 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.081336906 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.097922992 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.083743908 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.099108824 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087032488 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.098382964 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087084828 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.104609394 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085128906 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.093263031 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.070519451 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.096319138 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.08602038 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.120123432 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.088612505 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.100615642 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082653324 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.096119147 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.083652317 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101923152 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085976976 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.106090725 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.081782165 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10252894 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087714486 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098763803 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.080946408 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.101846121 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.078792354 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.098247685 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.077664367 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116089637 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.080065205 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.095438663 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.077569649 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.106133637 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.081524441 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099160024 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.078113293 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105171459 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.070482952 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.101331865 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082804292 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101797681 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.089202271 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101524734 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.082810492 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.103950031 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.087488176 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100823239 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.080540797 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.091542742 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08270985 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.098189289 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.085189768 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.089136929 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081775627 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.09960737 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.082572575 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.105942652 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.079037438 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.100010164 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08770179 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106935941 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080035817 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.092100895 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.082236939 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.099818653 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087800994 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.107272791 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.079825218 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.094309374 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.075482666 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.104603034 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.08159835 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.102106411 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.082412277 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.100802899 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.072004427 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.096852119 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.082384932 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.105584787 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.080482235 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.102513397 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.087858855 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.103433125 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.079653038 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.106611813 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.079613437 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.096284795 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.087472906 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.100709691 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.076478533 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106120025 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.081714403 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.097900516 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.082206864 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106033506 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.081852447 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.102395589 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.079708797 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.100477028 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083279309 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.095373516 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082916154 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.080068533 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.108453773 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.100144927 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.075723757 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.074182981 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.101714343 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.078626729 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.099254776 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.076946364 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.100632349 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.082950568 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.096518924 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.08028878 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.099318943 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.092647453 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108650341 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083515827 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.104093969 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.088336171 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.100127918 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.083960973 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099149446 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083029593 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101803831 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.086131654 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.102901705 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082727431 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.100726413 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.073287044 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.103206146 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086821062 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.095931076 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.078670381 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.095512421 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.081412346 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.107241276 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.081727244 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101051707 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.0795281 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102942589 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086825819 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.100390648 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.081485407 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.096177143 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.081836922 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.086117801 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.102027405 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083499382 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.106886829 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.101322249 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.076188639 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105295179 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079668219 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.104223723 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.075807751 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.078709501 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.096895227 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083489838 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.100840452 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.080981184 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.089342392 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087728912 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106331924 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.08276473 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.096403151 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.081971852 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109724514 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.080947604 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10363207 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.082145074 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.103706581 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096014932 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.096150403 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.081909149 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.108985394 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.081984513 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.089690719 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.085093657 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.098280406 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.076374043 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.098924467 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.087964452 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102303947 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084368809 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.102184552 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.071023296 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.100285565 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.08012209 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.078815603 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.095392968 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.105795651 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.082592448 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.100612166 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091132336 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103108056 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.083891098 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.102258338 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.08157015 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101949163 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.083424072 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.101799875 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083810555 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.098981882 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.077431595 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.100545299 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.077622064 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.078355309 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.098976066 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.081922545 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.101653002 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085631961 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.100158639 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086606034 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.100558621 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.083346249 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.118551905 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.097976078 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.078121654 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10154496 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085371649 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.100464249 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.081426491 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.095968996 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087262297 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.10049901 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088642989 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.099736918 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.074341785 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.101656642 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.081239919 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.102489383 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083404346 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101678919 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.081092357 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.081244213 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.100563757 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109753589 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.078688394 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.107757422 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.084308879 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103692526 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.081694233 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.101914633 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.080306982 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.097250457 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.082325077 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.102531368 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.083670798 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.099631963 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.084566907 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.101667525 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.081662733 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.079895412 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102071134 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.083374566 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.102424677 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.07229416 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.097371473 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.078454996 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.101460584 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086629194 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102374093 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.08066963 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099411566 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084260403 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.099649044 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.073903216 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.104317476 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084879094 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.101745584 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091435178 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.097002905 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.08252314 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111191783 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.071694976 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.099302817 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.07897269 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.097483957 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088225658 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102395715 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.088145052 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.102091714 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.078005572 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.073977197 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.102317721 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.080678163 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.091122069 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.077857076 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104575984 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.080042642 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098855948 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.083274591 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.103948225 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084075697 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105678577 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.082384286 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.101704357 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.082968452 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.093638976 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.078491899 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.095872287 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.08245944 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102596969 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.078456244 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.075468379 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.100949936 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.082271482 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.101937735 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.082294686 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.099919418 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087639046 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100665732 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.082701675 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107883355 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.073586577 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.102239913 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.082127635 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.101195887 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.078435345 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.102907444 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.084072649 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103597512 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.087500583 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.101219281 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.0861648 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101293888 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.079025648 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101510206 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.082370881 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.102023985 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.078534494 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.10313352 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088197064 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.097528055 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.083362943 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10171551 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.080204952 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.083212482 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.10305322 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.101911969 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086055933 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.083045709 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.10186629 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.085797723 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.101530027 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.084066481 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10359603 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.081575788 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.105485549 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.07913769 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.108036648 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.084118519 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103403904 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.081115293 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.098752301 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082779638 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.100863491 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.080830263 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.107710687 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.083623542 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.097677712 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.079076838 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.098966357 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.08277485 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107579345 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08946253 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.102207956 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.084405601 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.096182389 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.075296037 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103640971 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.079368616 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.101329725 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.085551525 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106002292 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.08380342 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.099652624 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.081086143 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.106475286 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087355878 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.104194216 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.079358787 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.104620676 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.083997281 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.101927086 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.080575983 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.100937011 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084600552 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.103841982 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.081676355 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.098358203 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09192952 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.106449759 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084778517 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.099926178 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.08490202 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.101264994 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.076958151 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103589411 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.082589225 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.105360888 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.082805737 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102137165 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093944379 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.097696015 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.082958777 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107895787 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083005859 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.107780589 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.077348111 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.103614211 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084774024 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10469509 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078096533 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.097866074 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.079585748 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.102277413 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.079585813 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.077141504 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112686305 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.107432238 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.083577248 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101059756 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080599291 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.076830166 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.096642855 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.078387964 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10398647 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.082581148 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.110143331 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.07891042 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.098692457 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.07649508 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101660414 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084324399 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.1040674 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.075250254 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.09616776 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.080047434 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.102635878 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.09023619 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099856571 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.082705614 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102983636 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.083221633 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.098635281 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089078992 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.093810201 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.084326298 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112971675 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.083637124 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104025001 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.085755452 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108335111 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.084187647 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.096772631 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.08406624 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.102706784 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.084033149 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.10439317 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.086666225 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117731357 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085047554 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.097755555 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.08141936 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.101828317 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.079849895 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.109919262 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085335247 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.104138833 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.084720153 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.100629916 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08515479 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.109119107 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084811684 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.103107442 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.083605022 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100929952 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082968464 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.099468482 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.08174975 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103954225 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.084571354 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101678653 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.085815264 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.098326584 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093898161 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.108268622 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.085191829 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.09409205 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.078561908 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.097695515 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.077047836 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103542662 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.076852151 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.080383461 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.10033873 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.080819367 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.105023097 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.084651126 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.103033226 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.08495705 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101629143 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.072846986 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.105859399 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.083024697 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104769839 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.075419209 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.102862762 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.085304312 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.107226901 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088969022 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.100219022 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.082693435 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.101805613 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086004845 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097403168 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.086882702 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100456701 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.082139463 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.098368161 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084133644 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.084174389 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.104168419 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084852828 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105175288 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.083118782 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.107165856 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105101327 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.077203026 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.075984217 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.106384919 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.080201828 seconds)
  done (took 55.727048787 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.142720546 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08417779 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074217476 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094230021 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121189644 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078187429 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093092714 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.078007724 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.098298264 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.088076337 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.093058195 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073895619 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115954276 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.121929766 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119011595 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.089507622 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.092624912 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.078643692 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093521523 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07880373 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114666373 seconds)
  done (took 2.854719539 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.099387264 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.112234024 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.110290399 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.09584201 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104600305 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.112054052 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.090596818 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112178733 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.116701447 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087188432 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.115706706 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111710977 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.086192332 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.106340113 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106265125 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089410823 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.116037655 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084732451 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.113133636 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.11012479 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089108796 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.109819614 seconds)
  done (took 3.108585649 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.08717929 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.082044912 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.106925128 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.073492314 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.101958459 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.073591257 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.108050103 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.07646323 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.106601186 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.082561651 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.099989039 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.083215152 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.106486955 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.07363312 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.080092038 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.095778109 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.086643487 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.102038107 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.084078388 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.09562346 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.122375733 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.076772428 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.076341464 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.09992751 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.091374192 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103283113 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.082238324 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.101825444 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.079853292 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102156855 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.076699933 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.10381422 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.085984497 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.099038806 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.080154137 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101226114 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.082143849 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.076248761 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099006195 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.086105414 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.096370145 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083367831 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.109486895 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.080087323 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.096901797 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085271759 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.101807811 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.073535952 seconds)
  done (took 5.193344777 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.11368196 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.151139763 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.080484341 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.141659335 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.118897523 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.092529498 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.103810389 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141662036 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.076431084 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.100975808 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.120361978 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.09615129 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10371552 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088220171 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.105782671 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101521464 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084925945 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.097926123 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.088448636 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.100441919 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.087927609 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.105705528 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.11662401 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.093918371 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107080974 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.08123197 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.099139154 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107262902 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.094072247 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.108529301 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107400027 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089417795 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.118485222 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.103700286 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.082052723 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.104550514 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.100259566 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.102585846 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.085609795 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.09702837 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.084994924 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108731712 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.10494179 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.100252303 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102728486 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.084532863 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103273606 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.075026724 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.114137586 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.104407014 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.093090212 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.116415182 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106798185 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.083163456 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108491014 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.117194104 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.082783468 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.099555025 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.086558425 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.112767749 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.076125697 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107026412 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.116565676 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.084596948 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.111403576 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.116272531 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.084505989 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107114994 seconds)
  done (took 7.873265747 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111337176 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.108976648 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099310011 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120713627 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107946824 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.087760929 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10773345 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.107831609 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.089343232 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115763945 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.087858868 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.155271781 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.104670124 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095067038 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.109168406 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109066391 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.08842925 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107672794 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.088281255 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107061027 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.087541882 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119517201 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107750607 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120679737 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.101602777 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.104557594 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087296357 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.108050322 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119944905 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.08827993 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12102985 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.108090125 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.08763825 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120457825 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.122095477 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.088709184 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102235233 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.087677018 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.108247999 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.106962725 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.085403022 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119319737 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087815031 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105327797 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088408408 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.108632761 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119675913 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.12083937 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094838543 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116508566 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.107848818 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09988561 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.108305253 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.088483717 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120582052 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.128982953 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120280905 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120344294 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.088508024 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.12041849 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121350972 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.129710651 seconds)
  done (took 7.449300042 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079292636 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07884589 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098169501 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.077345123 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099639944 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077400374 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.078607294 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.099092438 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081332271 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099785358 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079864292 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096839631 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077073794 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079373861 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.096740498 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076722902 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096239969 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.076873825 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079179356 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096987622 seconds)
  done (took 2.568223448 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.087926573 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.120344608 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.079875258 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107712711 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.082509077 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.107506434 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.081009153 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102035028 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080333706 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102519413 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092253447 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.113096514 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100789476 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.087799294 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.11342132 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106677044 seconds)
  done (took 2.411654873 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.0998825 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120639139 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.125314863 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084141278 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.097788455 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.087633584 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.102247654 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.075746484 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.075077973 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.109016839 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085015429 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.106352551 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.083066949 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.098410396 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.079931511 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105846274 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.075454156 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.103904007 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.08260639 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.12456223 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.084299219 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104029794 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.082969082 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.102879696 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103624202 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.086053832 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106498689 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.077884086 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.098481239 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.0837148 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.102747097 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.087116051 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.096607993 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.085065897 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.097697548 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.077268333 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.081511019 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.103433486 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.105635736 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.082856985 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.076952214 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.103502562 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.081953549 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.102134185 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.075150914 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.10287122 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.075166295 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.105652116 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.081642767 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.102598298 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.082773903 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.108605431 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.085352305 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.111759871 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088842485 seconds)
  done (took 6.001965606 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094826793 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103527268 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085202082 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.098443632 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083714301 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.108617211 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.085084932 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.102998351 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082316584 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096775858 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.082792334 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.104384856 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083406406 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104226983 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083650863 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104831289 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.074902037 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.080510802 seconds)
  done (took 2.512704152 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.08610677 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079572698 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.108127582 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079780237 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.101132025 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081473058 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09651631 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.078961798 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098807993 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.079534799 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099440454 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.081988119 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098075343 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.082516756 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.078999034 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100888568 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.0810401 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098807967 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.07914001 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096352677 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081962539 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098146761 seconds)
  done (took 2.820746449 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.096949591 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.13168388 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.093849483 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.142302488 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.105106509 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.083873686 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.113979424 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.084939508 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.123247843 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.083707283 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.104167442 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.083726889 seconds)
  done (took 2.098907973 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103944597 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136886046 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080692338 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103190087 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093721605 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106483193 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105302722 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085037188 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119935215 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11922936 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084631291 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119949237 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119963454 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096995039 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114516181 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114177971 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084969706 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106539462 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080989382 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129235166 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105149437 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119647714 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084771718 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106210063 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084573492 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117517842 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119416469 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119400099 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085173921 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119694711 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11524062 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08516011 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119590628 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119636661 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082523716 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119007569 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085566364 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12746085 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114904841 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116747504 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082598541 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114483744 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120306758 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092981036 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119957232 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105528081 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092826475 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105494171 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085645612 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135042473 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114406526 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117304653 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092986161 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119537291 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119852045 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135161837 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119910957 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117985422 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093836163 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118898097 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117664485 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094587251 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117183907 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119521547 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114476389 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097848622 seconds)
  done (took 7.977793959 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11965206 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102165306 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085563687 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120375426 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117972127 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105831949 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085995126 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106205844 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08574849 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102631806 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153830767 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085561405 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118876581 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117695491 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085749237 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106035856 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084952877 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118834203 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103085699 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137275637 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085655252 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118335208 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117447141 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118020839 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099179171 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115510933 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105523656 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086472695 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107350377 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086705134 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114345543 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084907295 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118420066 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102923159 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097158472 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108111357 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106498522 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093691216 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106826875 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094279712 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118107639 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130002087 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106952625 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086069328 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119753801 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106062247 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085556329 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103201289 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086113216 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103228327 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121063207 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100308719 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120379338 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118175868 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085905992 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107775829 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105344209 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085703683 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106816413 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095099038 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118528332 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10621931 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13559769 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085871001 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106556555 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118547628 seconds)
  done (took 7.836547382 seconds)
done (took 150.332554209 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098917214 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.137357144 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.094986489 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.165308749 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.081384016 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.136883062 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.114641046 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.117337784 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.080629062 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.101859044 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.081620038 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.104157424 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.147467122 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.079928108 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.102011875 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.083941527 seconds)
  done (took 2.586364153 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.178056463 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.284102193 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101083429 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.108347126 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.087906271 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.105227243 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.085908368 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.109248653 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.082138966 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.114340553 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.083742594 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.104896812 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.09196629 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.104819039 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.082552391 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.103933108 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.11303468 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.086079502 seconds)
  done (took 2.892307556 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.11236478 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145992057 seconds)
  done (took 1.126227329 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.116811184 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.18204777 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.294612079 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.390543612 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.110009785 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.125288666 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157792416 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.10009991 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.219280034 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.106024278 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.126860832 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.108589199 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.112544382 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.115542427 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.111415338 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.087905578 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.135895753 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.088973795 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11000994 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.088204851 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.133165734 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.109161553 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.093223238 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.10975099 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.184812356 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.123564586 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.088006374 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.109563977 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.089029683 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.109308552 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.093115009 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.121650497 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.123547502 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.166149536 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.113295303 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.161657695 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.115928252 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.086857461 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.108718162 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.086257395 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.112909613 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.112307288 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.102413002 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.107840908 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.087334602 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.11547286 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.089485769 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.109147715 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115531757 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.096331733 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.116527887 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.09245579 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.182015914 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.095793373 seconds)
  done (took 7.613862577 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.785504156 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.149755761 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.085870082 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.886437603 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138841964 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100978262 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.789937147 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.129364659 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.235897816 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.781686059 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.126399434 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122108101 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.208921323 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.271006432 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.123323799 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.335943204 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.690052625 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.100587316 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.137062536 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.148785429 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.093714664 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137045896 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.127939256 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.429754119 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.087188625 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108240335 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.092338759 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.122106237 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.157917985 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.108076905 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.090696684 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.201128007 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.263720097 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.179434511 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109448881 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.085738759 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107242914 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.168672642 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267279349 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.194004068 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.174109404 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104842233 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.085803959 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.121160129 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.128651603 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.082954949 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162492723 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.193327616 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.173562047 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.089809176 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.122033312 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.116348589 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.098466567 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.180816509 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.084237964 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.335803302 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.338283452 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086048001 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116539471 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.104997039 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266513338 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.107931173 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.204516212 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.135437521 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.211861007 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.086106921 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.789099332 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.165331456 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.084008144 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118865136 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.115676897 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.092553289 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.120458869 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.164808689 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.390838533 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123277701 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.091191184 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106508868 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.216850324 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085799349 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108987568 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163050299 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.10922117 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.094344093 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124980286 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122845513 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.16975459 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.247156524 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122116803 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.095145167 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114508516 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.121147239 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.088318979 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.208204578 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218063481 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.158681328 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.211482117 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122165854 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.162996075 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.187412876 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098889858 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.169949505 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.117760465 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127369748 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099174989 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217666313 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.140983306 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.108596547 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092526918 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.115710467 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.143092781 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08956569 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.115426308 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.169580635 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.459802198 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.164623773 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.105981258 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.089565194 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117660192 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160167229 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116321581 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.239564286 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119068297 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.16626838 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11658157 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.082805581 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.117568374 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.164085891 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.1243676 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.094572305 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122232265 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.117103358 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.250583482 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.21987235 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.103961017 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240940176 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.178002952 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.096585818 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.196937241 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.096397352 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.16670334 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119528801 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120266364 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.088119931 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.781706474 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121726867 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.094958896 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114103769 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.185470933 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086254943 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.109097791 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.086364789 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.081239785 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.7971286 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.110375504 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.084161146 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.086633024 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119773215 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.117018141 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.093097745 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115179871 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162586246 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.23453731 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121787273 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095126255 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.107363381 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.159291491 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.088061909 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.108834263 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.086831445 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.108389951 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.096853731 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.113290543 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.088678674 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170362678 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.180658002 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.197418836 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.579068869 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.085098086 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.109099351 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.232432916 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08644333 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.305814259 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11653761 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.20465286 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.187437063 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.084310395 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.335981639 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.168078185 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.186259743 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.088144316 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.193631947 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.084184593 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.115278568 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.161425023 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.085218788 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117013873 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.157405137 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125466622 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123068475 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.124749826 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.10791377 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.226692498 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.083258729 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.190228807 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.088825884 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120663651 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.306938316 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086308192 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129665701 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.160839937 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112326873 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.087693438 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.699190647 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.108621384 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.09658589 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119803259 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.229909844 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164453582 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116577978 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.094358022 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122260608 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.161969483 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.234094574 seconds)
  done (took 43.462246166 seconds)
done (took 58.541696528 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.304486212 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.257406562 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.287473878 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.189672817 seconds)
  done (took 2.009246915 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.174000027 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.147035703 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.119842375 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.105257357 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.14902829 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.082958393 seconds)
  done (took 1.670611043 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.429093392 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.381621277 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.305738717 seconds)
  done (took 2.013285243 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.246946422 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.270406597 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.320328701 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.424488974 seconds)
  done (took 2.259037616 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.200534882 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.097355737 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.118590559 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.135446532 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.166591122 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.170253132 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.138246643 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.147268337 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.103914171 seconds)
  done (took 2.219014267 seconds)
done (took 11.065861795 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.27841351 seconds)
    (2/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.191533757 seconds)
    (3/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.275948194 seconds)
    (4/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.16899985 seconds)
    (5/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.257559718 seconds)
    (6/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.241543129 seconds)
    (7/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.145496402 seconds)
    (8/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.129950658 seconds)
    (9/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.094319951 seconds)
    (10/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.115517366 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.127579433 seconds)
    (12/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.147448312 seconds)
    (13/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.196529426 seconds)
    (14/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.127125423 seconds)
    (15/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.098470084 seconds)
    (16/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.120887654 seconds)
    (17/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.12256954 seconds)
    (18/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.091652382 seconds)
    (19/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.182241184 seconds)
    (20/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.162412465 seconds)
    (21/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.136924784 seconds)
    (22/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.107517939 seconds)
    (23/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.217892995 seconds)
    (24/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.116111976 seconds)
    (25/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.097615069 seconds)
    (26/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.256448514 seconds)
    (27/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.148086804 seconds)
    (28/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.215772053 seconds)
    (29/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.123511155 seconds)
    (30/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.089239072 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 0.219128699 seconds)
    (32/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.12897505 seconds)
    (33/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.094836629 seconds)
    (34/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.147079003 seconds)
    (35/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.093290406 seconds)
    (36/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.226059633 seconds)
    (37/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.096831376 seconds)
    (38/286) benchmarking ("sort", Float64, false)...
    done (took 0.169386015 seconds)
    (39/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.222528326 seconds)
    (40/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.085890691 seconds)
    (41/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.117838999 seconds)
    (42/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.098932169 seconds)
    (43/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.093959118 seconds)
    (44/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.120686655 seconds)
    (45/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.172142599 seconds)
    (46/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.118906697 seconds)
    (47/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.092759836 seconds)
    (48/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.114553296 seconds)
    (49/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.098173225 seconds)
    (50/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.145484861 seconds)
    (51/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.121598495 seconds)
    (52/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.096135264 seconds)
    (53/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.119281847 seconds)
    (54/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.091158512 seconds)
    (55/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.116579723 seconds)
    (56/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.086989377 seconds)
    (57/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.205809896 seconds)
    (58/286) benchmarking ("sort", Float64, true)...
    done (took 0.225657417 seconds)
    (59/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.207933228 seconds)
    (60/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.112896463 seconds)
    (61/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.071611233 seconds)
    (62/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.088036012 seconds)
    (63/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.110911688 seconds)
    (64/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.087474872 seconds)
    (65/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.121506553 seconds)
    (66/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.218652877 seconds)
    (67/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.095619463 seconds)
    (68/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.184727089 seconds)
    (69/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.132180859 seconds)
    (70/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.098596623 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.138981311 seconds)
    (72/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.235616329 seconds)
    (73/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.121285796 seconds)
    (74/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.201834964 seconds)
    (75/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.09079272 seconds)
    (76/286) benchmarking ("sort", Int64, false)...
    done (took 0.08268342 seconds)
    (77/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.105013 seconds)
    (78/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.084313923 seconds)
    (79/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.115301796 seconds)
    (80/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.185143577 seconds)
    (81/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.082571285 seconds)
    (82/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.202401788 seconds)
    (83/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.19336115 seconds)
    (84/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.151531746 seconds)
    (85/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.074746433 seconds)
    (86/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.077830418 seconds)
    (87/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.146012044 seconds)
    (88/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.146712911 seconds)
    (89/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.088871776 seconds)
    (90/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.133477403 seconds)
    (91/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.08943777 seconds)
    (92/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.161246335 seconds)
    (93/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.091015513 seconds)
    (94/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.177133817 seconds)
    (95/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.117344372 seconds)
    (96/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.112233851 seconds)
    (97/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.173109734 seconds)
    (98/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.193712494 seconds)
    (99/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.099230191 seconds)
    (100/286) benchmarking ("sort", Int8, false)...
    done (took 0.189659354 seconds)
    (101/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.140913138 seconds)
    (102/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.107597437 seconds)
    (103/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.135401131 seconds)
    (104/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.097981709 seconds)
    (105/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.114648813 seconds)
    (106/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.090596897 seconds)
    (107/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.232637137 seconds)
    (108/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.123381156 seconds)
    (109/286) benchmarking ("sort", Int8, true)...
    done (took 0.215264961 seconds)
    (110/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.179255042 seconds)
    (111/286) benchmarking ("sort", Bool, false)...
    done (took 0.179939358 seconds)
    (112/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.095894429 seconds)
    (113/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.11495928 seconds)
    (114/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.090947308 seconds)
    (115/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.112578128 seconds)
    (116/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.135430057 seconds)
    (117/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.083948395 seconds)
    (118/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.132082456 seconds)
    (119/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.089998935 seconds)
    (120/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.122296083 seconds)
    (121/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.114779906 seconds)
    (122/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.153333998 seconds)
    (123/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.112600282 seconds)
    (124/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.096510069 seconds)
    (125/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.097488435 seconds)
    (126/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.087899042 seconds)
    (127/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.120685242 seconds)
    (128/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.090830252 seconds)
    (129/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.118499663 seconds)
    (130/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.128739089 seconds)
    (131/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.186599549 seconds)
    (132/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.079692506 seconds)
    (133/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.192052989 seconds)
    (134/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.096133923 seconds)
    (135/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.078325301 seconds)
    (136/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.106928623 seconds)
    (137/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.09131987 seconds)
    (138/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.080623077 seconds)
    (139/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.1208343 seconds)
    (140/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.183399361 seconds)
    (141/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.09955393 seconds)
    (142/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.186937931 seconds)
    (143/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.096411888 seconds)
    (144/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.123857468 seconds)
    (145/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.106949638 seconds)
    (146/286) benchmarking ("sort", Float32, false)...
    done (took 0.148596913 seconds)
    (147/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.098055864 seconds)
    (148/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.095201163 seconds)
    (149/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.122313625 seconds)
    (150/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.073382401 seconds)
    (151/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.111742611 seconds)
    (152/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.201055135 seconds)
    (153/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.087387426 seconds)
    (154/286) benchmarking ("sort", BigInt, false)...
    done (took 0.229015786 seconds)
    (155/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.115622822 seconds)
    (156/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.086688129 seconds)
    (157/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.112196221 seconds)
    (158/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.123543692 seconds)
    (159/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.089082287 seconds)
    (160/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.181267973 seconds)
    (161/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.075302083 seconds)
    (162/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.097204648 seconds)
    (163/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.090757028 seconds)
    (164/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.11460097 seconds)
    (165/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.133361605 seconds)
    (166/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.11359808 seconds)
    (167/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.086519709 seconds)
    (168/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.120158081 seconds)
    (169/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.076086508 seconds)
    (170/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.112996655 seconds)
    (171/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.084373141 seconds)
    (172/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.095690207 seconds)
    (173/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.089116168 seconds)
    (174/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.113993051 seconds)
    (175/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.130058558 seconds)
    (176/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.096522422 seconds)
    (177/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.073261446 seconds)
    (178/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.135242683 seconds)
    (179/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.075212343 seconds)
    (180/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.108911598 seconds)
    (181/286) benchmarking ("sort", Bool, true)...
    done (took 0.216185227 seconds)
    (182/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.08653338 seconds)
    (183/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.177176926 seconds)
    (184/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.086588277 seconds)
    (185/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.114744925 seconds)
    (186/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.071526247 seconds)
    (187/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.106691767 seconds)
    (188/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.136943891 seconds)
    (189/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.200167459 seconds)
    (190/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.1455753 seconds)
    (191/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.130660387 seconds)
    (192/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.07500289 seconds)
    (193/286) benchmarking ("sort", Float32, true)...
    done (took 0.2286454 seconds)
    (194/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.072405471 seconds)
    (195/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.113773719 seconds)
    (196/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.079711581 seconds)
    (197/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.11198974 seconds)
    (198/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.170140631 seconds)
    (199/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.147143561 seconds)
    (200/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.111621761 seconds)
    (201/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.096532661 seconds)
    (202/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.120881729 seconds)
    (203/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.098988161 seconds)
    (204/286) benchmarking ("sort", BigInt, true)...
    done (took 0.269106979 seconds)
    (205/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.084762265 seconds)
    (206/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.118521447 seconds)
    (207/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.102149451 seconds)
    (208/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.148114746 seconds)
    (209/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.079186838 seconds)
    (210/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.1830139 seconds)
    (211/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.09017294 seconds)
    (212/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.098988175 seconds)
    (213/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.106424698 seconds)
    (214/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.110360468 seconds)
    (215/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.08884576 seconds)
    (216/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.116278499 seconds)
    (217/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.086215573 seconds)
    (218/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.097347011 seconds)
    (219/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.087490379 seconds)
    (220/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.09581322 seconds)
    (221/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.079321851 seconds)
    (222/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.11141858 seconds)
    (223/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.08912107 seconds)
    (224/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.106728256 seconds)
    (225/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.072987905 seconds)
    (226/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.102231736 seconds)
    (227/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.15741343 seconds)
    (228/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.095901874 seconds)
    (229/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.074423221 seconds)
    (230/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.071053206 seconds)
    (231/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.105492001 seconds)
    (232/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.089751594 seconds)
    (233/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.107864451 seconds)
    (234/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.077660324 seconds)
    (235/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.096669572 seconds)
    (236/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.097917169 seconds)
    (237/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.099030552 seconds)
    (238/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.08783052 seconds)
    (239/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.099802723 seconds)
    (240/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.075455841 seconds)
    (241/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.108053547 seconds)
    (242/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.154581571 seconds)
    (243/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.095910741 seconds)
    (244/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.154261741 seconds)
    (245/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.133691465 seconds)
    (246/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.073190317 seconds)
    (247/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.09845174 seconds)
    (248/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.09179057 seconds)
    (249/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.114693728 seconds)
    (250/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.091385732 seconds)
    (251/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.121365129 seconds)
    (252/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.130888085 seconds)
    (253/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.07387793 seconds)
    (254/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.076473042 seconds)
    (255/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.09618498 seconds)
    (256/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.178588256 seconds)
    (257/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.090614016 seconds)
    (258/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.095912007 seconds)
    (259/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.087260123 seconds)
    (260/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.072477236 seconds)
    (261/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.096967536 seconds)
    (262/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.090629362 seconds)
    (263/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.10445096 seconds)
    (264/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.108484849 seconds)
    (265/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.176334881 seconds)
    (266/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.112442554 seconds)
    (267/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.079050863 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.117032246 seconds)
    (269/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.084767696 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.109705916 seconds)
    (271/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.090659039 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.121732417 seconds)
    (273/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.091913495 seconds)
    (274/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.09474755 seconds)
    (275/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.084681677 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.109798858 seconds)
    (277/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.088584313 seconds)
    (278/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.073101171 seconds)
    (279/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.09762395 seconds)
    (280/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.090842053 seconds)
    (281/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.102241017 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.086464224 seconds)
    (283/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.114154536 seconds)
    (284/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.108471671 seconds)
    (285/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.114959015 seconds)
    (286/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.090910968 seconds)
  done (took 36.402392146 seconds)
done (took 37.308107025 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.103916798 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.15049726 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095967114 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.138219664 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.097833116 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.1238965 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.117526521 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.09620042 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.12141915 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.099481199 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.119895162 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.079296404 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.118364185 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.095372304 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.119071717 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.115942507 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.121746855 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.091136186 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.110774914 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.087664384 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.110480978 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.087908568 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111796447 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.07927625 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.117979474 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094070284 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.114055631 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.094934404 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.111703869 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.085598117 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.109626083 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.091264762 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.109084932 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.097913207 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.113184077 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.08728101 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.119478267 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.093980888 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.113380002 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087415352 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.116170701 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087904393 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.115344179 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.092434302 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.087785336 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.110012025 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.086846108 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.122029235 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.140369741 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.087630227 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.117547922 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.095192899 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.119177361 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.091012569 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.1091034 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.087985962 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.11155872 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.116569532 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.110551181 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088953568 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.117051217 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.09103954 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.109424893 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.087074088 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.087175533 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.117741299 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.094890819 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.109586597 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.094465417 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.113672771 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.08392548 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.111343462 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.085644912 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.109590004 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.094361922 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.118379152 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.083118783 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.111477988 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.091240269 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.112403732 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.086747634 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.109067453 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.089302035 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.112601791 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086115074 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.079249971 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.110011794 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.089751636 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110037822 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.087238593 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.113607543 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.090723434 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113425585 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.095281783 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111323094 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.088537494 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110762699 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.088124137 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113694587 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.086245938 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.10682513 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086622318 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.114848645 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.085073632 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.111675105 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.098390163 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.109744402 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.089929725 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.110816112 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.087054405 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.124280038 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.09517449 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.111416439 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089230515 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.108296281 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.090365232 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.109336127 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.085570027 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.08520123 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.111438962 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.0883178 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.112028108 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086027513 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.114636436 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.098173388 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.107442701 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.104717796 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.109911512 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.087919805 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.113837459 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.08775655 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.109006146 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.087030414 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.106009407 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086582744 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.109430617 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.090933054 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.085976882 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.111950738 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.087695661 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.111813699 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.089079027 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.112671548 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.088891947 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.10881982 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.080903737 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112608378 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08679269 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113272119 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.088280558 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111328491 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.084057479 seconds)
done (took 16.473263301 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.099219452 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.186092385 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.146743675 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.14859093 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.145637812 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.105514345 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123069921 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.143413197 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.096426032 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.14142613 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.144119863 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.109278733 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.149397386 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.120170566 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.128931616 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.094726099 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.118142349 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.104465511 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.153174363 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.138404617 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.120348571 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.119715163 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.139822374 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.138900165 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.09469631 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.138322614 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.122573151 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.09418884 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.12158861 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.112926163 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.135318359 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.099115647 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.120485166 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.13135814 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.102097054 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118439966 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.104972367 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.11510625 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.119436269 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.095383568 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.133971315 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.106785066 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.116240322 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.126987528 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.094323524 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.1225205 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.094117833 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.117815594 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.094703301 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.113939131 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.099036716 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.139597877 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.116752745 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.097022125 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.11960395 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.119350924 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.097879418 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.122650263 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.097049297 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.121920596 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.118584002 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.097676374 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.12404111 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.136023849 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.094545372 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121014784 seconds)
  done (took 8.840642868 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.114000353 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.145563857 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.125129503 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.102647271 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.121877888 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.08355604 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.107512885 seconds)
  done (took 1.767306646 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089614507 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.139166909 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.117494654 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.141969468 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.134679559 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.12123441 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128118491 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.085369518 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.134269632 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.121775331 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.113569721 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.164518149 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.086214169 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.122013415 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.144738243 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.08566405 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.144579683 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.085340032 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117490203 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.1421468 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091140588 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.131696122 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.100433247 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.111138668 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.106930759 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.112098936 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.175686806 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096597429 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.109355172 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.090928888 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115660743 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.180027376 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.107135472 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.120730985 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.083541198 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.138054132 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.130670731 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090631748 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.134272377 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.091238654 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.131052003 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.091691975 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.117128492 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.090620953 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117788101 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.100260434 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.122260503 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.118245972 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091133675 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.137909485 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.09725461 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.133305799 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.086882263 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.114126614 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.096111928 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116743665 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.099516958 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115126112 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.138307567 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.092611401 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.136332316 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.111918043 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.131114218 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.137414283 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.102646224 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.132901874 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.106223245 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.11663199 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092779651 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.120110613 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.137174205 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.089079866 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.121295851 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.10044246 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118775747 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113851609 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.139064678 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089780967 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.123269455 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.089504442 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.114677793 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.086597645 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.126904151 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.089377435 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112898207 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.103150699 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.122208607 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.115972641 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.090025289 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.132809294 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.090201795 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.122468521 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.096350253 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114305006 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125938265 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.114199285 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.121823721 seconds)
  done (took 12.1039874 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.087498177 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.087890855 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.117157849 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.089473107 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.113024636 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.088262019 seconds)
  done (took 1.552622578 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.118808842 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.114711418 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.102257825 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119048808 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.154392142 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.111170257 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.135833102 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096140516 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.130787824 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.125393882 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.111092217 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.137323512 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.115976154 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.118438883 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.135412867 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.09396516 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.13732958 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.090713969 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.125849036 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.090394193 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.129862913 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.093759728 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115877208 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.109203632 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119740612 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.11955204 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.09479057 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.126016353 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.100582107 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122471391 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.093548702 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.11992985 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.094111157 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.121878758 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.135884566 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.094937426 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113501597 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.097204028 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.121044482 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.095397067 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.137479317 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.090632946 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125234781 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.096464485 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.12137802 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.119207674 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.0975003 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.1182352 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.110552467 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121668254 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.096798308 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.119131465 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.095592219 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.122170039 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.093564332 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121881715 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.096050228 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.135252516 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.118845304 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.094629967 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.11597627 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.095470388 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122163642 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.094101448 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.120938712 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.096134643 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.11865889 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.0903247 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115747535 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.093309245 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.121431773 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.090683339 seconds)
  done (took 9.067989638 seconds)
done (took 34.291874626 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.669631641 seconds)
  done (took 1.646492273 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.821436544 seconds)
  done (took 1.797653099 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.460990517 seconds)
  done (took 18.463195067 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.470467623 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.556482677 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.989896572 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.160539507 seconds)
  done (took 3.155528924 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.956338541 seconds)
  done (took 1.945734098 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.292764361 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.234601497 seconds)
  done (took 1.50509365 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.809901371 seconds)
  done (took 1.797794111 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.493840998 seconds)
  done (took 2.479470606 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.340530044 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.195921602 seconds)
  done (took 1.52826927 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.567804241 seconds)
  done (took 1.550180262 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.320691187 seconds)
  done (took 16.307697398 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.242692105 seconds)
  done (took 1.250250596 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.291913347 seconds)
  done (took 1.285294477 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.568054416 seconds)
  done (took 4.558730036 seconds)
done (took 60.253930353 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.101252119 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.100024776 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.125175083 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.096782457 seconds)
  done (took 1.415962956 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101024079 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119475636 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.097780433 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120002886 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.101726421 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.120347901 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.094299398 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.163431692 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119047069 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096129234 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120730649 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.093990771 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.122059958 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.092900833 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.117765802 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.095825717 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.123086786 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.093865767 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.121943288 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.094999779 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118131595 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.095280905 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.122824938 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.092788616 seconds)
  done (took 3.638380441 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.098045946 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.091382348 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.118427845 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.091003222 seconds)
  done (took 1.398795272 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.104559255 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.133256701 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.106004735 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125795512 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.106877858 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.132076554 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.114795523 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.08942633 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.091441765 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.124730981 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091361504 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.136041486 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.132175508 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.08534215 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.127737208 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.087722379 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.112466523 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.106507153 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125135871 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.101019326 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.114983276 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.098864091 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.123551233 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.104264717 seconds)
  done (took 3.677098499 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.172376518 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128127952 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139684818 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095710157 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.164449232 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141354843 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088086427 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.14128651 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.08905356 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.126987312 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.093788892 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.166617945 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.124462355 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.092602642 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115296227 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.095868957 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.124657927 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.098943366 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.117457968 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.103253139 seconds)
  done (took 3.425072271 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.09874277 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.115342636 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.086390597 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.087906859 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.12208501 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.092118978 seconds)
  done (took 1.610033729 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.088674395 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.084775898 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.11078327 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.084896222 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.115136063 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.085627281 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.084674907 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.111149663 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.08526759 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.111212628 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.084865686 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.109914538 seconds)
  done (took 2.162727714 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.381353097 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.114542939 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.114261002 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089958215 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.094083922 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.113764015 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.128029198 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.089883793 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.145309376 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088070258 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.114074259 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091567414 seconds)
  done (took 2.570132645 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205380219 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093924236 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259902523 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.347068809 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154005151 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16279248 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279335642 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161701014 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.179762875 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13590416 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191215559 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155024282 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151955241 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174320853 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110006784 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.173928538 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171515541 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196419081 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146518165 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20103341 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160702687 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164187868 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17623094 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14984843 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134545733 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128389526 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.116246955 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124176202 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169722027 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166405161 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171677971 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145395581 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11005123 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222695694 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209429663 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176001658 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.304236518 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130412346 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.187819872 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.179243609 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246758928 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112741997 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191132334 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150746498 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127438087 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179428648 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154714973 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.178937468 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.101247734 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138624596 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180224653 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172641081 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.177158647 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134226842 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301203661 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142540421 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.144886108 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180148225 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183449386 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18632956 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164927494 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.117676113 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182875118 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178835225 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176915962 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.142731336 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.164160568 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095112771 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171193859 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191730881 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174249841 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160972583 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.20989573 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132550387 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134646017 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165765079 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150465454 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174467142 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156915513 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.091596666 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146655444 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135345523 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097590441 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.185379245 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12008596 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200240959 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105338829 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.211442996 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200910091 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155794044 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130325443 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160506115 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162932782 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143977163 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.117345049 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116497426 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.158030358 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154332546 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130297438 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126728841 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139508852 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.126094109 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149994613 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.093626093 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15918833 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.131628841 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163065862 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134668829 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.126026106 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161758499 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147124363 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.128317368 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166842325 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181292349 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130635402 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129668015 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189567862 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157813942 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105009878 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171402597 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18213464 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.163269317 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13523204 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167523774 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189507953 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138561114 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185431534 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111026109 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130721587 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.148198921 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156500579 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153501165 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.127196168 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12713024 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.14966433 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189130981 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.123939525 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107266559 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171363568 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124440029 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098632356 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13982905 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133155751 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.112958372 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.145212921 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.13374013 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153428505 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130139222 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151057359 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156547912 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140086591 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188185988 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130563145 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.156702526 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117342239 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.1178161 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.177365185 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180860168 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099532405 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221164554 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.167039212 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194699186 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160984999 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129455051 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174024707 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098981057 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.117511343 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163544275 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1300998 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159202806 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.179295478 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219923468 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.165637524 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.14975027 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118862428 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164573129 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.170826634 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153860012 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.142943235 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159856364 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164060974 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.091919609 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.121440327 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.124677902 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112245954 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128340642 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101706482 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204397529 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160523109 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184069652 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158144406 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111885036 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178594502 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.124174552 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161395604 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.169661623 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136236996 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.179089061 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178082415 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163956147 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112263116 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172364045 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.118987802 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094302747 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.13184196 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163246403 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102553614 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13128685 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140336472 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178022383 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171916578 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148177204 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202466793 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163251695 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188126596 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.121192085 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.133745637 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167164124 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155697569 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.179301213 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106048552 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.153601808 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174646268 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139854575 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185223947 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158664153 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16541434 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194719498 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.153933819 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127622553 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118911162 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161941893 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137233692 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163605505 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142616737 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105065726 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15178605 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.131186389 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095212917 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203822271 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11304688 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176781786 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.154515626 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169699428 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123766061 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139897381 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158289114 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115791786 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.115714914 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167347971 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183715402 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142630749 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155310453 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170727793 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100256091 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.305433491 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18388749 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181771083 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133566104 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13923605 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15891425 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128625139 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160404491 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175572223 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141563015 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175889662 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156226649 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.140272959 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104987654 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145062981 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147639298 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.147741582 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.101965264 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.151366302 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.14081513 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180684776 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140391166 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126702061 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161821381 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.145753264 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.146685761 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111867285 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196585328 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156419866 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174028885 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.153498804 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.164636793 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194463381 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122430025 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098091653 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.125709913 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17595245 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10264845 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156496888 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.183516659 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222350239 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156554643 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162430667 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107285165 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.119383405 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127530554 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146932133 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223667187 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111306062 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.132623033 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185342472 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.148494507 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098936711 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1601717 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30977757 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114689414 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170430879 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.115657712 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.272341388 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095647068 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127761968 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155948015 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167949347 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.10807268 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.178761818 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161745289 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141612279 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129236837 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135092037 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186817744 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229710681 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168220002 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173231915 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.111740341 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155349369 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160525295 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171421615 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142386311 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.141178659 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132307075 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178723823 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.183845396 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.130669994 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16008622 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160919825 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157581779 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171209896 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102515144 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223933198 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100184468 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165031546 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138698389 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12113933 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126858086 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.210245891 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103044913 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171610747 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155355745 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130060445 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095546839 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148765947 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156052377 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138921525 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.09842208 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174081119 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.123854889 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1599187 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14686633 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129364014 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152733126 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113591168 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136717986 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14096233 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142831298 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104694471 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.16692543 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178281041 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.127665798 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173779659 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175597222 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161506366 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157644731 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113516982 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.66416915 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.098085942 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177457634 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144319736 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180178519 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147107299 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164601565 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159829925 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118046053 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165171299 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147106175 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.219437794 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163886267 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.155614859 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100168355 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141912275 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141827888 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.128476605 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119415949 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161873233 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139112997 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.106501303 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.155177944 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142660107 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.142231075 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108398638 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180681547 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144087054 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178259573 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17692944 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134879449 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163784721 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172109606 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09964543 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.156831499 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167461835 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139141285 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148502217 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.09992971 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.13285767 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177680297 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.092611408 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157245094 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157805602 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158624103 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160888191 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.131141566 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128350323 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140343572 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158704324 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127145234 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.122495683 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154680558 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12843794 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.097102372 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152957394 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156767179 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.154411964 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09469208 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.168861957 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17758257 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.094896728 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131340415 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284767564 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154465369 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188490481 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.149466888 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103225496 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140941934 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153084893 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.151273553 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157003767 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.098247778 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130168684 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.099851607 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.179154482 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.150947221 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153653697 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183888567 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158105889 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198503151 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.132314339 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.233242479 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137931909 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151825487 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.099807346 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.127998164 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139495547 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103204554 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141651699 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187768755 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177582349 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.150029132 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.141846641 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096569659 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.124952339 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102423557 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159386673 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152540923 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155327068 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112824704 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.116258259 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141412773 seconds)
  done (took 74.704206975 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.149831481 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.129361829 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146035233 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.19219718 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.163749829 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.239641954 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.203693528 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.223607956 seconds)
  done (took 2.536659708 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.104299501 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.155261555 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.137112521 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.123157215 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.089856776 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.32950843 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.134895642 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.120887839 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.116367844 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.159071863 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.090030419 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.532147226 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.120839259 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.121463631 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.085004974 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.114121966 seconds)
  done (took 3.620348978 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.223005157 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.53343691 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.018484441 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.242639573 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.223270243 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.149439225 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.740700824 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.156798246 seconds)
  done (took 12.382864987 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.124564892 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.13676895 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.131977065 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.160537057 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.116486995 seconds)
  done (took 1.771195743 seconds)
done (took 115.906479178 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.099323427 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.122373426 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.094896314 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.123876496 seconds)
  done (took 1.526030342 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.11114866 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.078135494 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.108281651 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.077022938 seconds)
  done (took 1.468373245 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.419985734 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.107457875 seconds)
  done (took 1.660277967 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.119070263 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131077525 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103785041 seconds)
  done (took 1.452906763 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106582184 seconds)
  done (took 1.210964509 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.100690785 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.096157518 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.138109297 seconds)
  done (took 1.438105788 seconds)
done (took 9.85831595 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116002347 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.433677507 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.382682739 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135050159 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.727282352 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.405071297 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.070955246 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.125508052 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164030923 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.11732578 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.105539819 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.698103673 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.988957213 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.373033915 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.974665571 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.467504237 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.671928678 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.118997635 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094428851 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.118426161 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.019480092 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.115568223 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.089750816 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.118242641 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.668808619 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.421109903 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.088754911 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.480097974 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.087432757 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.122195744 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.375267284 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.115742559 seconds)
  done (took 17.082996195 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.09961077 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.176697251 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.096216045 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118742833 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.092557351 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.118442406 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.098452366 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.130571099 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180935879 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.088306252 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13477376 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.087178003 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.121698588 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.089438089 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.136741007 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.087891453 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.118426714 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09144287 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.124009351 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.091272691 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.135866121 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.088054953 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.117948537 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091066302 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.115473238 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.102417895 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.088591286 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.129634567 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.117027826 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095648763 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.090779398 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117175612 seconds)
  done (took 4.67488558 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.144629243 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.185639629 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.125631579 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.122709032 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.167659605 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.089961866 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.201134259 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.155493479 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181722047 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.117184689 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.105913479 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.116342808 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.124017494 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.117280197 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.109472732 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.116398913 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.091563797 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120009272 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095061831 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.118498834 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.108079165 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.115831239 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.090234537 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.118158496 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.088641812 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.1302877 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.089253596 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.130022061 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.088063821 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.123649454 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.091400589 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117264621 seconds)
  done (took 5.008226017 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.101743495 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125089291 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.105571346 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.133718431 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.091261375 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124267899 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096818783 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.11858007 seconds)
  done (took 2.002400929 seconds)
done (took 29.871700975 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.112227602 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.093284276 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.129833483 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.101391141 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.12625793 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.102031589 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.116322474 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.099584818 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.128923914 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.096844923 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.132379502 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.087943786 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.08910922 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.115949243 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.100649271 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.122289977 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.103499674 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.125916632 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.1075559 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.13288448 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.088968159 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.129143555 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.097432816 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.138127145 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.10807806 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.137286229 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.132031446 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.094799834 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.088670201 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.118495566 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.102630728 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.1392262 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.090336494 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.133875047 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.094702545 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.121199099 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.088774595 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.118746132 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.104516436 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.128023442 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.093603846 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.128458732 seconds)
  done (took 5.802554042 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.121778904 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.160722781 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.088463787 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.118226226 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.089815395 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.156905069 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.151967312 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.088939419 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.089459759 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.142431548 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.143696174 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.089751547 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.118836922 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.089464696 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.088007475 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.119367179 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.112522571 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.143556137 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.1475542 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.12026489 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.162945308 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.148547578 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.123836921 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.142104166 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.15989438 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.124251451 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.139783234 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.154587517 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.116480646 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.116812283 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.119431835 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.149783292 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.088411925 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.117524465 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.129248547 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.153629258 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.145925961 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.129706732 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.148899404 seconds)
  done (took 6.069454045 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.103635736 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.101855432 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.139096066 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.182160953 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.125555131 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.13154513 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.098820688 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.136784192 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.104094244 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.11769306 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.089923778 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.148988832 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.104783286 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.126053566 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.089192671 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.133068918 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.108609591 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.120337501 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.093337643 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.137559464 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.106922575 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.132051699 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.101116027 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.129180076 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.088958871 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.127116929 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.091597077 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.13377004 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.093956074 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.125379905 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.09318462 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.123006051 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.092186012 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.129733373 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.093128565 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.126268301 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.11196964 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127254452 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.10019067 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.150872951 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.101938819 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.123472392 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.140677562 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.128942117 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.117956001 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.09697561 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.124845601 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.098145784 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.087663403 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.137491165 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.09869 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.119439282 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.133528487 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.089138917 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.087704935 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13308663 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.08988182 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.12123332 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.096258335 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125473437 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.10906057 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.123353239 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.102619517 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.119394905 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.095350795 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.117473755 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.089110201 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.123326465 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.110675386 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.121375481 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.128445672 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.118271067 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.09566974 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.126373947 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.095147384 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128107465 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.089311587 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.131760203 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099549733 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.093605073 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.128808352 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.092192781 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.122439606 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.106482386 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.134167676 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.125021676 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.094828687 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.124078631 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.093403467 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.089353188 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13340695 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091793367 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.122527434 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.105401577 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.119126686 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.09135388 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.125027361 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.093641733 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.125118505 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.101323395 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.123808102 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.088715635 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.129583454 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.091031265 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.122593955 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.098822248 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.121929083 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.089356064 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.123699845 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.096934623 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.088553077 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.122566614 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.09335995 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.121223639 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.102287521 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.127225301 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.092403019 seconds)
  done (took 14.323250209 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.243341336 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.216462483 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.191458329 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.301795019 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.141659715 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.116039036 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.214197213 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.165328041 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.089922439 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160329056 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.176902181 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.187032562 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.175907024 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.187399296 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.172585571 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.120030638 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.10880984 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.172698107 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.217527575 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.296887009 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.109647952 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.135770093 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162845572 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.161569548 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.109679921 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.13676463 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.112291789 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.141120062 seconds)
  done (took 5.862515045 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.113228199 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155499759 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.096731975 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145687106 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.147075985 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.090826733 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.12571667 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.091297753 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.102493563 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134816061 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.121646925 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.097946967 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.125512491 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.099995766 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.120158325 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.100091379 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.13020776 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.09943638 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.123121767 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.094407955 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.133137066 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.107471501 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.125656289 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.092489921 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.137736416 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.092094872 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.122268234 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141525763 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.098630301 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.145874532 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.086583805 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.130142037 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.104313793 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.119940363 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.093026777 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.12253349 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.093025832 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.091678544 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.12188636 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.087412249 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.120357398 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.081505563 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122303077 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.106263661 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.127003491 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.087911148 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.125544816 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.094614324 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.127326655 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.087005028 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.091242559 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.123146726 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.094274586 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.13197803 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.093950131 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.126694127 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.094243541 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.12284733 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099450397 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.123328111 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.087800047 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121976489 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.096412186 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.124380393 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.099021574 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.126200561 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092000276 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.12255863 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.094872202 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.096033917 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.122774487 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.098584779 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.117900295 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.091003593 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.131228248 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.098606254 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.124582584 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.092042192 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.123156596 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.089589435 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.078202318 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.119507104 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.077689008 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.124095696 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.088638853 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.121459494 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.093082079 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.124900967 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.106624697 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.129342848 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.097246938 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.120279686 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.092255647 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.124434055 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.088326566 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.124324802 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.108239915 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.139996976 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.088672056 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.117921884 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.106322538 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.121695928 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.088530485 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.082610516 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.132370873 seconds)
  done (took 12.73593782 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.137864152 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.17130938 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.121609766 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.10966753 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.154964475 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.161360945 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.098193624 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.097916148 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.121252902 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.108715087 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.124855161 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.098852554 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.124456339 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.104121886 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.162392221 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.12945473 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.090923828 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.104811495 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.125891635 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.174835208 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.109808252 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.159752062 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.161509762 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.093845417 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.12618051 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.157588805 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.13432279 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.134106725 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.102310497 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.162652945 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.134523251 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.135294725 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.163699987 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.125741122 seconds)
  done (took 5.575509467 seconds)
done (took 51.473672313 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.223720767 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.427682083 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.205120838 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.218469823 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.223977702 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.243340326 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.202166926 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.399306266 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.946592427 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.193108024 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.205131761 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.206833962 seconds)
done (took 27.830591764 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.279607005 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.362629278 seconds)
    (2/2) benchmarking "String"...
    done (took 1.538900871 seconds)
  done (took 4.034258528 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.209837487 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.205916142 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.449696581 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.217017464 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.207361349 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.20879545 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.215287074 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.209739819 seconds)
  done (took 15.847453819 seconds)
done (took 25.505452554 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.283597813 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.388450924 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.459438104 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.227220245 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.203733236 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.208733958 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.203228574 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.251954314 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.207041596 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.208121134 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.203012502 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.470856924 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.22351826 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.586428339 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.202802067 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.218404592 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.221217124 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.42701268 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.214551595 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.192460203 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.209357953 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.192223964 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.204006906 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.229034531 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.213774703 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.216558618 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.250620171 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.211239581 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.38742325 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.217969494 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.250929524 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.206571365 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.256152923 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.213858384 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.316137122 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.231526797 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.372718094 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.214548687 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.200510404 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.208282336 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.388686725 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.623597377 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.211080327 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.207032097 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.212995761 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.278707006 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.195780296 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.932610424 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.214075718 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.21421645 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.273993314 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.581786836 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.206761923 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.219517755 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.214540607 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.447272219 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.231932008 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.23402364 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.246382487 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.221936375 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.206434328 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.214693675 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.241509914 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.219188059 seconds)
  done (took 143.778081335 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.209379852 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.21140137 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.21120568 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.217019299 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.211371176 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.212812318 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.210300972 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.210037548 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.212011878 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.242438197 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.212979048 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.209330639 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.21333705 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.169653758 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.212179344 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.235382904 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.213279204 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.227287612 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.2093891 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.212363069 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.220327684 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.212250535 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.223959304 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.209635559 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.257046208 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.309809081 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.267409367 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.216415026 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.211516657 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.211721211 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.257914541 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.237214424 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.83435965 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.066235234 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.222964253 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.235419404 seconds)
  done (took 80.595473545 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.212769007 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.213605876 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.212548211 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.244733956 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.213947343 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.795216702 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.795510053 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.924420922 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.36456324 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.582185072 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.485433114 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.208218005 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.309207521 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.221972808 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.210872353 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.229596741 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.244255482 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.210217562 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.215816809 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.798768802 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.229158405 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.250924024 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.408380707 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.225282837 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.248499074 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.615653793 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.211022528 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.247906905 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.551216233 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.258761 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.210895176 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.611776165 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.925082622 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.329411777 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.212776427 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.248122817 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.216383563 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.50119458 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.213727299 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.214118629 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.217583795 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.905672193 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.217433874 seconds)
    (44/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.216055196 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.796833955 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.182741509 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.217651223 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.216097418 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.21564537 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.684507151 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.929779547 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.231368261 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.216096328 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.21866219 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.214955909 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.215326011 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.250352362 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.577190352 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.328694662 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.217168206 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.219436167 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.249979812 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.218481332 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.33929686 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.212017482 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.476992644 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.271660232 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.323124069 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.800183568 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.218330849 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.313648662 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.334482306 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.213910451 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.216682119 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.216498149 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.215715207 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.328268841 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.213959649 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.642628988 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.390871379 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.229243783 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.604602736 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.316047389 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.215430327 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.617817616 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.218628507 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.217940645 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.962156751 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.313949375 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.214894216 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.217078441 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.218954768 seconds)
    (93/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.21743291 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.644045066 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.798331404 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.220454243 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.46500131 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.221276994 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.864391002 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.218979229 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.654245233 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.775638308 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.932939864 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.221202772 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.332478999 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.391000354 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.229341584 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.220564919 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.217981233 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.606625172 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.220401413 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.276729654 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.216711754 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.61792133 seconds)
  done (took 368.365414784 seconds)
done (took 593.87354921 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.912103454 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.861867441 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.999958978 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.88971857 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.859403809 seconds)
  done (took 10.667873732 seconds)
done (took 11.811671851 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.415982438 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.415718883 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.770982002 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.416462456 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.253583525 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.43298467 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.393979441 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.2407469 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.328110202 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.302747215 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.325326686 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.273242345 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.257474244 seconds)
  done (took 18.972761151 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.562358364 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.222390379 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.300258075 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.567610437 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.261709057 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.57715547 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.429258623 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.236934265 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.43294809 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.231758872 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.234375436 seconds)
  done (took 18.204805293 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.569023488 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.21855334 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.302990863 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.575147654 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.259066845 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.573062848 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.432827799 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.239339539 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.44271171 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.233719066 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.234815337 seconds)
  done (took 18.228471995 seconds)
done (took 56.55218806 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.2637959 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.39102688 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.245656369 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.235594543 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.230571727 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.233466237 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.23616002 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.231548556 seconds)
  done (took 11.215033684 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.2278433 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.230641771 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.229693114 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.227230546 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.230041674 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.227920869 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.22819098 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.231428076 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.228446303 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.23094539 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.230450798 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.232119217 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.228565492 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.231343853 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.228517447 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.229364575 seconds)
  done (took 20.820804255 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.231719266 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.229021654 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.229950003 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.228555156 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.228152095 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.229343002 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.230763426 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.22910054 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.2290936 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.230180162 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.231091473 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.227605151 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.22795505 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.22959977 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.229048999 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.23029191 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.228409796 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.231328383 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.234713672 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.228901109 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.230495786 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.230091718 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.22864005 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.229976991 seconds)
  done (took 30.666085442 seconds)
done (took 63.848661346 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.223591148 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.23779604 seconds)
  done (took 5.610593675 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.291234453 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.295164244 seconds)
  done (took 3.739623709 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.232661781 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.232175752 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.233221682 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.231445272 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.232367518 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.232919584 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.233928059 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.231396001 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.233510876 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.234043465 seconds)
  done (took 13.477681859 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.236876866 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.234038369 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.23240859 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.233753287 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.233971357 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.231836615 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.233238278 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.234953179 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.235182821 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.231430091 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.235027978 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.231334267 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.234306055 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.231744463 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.234764387 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.232788381 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.232329854 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.230994059 seconds)
  done (took 23.352886994 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.247934309 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.254612291 seconds)
  done (took 3.654447551 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.360831781 seconds)
    (2/7) benchmarking "second"...
    done (took 1.27387583 seconds)
    (3/7) benchmarking "month"...
    done (took 1.342457196 seconds)
    (4/7) benchmarking "year"...
    done (took 1.332093826 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.275402044 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.25357444 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.274086994 seconds)
  done (took 10.264921094 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.234706593 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.427786799 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.547058631 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.812863329 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.235487814 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.239324664 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.086676555 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.240755391 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.240406288 seconds)
  done (took 14.217484412 seconds)
done (took 75.467667134 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.232832124 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.247961851 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.237229348 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.2461449 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.532595343 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.255299345 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.233394672 seconds)
done (took 16.138596468 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.220225508 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.232075446 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.224741399 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.228704599 seconds)
  done (took 10.059602612 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.242830558 seconds)
    (2/2) benchmarking "read"...
    done (took 1.548608761 seconds)
  done (took 4.945295964 seconds)
done (took 16.159440274 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.237333131 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.237511602 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.23626406 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.233980361 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.235546192 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.236734975 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.234822603 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.234317488 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.236912286 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.236665596 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.234485091 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.234593277 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.239963587 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.236913136 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.237978397 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.234843346 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.236916403 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237031418 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.23507771 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233356783 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.23508842 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.238061524 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.234896651 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.234776962 seconds)
  done (took 30.817116585 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.237305159 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.236048795 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.23708519 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.237244568 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.236314303 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.238271221 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.238264973 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.235299903 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.239504348 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.237854954 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.236987175 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.236877848 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.237006143 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.235456067 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.238996286 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.235635547 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.238946993 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.238589527 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.238707475 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.237591428 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.23823286 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.236509594 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.23692807 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.240189072 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.236298083 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.236147285 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.240464174 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.236688666 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.240326557 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.239848239 seconds)
  done (took 38.286440441 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.245269192 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.250428377 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.241588549 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.243085975 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.24015839 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.240071491 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.241775587 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.240252826 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.239400683 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.240663714 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.241330856 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.242446352 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.242114218 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.239423969 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.242122723 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.24174159 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.240363943 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.239401999 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.241146885 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.241113577 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.241027746 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.241259333 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.2411581 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.240829768 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.240410752 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.240426953 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.240918703 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.241447325 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.241353777 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.241683063 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.240626874 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.241285815 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.241396231 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.242821581 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.242115014 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.242170013 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.24684533 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.250757891 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.242471051 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.242251465 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.241993517 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.243722717 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.242925863 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.243573501 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.243986887 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.242791879 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.243658356 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.244106025 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.243346685 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.24396655 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.242515199 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.242411073 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.244095227 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.244063514 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.24270782 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.244959789 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.24584765 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.243774731 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.244583803 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.245035081 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.246345872 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.246501113 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.244534965 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.244743644 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.246484496 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.24755043 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.246986307 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.246390989 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.246185864 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.247852185 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.245867629 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.247829183 seconds)
  done (took 90.668413056 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.246788246 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.246956841 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.24417334 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.241639276 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.242872282 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.244139017 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.243462298 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246565264 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243491899 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.244719719 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.244803271 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.244457948 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.242897491 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.246121841 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.246130268 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.243124804 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.246186055 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.243462101 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.245684291 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.246549201 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.245816483 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.245235213 seconds)
  done (took 28.547848035 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.245797361 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.249793484 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.243986764 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.246198313 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.243754855 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.247199777 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.24608366 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.247578012 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246450948 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.243069387 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.24516954 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.246273927 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.244879701 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.244596198 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.245008894 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.244361415 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.24708101 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.243833058 seconds)
  done (took 23.58414167 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.245535598 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.245574951 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.247707888 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.244788095 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.245577089 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.247601565 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.244673316 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.247931732 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.246572677 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.247014961 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.247419216 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.248080427 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.248218766 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.245194023 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.2467775 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.244745377 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.246675836 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245374424 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.248916366 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.246068859 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.245902414 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.248862014 seconds)
  done (took 28.588794572 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.246938278 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.248996042 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.24652721 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.245524869 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.247043053 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.249355377 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.247905433 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.24692711 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.252161991 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.248592054 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.247189691 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.2467614 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.247235177 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.24646109 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.247460566 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.246023251 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.248573883 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.246382945 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.249732321 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.248699078 seconds)
  done (took 26.121234235 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.24995107 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.251350732 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.251423154 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.249982478 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.251670373 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.2510067 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.251386523 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.250867278 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.250004124 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.249716916 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.249330248 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.249097543 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.249887378 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.250240325 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.251177921 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.251905646 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.252036339 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.250756424 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.251260837 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.250529921 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.252802888 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.251668301 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.252050878 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.251833715 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.252116284 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.252079762 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.252056126 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.252935678 seconds)
  done (took 36.200226006 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.253536826 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.251532467 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.249552164 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.24983684 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.249814121 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.247988858 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.249838987 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.249270016 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.252809889 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.249090182 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.251997019 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.252455107 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.253084731 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.252099318 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.252603546 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.252300916 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.252893393 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.250059118 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.250293539 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.251085707 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.253061136 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.251348221 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.252519951 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.251209373 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.251794243 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.252114542 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.251966665 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.250145899 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.253806456 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.252212923 seconds)
  done (took 38.711981867 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.300572034 seconds)
    (2/2) benchmarking "in"...
    done (took 1.298385527 seconds)
  done (took 3.768208028 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.252585345 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.251559158 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.254279627 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.251445109 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.250563897 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.253836045 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.253393625 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.251928772 seconds)
  done (took 11.18895416 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.253267924 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.255049185 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.255355216 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.254465185 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.255376633 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.254644907 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.261228271 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.27362802 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.255346917 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.255656428 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.264346839 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.263732771 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.257369678 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.254415914 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.255871616 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.257953631 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.255755423 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.256327779 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.256720664 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.257061164 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.255582733 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.258993245 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.259507364 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.255241406 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.259038079 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.268695541 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.258307095 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.25768851 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.255755657 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.260824018 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.256206521 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.25257224 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.257172032 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.256755337 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.256135639 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.258780758 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.264134709 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.276374076 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.263683308 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.257987231 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.258526554 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.254395361 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.258510191 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.258381302 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.259717024 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.25737592 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.257936903 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.253424311 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.256572559 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.260861569 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.265334612 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.256520425 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.256412416 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.25941642 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.257116803 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.261373968 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.274515509 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.260125851 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.266515877 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.270057347 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.270982916 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.281880024 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.260254142 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.258585974 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.269014723 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.281214316 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.262033119 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.27310007 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.256114188 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.255926867 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.263860835 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.271355228 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.282885597 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.260586914 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.259014687 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.259533025 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.259221898 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.256083742 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.265339561 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.280201507 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.259155755 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.258949566 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.266697475 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.284372696 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.25821727 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.257651761 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.259220633 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.260115579 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.260934506 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.270323757 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.276678301 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.260103 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.258325467 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.259424837 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.260232438 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.260598599 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.258436186 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.261237528 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.255038596 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.258613954 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.26053344 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.264384357 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.271930767 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.260907532 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.262262126 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.268196915 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.260991048 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.260531396 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.265381283 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.260981868 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.261845567 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.262968715 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.267378355 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.257265934 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.262546139 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.272230989 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.261532769 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.259955308 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.260313368 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.262773803 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.273523029 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.290383757 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.261331008 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.262053619 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.268643515 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.276253483 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.263656585 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.26680124 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.264170896 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.260819223 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.263126359 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.266109879 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.26275605 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.263642361 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.263681703 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.265350898 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.260022398 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.262393637 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.26439293 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.264638464 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.263183424 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.263408357 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.261965086 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.262917299 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.263950937 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.263840937 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.270344181 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.261613381 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.264656028 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.263203566 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.260929211 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.263586706 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.262591817 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.261769389 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.262277089 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.264931011 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.265563331 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.26707132 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.265394097 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.265331841 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266379276 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.266476896 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.269680462 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.264773773 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.269345177 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.265790394 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.261410967 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.263939615 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.266194193 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.265825874 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.26695664 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.265655314 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.269842239 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.277389977 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.267023861 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.266081473 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.271374104 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.266169217 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.267049651 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.265539758 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.271369004 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.275934021 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.265143457 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.273660143 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.267471917 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.26562471 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.265373544 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.267775385 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.265689996 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.265656241 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.270178118 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.27524946 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.279386693 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.29190429 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.266480474 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.272837164 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.26719324 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.272158665 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.271610845 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.266882944 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.267685073 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.267779053 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.265746147 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.266060598 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.268622425 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.267721894 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.267788872 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.269818641 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.269272253 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.268526497 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.267959927 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.268534489 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.265370073 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.262080821 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.268496905 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.266508055 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.268330641 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.262825428 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.266594198 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.269010735 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.267290368 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.269819875 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.27579814 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.266810615 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.269126419 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.269410958 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.269464101 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.265477531 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.26901866 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.271963739 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.269957278 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.27590437 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.287207593 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.272049795 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.276523266 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.283782181 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.269742014 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.27193655 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.269557536 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.268067234 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.274030761 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.279920225 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.270182494 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.271820228 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.271724797 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.270935787 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.272718292 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.275913631 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.269137203 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.271758295 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.27274679 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.271304997 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.267566682 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.270905828 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.271794201 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.270284417 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.272468185 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.273499958 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.273258547 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.272404446 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.273746333 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.272968727 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.271483362 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.27536832 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.282082431 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.278795104 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.27146582 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.273810722 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.273962467 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.276071089 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.273544216 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.271954674 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.273410865 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.283094526 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.295226751 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.280232723 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.287944151 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.273017564 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.278819266 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.290757369 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.27764771 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.273050087 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.27406137 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.277243903 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.273810278 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.270803727 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.276377626 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.276384647 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.276173586 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.276161112 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.283348357 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.276679994 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.277033876 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.274751735 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.274125683 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.275379987 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.274829132 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.277670917 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.27659545 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.277623743 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.2739214 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.27472029 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.281317317 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.294951186 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.273270856 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.274735456 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.274989551 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.273008241 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.275896643 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.271735192 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.276592523 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.285282293 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.278316623 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.286702813 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.278573494 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.287968696 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.275659874 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.278803269 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.285260811 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.272830475 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.274844281 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.276748465 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.276036209 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.282568721 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.294648599 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.277037987 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.280928568 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.278677618 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.277640619 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.277502148 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.276894115 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.276156934 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.275316675 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.285168687 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.297595942 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.28033643 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.278840855 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.274449304 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.277035667 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.27793413 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.276740552 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.279889318 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.274306731 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.278278013 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.278505881 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.277041153 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.278750441 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.27813499 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.278320246 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.275711564 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.276869739 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.283903661 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.29542775 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282534999 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.279015312 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.286265543 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.278840384 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.284785707 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.299086991 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.280028327 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.27776937 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.27771917 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.278943818 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.276936732 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.280373684 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.278284371 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.279481882 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.284373832 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.278234135 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.281006831 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.279604433 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.279504225 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.279318845 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.291501296 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.305846121 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.280312748 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.28553643 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.276879194 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.281476911 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.285347129 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.280338044 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.279966676 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.283077216 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.293316364 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.289951167 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.280812003 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.278981822 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.280751674 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.280520649 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.279413786 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.281179983 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.279345461 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.280851993 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.281036983 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.280792299 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.284002914 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.282115105 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.283169155 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.281690914 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.283322136 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.292811485 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.281857517 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.283601708 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.2810051 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.282150912 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.282993705 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.28127598 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.283589326 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.283458823 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.282966958 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.285549612 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.292294755 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.290446614 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.28317721 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.277600679 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.281821287 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.281941145 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.282236344 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.282005923 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.281934307 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282267584 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.28232781 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.281014486 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.283231442 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.280890245 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.284237837 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.281452099 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.283931366 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.286476116 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.29282447 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.282381995 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.282203051 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.283463777 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.284377906 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.282359896 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.283681721 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.289611038 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.287784427 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.295606932 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.294538527 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.28748882 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.283649452 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.286431821 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.292099532 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.279849411 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.283990491 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.282137314 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.283338049 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.280428855 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.287083818 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.28511556 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.290531928 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.283585125 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.283749094 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.289315496 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.302939438 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.283799848 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.2861289 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.288746651 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.282307734 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.283055887 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.286016356 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.283434673 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.29126951 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.305554353 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.283854162 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.285107535 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.28476305 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.287029865 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.290147171 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.287871513 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.285121735 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.28267126 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.287045114 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.288339033 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.286034453 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.282875234 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.287013633 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.285737415 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.290389394 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.294152878 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.285202319 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.287261869 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.286488842 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.286977786 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.287031254 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.287876381 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.284117639 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.282425038 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.285790571 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.28662968 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.286664521 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.290663614 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.285622398 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.287410127 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.29053241 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.286661126 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.289682605 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.299529758 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.296302801 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.284966255 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.288233037 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.286388974 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.287812759 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.287022474 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.289416623 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.286376149 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.284678308 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.284205594 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.288288057 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.286995873 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.29126889 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.305860547 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.308986546 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.286954449 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.285356009 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.288287015 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.288119481 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.2868779 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.289041552 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.289087642 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.291763378 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.298116269 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.290422906 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.294067561 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.303164539 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.288102629 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.294013691 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.291814103 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.298371758 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.29027926 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.289003176 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.289605584 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.294894651 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.306884938 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.290379024 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.30143279 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.320735184 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.309318547 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.288447181 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.290054844 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.289536973 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.287669913 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.290300911 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.290390619 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.291553206 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.291852191 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.291199104 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.293498458 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.296983558 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.292342148 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.290959409 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.291798834 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.288407519 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.290535335 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.288280694 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.292710837 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.29122161 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.290842751 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.292140351 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.292744727 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.292562756 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.300932362 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.317198337 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.290687121 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.292225457 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.290544158 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.294808007 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.294423862 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.303504103 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.303463967 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.291867337 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.292573031 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.293993791 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.291610649 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.29162918 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.292292542 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.289934836 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.28942707 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.286206386 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.306073406 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.318375409 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.297638475 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.293291156 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.29324538 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.295793646 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.294884588 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.293034122 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.292753641 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.293119082 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.294390241 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.296617376 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.294640195 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.293403736 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.298488071 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.303509179 seconds)
  done (took 762.109812717 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.292410679 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.290526615 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.290717301 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.291531149 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.291909861 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.291638156 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.29101205 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.290629819 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.290116254 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.290154719 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.290992971 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.291984613 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.29090048 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.290793741 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.293837878 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.291154836 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.293771489 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.292673579 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.292771176 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.291648537 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.291855291 seconds)
  done (took 28.328878676 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.297162271 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.292229889 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.292490959 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.296908807 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.294018075 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.297179092 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.294938624 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297007215 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.297169338 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.291951294 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.297950188 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.29517219 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.295219513 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.294653257 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294499651 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.296934605 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.297575151 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.294268464 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.29638432 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.29226116 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.295649498 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.293068437 seconds)
  done (took 29.70142198 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.297077304 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.299514665 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.297356273 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.29200502 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.297139004 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.295811525 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.297442951 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.296931259 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.298609771 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.298259646 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.297694925 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.298611304 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.305425985 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.303593097 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.298925147 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.297724602 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.297695395 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.297173556 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.297183426 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.295609929 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.303378632 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.295731155 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.296772229 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.296523837 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.300401602 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.299560897 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.2976359 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.298799829 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.299458231 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.305296798 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.301751817 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.295928061 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.300189986 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.300790271 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.301212805 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.304989851 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.300452259 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.299468418 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.298891235 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.312312702 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.323623953 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.299360542 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.3069087 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.316586615 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.299445747 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.304799158 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.309919107 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.295738586 seconds)
  done (took 63.636058704 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.299529734 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.298599266 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.297272645 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.299245276 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.301016964 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.301117102 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.29959616 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.30039692 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.298746558 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.298601922 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.302070883 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.298056269 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.29754834 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.300939077 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.301699487 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.298221179 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.299256055 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.299030199 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.299269481 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.299525942 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.297792295 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.299725639 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.301242055 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.299151738 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.299511278 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.297945346 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.29808046 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.301613662 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.299694954 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.297728981 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.30255262 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.30045621 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.303236051 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.30045681 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.299210618 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.302488027 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.302370551 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.298294923 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.300710838 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.299107929 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.302407592 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.301107471 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.303283607 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.302983064 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.300172122 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.299722046 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.3004097 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.300170256 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.299952528 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.301965433 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.302621574 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.299629797 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.301259124 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.301571721 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.302139856 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.304044399 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.301352044 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.299935224 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.303840197 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.301425305 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.300219749 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.302610656 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.302592358 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.30287275 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.304725384 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.302198884 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.301653663 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.304310043 seconds)
  done (took 89.656414143 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.304972716 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.304272681 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.303947523 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.305338952 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.303145824 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.304155889 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.302754009 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.305473656 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.304278794 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.305672766 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.306025545 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.30606926 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.304610373 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.305896017 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.305036896 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.304170707 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.305158938 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.305175476 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.305091071 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.306433628 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.304078101 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.306106343 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.30492343 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.306031797 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.306558774 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.306249602 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.305860595 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.306324928 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.305562214 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.306283527 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.306256851 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.307208906 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.305647284 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.307965447 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.306459069 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.306478847 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.304670815 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.306358921 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.306742996 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.305946709 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.306335366 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.306910738 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.30815386 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.306115771 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.307095732 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.308377815 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.306930361 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.308591053 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.307186057 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.307698873 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.307811155 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.308921844 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.308613224 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.308365386 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.307239677 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.310192177 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.308420188 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.307160308 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.308619027 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.307617451 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.30919643 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.309947541 seconds)
  done (took 82.212785705 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.30809066 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.308820604 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.307176437 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.305600988 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.308533881 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.305040298 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.308024155 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.309920089 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.307776124 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.309014754 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.30994636 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.306732432 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.30681046 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.310576702 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.307512674 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.306849382 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.306369838 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.303516082 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.3074439 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.307162714 seconds)
  done (took 27.370960405 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.306690386 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.310359676 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.30746048 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.306928976 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.311627926 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.306602218 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.310016678 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.311421108 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.307879547 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.310592054 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.311935751 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.310656155 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.308399503 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.305222383 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.310159141 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.307749132 seconds)
  done (took 22.164010061 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.309112969 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.309717791 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.309339342 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.311201775 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.306939564 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.30925428 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.311396565 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.309846392 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.309525729 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.313471598 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.309847068 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.312095533 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.311890342 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.311046934 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.310336588 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.310555773 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.309817321 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.30974599 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.312930523 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.311063736 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.310568171 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.308882516 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.312218884 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.311929676 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.306802234 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.309937378 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.306738524 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.308872597 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.308508575 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.311430206 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.308559635 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.306737182 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.307473854 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.308821941 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.310199345 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.310370222 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.311286861 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.313497309 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.313389995 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.310846268 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.312776575 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.3099344 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.313969109 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.313237303 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.312133574 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.314270249 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.310943179 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.311126701 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.311178675 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.312032877 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.312582313 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.313273692 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.314379951 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.31354722 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.314016111 seconds)
  done (took 73.318449356 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.313383152 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.313775314 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.311699819 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.315734716 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.314042373 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.311056626 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.31418676 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.313624861 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.310739948 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.315017978 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.311777154 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.316871176 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.312729841 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.314924408 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.312353476 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.316358575 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.313003476 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.312860008 seconds)
  done (took 24.868249895 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.313507085 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.311900762 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.313936626 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.311792884 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.312432851 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.31146741 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.312732981 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.315343958 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.315844248 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.310007823 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.310047186 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.314903204 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.31511218 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.315768203 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.312085949 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.312563368 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.317394344 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.314306698 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.313694402 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.31435201 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.316635253 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.316041975 seconds)
  done (took 30.127830612 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.315920874 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.313532606 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.316073999 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.332351758 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.337791984 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.317493847 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.315704099 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.315968273 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.339969631 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.371378158 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.365718241 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.338149603 seconds)
  done (took 17.206653074 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315388979 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316539643 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.315813106 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318255946 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318959897 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314865902 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315145833 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31467538 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318667049 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314533834 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315326145 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316654523 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31960881 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317255776 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318440959 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32065552 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316770273 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315909475 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316202478 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318135921 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316299359 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317355641 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316053472 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316200177 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316455352 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316336954 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318543947 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317201691 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315672698 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318492041 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319009296 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315602957 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319889254 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31761957 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318593752 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320387782 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316652431 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317021166 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319458436 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316316045 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.318988184 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320419035 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319620909 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317914739 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318091982 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31757395 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320252859 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318420105 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317273001 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32083125 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320646486 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319558181 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321457654 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321780714 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321472579 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322080591 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319941483 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319298646 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323293993 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320029985 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319498255 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32051411 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319100477 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319541419 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322885371 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32035774 seconds)
  done (took 88.237877178 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319617819 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.320041047 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320500663 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320506774 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318860147 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319574751 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320151973 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321294075 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321061463 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320390577 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323410715 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32121267 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320954392 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321387228 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321468415 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319730379 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319997265 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319885152 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320848625 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323098684 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320022855 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320408848 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321751691 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320990066 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320574146 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322457256 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322120433 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321409541 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320893316 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320582321 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320963546 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320460046 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320957635 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.320762027 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323264872 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322796475 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.322536103 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.322515595 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322050365 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323813056 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32096952 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.324636826 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322665322 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322661111 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322627645 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322456039 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322937773 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322589642 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323051052 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322632528 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323917706 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322425353 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322865972 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320207467 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323641055 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.323763814 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323427479 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.324257179 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324393522 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325136909 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.324998669 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32398368 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325641428 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322556087 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32415549 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321674016 seconds)
  done (took 88.482587201 seconds)
done (took 1785.059266066 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.490748751 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.442830179 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.325109742 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.342983046 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.320412239 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.349853578 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.332004345 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.321195349 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.326264847 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.327015378 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.324774946 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.512501564 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.381426175 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.322192954 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.326673463 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.419644444 seconds)
  done (took 27.104833375 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.357116837 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.332694765 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.451353312 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.34633881 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.355943017 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.52721722 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.38665571 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.330308491 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.518382936 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.374447692 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.323319562 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.366813074 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.331093574 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.322662092 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.346204133 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.524434353 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.599274551 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.323806193 seconds)
  done (took 29.353795204 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.8233312 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.355146416 seconds)
  done (took 5.415730002 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.351301524 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.331310356 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.332555 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.325903485 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.321929428 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.332816949 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.329817821 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.325445522 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.330013553 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.467948726 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.334669155 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.34150076 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.349651855 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.332139354 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.329043614 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.3725939 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.479711698 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.330835766 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.329477517 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.337525254 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.330984739 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.428151942 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.376492588 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.331518314 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.468313117 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.339323354 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.336111137 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.339031081 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.515317221 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.331631022 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.332996223 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.332842705 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.333353977 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.280543109 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.88991827 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.326435997 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.372236088 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.336175502 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.329445943 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.51562478 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.334845276 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.338038088 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.324195426 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.861981892 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.471204611 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.45393472 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.340902399 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.330378869 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.335429411 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.403813228 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.330589298 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.334975227 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.381613791 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.171020418 seconds)
  done (took 85.486529147 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.373111179 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.326732279 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.508893799 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.34863983 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.321642937 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.326879253 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.328741072 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.64693214 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.391718146 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.326372152 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.684474469 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.908452487 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.343743421 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.367639484 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.196448333 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.374476357 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.327783615 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.325115313 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.330974553 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.325163093 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.898403857 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.330444303 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.323460467 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.489968137 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.363877081 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.869640209 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.331501175 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.328409103 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.352972296 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.324176822 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.867996983 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.3481874 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.38450047 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.323899682 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.609815505 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.74638548 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.696000404 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.331852658 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.360413221 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.324445108 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.343251168 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.87120781 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.73046082 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.32948386 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.339702008 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.870768696 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.331843069 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.334025048 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.328902493 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.582570333 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.331451674 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.330133935 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.329243449 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.331642295 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.330350567 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.397770752 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.426797576 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.871077676 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.331663316 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.326089667 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.362375221 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.3293792 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.325339375 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.329606293 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.326967219 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.721680314 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.475161999 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.327243218 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.716513376 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.852360788 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.347144858 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.9181395 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.338736294 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.330810282 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.338289727 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.328520876 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.336529806 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.843608914 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.361127392 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.323369109 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.691696477 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.324694313 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.661536145 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.347260889 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.327707073 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.918849442 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.33700116 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.403322083 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.336949701 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.327009164 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.330648743 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.331330367 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.610690015 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.359739172 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.329671836 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.32909443 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.360004115 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.325504046 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.341413423 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.337508743 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.920460999 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.348303609 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.327833965 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.331413692 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.331954488 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.338598154 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.330243119 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.32830694 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.595430184 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.327837116 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.33005942 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.330400979 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.323755285 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.330416333 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.475814439 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.335832922 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.666606947 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.32954552 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.321522338 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.324639884 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.328582237 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.367355723 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.323795059 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.324643354 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.253928058 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.631578014 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.344440378 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.329451915 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.329174363 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.329329003 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.350220472 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.326377039 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.355277351 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.330088858 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.094959901 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.36991223 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.360813846 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.328768004 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.337022396 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.331847245 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.332735086 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.329472888 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.630386639 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.606420797 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.483340063 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.324941644 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.331192863 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.08019978 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.349857779 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.507790588 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.342174741 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.328739945 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.580411577 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.519644108 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.334592661 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.326804635 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.32757542 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.589997498 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.338844081 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.640283657 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.887430525 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.347585794 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.335779478 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.108139627 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.074030525 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.333484126 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.335626754 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.661905306 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.346539736 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.330727292 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.331670598 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.33322951 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.328016155 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.337757609 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.32769237 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.33221588 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.332599573 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.460711758 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.526045982 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.346581382 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.328785499 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.861314464 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.392719638 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.327095301 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.347170864 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.328089006 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.333771078 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.414414084 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.336667369 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.340264004 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.328847108 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.335715472 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.932253703 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.334861208 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.333808508 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.525485214 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.029640779 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.350369841 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.335493845 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.338858105 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.210828097 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.888111512 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.347569992 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.677449408 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.339455388 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.374030549 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.335016447 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.358069576 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.884914095 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.334807913 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.334013957 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.00261745 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.351845297 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.867603491 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.329942061 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.336520062 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.935802752 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.358211221 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.338984373 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.341147147 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.331186152 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.641615016 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.334639174 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.35558254 seconds)
  done (took 498.457588131 seconds)
done (took 647.054768096 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.336039962 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.336584475 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.324317692 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.335316359 seconds)
  done (took 10.581056438 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.342878234 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.338229121 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.339556328 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.33723521 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.340062586 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.339672746 seconds)
  done (took 9.286864831 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.333068141 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.326437914 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.332906781 seconds)
  done (took 8.240310134 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.553373366 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.345481646 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.675227484 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.34661757 seconds)
  done (took 9.16953642 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.341573034 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.340809131 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.339496477 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.341697827 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.345403697 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.345274869 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.34075427 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.343539593 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.343745126 seconds)
  done (took 13.329522822 seconds)
done (took 51.854214649 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.333323776 seconds)
    (2/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.314869528 seconds)
    (3/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.348826593 seconds)
    (4/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.333245641 seconds)
    (5/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.314895949 seconds)
    (6/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.315196092 seconds)
    (7/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.370894097 seconds)
    (8/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.329833562 seconds)
    (9/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.444913437 seconds)
    (10/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.359643545 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.593208723 seconds)
    (12/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.451971458 seconds)
    (13/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.369908929 seconds)
    (14/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.569498346 seconds)
    (15/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.39501972 seconds)
    (16/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.459001365 seconds)
    (17/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.342379916 seconds)
    (18/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.357488856 seconds)
    (19/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.738811631 seconds)
    (20/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.374909707 seconds)
    (21/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.342628867 seconds)
    (22/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.348007332 seconds)
    (23/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.200606738 seconds)
    (24/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.388860236 seconds)
    (25/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.343470264 seconds)
    (26/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.321453283 seconds)
    (27/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.222101496 seconds)
    (28/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.118989153 seconds)
    (29/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.353471856 seconds)
    (30/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.335999493 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 2.32877165 seconds)
    (32/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.222266247 seconds)
    (33/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.439697535 seconds)
    (34/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.979296055 seconds)
    (35/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.453031104 seconds)
    (36/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.320040744 seconds)
    (37/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.318208271 seconds)
    (38/286) benchmarking ("sort", Float64, false)...
    done (took 2.328991215 seconds)
    (39/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.316332543 seconds)
    (40/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.431640356 seconds)
    (41/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.350152887 seconds)
    (42/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.35369299 seconds)
    (43/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.32135704 seconds)
    (44/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.340712971 seconds)
    (45/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.319140463 seconds)
    (46/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.355605792 seconds)
    (47/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.417979049 seconds)
    (48/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.446680501 seconds)
    (49/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.531364088 seconds)
    (50/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.335030152 seconds)
    (51/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.474549916 seconds)
    (52/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.598400834 seconds)
    (53/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.441028162 seconds)
    (54/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.362065689 seconds)
    (55/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.4411607 seconds)
    (56/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.392527735 seconds)
    (57/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.578397303 seconds)
    (58/286) benchmarking ("sort", Float64, true)...
    done (took 2.33108522 seconds)
    (59/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.33172713 seconds)
    (60/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.125655791 seconds)
    (61/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.319632631 seconds)
    (62/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.341367295 seconds)
    (63/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.398522081 seconds)
    (64/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.350946276 seconds)
    (65/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.345718492 seconds)
    (66/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.332261268 seconds)
    (67/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.327244834 seconds)
    (68/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.328390715 seconds)
    (69/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.335859941 seconds)
    (70/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.099145989 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.273357871 seconds)
    (72/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.221353682 seconds)
    (73/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.371084691 seconds)
    (74/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.325292405 seconds)
    (75/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.190289044 seconds)
    (76/286) benchmarking ("sort", Int64, false)...
    done (took 2.330990753 seconds)
    (77/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.319668562 seconds)
    (78/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.23612079 seconds)
    (79/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.345078275 seconds)
    (80/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.46611919 seconds)
    (81/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.324489764 seconds)
    (82/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.320264943 seconds)
    (83/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.31746649 seconds)
    (84/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.343443589 seconds)
    (85/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.320879133 seconds)
    (86/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.336528508 seconds)
    (87/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.338505908 seconds)
    (88/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.513418964 seconds)
    (89/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.381312143 seconds)
    (90/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.364190479 seconds)
    (91/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.253791255 seconds)
    (92/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.331484216 seconds)
    (93/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.364281711 seconds)
    (94/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.32421582 seconds)
    (95/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.439541507 seconds)
    (96/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.554105766 seconds)
    (97/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.322425199 seconds)
    (98/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.355875749 seconds)
    (99/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.320287962 seconds)
    (100/286) benchmarking ("sort", Int8, false)...
    done (took 2.331505787 seconds)
    (101/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.336880634 seconds)
    (102/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.34853218 seconds)
    (103/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.101137117 seconds)
    (104/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.442259742 seconds)
    (105/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.365853255 seconds)
    (106/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.345061558 seconds)
    (107/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.822358827 seconds)
    (108/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.331407675 seconds)
    (109/286) benchmarking ("sort", Int8, true)...
    done (took 2.333331067 seconds)
    (110/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.123021418 seconds)
    (111/286) benchmarking ("sort", Bool, false)...
    done (took 1.856627494 seconds)
    (112/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.361239224 seconds)
    (113/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.675040607 seconds)
    (114/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.152347325 seconds)
    (115/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.397852904 seconds)
    (116/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.594045191 seconds)
    (117/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.183917299 seconds)
    (118/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.332251605 seconds)
    (119/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.457133486 seconds)
    (120/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.975493422 seconds)
    (121/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.73292409 seconds)
    (122/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.718825082 seconds)
    (123/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.113684117 seconds)
    (124/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.613965261 seconds)
    (125/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.325677363 seconds)
    (126/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.424684229 seconds)
    (127/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.261221029 seconds)
    (128/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.362587627 seconds)
    (129/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.449382898 seconds)
    (130/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.687473428 seconds)
    (131/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.328159884 seconds)
    (132/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.325940505 seconds)
    (133/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.355624706 seconds)
    (134/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.853852357 seconds)
    (135/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.323397267 seconds)
    (136/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.13623789 seconds)
    (137/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.360185555 seconds)
    (138/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.490207599 seconds)
    (139/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.344276044 seconds)
    (140/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.329620063 seconds)
    (141/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.440086536 seconds)
    (142/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.326420813 seconds)
    (143/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.376990048 seconds)
    (144/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.958989411 seconds)
    (145/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.863591828 seconds)
    (146/286) benchmarking ("sort", Float32, false)...
    done (took 2.339483213 seconds)
    (147/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.324530339 seconds)
    (148/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.359416126 seconds)
    (149/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.479374812 seconds)
    (150/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.328530955 seconds)
    (151/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.375804987 seconds)
    (152/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.330565419 seconds)
    (153/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.341353056 seconds)
    (154/286) benchmarking ("sort", BigInt, false)...
    done (took 2.335632904 seconds)
    (155/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.341388092 seconds)
    (156/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.362352859 seconds)
    (157/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.428819853 seconds)
    (158/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.346249106 seconds)
    (159/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.34520071 seconds)
    (160/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.33133649 seconds)
    (161/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.324162979 seconds)
    (162/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.349370537 seconds)
    (163/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.339092945 seconds)
    (164/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.363129674 seconds)
    (165/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.124547641 seconds)
    (166/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.972025291 seconds)
    (167/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.418440806 seconds)
    (168/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.382560032 seconds)
    (169/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.342510977 seconds)
    (170/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.811879824 seconds)
    (171/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.856256653 seconds)
    (172/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.324238172 seconds)
    (173/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.354342995 seconds)
    (174/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.368255992 seconds)
    (175/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.339467379 seconds)
    (176/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.325162558 seconds)
    (177/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.32433132 seconds)
    (178/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.350095453 seconds)
    (179/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.324321229 seconds)
    (180/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.358807906 seconds)
    (181/286) benchmarking ("sort", Bool, true)...
    done (took 2.335848661 seconds)
    (182/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.331209789 seconds)
    (183/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.325343109 seconds)
    (184/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.413126967 seconds)
    (185/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.370034758 seconds)
    (186/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.697477344 seconds)
    (187/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.593322199 seconds)
    (188/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.347373365 seconds)
    (189/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.33076745 seconds)
    (190/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.489296672 seconds)
    (191/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.182469484 seconds)
    (192/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.347917621 seconds)
    (193/286) benchmarking ("sort", Float32, true)...
    done (took 2.338149845 seconds)
    (194/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.322437725 seconds)
    (195/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.351766601 seconds)
    (196/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.331775959 seconds)
    (197/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.402866153 seconds)
    (198/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.330455375 seconds)
    (199/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.36263106 seconds)
    (200/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.451661361 seconds)
    (201/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.563366899 seconds)
    (202/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.343673682 seconds)
    (203/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.339098214 seconds)
    (204/286) benchmarking ("sort", BigInt, true)...
    done (took 2.339389052 seconds)
    (205/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.114439626 seconds)
    (206/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.3397167 seconds)
    (207/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.357808981 seconds)
    (208/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.683745692 seconds)
    (209/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.721047721 seconds)
    (210/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.335020106 seconds)
    (211/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.364689178 seconds)
    (212/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.341459758 seconds)
    (213/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.343218634 seconds)
    (214/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.362185656 seconds)
    (215/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.409368524 seconds)
    (216/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.344912738 seconds)
    (217/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.385397151 seconds)
    (218/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.333237318 seconds)
    (219/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.488135192 seconds)
    (220/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.332807294 seconds)
    (221/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.093921254 seconds)
    (222/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.349150223 seconds)
    (223/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.354833397 seconds)
    (224/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.330932108 seconds)
    (225/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.340309031 seconds)
    (226/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.331126167 seconds)
    (227/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.328283629 seconds)
    (228/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.335013671 seconds)
    (229/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.32961103 seconds)
    (230/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.003768092 seconds)
    (231/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.3271247 seconds)
    (232/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.752000715 seconds)
    (233/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.459038698 seconds)
    (234/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.334179781 seconds)
    (235/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.900738943 seconds)
    (236/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.349942293 seconds)
    (237/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.327927905 seconds)
    (238/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.373825641 seconds)
    (239/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.329833645 seconds)
    (240/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.330198167 seconds)
    (241/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.563565893 seconds)
    (242/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.478716738 seconds)
    (243/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.967031663 seconds)
    (244/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.327411401 seconds)
    (245/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.386896915 seconds)
    (246/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.857560549 seconds)
    (247/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.335713235 seconds)
    (248/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.369522394 seconds)
    (249/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.68905069 seconds)
    (250/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.379135756 seconds)
    (251/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.734123379 seconds)
    (252/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.193163445 seconds)
    (253/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.351050315 seconds)
    (254/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.339077048 seconds)
    (255/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.234076635 seconds)
    (256/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.479266828 seconds)
    (257/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.272309324 seconds)
    (258/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.592674062 seconds)
    (259/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.34182586 seconds)
    (260/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.330879003 seconds)
    (261/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.344748629 seconds)
    (262/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.911225119 seconds)
    (263/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.333495484 seconds)
    (264/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.347965685 seconds)
    (265/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.181213675 seconds)
    (266/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.344301655 seconds)
    (267/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.695125833 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.444416996 seconds)
    (269/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.430982981 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.464251979 seconds)
    (271/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.4347403 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.347608243 seconds)
    (273/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.745844174 seconds)
    (274/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.51657454 seconds)
    (275/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.350196017 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.386244259 seconds)
    (277/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.473155704 seconds)
    (278/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.346781248 seconds)
    (279/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.33778964 seconds)
    (280/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.429539005 seconds)
    (281/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.336097135 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.372555969 seconds)
    (283/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.375690619 seconds)
    (284/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.361847987 seconds)
    (285/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.435035498 seconds)
    (286/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.209803021 seconds)
  done (took 568.495007481 seconds)
done (took 569.744831099 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.386682163 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.382629556 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.36559705 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.388139603 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.47749141 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.540346689 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.374754766 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.367274017 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.413292069 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.415482955 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.365040129 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.539668129 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.367614371 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.365959485 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.364729223 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380712505 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.366862555 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.359845181 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.382377173 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.377431882 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.381819137 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.365677354 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.415543999 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.541375496 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.369184111 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.370384814 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.370104047 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.385967103 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.480316971 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.369381057 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.370956444 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.375237853 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.359536371 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.35933923 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.361092667 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.386442442 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.377781822 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.376267248 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.372708258 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.398292841 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.359569923 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.359937035 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.367609708 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.366238783 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.367650293 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.371214194 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.367996865 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.371112985 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.383510396 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.381997568 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.357110907 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.391865451 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.371620726 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.369754386 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.378764581 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.366680579 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.373207936 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.38532324 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.388274711 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.386232222 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.357883718 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.385281747 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.371242676 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.386230712 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.376418787 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.358822428 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.359753466 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.375289883 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.365995944 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.366137658 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.357841924 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.37270282 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.371983333 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.383361202 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.400619161 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.365808071 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.360587522 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.369987132 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.376525622 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.367722279 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.380914969 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.38569027 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.373512701 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.372155826 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.383862508 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.549500553 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.380533469 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.371967313 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.377976403 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.391783 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.378600706 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.381064617 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.374820405 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.368092154 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.378304951 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.375380819 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.374676634 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.37505035 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.376391691 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.384660052 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.36666168 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.385590227 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.370590158 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.369662291 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.372424113 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.386262462 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.368929279 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.366311175 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.39435728 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.419306985 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.373961826 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.3601645 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.371099397 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.391558971 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.382418785 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.375790262 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.368801593 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.361933359 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.357252189 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.382692365 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.375912036 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.372731356 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.390483867 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.372817771 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.371114928 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.372298783 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.371395295 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.389243429 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.493611538 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.385627999 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.405778613 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.371716977 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.377658731 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.40917144 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.390515157 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.404770587 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.37799482 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.3915983 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.390911788 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.372309425 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.384448302 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.38710312 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.376373681 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.379569189 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.367859993 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.40905781 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.390320185 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.390220073 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.396409141 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.497498032 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.37404691 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.362556386 seconds)
done (took 227.696285246 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.435281659 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.368233252 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.462520501 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.368287453 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.475767948 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.467540689 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.366430509 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.367362467 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.367095624 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.747944512 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.36578292 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.366021052 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.362907413 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.368669299 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.455427498 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.369157655 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.367504777 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.725161899 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.36935497 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.44626994 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.366875441 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.369993263 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.370437291 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.773316114 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.364116291 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.363182234 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.447042623 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.369067412 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.721238168 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.364477417 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.36663681 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.741365833 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.464669834 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.388249604 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.37993813 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.378225099 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.477089227 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.387812852 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.454089379 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.458194899 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.465266044 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.408319643 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.365387943 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.36971841 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.374923067 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.370905373 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.369020374 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.3987197 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.367465222 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.369201663 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.718014493 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.380066952 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.369431565 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.369178755 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.369196955 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.401087937 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.370969226 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.373112148 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.466904687 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.372723972 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.439237222 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.759052446 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.768207082 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.372047063 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.370162414 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.371474043 seconds)
  done (took 107.032806095 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.438179493 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.447630758 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.490747363 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.374591434 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.42529907 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.49558973 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.375056634 seconds)
  done (took 11.324238977 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.379481422 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.372587623 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.42156856 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.422607279 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.3718973 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.585418148 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.374680309 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.385418775 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.370206373 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.447989548 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.374708968 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.374966322 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.379299173 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.368955047 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.421348337 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.384689015 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.487567481 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.375665453 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.374145713 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.525463124 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.371354302 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.381422634 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.448983828 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.386628057 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.377347777 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.383301832 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.34031571 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.374744786 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.369942769 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.375871081 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.371857475 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.475542223 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.37532143 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.374417209 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.372385892 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.534017899 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.375966093 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.376776806 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.375229949 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.374937434 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.375465637 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.374663609 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.377287893 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.373535048 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.377393242 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.398080978 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.37668906 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.375031292 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.375916639 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.377123707 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.453310383 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.379025082 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.374113215 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.374137147 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.455769142 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.383149849 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.376738714 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.368567125 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.374967603 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.375285283 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.527681937 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.424566143 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.377343954 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.425064551 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.377508351 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.378785419 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.378663944 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.373038383 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.467849819 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.374429076 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.423750563 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.37304371 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.614881673 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.400944472 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.380494497 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.381456762 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.380300783 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.379182912 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.374257497 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.383996187 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.376737731 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.381000187 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.384206012 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.374184384 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.376629737 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.560630809 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.535797654 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.375983141 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.391226261 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.38621576 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.37712712 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.454829733 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.379160541 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.377970936 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.430649641 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.493701681 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.456161409 seconds)
  done (took 142.300858994 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.385121307 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.385305587 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.381090654 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.40048623 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.379790651 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.378166632 seconds)
  done (took 9.592890057 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.383728716 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.379967113 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.381291544 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.381949355 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.378350933 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.38248842 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.381118479 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.382560895 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.38297533 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.381783558 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.380079328 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.38226625 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.383117667 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.379738922 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.381379807 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.382926834 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.380337934 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.378984089 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.381191715 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.380958498 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.381174833 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.382373055 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.381481242 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.382909557 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.384674306 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.378405775 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.389165261 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.380503367 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.383727653 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.389644306 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.400823677 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.380412179 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.385364722 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.390018388 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.387067601 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.384077527 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.387977395 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.383959818 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.378979873 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.38332606 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.383252321 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.381077395 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.38326084 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.383945593 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.383169537 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.38678814 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.390228198 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.389062816 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.381911685 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.386391464 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.385271967 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.383549272 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.384442867 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.386236978 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.382255319 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.402618285 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.390694836 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.380222478 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.382338887 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.386361154 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.378746308 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.383177107 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.385984304 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.386792963 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.38205853 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.386436325 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.387033879 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.388618334 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.385338852 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.384483088 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.386521523 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.383965719 seconds)
  done (took 101.940846598 seconds)
done (took 373.462875123 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.837038128 seconds)
  done (took 4.125028677 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.478065643 seconds)
  done (took 3.7667471 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.2076722 seconds)
  done (took 23.503041531 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.419209776 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.458495133 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.399246387 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.380849327 seconds)
  done (took 10.946406502 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.653553935 seconds)
  done (took 3.941578966 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.382647752 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.373088219 seconds)
  done (took 6.046156807 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.705551529 seconds)
  done (took 3.99509941 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.799214008 seconds)
  done (took 4.093529115 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.409509873 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.389925706 seconds)
  done (took 6.099441689 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.368850004 seconds)
  done (took 3.656488887 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.368666933 seconds)
  done (took 17.659634398 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.384801293 seconds)
  done (took 3.67898434 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.403024245 seconds)
  done (took 3.69249591 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.089376117 seconds)
  done (took 6.378201552 seconds)
done (took 102.870043739 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.379489694 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.384813059 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.375461661 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.377558922 seconds)
  done (took 10.80435727 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.421202793 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.419424336 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.422979818 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.429975132 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.422015284 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.418384946 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.411717365 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.411648238 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.429688057 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.423418806 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.420087838 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.422286956 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.421107115 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.412157944 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.42083621 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.421617409 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.431520702 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.421556796 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.41216476 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.42450348 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.387701203 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.429595247 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.42365478 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.387714833 seconds)
  done (took 35.337027117 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.906675077 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.457765486 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.540244384 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.439833533 seconds)
  done (took 7.633550599 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.438615531 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.440444208 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.45175283 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.489727997 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.516948361 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.450419717 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.413453803 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.407336017 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.395616122 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.441210154 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.51612231 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.456984302 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.525106712 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.387318575 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.573821676 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.388775928 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.386474525 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.440617271 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.491864051 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.512542263 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.388114211 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.439518796 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.443055769 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.456887956 seconds)
  done (took 36.141044707 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.387457759 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.405644321 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.387925238 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.38727047 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.396366021 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.387290261 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.388747146 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.389244305 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.386648303 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.393521455 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.38716351 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.399759086 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.386617132 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.388378613 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.39424552 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.388861941 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.393310052 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.388547613 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.388727306 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.394884902 seconds)
  done (took 29.108533065 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.380720088 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.382266533 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.734687975 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.636516925 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.381241023 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.383894576 seconds)
  done (took 14.190202748 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.461339151 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.607007894 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.383765358 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.7635942 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.841529546 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.384862372 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.391834111 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.651705154 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.979224228 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.966273961 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.440595812 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.460852073 seconds)
  done (took 20.625411983 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.386828256 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.383798827 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.386564467 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.40051411 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.447571994 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.397154063 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.397759436 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.383312633 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.450048907 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.453194182 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.396065904 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.449266114 seconds)
  done (took 22.225672226 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472600513 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.384679456 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.38409808 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419600203 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379008519 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.591035005 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.441807985 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.109564022 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.400470505 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661006757 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396035957 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469259499 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.641920675 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390870914 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.387665363 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.388266076 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.605756996 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894995806 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380721776 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384794686 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429380972 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.395352929 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.403022439 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.612229581 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.591903449 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387196107 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.647923699 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.386209876 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.684970207 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.397469445 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397092641 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386581667 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662632183 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062565733 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495967183 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.609375092 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395517177 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.381323314 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.413620915 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.397405081 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39892675 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.383377804 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401657781 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38795601 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.388963681 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389881009 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.123391975 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.405295069 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.385125961 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.387677484 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.666826735 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479703004 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.392948226 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.389498895 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478693935 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383204821 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.39358462 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.488671151 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955861461 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39023192 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397007624 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.390564179 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.393580256 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415208359 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041056019 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.389076745 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.394547866 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.396110586 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390245135 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.383671335 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.409411726 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390442435 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.409366984 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390204501 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.121593824 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.405712303 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391554105 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952230087 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389513131 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.393581657 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.619801797 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391077543 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391538102 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.39023341 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.39026455 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.129367503 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393836185 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.37786615 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424855282 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.11888851 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.627726673 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402872303 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415708764 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.616624662 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.377779811 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392429244 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.401449415 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388652755 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406530305 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.125087957 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401500274 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.390610925 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.649561611 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.60403768 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397752114 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.379913701 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.882027432 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412972451 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.408830684 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.393029867 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.617808182 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.996277754 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.400763854 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38999173 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410521534 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.392723216 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.170605854 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396314219 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.397649439 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.406321886 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667184657 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.21240989 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386802573 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458982009 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399547966 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.393872981 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393085705 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395616017 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.392646223 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.610497267 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414201688 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.408221886 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.394070668 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393749131 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.388718275 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388002046 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.397513613 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.620057724 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405115555 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671606543 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394046188 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395651367 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388367943 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.61209691 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.39001138 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.402566662 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.655184201 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4005144 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.405454382 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.409749132 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414068453 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496575871 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419076998 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.397755346 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.652873962 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.397724066 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.400404167 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39602285 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.398582735 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403667849 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.404404273 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399154844 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.000433173 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368931336 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.396090401 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.288013108 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.410061697 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465988587 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.402982246 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.621801093 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.388151167 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403798953 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.395805643 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.409431638 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.624487824 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.409591136 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.39878124 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.478994616 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.892898431 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.021073977 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.406281906 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.398367333 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.396867553 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.398003642 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398283125 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399128362 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.398594113 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.624566842 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.406576571 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.421119124 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.012254267 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402199404 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.399294204 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.406053094 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.41056074 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.40576275 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393527537 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.396257033 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389522115 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402568043 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.411647226 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544014059 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.413181805 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.399258229 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.916769651 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.407047683 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.398444413 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.399649575 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43487731 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.399282941 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.23008848 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.651021077 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396150288 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.68405725 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.4007706 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.417906452 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.400102886 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398763576 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393650129 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.40886447 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401516674 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.410174408 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.401027697 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403803263 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960693149 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.160390707 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957287518 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400005862 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.395204163 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.402609531 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.139487618 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412938352 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400802713 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.6469082 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.130430293 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411467114 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.892820753 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.412979531 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.203399108 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.667809748 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.632531715 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405485488 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.408329674 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.686883566 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.617554237 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435790368 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.400247736 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404817373 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.382108726 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.98043986 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.411185903 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.478448789 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.140635432 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412582398 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.412051164 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.433922011 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.409571716 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824865425 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.413118819 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404014087 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.395903983 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.403768026 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.225023752 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.402961738 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404784829 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05490583 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.409101227 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.903177602 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414671408 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.630897461 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.409293767 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.411173311 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.400580807 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.406620287 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.653621099 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.678349764 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406479058 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.409520178 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974517813 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.252201253 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.408605104 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405300753 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.17726766 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40149856 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.708805518 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.4134849 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.408843081 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400642326 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.405763318 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405002902 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.400863824 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.415470362 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382366748 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909449617 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.402839755 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415090983 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41609597 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.2513275 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.658713078 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.418975518 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.01864843 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.625190733 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407560073 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422603507 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.409206526 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405642729 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.39514835 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.406092171 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.643038995 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470732369 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.623114668 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.412705302 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.38637241 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.422317385 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.612653899 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.407177779 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.406859778 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.665785468 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.398057958 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.430089883 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.143813993 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426727203 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.407552096 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410817582 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.401816 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431537434 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478920015 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.639049464 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.421853004 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.418851207 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835774696 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418908232 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.411180124 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.425357433 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.50206946 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409599853 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.415543836 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.177030137 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.040399853 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.166273455 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.024072683 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.685089149 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.412057953 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410298221 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406773314 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.550033064 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407873146 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68360918 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406737052 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.411963074 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433505091 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410464274 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421286395 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.612533468 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679612156 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407407487 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410842958 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401081859 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.410476341 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.422037362 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.620821125 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924499521 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980181606 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40462158 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.416370288 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.141857931 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.692417597 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410557422 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409281254 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40978905 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.408432163 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.413065024 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.429452808 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41711439 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560340422 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.688536961 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.097875905 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.431783401 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.43981205 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.185667872 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412545358 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.668165047 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408142615 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.645281969 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.039150411 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.163501384 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.677012661 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477117527 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.644465709 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.414212806 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.56042287 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.416419199 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.402977896 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414147035 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.255695005 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.404223258 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.422996266 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.043106438 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.677254054 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.410993415 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.420591502 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427924624 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.423528793 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.637030122 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.167419591 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.628606856 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.423376441 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.420984054 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.412575148 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.046723022 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.702013922 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416008675 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.409113176 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.66683824 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.643965761 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.441214238 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.867695714 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.410794715 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994692926 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.381592732 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43761331 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426351445 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.171778735 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.047041036 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.417875947 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926842881 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409645759 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41602328 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.704500766 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.422010815 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.415035826 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.69319312 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.419889019 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.428020703 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.641636428 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.038528433 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.215313912 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.409761133 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427167129 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.419417125 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415674419 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491770725 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410479623 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410431875 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.863278958 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.425722064 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41803099 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.420417613 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.42749061 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410008266 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.406123194 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418895073 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.417186272 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.408565877 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.411995231 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.413182741 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.510974944 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.997724845 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430486884 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.095623837 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.748571552 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.673867721 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.430677402 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.397967357 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.422537409 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417348551 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418871449 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410132023 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.418661441 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991959386 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.429181788 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.42174238 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.425193324 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.635646099 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629746435 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.425462775 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.644049334 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415262465 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.436251906 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.404621006 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419260306 seconds)
  done (took 986.419734471 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.421419915 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.438921989 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.447776943 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.451107694 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.464103104 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.465018171 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.507551788 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.430213433 seconds)
  done (took 20.948853108 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.425813624 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.419666803 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.421912211 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.421483127 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.426495935 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.914658707 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.431507869 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.419389257 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.427038807 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.419073644 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.415714949 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.127811293 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.440044642 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.430310409 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.408472668 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.420295982 seconds)
  done (took 33.3001229 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.503542217 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.60013182 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.497226287 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.412266359 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.45562094 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.419181446 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.69570424 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.429151985 seconds)
  done (took 27.339142103 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.430330405 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.428067268 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.428696654 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.429487111 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.430056897 seconds)
  done (took 8.472910078 seconds)
done (took 1253.835802374 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.426270889 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.426877149 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.422218521 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.425950957 seconds)
  done (took 7.02815495 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.408126313 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.399414175 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.4003026 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.418963162 seconds)
  done (took 9.954668333 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.177678753 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.11926322 seconds)
  done (took 5.625974524 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.420152589 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.182892923 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.155001164 seconds)
  done (took 8.083786435 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.727066665 seconds)
  done (took 3.053891763 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.835034511 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.788097511 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.606841531 seconds)
  done (took 6.5570851 seconds)
done (took 41.632133995 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.433568372 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.659843415 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.575539293 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.420586408 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.592897894 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.575895996 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.226020183 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.428238393 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.418236541 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.406494741 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.420694754 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.573583522 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.136750413 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.669622285 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.137123125 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.763995484 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.578998687 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.424032664 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.414211413 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.422064121 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.216778972 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.421382648 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.41907989 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.416166219 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.581766638 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.56735288 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.433384948 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.756544263 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.431408383 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.421046996 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.562414692 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.434873351 seconds)
  done (took 84.26865033 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.432683242 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.426755249 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.424782824 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.412608931 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.430198252 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.421648887 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.414522582 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.413155684 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.432470398 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.414886696 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.412446731 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.432228588 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.415101417 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.415142572 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.413151559 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.412783171 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.413917838 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.415965695 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.430420523 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.414951063 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.413417322 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.430691638 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.412254934 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.428935544 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.42277218 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.430495709 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.437848829 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.41544693 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.412766481 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.419099356 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.423416982 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.449469572 seconds)
  done (took 78.822371929 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.425668027 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.41561442 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.422843196 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.430958651 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.413014087 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.424275409 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.417873801 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.436960261 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.424016541 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.434642635 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.414257715 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.412874651 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.434184681 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.417516247 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.416950734 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.423712556 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.41755598 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.4297171 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.425833229 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.425069757 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.416740663 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.413801592 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.416310514 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.415222322 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.425893495 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.444675862 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.415422562 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.415557766 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.438087929 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.414576078 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.438948195 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.439323275 seconds)
  done (took 78.888653658 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.620384343 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.430831488 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.427354334 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.362233528 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.424671299 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.424980209 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.422048855 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.620791556 seconds)
  done (took 15.065459234 seconds)
done (took 258.371522853 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.428446417 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.424865292 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.632125574 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.445487558 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.423188427 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.465639103 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.447464476 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.652272853 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.423186372 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.66949626 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.446163196 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.443435568 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.419695398 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.464145104 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.716836322 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.573581677 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.374245707 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.430315834 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.773027117 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.444881548 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.696604568 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.418060747 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.701010243 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.402333155 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.438414276 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.438043604 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.416126888 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.381381312 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.47167234 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.782167254 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.42986747 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.445613082 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.509730109 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.531325976 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.643972741 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.590304747 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.418035094 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.507481258 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.659351719 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.428225169 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.430629896 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.236854047 seconds)
  done (took 85.411395521 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.434456847 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.546045443 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.42753279 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.429435562 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.431649086 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.545920731 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.524407282 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.431700625 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.431097378 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.432603058 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.436041933 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.435964902 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.432508562 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.434098508 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.435038375 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.433371489 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.434842894 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.436350825 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.438037535 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.484793021 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.557074592 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.459205653 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.428843764 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.43499504 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.554557126 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.571547257 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.432557582 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.431509375 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.477086959 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.43483686 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.433255524 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.47862904 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.433162061 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.437512036 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.545159063 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.549054523 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.438684161 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.43638793 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.552369007 seconds)
  done (took 58.461603949 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.437456598 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.691952091 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.863825251 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.436142266 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.430015714 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.43531428 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.519801861 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.439314211 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.439658628 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.439626568 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.608112662 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.438329945 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.470166388 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.893540508 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.43221868 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.433717264 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.432700091 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.436159193 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.699714137 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.445629386 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.545100448 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.440703592 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.517637877 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.448433824 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.457489195 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.43283832 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.442987805 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.011631023 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.445325735 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.607562311 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.273270727 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.521581886 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.995339105 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.894708391 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.279963602 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.443350087 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.439104316 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.616964061 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.443196894 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.433293955 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.515761153 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.443640702 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.889433031 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.141992182 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.452266708 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.434959404 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.042235187 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.619219858 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.702396559 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.453537465 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.907781416 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.434964642 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.432638485 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.435250298 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.700585533 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.449298548 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.435295829 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.059793531 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.457058313 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.517811694 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.440596548 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.43789544 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.704301689 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.434019498 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.692204082 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.435816807 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.443167229 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.463951768 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.882764034 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.434643923 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.155561092 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.452348613 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.441345777 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.608853065 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.694629241 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.077566706 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.437438243 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.709616228 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.007815688 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.527541868 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.448672902 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.004910384 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.528440761 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.447918151 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.442057022 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.437552704 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.437206249 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.491328566 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.515780461 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.092549119 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.155415102 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.085515347 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.539256459 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.455539106 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.435464133 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.078854703 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.463548336 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.440818103 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.897938883 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.174132907 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.462557015 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.447759959 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.165093305 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.465062119 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.521419797 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.449588365 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.890512981 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.446138441 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.483758624 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.435070439 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.440578226 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.468489994 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.520222494 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.446749417 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.436965404 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.135798661 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.649667745 seconds)
  done (took 189.905896444 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.43804164 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.429300431 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.432376457 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.428106801 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.436073104 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.444429305 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.433889583 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.438555064 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.442981592 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.430832414 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.436102634 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.434290426 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.438092072 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.454075691 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.441419992 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.444483181 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.435910321 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.438467658 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.449789826 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.431156882 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.432341727 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.457275155 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.44269223 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.429751818 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.437780017 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.441527472 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.459164024 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.434064421 seconds)
  done (took 65.637841443 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.446968097 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.049592323 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.447999295 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.578853093 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.463531769 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.436247192 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.584163285 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.507670658 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.448056601 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.44482668 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.445996377 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.776006786 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.450229592 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.008039044 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.650499995 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.591125632 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.003307229 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.46616616 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.436439499 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.436895469 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.577732475 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.451833743 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.754458101 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.030052172 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.440045124 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.034131446 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.432793014 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.447212318 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.439883343 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.031832766 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.439180955 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.757951943 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.520675675 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.503068771 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.029245043 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.002087134 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.029376996 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.602922478 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.440173083 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.444459424 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.437285639 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.430639762 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.031545927 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.442412807 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.44131005 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.029113062 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.460069194 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.448016094 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.446984541 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.441820626 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.501913345 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.501418834 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.759622656 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.03755745 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.520101817 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.453131724 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.579051949 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.818001307 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.443409295 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.986641495 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.452071394 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.042946256 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.464937462 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.433904524 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.440346064 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.447681661 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.597084806 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.578720965 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.980417112 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.46056878 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.977955944 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.619340051 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.440640141 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.474294058 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.443652944 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.037319766 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.984265564 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.620010528 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.584003982 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.647176798 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.435722773 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.441099033 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.433211454 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.526283686 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.449632775 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.03946179 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.001176326 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.466174056 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.452605979 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.443959825 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.443121895 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.629050052 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.057147985 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.526192585 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.98137087 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.78108429 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.764765861 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.443013268 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.507004378 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.460214675 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.765847081 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.447872454 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.508956739 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.880327438 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.765015871 seconds)
  done (took 172.019179053 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.706748174 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.474370522 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.540804922 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.595237804 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.060713764 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.057277074 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.447276064 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.591274201 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.566172837 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.715349047 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.439129135 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.534997002 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.667848309 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.522285141 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.167375091 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.515344371 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.542044946 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.6067918 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.592290016 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.443350469 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.111292695 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.74525304 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.644092297 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.467603348 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.566422481 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.251333944 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.045307456 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.983263712 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.642827998 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.456125549 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.986763556 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.454225887 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.43868095 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.130953681 seconds)
  done (took 67.061917818 seconds)
done (took 639.831134594 seconds)
SAVING RESULT...
DONE!
