cset: moving following pidspec: 24212
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.524543744 seconds)
loading group "string"... done (took 0.522810544 seconds)
loading group "linalg"... done (took 9.165088233 seconds)
loading group "parallel"... done (took 0.181574535 seconds)
loading group "find"... done (took 1.327509977 seconds)
loading group "tuple"... done (took 1.966725528 seconds)
loading group "dates"... done (took 1.394658483 seconds)
loading group "micro"... done (took 0.200395166 seconds)
loading group "io"... done (took 0.516168884 seconds)
loading group "scalar"... done (took 51.949122576 seconds)
loading group "sparse"... done (took 14.307877412 seconds)
loading group "broadcast"... done (took 1.347820879 seconds)
loading group "union"... done (took 10.331485737 seconds)
loading group "simd"... done (took 3.11197518 seconds)
loading group "random"... done (took 11.715958879 seconds)
loading group "problem"... done (took 2.247311335 seconds)
loading group "array"... done (took 24.704241196 seconds)
loading group "misc"... done (took 1.152055591 seconds)
loading group "sort"... done (took 3.825945782 seconds)
loading group "collection"... done (took 19.591960267 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.624393054 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124258668 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.26665226 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.284117988 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.242581151 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.155968733 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.13949344 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.259976556 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.6784984 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.209079437 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.132136323 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.499120437 seconds)
done (took 6.44479237 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.25767082 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.183550279 seconds)
    (2/2) benchmarking "String"...
    done (took 0.172308015 seconds)
  done (took 1.1325283 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.074973866 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.154885521 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.107658276 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.093740827 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.092354355 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.110497495 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.092790969 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.109023468 seconds)
  done (took 1.541280004 seconds)
done (took 3.787551212 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.519227244 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.882239183 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.519948632 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.146571719 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.321740012 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.306885638 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.323123805 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.206332946 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.107731701 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.092826649 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.181848513 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.389431587 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.452323093 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.96110375 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.092814604 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.099196426 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.137186461 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.77538367 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.084159771 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.114051748 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.512093188 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.194168004 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.09628579 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.127921078 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.186349536 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137124501 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.167214271 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.101965746 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.671307781 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.134048391 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.192950948 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.099648359 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.163836302 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.195413063 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.210607691 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.090151489 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.686432873 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.20238867 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.094630569 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.100181576 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.672092415 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.121211512 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.187052938 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.103531337 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.089821053 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.183121446 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.093783461 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.075539686 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.1181242 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.084041024 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.166538759 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.460123275 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.108538675 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.174207177 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.090837287 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.695028705 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.100276353 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.281011854 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.124151917 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.092896305 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.090690295 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.088776153 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.161009335 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.091391512 seconds)
  done (took 20.348005267 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.150824396 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.168275401 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.077511824 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.158789374 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.12585663 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.079572913 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.103482256 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.079125705 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.110365795 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.247220427 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.140370744 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.157920688 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.092007532 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.088080154 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.128532404 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.250643807 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107214706 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.125146117 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.087272397 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.090057962 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.143252198 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096952063 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.090534121 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.112205834 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.171665717 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.207645009 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109780828 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123289945 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.087613582 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.09815297 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143502165 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.14904229 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093966023 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.085888665 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.192342152 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.107025626 seconds)
  done (took 5.376390955 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.20390283 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.12327882 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.211616919 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.161567797 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.143120942 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.168527322 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.148985276 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.268990454 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.209000894 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.179426685 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114933146 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.125729088 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080717901 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.079314634 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.139559996 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.076638694 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.487450919 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.183026705 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.127490902 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.156523862 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102300766 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.079080617 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.370042682 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098540851 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.078670908 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100722403 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.068219387 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.196813323 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083430446 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.101879991 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.081676532 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088374659 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.138330382 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.197514884 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.134557984 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.124693151 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102541165 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.082316207 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.219702687 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.091455785 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.074852135 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.123972951 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114752814 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133590593 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099871395 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.096795489 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.224712678 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.081311175 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.122767463 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.048148235 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.198508303 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.127133659 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.080013078 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.290359066 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.116582933 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08374096 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078778546 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.251586357 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.115360731 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.156622984 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.079651724 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.075729553 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10286992 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.076503285 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.431758408 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.089042764 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.110480421 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.099629172 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.143060781 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098885215 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087298159 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101049946 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081570444 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.079662876 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117368929 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.080442253 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.078400144 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.09870059 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.080934528 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.078075839 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.102331559 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.0982809 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101317035 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.08105271 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.148146252 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.116390484 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.101369709 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124714893 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.087008633 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.080753146 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129337108 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083862767 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.082982365 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.169791739 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084740279 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112839187 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.0838108 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142695927 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082022354 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.209200595 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081486711 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.107797514 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.104566104 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12627874 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.100200572 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077791204 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101122348 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.076665615 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.07845956 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16045985 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082640562 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.083217079 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.083934883 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.112062959 seconds)
  done (took 23.281723965 seconds)
done (took 49.782593736 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.4802407 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.092196893 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.090526327 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.108531106 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.087072883 seconds)
  done (took 1.713697557 seconds)
done (took 2.543526996 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.329227656 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.196055935 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097749116 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.193064012 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084326156 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.200930335 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.187345831 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.090889392 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.21304021 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.081722608 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.19244798 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081631803 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.102609451 seconds)
  done (took 2.908515105 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099416452 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107472774 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.100128913 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.118733146 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080199671 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.096846098 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114824108 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108928348 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09667394 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.110839534 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082117221 seconds)
  done (took 1.947793575 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097189893 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103224793 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094619291 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117390848 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081302028 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.095690019 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116150989 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107748954 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095684789 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.11197617 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082733736 seconds)
  done (took 1.941795535 seconds)
done (took 7.62845184 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.15572911 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.049411655 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.16928723 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.21865772 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.352952397 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.239989698 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.585158548 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.15525299 seconds)
  done (took 14.922654973 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.175581822 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.109574226 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.087871517 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.089616437 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.091929035 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.110904987 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.085905848 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.084607092 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.108774542 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.090636313 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.0891695 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.104307463 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.092219796 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.092348351 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.086107799 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.105871292 seconds)
  done (took 2.502376016 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.141284345 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.123718476 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.112419778 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.094207723 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088422426 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.112231733 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.09459059 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.090845363 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.109438208 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.089646142 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.095781304 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.110528598 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.092048652 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.087950737 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.110828766 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107451701 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088880072 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.111036753 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106374877 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.092631967 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.1115433 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.090266931 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.091484352 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.111031574 seconds)
  done (took 3.38704993 seconds)
done (took 21.650568792 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.152508352 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.103552235 seconds)
  done (took 1.095288522 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.145102787 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.163775516 seconds)
  done (took 1.153731973 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.112334559 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.08629625 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.139976323 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.102504858 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.086626878 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.104266415 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.112565662 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.103182658 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.085763067 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.085633319 seconds)
  done (took 1.866301838 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.092544161 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.090836651 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.121935228 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.139822678 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.113174619 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.089729758 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.090299408 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.088768565 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.11247241 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.087515763 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.09404521 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.122398886 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.089753569 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.122705485 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.091795315 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.09094335 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.112950996 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.090495165 seconds)
  done (took 2.693040143 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.088781545 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.090008792 seconds)
  done (took 1.026118151 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.092136358 seconds)
    (2/7) benchmarking "second"...
    done (took 0.088115462 seconds)
    (3/7) benchmarking "month"...
    done (took 0.089042941 seconds)
    (4/7) benchmarking "year"...
    done (took 0.109654519 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.087389918 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.086576593 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.10379304 seconds)
  done (took 1.507546634 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.501089222 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.267482549 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.371086096 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.102373521 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.142274722 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.351286401 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.142670904 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.098536901 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.096720294 seconds)
  done (took 2.956222356 seconds)
done (took 13.141829522 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.093467855 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.215724995 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.639590215 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.107549487 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.20521195 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.162757878 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.295447377 seconds)
done (took 2.570521685 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.359293646 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.15127134 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.087439794 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.085172919 seconds)
  done (took 1.532144728 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082158922 seconds)
    (2/2) benchmarking "read"...
    done (took 0.095462134 seconds)
  done (took 1.031033428 seconds)
done (took 3.418680147 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08651313 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.083907068 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.135857145 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.084131366 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.083812836 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.083626724 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.10236145 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.084729059 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.082835622 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.083235472 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.103689204 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.084297714 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.083492453 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101207972 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085060439 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083385571 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083556814 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.102053445 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082662241 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083832784 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.1032436 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.08521365 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.085436988 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.085233725 seconds)
  done (took 3.050277959 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.110874213 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.087544779 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.1090123 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.09203841 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.090197538 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.109951885 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.093883415 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.087261741 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.090644037 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.110575545 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089884691 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.089049868 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.108358485 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.091548425 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087833264 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.110936492 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.09256755 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087608784 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109382952 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.09157704 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.091436183 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10777634 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.091890745 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091644084 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.110722808 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091976234 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.087847353 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.10631877 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092505785 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.090892733 seconds)
  done (took 3.758630959 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.097692796 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.084721707 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.087854751 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.1171015 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.087493346 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.090006778 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.106105096 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.089764422 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.091201493 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.088668545 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.1120297 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.090063579 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.086586938 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.10983422 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.09264211 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.094651055 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.098647379 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.108137797 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.088675309 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.091592681 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.112390049 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.088006247 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.089509067 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.088856384 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.110747593 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.086673111 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.09097384 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.108768237 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.092607124 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.090530843 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.092839654 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.112440568 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.091523966 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.100907447 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.113378577 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.09104339 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.09536985 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.08718215 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.112751646 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.087742446 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.085757265 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.109684107 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.088137345 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.094351555 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.088280953 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.110401698 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.085042651 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.090214246 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.105475187 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.091653843 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.08369055 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.083891995 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.109857424 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.089176288 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.090651702 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.102187826 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.08920567 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.08434509 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.089039332 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.107062014 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.086090731 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.083638755 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.110810417 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.088939892 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.103311504 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.111191678 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.086081991 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.090481268 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.090327961 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.116350693 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.093224015 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.100654811 seconds)
  done (took 7.757576303 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.102506791 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.096530158 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.087575481 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.108447461 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088075632 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.087949845 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.112282657 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090966372 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089200754 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.114126899 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09038177 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.087978237 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087495454 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110773566 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089449865 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.08881506 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.114306911 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088456977 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.088836069 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108589414 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091882163 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.092136595 seconds)
  done (took 2.984750993 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.233656389 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092921773 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.134455786 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.117592053 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.102458228 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.116967147 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.090384764 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08964036 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108377307 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095110221 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094101947 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108169172 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.103081761 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0932292 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112206798 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.094742784 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092353092 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.114705171 seconds)
  done (took 2.863704366 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.101136075 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.087954418 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.129979854 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.088593866 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.08672243 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086978605 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.111840826 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110136371 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.091279511 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.110223876 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.095858882 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086550498 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.107182042 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086584373 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087799096 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109094645 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.088470277 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086151877 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114007315 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091782099 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.092405733 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112781693 seconds)
  done (took 3.033264436 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102634474 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.086965717 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.123285942 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089931832 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085621194 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.085319035 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.112130397 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.086216361 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.09296353 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.107183014 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086359411 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08693432 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.121331164 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.086701164 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.092222672 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105824398 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.087709813 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087034857 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105068284 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.08662464 seconds)
  done (took 2.786948709 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.171850362 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.1235384 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.107798414 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112989931 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126107589 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106720729 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114676444 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.125470496 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105997004 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.134540571 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107044247 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106152172 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133131858 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111241177 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.104399025 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132706173 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112942145 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132460114 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106237087 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105299131 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.13620911 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105754292 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134006567 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106443077 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.105133412 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124202073 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107663257 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110174828 seconds)
  done (took 4.184457995 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090467474 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.087305665 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.085708065 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.108509286 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.085638113 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.085120273 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.085347114 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.105275918 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.087243491 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084493561 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.104679719 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.087857138 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08619337 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.085364841 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.104582301 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.086855264 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086274222 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.084293712 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104117919 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08491576 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.086680038 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103634967 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.087477102 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085161963 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084279854 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.105687286 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084634865 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084491666 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104441112 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085821179 seconds)
  done (took 3.606953883 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.100938669 seconds)
    (2/2) benchmarking "in"...
    done (took 0.097700144 seconds)
  done (took 1.075876497 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.095634815 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101604189 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.087976191 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105706069 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.09198587 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086069606 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113727392 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091865145 seconds)
  done (took 1.653292206 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.146865925 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.164905218 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.092207043 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.09768459 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.162814945 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.157614466 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132782315 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.090262782 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.10863883 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082349404 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.15837471 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081628867 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091301533 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106559667 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091323218 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094966637 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.086969063 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.117737556 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.09338201 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.088844958 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.111281364 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095054753 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.090537459 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.115648833 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084265631 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091081835 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113041926 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.101686922 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.0877791 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.11223431 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089637402 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.086362808 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.110064071 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.091665194 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.087973658 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.165167438 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096840177 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10464373 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.091522185 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09144724 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.140288462 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.088073175 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.091268526 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.087503896 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115198392 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.09251111 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.091820098 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.106415868 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083019274 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085283418 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.105632176 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085494004 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.086231536 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108744676 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091524613 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096385433 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.10836907 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087380321 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085595483 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.084509478 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.109814361 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086416469 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091054824 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.110568653 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092038374 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.091522686 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108207337 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.086062434 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.087809907 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.107454423 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.090824488 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105162687 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.111253527 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.094535055 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.093532717 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.106994407 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088440022 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093241863 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107575065 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.093364321 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.091363469 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.136554659 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093103227 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085440034 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.104265082 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.096662969 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.089946947 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.09009988 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.102360159 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099486282 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.089033494 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.107951901 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.084354779 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.088492946 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.105260716 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.092625684 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083507301 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110134254 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.087642623 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.094007609 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092805288 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108916746 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.092219707 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092973926 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.113482418 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.089588877 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.156442809 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088881003 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085426378 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.088717792 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.115675749 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084542016 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.090109625 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.105698655 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088260138 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08555394 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.112665874 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.091673411 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.088316624 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.111569653 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094658921 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.091106404 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.10903291 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.089021833 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.086397868 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.091928277 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.116767019 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092301745 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.090879598 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.107805158 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.087197735 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.089531609 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.111352552 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088741878 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.092549698 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106875966 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.08763518 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.088846794 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.092925678 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.111213109 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.085478728 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.088223318 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.111399968 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.090291664 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.090252158 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.111719084 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086517385 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.081760956 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.111414938 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085758417 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.087746066 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.115926504 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.087253898 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.090246319 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.106672241 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.097200402 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086929892 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.092353167 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.111538584 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.094393252 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091943835 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.103204747 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088374919 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.091744321 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.113104154 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.087707926 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.088210641 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.106420579 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.096683381 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.084292662 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.092447129 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.102549819 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.088241064 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.092903257 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.110677709 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.092177781 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.087243096 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.149525161 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102317285 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093938611 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.109584886 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093883069 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.092643066 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.1092528 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.093817232 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093876142 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.093029014 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.11089491 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.089939178 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093187128 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.10714336 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.090436982 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.08901525 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112264805 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084112962 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.089771532 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.10139145 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.095419168 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.092761501 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.092366555 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.11408153 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09060316 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089352203 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.116682098 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087900594 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.091580643 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.103412535 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.094052743 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.099020024 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.114534077 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096298691 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092571418 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107741062 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.090330786 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.097712472 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.089860384 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.111873117 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.088138433 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.08422624 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.104545513 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.095472921 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.091839619 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.105820308 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.089007679 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093809766 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092099966 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.109656087 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.083671336 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.092389772 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115497039 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086782832 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091103212 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.108802961 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.090262222 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098822498 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.103586326 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.087190008 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093572605 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.113782126 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.088579885 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.090340198 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.109430288 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.098005725 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.091975121 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.090495489 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108843932 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097010709 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.08811344 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.107117614 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.088527351 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.090522924 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.103204832 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.090578269 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.090975983 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.087319447 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.107837678 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095768888 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093721942 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.113794177 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089129081 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.092951704 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.114016687 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.095893402 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088801585 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.115038473 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.087067016 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.084019054 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.105108237 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.085209023 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.089454012 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.086572849 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.11423396 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.090111088 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088817197 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.113106201 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093479103 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.088196774 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.114081162 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10216696 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084966731 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.105879701 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089577745 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090518315 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.108246082 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088562365 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.088132488 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113316383 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.095145853 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093800958 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.106682992 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.089921317 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.095111885 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.087031139 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.117088103 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.105087163 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.094727615 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.107082485 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.09426011 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.088718892 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11579099 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.086758929 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.099163707 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110057744 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091703718 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.088673476 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.108364914 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.089714206 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.083614782 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.0873965 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.115587485 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.08961664 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.092795665 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.110823289 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.090817898 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.087346885 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107295982 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.096041941 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.089807443 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.115661818 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.089749276 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.084113369 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084202996 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.11509314 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092375981 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.095248104 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.106699086 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.09285975 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.094857915 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.112916312 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.091494627 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.098047955 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.097068689 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.116097616 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097802645 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.084174944 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.11022542 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096718536 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.087098431 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.111965791 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.090817924 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.085136093 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113809723 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.096150937 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.093945694 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.110593351 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.086939693 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.088753181 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.094762327 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.11336566 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.092320607 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.089991652 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112828625 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.087827368 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.093074891 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.114643076 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.09432176 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.0959219 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091109091 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.115774501 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.088005862 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.094149822 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.110500309 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.086948283 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.085022138 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.110151484 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.097095694 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.085651345 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.095227266 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.115414368 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.088882949 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.089327368 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.11546529 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.088464942 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093716311 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.116316723 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.09094756 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099392578 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.108828806 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.090991131 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.094347457 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.093262578 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.106641526 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.091043914 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090136362 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.116665545 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.092380134 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.093703375 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112682634 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.09525346 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.091109856 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.114736721 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.096202329 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.095007178 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.086014306 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.118381961 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096421256 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.09154304 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.110094201 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091236059 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085627858 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.111335 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.096590976 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.089710047 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.118294331 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.096102939 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.090906045 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109166795 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.098255591 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090757343 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.095478545 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.109285382 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094620378 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.085157832 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.115764168 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.091675259 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.095565534 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.110610858 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.087506209 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.094855124 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.113720674 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.095484671 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.093926154 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.115114844 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.087516713 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.085185534 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.091902462 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.109568217 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099737088 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094750216 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.11151331 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09150259 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.090410863 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.109130314 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.097886297 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.086534733 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.08797445 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.113544081 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094121958 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.089165745 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.108103321 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.094252484 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.09126123 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115517184 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.092366775 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.086309362 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.111489085 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.098052491 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.089978572 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.107420495 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.091140247 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.097533751 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.09007236 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.110607582 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.087391822 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.0987314 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.115171396 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.09895803 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.087822254 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.114008406 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.090907969 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.091367672 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.118203456 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.091965213 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093126387 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.111086101 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096688058 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097159001 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.105186175 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.090825521 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100502526 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094783267 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.117433171 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.092567669 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.090725688 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.117994101 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.097400996 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.090778524 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.107882054 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.087607853 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.090257994 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.105168813 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.092538432 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098465458 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.111547201 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.092040163 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.094699923 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094552238 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.112193311 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.091872526 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.08639258 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.118077943 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.090921015 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.095437422 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.105904718 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.089053484 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.091713433 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.095586925 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113078385 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.093149003 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.090719892 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.1117767 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.088959689 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089653372 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.116412119 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09697926 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.096261128 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092025057 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.111827314 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.09423724 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099966482 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.113084383 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.092429356 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100045211 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.11831003 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094125669 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.091441932 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.118024108 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.097901761 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.091612338 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.118015796 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.092000815 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.091752802 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.117204602 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.099429307 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101744844 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112158329 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.088418093 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.094958111 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.090768159 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.108632458 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.096490178 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.098686642 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.118273299 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.092823421 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.088739928 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.1217439 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098764099 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092839664 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.11153467 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.091784962 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.095737374 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.110583201 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.096448712 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.089648704 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.097455149 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.118927086 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096929304 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.098985588 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.107779765 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099282643 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.094363938 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.12234418 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.091788293 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.086832169 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.107147436 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.093962329 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.09815956 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.098501715 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.11493968 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.095425125 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.095106194 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.113767108 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095051889 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.08998051 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.117504675 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.098485262 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.090807776 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.093477386 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.114111066 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09519743 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.092459562 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.116994816 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.099089889 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.093347233 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.122186553 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.097978918 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.09075865 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.11096954 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095825864 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.092978917 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.093553211 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.117326847 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.090806437 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.086982514 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.119045513 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.099180346 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09219916 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.119298019 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09990883 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.091729362 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.116418696 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100824214 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.095275506 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.092234369 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.11549668 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.095344149 seconds)
  done (took 59.771488409 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144964968 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.098621232 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.113600115 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094066944 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.1098502 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114805014 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092238213 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093876722 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.114456657 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.103762162 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.091770598 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112030404 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109743935 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.114299356 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132053435 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102827801 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112051127 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095016132 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092608174 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.092782294 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.129475585 seconds)
  done (took 3.195187328 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.111954445 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.106844611 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.124345352 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.107614325 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098296053 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.126034335 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.10407158 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.125127275 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108325293 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100369226 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.128468393 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105084299 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.119787599 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.101829102 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0997558 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.122511937 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.10865664 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098508086 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.126794355 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104600408 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.121493934 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.106255598 seconds)
  done (took 3.382198064 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.102765827 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.09663821 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.098361808 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.114012549 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.097514926 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.091677744 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.120265008 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.095247033 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.10176287 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.092893014 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.109948099 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.095856185 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.098424771 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.114538803 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.09041318 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.093366129 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.122911221 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.098280647 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.098798707 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.091822309 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.129063085 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.092682507 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.091863088 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.110526204 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.105640221 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.096866457 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.11459282 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.098423569 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.088920818 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.117384122 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.09539942 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.094000089 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.115218979 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.091447575 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.088875296 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.096392348 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.119280986 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.093497659 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.092835597 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.11636793 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.095712376 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.098166903 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.119680938 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.095822409 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.094568553 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.094230984 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.118641571 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.093184386 seconds)
  done (took 5.816522535 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.12526869 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.16084246 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.097226108 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.135575356 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.131027244 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.103049829 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.095764438 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.135069257 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.095194357 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.117619337 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.110115704 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.107373676 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.120556175 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.100880637 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.096825165 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.121437286 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.098482888 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.096266693 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.122790465 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.096640503 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.1008899 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.121117355 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.107925828 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.126664639 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.101923302 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.095465339 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.116930879 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.10236839 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.106371951 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.123604642 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.102341387 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.101760579 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.371347997 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.100312609 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.09697982 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.119892833 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.110014221 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.097751095 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.120503671 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.095715245 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.09718491 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.123021476 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.100727507 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.128768211 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.100650513 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.100213984 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.095779646 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.116942901 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.107841295 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.118645273 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.105635264 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.108179354 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.120166245 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.098704832 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.100075567 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.128615583 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.098814388 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.096408406 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.121709863 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.105965124 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.095385614 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.122061558 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.107534348 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.096970343 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.125311845 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.107782839 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.11968831 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10128729 seconds)
  done (took 8.81152351 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.133986859 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.102157189 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130246791 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10981583 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100399387 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.122705704 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101441553 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.100967762 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.123501571 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106793557 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121714134 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.203025692 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.120035782 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.106737174 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.100655879 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.123759994 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.103483542 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10062423 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.123077488 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102755282 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.101915775 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.130840279 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.101503695 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.129418238 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.114414625 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.097103092 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.122411907 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.103275759 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109116527 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.12365433 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.113238414 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.122323705 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.103806701 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110038075 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.134690513 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.102406245 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.096300119 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124517879 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.103072463 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101117473 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.120909618 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111232626 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102321682 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.12070201 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102826149 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.101499922 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.133082449 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.113333648 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.128093763 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108445035 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.100604456 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.132330369 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103304869 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.122398955 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111506124 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.115707297 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133655338 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109093204 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122584754 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112327075 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109676899 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.13867716 seconds)
  done (took 8.08233785 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096859954 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.094992251 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.093709124 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.115935894 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.096424602 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093020869 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.093570188 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.117749711 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.094509062 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094516153 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115466506 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094242327 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094018278 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094111156 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.116211975 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094486086 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093261187 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09409542 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.117271394 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095216071 seconds)
  done (took 2.942830578 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.10713045 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.113717208 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.116693344 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104030836 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.097325923 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.123424051 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.098892268 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097613518 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095840877 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.12065961 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.106540268 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104652301 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.12003137 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102938946 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.126282191 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.103492416 seconds)
  done (took 2.687908204 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.117468785 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.113630988 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.193196583 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.099249479 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.118482005 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.105738378 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.097248561 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.098490808 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.118898578 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.103374789 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.100876965 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.123606852 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.097965684 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.097786539 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.119423638 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.101141178 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.094409682 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.121641246 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.09942907 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.167594611 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.124822277 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.0991017 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.097120924 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.125298041 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.098141095 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.099164307 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.125916503 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.098025999 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.098861276 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.120453408 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.100430838 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.103747679 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.118817169 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.102693012 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.098308092 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.120029434 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.099782234 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.098513046 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.121624192 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.099947482 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.10007744 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.098257634 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.120592922 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.100997051 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.094223632 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.120196973 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.096260056 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.102510038 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.120597925 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.099936674 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.098310145 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.127170691 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.105213586 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.10675394 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.126514011 seconds)
  done (took 7.008152234 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.111649592 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098540622 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.130146465 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.099294266 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.09874202 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.098208819 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.121529028 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.100198694 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097674542 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.118619576 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099645315 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.099353043 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.119294467 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100619776 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.098204663 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097948423 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.117598716 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.099540811 seconds)
  done (took 2.857724966 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.105939755 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.097176001 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.101511814 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.120126784 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.097070456 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097556701 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.117350443 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.098134121 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096668037 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096004574 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.119426301 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.097949813 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095658144 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.120858915 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.098730811 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09719463 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.1192699 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098786898 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097709854 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094876509 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119731713 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097879527 seconds)
  done (took 3.240279318 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.111622084 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.184780154 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.106650243 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.194536805 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.098313334 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.095204779 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.127701643 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.097874021 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.112372929 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.117218037 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.097490802 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.095877523 seconds)
  done (took 2.393551785 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128179957 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136254279 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.120168278 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101601672 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107340233 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123429075 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102757 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100695111 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133373771 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113416615 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122925197 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111700186 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110043335 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131943241 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107447621 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127908521 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102940058 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101526512 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096515789 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139864277 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101193077 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132675758 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103343831 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10150408 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124447227 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111427572 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130489613 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113632326 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101439706 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13398122 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108311067 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101146417 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133353749 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113316259 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120520279 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113374745 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101336879 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140400781 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108288712 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131636123 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.100677985 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107123028 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132501426 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108455573 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109537701 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124414381 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108447582 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101493081 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125921108 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12407321 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129136756 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111777583 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127559557 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112372176 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110992264 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145529147 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113757332 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132165065 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108992058 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133654785 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112882978 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106986959 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133180296 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11432884 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128137338 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112253947 seconds)
  done (took 8.679544273 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141642426 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097916615 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123617773 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113645779 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109042677 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126031509 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102158709 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123743586 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104798905 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098796946 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170209367 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102746515 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11249162 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133204809 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102495739 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123357692 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103811536 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110358678 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12126296 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125685934 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101262637 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133100376 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111589441 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132363382 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115234236 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128698182 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104352502 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102004077 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123397034 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104242487 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107723907 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125593982 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112477632 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.099207191 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134300167 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103347972 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102123035 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130585054 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102716258 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129059674 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112427822 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118497781 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125430687 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102661091 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135022656 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10468211 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102581397 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120905869 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104454015 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099387539 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135773165 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115688464 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113544963 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134808386 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103552296 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124915358 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104691949 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102687989 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124557686 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109585315 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109811838 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126205137 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12567585 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124749153 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103838048 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109890461 seconds)
  done (took 8.609915496 seconds)
done (took 165.088920333 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.150869682 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.192186513 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.146520659 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.179704151 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.093939027 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.127033734 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.148247199 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.148708322 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.091264445 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.115789805 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.093051423 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.095485004 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.181666532 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.093306951 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.092459228 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.118557453 seconds)
  done (took 3.02511629 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.19182021 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.312011463 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109569719 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.118839476 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10169711 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.098492484 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.119515029 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.098550559 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.096503583 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.127353927 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100490076 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095287703 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.127332485 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095310759 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.09612476 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.122464895 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105764078 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098653823 seconds)
  done (took 3.1769977 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.116962722 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.142809917 seconds)
  done (took 1.229063549 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.130140207 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.198653324 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.276358924 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.169348732 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.12167713 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.137140456 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.150116002 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131620878 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.18085478 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.131374878 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.1115658 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096895096 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.147123433 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.104246752 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.109803097 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.121108556 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.126622354 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.109659722 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.131836388 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.099559715 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118281415 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.124019594 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.103592067 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.131470893 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.170187467 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.131931753 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.101966607 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.100848249 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.121137031 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.108947553 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.104137514 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.137623941 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.111422272 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.174621731 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103762801 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.170620702 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.105857642 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.120336085 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.110478164 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.097987875 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.124365645 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.102774447 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.112879655 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.120273843 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.101245652 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.105432327 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.122941072 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.100406765 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.105175733 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.129251915 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.10504768 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.125360994 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.145990555 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.129502431 seconds)
  done (took 7.830872326 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.861057057 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.141804433 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09794449 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.015154763 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.149312992 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11342947 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.868225308 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.14539765 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.253204288 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.879081357 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114200386 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.110657203 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.25794497 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.23082343 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.995064482 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.347392342 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.695664933 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.135486856 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.126833437 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.164715926 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106471084 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.148940816 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120419335 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.417842429 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.099575354 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097486778 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.129253786 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.110161212 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.177698577 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.098189564 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.122697326 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172546061 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.267200009 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.207720161 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119497971 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.098672029 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097163864 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.183579521 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269265513 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217209283 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.184781306 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095292947 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.096877409 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.128350825 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118740704 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093809204 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180836207 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.189220249 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.188483062 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.101891342 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.109260685 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131243833 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.105288154 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.178223185 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.094969872 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.329036092 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.354776801 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097544637 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105668976 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.13696525 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264695145 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.097258479 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.230896428 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.147939109 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215165045 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.096999363 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.810346712 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.182276086 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.096877383 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.127940215 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.104903645 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.102257018 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.129380538 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.156401298 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.396047176 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108512188 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.125770717 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098339547 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.242775136 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.097261526 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119630524 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.159047113 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121984397 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.107072931 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.132556406 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11195124 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.185597959 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.224780235 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.133165958 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.106987291 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.125415212 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.111782059 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.097897204 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.232322975 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.225929071 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.176741715 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.234283868 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.106539226 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.182334143 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.181072514 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105267183 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.186781698 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.104503294 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.136632281 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10670541 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.222131488 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.157084826 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.098819421 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.102432323 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.130898575 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.1362671 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124150825 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.10742552 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.184443345 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.456122346 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.158340379 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.118990121 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102339005 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105765069 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.180590097 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127508672 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262398066 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10946925 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.183172323 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.106171149 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.094694551 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.128714313 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.179768089 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110018873 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106684289 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129101377 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109305983 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.252081216 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.223286386 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.111435917 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.241580151 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.192404459 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.105247982 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.189738178 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128176411 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.165683731 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131419787 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106565991 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098268765 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.795553828 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135366426 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.105252972 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.125773983 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183693936 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098051749 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.123468388 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.099059336 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095291971 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.803385676 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122704498 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.096980327 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.098013815 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.127568073 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106183005 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104929072 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.127485067 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.176810521 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244678237 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112413986 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.127664071 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.100149729 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.177200252 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.101268949 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.097961474 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.121033155 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.100950559 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.105789405 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.125070642 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.100628113 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.190188682 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.153607052 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.250594389 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.55705568 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.102718547 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.098487434 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.236872088 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122012421 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.299631009 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106960021 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.231461591 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.186383413 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.09546731 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.350517367 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.164746779 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.204067461 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.100069356 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.189446446 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.095492711 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.130679594 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.154292837 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.121624897 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.104787563 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.177103003 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.11298176 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.135880675 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.997815622 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098489976 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250048276 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.094961148 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.186447311 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099247825 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.131038232 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.301772896 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098630676 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138482397 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.156367337 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.126296626 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.100068118 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.603900561 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.098929885 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133047823 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107449889 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.23326271 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.186096488 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.106043893 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.131906967 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112550345 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.182888098 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.234095931 seconds)
  done (took 45.116880956 seconds)
done (took 61.34363696 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.296531242 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.257535239 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.307667214 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.210998473 seconds)
  done (took 2.134008959 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.269311699 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.162454006 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.235455196 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.096826149 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.246435362 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097176736 seconds)
  done (took 2.102369627 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.492832305 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.37387683 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.307882875 seconds)
  done (took 2.173154171 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.255229493 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.246259017 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.353653143 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.412264683 seconds)
  done (took 2.380425153 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.306192959 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.129813571 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.124477018 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.212670589 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.259018708 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.234093871 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.147314306 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.194323869 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.130026175 seconds)
  done (took 2.779973026 seconds)
done (took 12.557602695 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.290811798 seconds)
    (2/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.24106522 seconds)
    (3/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.25252118 seconds)
    (4/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.340800339 seconds)
    (5/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.162642379 seconds)
    (6/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.331253911 seconds)
    (7/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.152458292 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.130346001 seconds)
    (9/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.278217687 seconds)
    (10/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.133973792 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.109975502 seconds)
    (12/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.240875845 seconds)
    (13/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.180202639 seconds)
    (14/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.149174579 seconds)
    (15/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.214340805 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.234903036 seconds)
    (17/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.351159878 seconds)
    (18/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.219890507 seconds)
    (19/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.092458588 seconds)
    (20/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.130208567 seconds)
    (21/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.104503691 seconds)
    (22/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.102979915 seconds)
    (23/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.215278391 seconds)
    (24/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.192678327 seconds)
    (25/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.198554135 seconds)
    (26/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.134890523 seconds)
    (27/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.149398232 seconds)
    (28/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.233092017 seconds)
    (29/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.274927156 seconds)
    (30/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.131392068 seconds)
    (31/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.243518216 seconds)
    (32/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.154520817 seconds)
    (33/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.264374228 seconds)
    (34/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.278813282 seconds)
    (35/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.107234782 seconds)
    (36/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.253868424 seconds)
    (37/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.156392393 seconds)
    (38/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.105207191 seconds)
    (39/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.290091918 seconds)
    (40/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.083087456 seconds)
    (41/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.167219862 seconds)
    (42/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.16644341 seconds)
    (43/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.097673151 seconds)
    (44/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.082884148 seconds)
    (45/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.240263941 seconds)
    (46/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.083269801 seconds)
    (47/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.182419112 seconds)
    (48/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.139841793 seconds)
    (49/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.107199977 seconds)
    (50/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.173155006 seconds)
    (51/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.13631845 seconds)
    (52/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.113658341 seconds)
    (53/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.08226733 seconds)
    (54/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.185078357 seconds)
    (55/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.157872859 seconds)
    (56/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.08346653 seconds)
    (57/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.082392997 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.159823157 seconds)
    (59/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.193050087 seconds)
    (60/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.105008823 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.129272633 seconds)
    (62/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.13319701 seconds)
    (63/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.12771954 seconds)
    (64/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.103353222 seconds)
    (65/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.179126096 seconds)
    (66/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.236866348 seconds)
    (67/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.144896629 seconds)
    (68/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.083600883 seconds)
    (69/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.107891067 seconds)
    (70/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.106464828 seconds)
    (71/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.092276607 seconds)
    (72/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.104223625 seconds)
    (73/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.194557684 seconds)
    (74/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.194660276 seconds)
    (75/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.233266777 seconds)
    (76/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.084478667 seconds)
    (77/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.143351292 seconds)
    (78/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.121683693 seconds)
    (79/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.106474266 seconds)
    (80/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.124075158 seconds)
    (81/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.088560569 seconds)
    (82/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.233493599 seconds)
    (83/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.139982443 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.128456534 seconds)
    (85/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.084589377 seconds)
    (86/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.209301936 seconds)
    (87/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.106312424 seconds)
    (88/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.121718288 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.104884628 seconds)
    (90/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.146132348 seconds)
    (91/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.193933688 seconds)
    (92/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.234507791 seconds)
    (93/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.103007352 seconds)
    (94/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.106493422 seconds)
    (95/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.083887479 seconds)
    (96/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.111755863 seconds)
    (97/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.193772079 seconds)
    (98/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.09744479 seconds)
    (99/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.131030445 seconds)
    (100/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.085321987 seconds)
    (101/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.190142904 seconds)
    (102/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.083330789 seconds)
    (103/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.131056344 seconds)
    (104/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.152436521 seconds)
    (105/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.121660233 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.129521837 seconds)
    (107/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.084297155 seconds)
    (108/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.083871568 seconds)
    (109/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.104273771 seconds)
    (110/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.281260754 seconds)
    (111/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.101901307 seconds)
    (112/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.303784235 seconds)
    (113/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.221263069 seconds)
    (114/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.116449608 seconds)
    (115/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.082739145 seconds)
    (116/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.084332754 seconds)
    (117/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.128166536 seconds)
    (118/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.08308587 seconds)
    (119/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.083575135 seconds)
    (120/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.082298957 seconds)
    (121/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.131394021 seconds)
    (122/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.106358942 seconds)
    (123/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.143652891 seconds)
    (124/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.082455246 seconds)
    (125/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.117261901 seconds)
    (126/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.089617097 seconds)
    (127/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.10559745 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.102166975 seconds)
    (129/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.139233708 seconds)
    (130/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.125336749 seconds)
    (131/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.153771558 seconds)
    (132/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.107927935 seconds)
    (133/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.108644782 seconds)
    (134/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.082835321 seconds)
    (135/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.12196165 seconds)
    (136/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.148884098 seconds)
    (137/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.084864274 seconds)
    (138/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.098691266 seconds)
    (139/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.123096102 seconds)
    (140/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.100843754 seconds)
    (141/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.085332486 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.106056604 seconds)
    (143/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.215220258 seconds)
    (144/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.132807617 seconds)
    (145/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.083406472 seconds)
    (146/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.10763237 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.106096689 seconds)
    (148/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.084154121 seconds)
    (149/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.082018443 seconds)
    (150/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.083971825 seconds)
    (151/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.107179903 seconds)
    (152/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.10983527 seconds)
    (153/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.086307194 seconds)
    (154/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.088224208 seconds)
    (155/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.108426729 seconds)
    (156/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.086002871 seconds)
    (157/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.105793211 seconds)
    (158/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.083469458 seconds)
    (159/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.083597353 seconds)
    (160/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.124003217 seconds)
    (161/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.105822981 seconds)
    (162/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.098467611 seconds)
    (163/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.108849048 seconds)
    (164/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.095022583 seconds)
    (165/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.084994072 seconds)
    (166/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.084021879 seconds)
    (167/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.109141 seconds)
    (168/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.131562183 seconds)
    (169/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.148986779 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.122414058 seconds)
    (171/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.129499419 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.104455741 seconds)
    (173/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.083330364 seconds)
    (174/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.089695551 seconds)
    (175/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.129942479 seconds)
    (176/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.088872562 seconds)
    (177/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.084679471 seconds)
    (178/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.104405018 seconds)
    (179/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.107313692 seconds)
    (180/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.107006143 seconds)
    (181/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.120590009 seconds)
    (182/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.126209057 seconds)
    (183/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.193343043 seconds)
    (184/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.08368517 seconds)
    (185/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.121642221 seconds)
    (186/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.086412393 seconds)
    (187/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.105400461 seconds)
    (188/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.089505063 seconds)
    (189/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.127147226 seconds)
    (190/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.084218686 seconds)
    (191/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.085542038 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.101943528 seconds)
  done (took 27.792014475 seconds)
done (took 28.799612772 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.217629361 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.129160544 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.108386881 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.106130985 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.207744386 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.114679816 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.142088085 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.111455757 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.113229539 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.13014476 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.099678216 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.116981942 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.105523566 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.205085686 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.111159969 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.127003526 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.099469711 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.114136871 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.14271425 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.119995091 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.206491268 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102633733 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.112986714 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.125958517 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.18094578 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.126691549 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.108562373 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.106488538 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.138732116 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.10834321 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.107293608 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.099124245 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.144492434 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.117456691 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098660887 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.13296084 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100286275 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.089065862 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.129725344 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.109762263 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.114122861 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.105485518 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.134915208 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.100352775 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.106614489 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.132419984 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099753927 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.11132307 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.124287609 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.10829847 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101840737 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.143516846 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.106185908 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.097549863 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.122383823 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.10280281 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.114649533 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099258704 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.143448319 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100685184 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.10069297 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.125290202 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.109447419 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100399988 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.131312044 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.101781065 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.106881642 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.132809988 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.107177599 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102876179 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099808394 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.131907588 seconds)
done (took 9.731160039 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.106338551 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.146221427 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.201794656 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.213415278 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.126693437 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.139088106 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.112056293 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.120409909 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.108901002 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.147130128 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.135012719 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.153605864 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.184612526 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.137379685 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.115675868 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.108823511 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.134206583 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.108385526 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.210437837 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.124249017 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.124803627 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.13967905 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.127002553 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.14015818 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.105369907 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.133720932 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.131647845 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.110839639 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.103013922 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.137716402 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.12545593 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.103596986 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.132455904 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.12168644 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.119662081 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.136472603 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.116634854 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.110167725 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.129709357 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.105309096 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.111727217 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.145205765 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.105041728 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.114321865 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.136729931 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.119258925 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.10826044 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.140110058 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.106453293 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.108385041 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.129879822 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.132390401 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.112663725 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.14339888 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.113525724 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.115450941 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.141406223 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.11677416 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.106712242 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.142956462 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.106727232 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.103781935 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.131098871 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.125751753 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.10664985 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.140056491 seconds)
  done (took 9.491452225 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.124938264 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.135097594 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.140258958 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.115990942 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.108424066 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.123513987 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.097714493 seconds)
  done (took 1.895105885 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.100240243 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.21357696 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.186017721 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.20952119 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.207313439 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.195290103 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.146935197 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.099030374 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.155476236 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.11066035 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.21332107 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.215765647 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.130580809 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.115784678 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.212864593 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.099370574 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.216439817 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.100139385 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.111906037 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.214987127 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.1123707 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.154081021 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.11267821 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.099572903 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.210093692 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.100098901 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.266396818 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.140860513 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.10764542 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.113799673 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11002646 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.204225223 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.210789951 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.112633227 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.103583317 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.211220385 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.207515368 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11061009 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.225932394 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.103474727 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.212288806 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.112100582 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115330705 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.138719662 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.114838307 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.196947082 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.119203818 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.111856998 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.137682472 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.19521485 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.136600043 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.184452303 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.135158983 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.112521911 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.109273451 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.138953522 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.122375485 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.111687778 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.222908469 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113876617 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.210265149 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.212875293 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.185225598 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.213309012 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.120696689 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.214491481 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.206805572 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.11126918 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.107773703 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.139514252 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.186097163 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.136789642 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.111965055 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.201202908 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115568458 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.213814475 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.185880082 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.136469142 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.11288554 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.102401916 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.135881045 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.101701713 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.20150598 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.111857623 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.108490303 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.142567328 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113477864 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.111768168 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.130819324 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.123531871 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.110486825 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.137695294 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.118350881 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.110872702 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.142198813 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.190216142 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.138235153 seconds)
  done (took 15.629645443 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.10663126 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.101628025 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.105360143 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.128150706 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.103259328 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.101828218 seconds)
  done (took 1.716095295 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.14081202 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.112977206 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.147642212 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.114405036 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.164783367 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.220520588 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.228344941 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.108728984 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.154806443 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126718187 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.217204958 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.199709954 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.225167368 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.115659722 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.225997238 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.117130046 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.228431103 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.110736298 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.149677241 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.110657204 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.115580548 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.143466949 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.111849579 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.212781074 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.11550733 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.117520006 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.136620259 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.125601819 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.146026222 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.1123857 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.115667044 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.139782979 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.109106275 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.108603603 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.229383847 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.106964093 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.136671166 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.122094754 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.114992465 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.141657394 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.201942946 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.137757026 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.123290914 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.122067703 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.13820973 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.108951101 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121103228 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.136339811 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.227257168 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.123163829 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121267168 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.139137851 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.117082846 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.121115882 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.133861324 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.111852991 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.122807606 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.229757368 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.115332433 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.135318515 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.114460924 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.114459986 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.138862726 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.121186572 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.140012266 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.123695703 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.107715434 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.138815688 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112697484 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.11327372 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.147460541 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.116691815 seconds)
  done (took 11.234372778 seconds)
done (took 41.009644607 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.533250799 seconds)
  done (took 2.599703488 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.9132607 seconds)
  done (took 1.978975649 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.503808339 seconds)
  done (took 19.603828201 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.533141819 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.610761091 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.029929235 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.152901371 seconds)
  done (took 3.393771903 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.028233456 seconds)
  done (took 2.115507514 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.296118831 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.263263045 seconds)
  done (took 1.631381549 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.757175396 seconds)
  done (took 1.842957435 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.547396244 seconds)
  done (took 2.618453357 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.34842705 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.17483506 seconds)
  done (took 1.615735081 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.642108754 seconds)
  done (took 1.728509451 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.787276258 seconds)
  done (took 20.874861717 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.236225335 seconds)
  done (took 1.328262966 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.282353054 seconds)
  done (took 1.378196718 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.658970645 seconds)
  done (took 4.749095672 seconds)
done (took 68.537008303 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.115595421 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.115747726 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.113737404 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.138499358 seconds)
  done (took 1.560307253 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.122634542 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.116080424 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.118656584 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.142438106 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.122320982 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.115840401 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.141656982 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.118526687 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.11475575 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.145314898 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.117118425 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.114420737 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.144308588 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.115580076 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.113544861 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.143142629 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.120472026 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.11551113 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.141086636 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.117913119 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117314741 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.117838815 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.146134171 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.119512794 seconds)
  done (took 4.093426734 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.114747631 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.106472935 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.107735219 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.130582876 seconds)
  done (took 1.5548195 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.128265431 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.128667466 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.152117128 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125702724 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.128453154 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.153451399 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.116289408 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.112184606 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.141258326 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.127058137 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.131858374 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.155123266 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.128829563 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.117796534 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.152777636 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.111434604 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.116700818 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.155874702 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124949535 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.124480927 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.143486348 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.123022038 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.121316953 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.152008056 seconds)
  done (took 4.265932852 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.192548707 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.123611186 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.163108565 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.157557892 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.16519221 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.110433089 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.133777651 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.14521349 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.119453257 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.112067173 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.140654593 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.159433104 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.141901024 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.116149526 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.11267813 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.143013779 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.124719157 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.117603225 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.180795246 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.11668358 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.143596644 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.125654693 seconds)
  done (took 4.139616649 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.121434987 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.10595535 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.101132383 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.132713604 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.118640014 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.107776141 seconds)
  done (took 1.791166363 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.109112811 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.100713716 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.100003942 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.126123192 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.105871167 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.100004463 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.098739372 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.127053059 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.099866711 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.099843353 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.125377146 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.100909768 seconds)
  done (took 2.396758218 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.339507807 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.107009819 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.132628015 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.109173599 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.111746228 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.102705611 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.143865095 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.104820691 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.268111373 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.101279497 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.141199884 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.197697289 seconds)
  done (took 2.961160872 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206412518 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14073967 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.294255181 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.3654003 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163466655 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183170337 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.268108322 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188311797 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.201508748 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132045101 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239763402 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150097745 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174251309 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169900188 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159959654 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.163097897 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191850933 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186434192 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169203009 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192329055 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179235925 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187120259 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177310852 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17063978 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130648806 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182894919 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.114302817 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124595836 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19005143 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158306798 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193388251 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168204907 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136468307 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215111403 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255195778 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16646777 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285216632 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154067504 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.17671119 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.204080722 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252940114 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134299574 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210493151 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174437563 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125166304 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198381255 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148170436 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.194892683 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.125777869 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135993504 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202055496 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196779954 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.172248025 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158102628 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.308615839 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158165562 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.134924624 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197122616 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204677374 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184407529 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187933757 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.118051113 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.206145042 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203883012 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174581312 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.161831135 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.159571734 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145925891 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162990722 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.215142745 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200706121 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154959967 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.222055406 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125114719 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182213284 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166564277 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200606355 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169965856 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180828607 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.114435022 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170768956 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130373971 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146462748 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.199143762 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115369271 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220523132 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125807822 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.34749121 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211340361 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149661251 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18224952 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178377738 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154924507 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165424192 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.110756876 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140520366 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.184273819 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151510894 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154098942 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151409325 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158648842 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.124126 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143760143 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.145189038 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152574347 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.158978088 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159993322 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179351028 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.12406059 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186158161 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143923693 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.173243466 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165432458 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20552096 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125596028 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152565299 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186465914 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178896637 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.127295887 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197669693 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17897842 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.174212369 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1309928 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1881102 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182986282 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164380931 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180378095 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159780854 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130001704 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.172303776 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156081854 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179661376 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.149687466 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147531397 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.14733424 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217585755 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.122207383 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130424878 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190914065 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124869557 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147590662 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132757257 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155880879 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.135478693 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.137203706 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.155767769 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147333345 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179056611 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150260908 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178487372 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129617001 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200146469 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126327789 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.181364398 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140265232 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.11259552 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.194098011 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205647675 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124313404 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224001382 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.156707527 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214482185 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182289405 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126333884 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201765468 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122587804 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.114150638 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185219213 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14862224 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1838967 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.200387562 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184689272 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.188014923 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.171149314 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143747808 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189117796 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.170181254 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175861268 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.138179113 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180724035 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158374263 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.140873245 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.11954075 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.121005455 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158965421 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124657278 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128525907 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197858955 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186039758 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182125358 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182085112 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13271887 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.205579491 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.12072429 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182095622 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.158778746 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16183257 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.174101715 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20366404 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185792811 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136103031 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182829579 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.116575033 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122038835 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.154367251 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158116015 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154776241 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131351628 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1345957 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205032193 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194265122 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14215708 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222323283 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189229951 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187826774 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.142269111 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.162918852 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192252077 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154134163 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.178299065 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157751298 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.150542136 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202300013 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134369799 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210838644 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177233006 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158472251 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211719025 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.150322584 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151642215 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143200913 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179871101 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132014514 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186522452 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141067876 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123344778 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174703461 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.131249827 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144909222 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179349961 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166006357 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165664702 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.182205665 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18859894 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122023061 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137003125 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181216613 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137853824 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.111347273 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192675678 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207311612 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140141154 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178449812 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168619583 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151839558 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.315911015 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213375633 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170261188 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159166638 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135616781 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184646244 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156255695 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185287548 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171853646 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163295082 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171643393 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182360476 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136452515 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152985968 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143051005 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173056804 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.145421779 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.152973088 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.152269814 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.134968244 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207126262 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159683332 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156023406 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180855496 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.144243138 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.138715054 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162917442 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188190986 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179006929 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195506526 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151881166 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.185713191 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186926752 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144563362 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124545542 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.125301298 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204325671 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124273448 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184107527 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.174691727 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216966855 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184760027 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153721945 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162527592 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.120137835 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17984862 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143155651 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215419746 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129517399 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.15990025 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21409132 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.135587405 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125519496 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.183036026 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300354969 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140871435 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195709148 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.121394581 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.293711551 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125358844 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128282217 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186754049 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164217347 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.15447012 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.177922405 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183501312 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138413295 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156494858 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159470792 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208586566 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189265622 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190802181 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195306184 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.139194207 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182514382 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15736329 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198262003 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137617589 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.166911911 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158088164 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203644813 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.17729841 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.153406408 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15402014 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179051894 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152515508 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193286145 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132045902 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214449824 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122743845 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186121595 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132898451 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117674171 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181960502 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.201097551 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126759774 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20184088 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153821666 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155092327 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121311965 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138519677 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178600837 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13201154 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.151922544 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176470553 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.152595167 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157970818 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202580668 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1252134 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176729188 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142291979 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123165788 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163522937 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135038618 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151747789 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.168209557 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177779949 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.152846101 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174144049 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185990993 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185597925 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152111894 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163277688 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.665978902 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.120056954 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206507268 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141534688 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211800779 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143145176 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186616077 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153155397 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172617131 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158233446 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171360661 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.235255691 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186883453 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.149490359 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156761754 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134715341 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162442666 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.127886424 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174627944 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1530236 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132807913 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.158676968 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.150139857 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164435134 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.140452866 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160772398 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179380639 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170837622 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178366521 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206494248 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131228636 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186325163 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166739728 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154505686 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.157791732 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195785276 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134283125 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170784676 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.126815182 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.157590928 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178721188 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.117713441 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181227048 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155629678 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183489563 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151572638 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.157306201 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15657057 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163673226 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156105199 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11948494 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.174805515 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153841341 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156263426 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.12027932 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178537858 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155183842 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.177768314 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121524536 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.166487741 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207918876 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.11747133 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126466217 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.302151464 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183525965 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183719034 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.173621606 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129705635 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16633877 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152455676 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.147399093 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186497287 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.123499559 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152749841 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.124308512 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.194644644 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.151934152 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179917646 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17401917 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180935374 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188665311 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.156065916 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.289547442 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160457916 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154932566 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.123964473 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.152221479 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136528428 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127468829 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164105245 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.2102166 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176137212 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.17771072 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.140681919 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156540024 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.121671996 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124375531 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18923099 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146567055 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181536653 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138397747 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.111238174 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167525611 seconds)
  done (took 81.954658179 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.168960989 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.151078329 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.165747485 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.224533709 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195757373 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.295949163 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.233562942 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.26177921 seconds)
  done (took 2.877648716 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.123662225 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.156803476 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.138809888 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.144114464 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.116157142 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.447098748 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.156236158 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.118592977 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.164564166 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.157269162 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.140200908 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.631621096 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.116265827 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.143623639 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.12763388 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.117437744 seconds)
  done (took 4.176818409 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.473145064 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.587521153 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.197192462 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.279826267 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.233516964 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.179248416 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.798352607 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.691469609 seconds)
  done (took 13.631006454 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.151020004 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.134971324 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.319255795 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.262533021 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.149421829 seconds)
  done (took 2.212714515 seconds)
done (took 128.693197068 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.123758461 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.118941107 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.119489007 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.150742495 seconds)
  done (took 1.690523392 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.189449976 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.094228906 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.096283059 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.120586429 seconds)
  done (took 1.688064853 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.456692871 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.093233955 seconds)
  done (took 1.769424985 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.150304038 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.140303362 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.162236639 seconds)
  done (took 1.657004654 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.142801476 seconds)
  done (took 1.333403525 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.134551912 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.117950866 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.237250066 seconds)
  done (took 1.688185169 seconds)
done (took 11.026175444 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122906409 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.419440214 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.430361632 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132747064 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.707648349 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.425122533 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.031648886 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.172576924 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.173529148 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.134548966 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13124271 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.686801849 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.085268738 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.362320088 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.040630028 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.388144678 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.691588825 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.109267361 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.143641712 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110906246 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.013860708 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.134755572 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111207451 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.109940111 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.716037188 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.420176507 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.105832643 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.396258396 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.108457322 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.110872886 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.423682272 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109509322 seconds)
  done (took 17.44446798 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121308442 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17161916 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.143506582 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110284324 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.110987257 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.136827988 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.121024883 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119688153 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.205037648 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.107603319 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.159194449 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.108155101 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.11274758 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.133586934 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.136214607 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.107415685 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.109224311 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.141279594 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.11596282 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.108911578 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.160430162 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.107006357 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.109392376 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.138746985 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.107595047 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.129819887 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.137259175 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120526513 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.106846558 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.141487589 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.112874657 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.107393268 seconds)
  done (took 5.261974979 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.161214694 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.179269465 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.145590048 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.147382669 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.184896607 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.110996409 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.221479241 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14711824 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.20180558 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.10973909 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13144187 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.135040511 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.14943204 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.107625172 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.163638076 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109080066 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.111137031 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.140532061 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117141478 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.109613653 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.16108072 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.107666558 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.108950172 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.139004841 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110159664 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.129882129 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.136787042 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121021388 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.107017673 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.140932451 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.114553367 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.107513552 seconds)
  done (took 5.575646425 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.129738195 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.124583598 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.131436745 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.162010148 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.119529839 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.12228104 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.153188494 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.119667477 seconds)
  done (took 2.271635594 seconds)
done (took 31.750777095 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.136356381 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.125080898 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.125860175 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.149362993 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.193825582 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.142701512 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.123836924 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.112561927 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.149210671 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.128105806 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.107919779 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.112125363 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.156580702 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.116415756 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.225270993 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.121340879 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.229398642 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.195898339 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.142673233 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.121669284 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.11274976 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.231289794 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.116690896 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.111340784 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.236129925 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.111157931 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.216083812 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.115071124 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.143870162 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.11041782 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.221769696 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.11804795 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.112334447 seconds)
  done (took 6.065362028 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.217292816 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.114776152 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.147224332 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.117716181 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.114106528 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.146322444 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.214629799 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.145417929 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.118533654 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.1174302 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.115409662 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.227060615 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.120816429 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.139699754 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.117263654 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.114901951 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.24629132 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.11571682 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.10815295 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.125060582 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.110112761 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.117260789 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.255846928 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.109427801 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.115207057 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.147149213 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.117605382 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.119692792 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.143673828 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.116392787 seconds)
  done (took 5.452863628 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.128799122 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.13006023 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.133521908 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.214576734 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.14374535 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.158923213 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.139283549 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.131747597 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.170717391 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.111047932 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.12502607 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.178945331 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128032228 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.120937744 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.144384837 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.132172952 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134097365 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.140330976 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.118545567 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.128870976 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.1593145 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.130256828 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.137118151 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.148514177 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.110202298 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.117537768 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.14871518 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.127105051 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.118494894 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.123574388 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.14248009 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.114799106 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.111576352 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.177381328 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.115169812 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.124296818 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.168503323 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122632348 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.124083778 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.171992273 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.115687809 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.112505527 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.167920553 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.167770904 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.110758187 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.153727637 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.122695069 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.124459362 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.139192499 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130502323 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.153912071 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.141841597 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.130793338 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.111318321 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.137374755 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.118559613 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.109996339 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.143774383 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.12725801 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.113596921 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.163018932 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.119370033 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.120808887 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.111682107 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.151763902 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.109323039 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.108312012 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.144965879 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.138305842 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.116877797 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.177385965 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.110925453 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.121886328 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.152365799 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.121878164 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.121928522 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.108320546 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.152200443 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121411674 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.116345502 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.153568917 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.113362202 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.113589954 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.158098054 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.132367907 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.123950922 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.153358401 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.124950763 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.1132586 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.140358012 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130289207 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.110625358 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.144375856 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.126238995 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.111318145 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.112413254 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.155570845 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.123173546 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.107940987 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.167226438 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.115212644 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.109745129 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.165587886 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.117270115 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.116499418 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.14921345 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.156299054 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.11464732 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.152000316 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.125952721 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.111261957 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.117791703 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.146002201 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.110936775 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.127809042 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.156320347 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.118114662 seconds)
  done (took 16.780307902 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.330032799 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.313828309 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.181316465 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.313747983 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.153813575 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.209982978 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.310209306 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.313492876 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.11053785 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.178139836 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.163315324 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.280312237 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.142605412 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.140320373 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.315930431 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.36643437 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.171972254 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.149436747 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.179243182 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.12484507 seconds)
  done (took 5.680310262 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.138227071 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.147598907 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.166273587 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.141658385 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.118175643 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.155153327 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.110978702 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.130581028 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.153432465 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.122612979 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.11312351 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.158003323 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.121288423 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.12473537 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.156915063 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.151607276 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.119449546 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.145321039 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.135284326 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.115811094 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.135263638 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140747684 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.120404871 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.164742721 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.127829126 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.123588618 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.140822603 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.118091838 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.115141969 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.116440026 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.146209231 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.130980974 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.117109096 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.138220312 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.12527526 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.127433414 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.1434343 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.114726018 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.116322345 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.114362111 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.157055324 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.121730714 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.119135226 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.1321066 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.130860154 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.115516974 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.122315988 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.154671279 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.110505049 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.126373016 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.154357988 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.123365376 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.117266745 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.159614442 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.117420576 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.128813966 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.151814347 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.123441353 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.116194137 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.108956159 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.140238231 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.115998269 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.116061482 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.152655781 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.124357851 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.131173983 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.158222624 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.111941034 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.115361849 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.145512248 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.116519986 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.126231042 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.162625955 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.117916283 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.114728144 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.152531471 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.11853033 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.098630463 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.120571122 seconds)
  done (took 11.575431055 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.143958617 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.118199976 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.12965297 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.178641773 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.121584776 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.117100398 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.149177397 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.133664017 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.121543385 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.158048576 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.123144902 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.124666189 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.165117079 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.12172604 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.116618707 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.159159007 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.122635491 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.150327733 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.161094057 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.140962471 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.121577142 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.148614939 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.124638482 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.123767037 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.172509287 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.123811461 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.138745912 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.153204479 seconds)
  done (took 5.105918162 seconds)
done (took 51.867449805 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.349518954 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.571525438 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.328551597 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.330018636 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.338602714 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.361426721 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.328285127 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.327261774 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.82533163 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.305816893 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.330042776 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.327843617 seconds)
done (took 29.954337425 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.361140199 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.84318763 seconds)
    (2/2) benchmarking "String"...
    done (took 1.611556796 seconds)
  done (took 4.678745132 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.326465356 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.322320732 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.54220547 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.320909462 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.318689324 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.339820146 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.328793926 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.318609282 seconds)
  done (took 16.715057683 seconds)
done (took 27.304312096 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.375894547 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.524640612 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.56446212 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.334388379 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.334843015 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.326171889 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.325276886 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.348522406 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.324635111 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.324597088 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.740091662 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.584605779 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.323064295 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.698532822 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.3217927 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.323984488 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.335227772 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.559870778 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.321894309 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.357054784 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.303847274 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.307971351 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.333377439 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.332481559 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.330378688 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.32119574 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.361240632 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.321504115 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.512271734 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.360987974 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.360503638 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.32173687 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.352421635 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.320131804 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.333249348 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.329245004 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.509787173 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.330115676 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.30648226 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.332803533 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.527100232 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.346123213 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.328540381 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.324404178 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.343538357 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.37295845 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.306125976 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.430195662 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.341416249 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.322011204 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.379619867 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.730105018 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.325602237 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.329728387 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.331975095 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.555530781 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.335726254 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.382645333 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.344993642 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.329960009 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.324936798 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.329719682 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.332130673 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.322466489 seconds)
  done (took 151.553569737 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.321288241 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.325718884 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.321894233 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.337500579 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.324672399 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.32296515 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.323860229 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.324385584 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.322317262 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.325036878 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.324728672 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.319788915 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.326566612 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.278979431 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.331880984 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.345436905 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.326008483 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.322955968 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.344253707 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.323417135 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.329276326 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.325942338 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.337948051 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.322286633 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.366538141 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.405689848 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.3465854 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.355560703 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.332571199 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.323900267 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.364371825 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.327388231 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.925660442 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.188500132 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.340523764 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.340537026 seconds)
  done (took 84.654500566 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.325583893 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.324871349 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.326611502 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.359391827 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.326939923 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.890015772 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.88974748 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.056582504 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.88421711 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.642992793 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.604948446 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.326295913 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.420094625 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.337622084 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.322153764 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.329384236 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.341153351 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.353948218 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.327082866 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.326349564 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.891442814 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.340590107 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.426177763 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.500261098 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.337673751 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.35747624 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.724795818 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.325951215 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.358546432 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.660082235 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.374542648 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.326086486 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.698771739 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.446901091 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.444658318 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.325231447 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.357865476 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.328671368 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.611982159 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.327535839 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.330206013 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.330039875 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.000561381 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.3291456 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.893473886 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.330038314 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.277964745 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.32873682 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.329094702 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.927781868 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.018809309 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.329442842 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.327567205 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.331531338 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.326874034 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.327922073 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.361145395 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.984133081 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.428500646 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.329511343 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.328465432 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.333068672 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.362888887 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.332579716 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.414264102 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.327049917 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.242266766 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.384258203 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.466591827 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.893725029 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.330516053 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.426672735 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.449148398 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.328707384 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.328558901 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.328255029 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.328715024 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.329781769 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.327875835 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.439949229 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.328243816 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.73582782 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.502776956 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.342757232 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.708251958 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.430348617 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.327215931 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.731910764 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.33291899 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.332384378 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.134470434 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.429411368 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.327204663 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.330886076 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.329876577 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.738260041 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.895543592 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.600174939 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.332361785 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.098579753 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.33116136 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.750228156 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.879631363 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.067604909 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.334065259 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.445491239 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.505648859 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.345561099 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.331263591 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.693188255 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.332515468 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.388815236 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.331535717 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.735409008 seconds)
  done (took 382.12048802 seconds)
done (took 619.551588609 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.232583192 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.172675768 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.318113282 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.1763375 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.162223861 seconds)
  done (took 12.292725932 seconds)
done (took 13.522048182 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.523355632 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.522709557 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.390292509 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.522825262 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.365285472 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.538056019 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.508275626 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.353492021 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.447269956 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.414675271 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.442090131 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.387722285 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.36704716 seconds)
  done (took 20.013035333 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.635134262 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.34140648 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.403655974 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.600368339 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.377403135 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.640443057 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.657117535 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.342762508 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.487454967 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.353875728 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.353477726 seconds)
  done (took 19.426357774 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.607485234 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.342599753 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.399174703 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.604666887 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.37612851 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.621008036 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.650197515 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.342003165 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.48051745 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.355392875 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.353310676 seconds)
  done (took 19.365366007 seconds)
done (took 60.036771981 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.419782804 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.724955194 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.362490771 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.36101465 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.349175032 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.352586028 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.361722347 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.350752035 seconds)
  done (took 12.51626266 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.346578132 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.349054198 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.350604673 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.346643817 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.350429061 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.348798329 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.344381351 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.346287029 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.346240367 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.347734276 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.346881764 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.349694355 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.348965835 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.349232977 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.348625634 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.348485619 seconds)
  done (took 22.804696305 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.351658739 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.347555688 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.347697583 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.348570496 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.348031991 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.348966014 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.350212144 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.347072528 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.347575746 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.349112573 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.350853755 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.349275564 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.349916937 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.34941181 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.350254582 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.352844457 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.349141089 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.350109092 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.355062668 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.348883419 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.349241381 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.350109932 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.347964878 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.350381752 seconds)
  done (took 33.627243986 seconds)
done (took 70.183646561 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.355167346 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.33774328 seconds)
  done (took 5.92863461 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.409807534 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.409337885 seconds)
  done (took 4.056244403 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.352043037 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.35048148 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.351695716 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.349525181 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.349611324 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.348990259 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.349761624 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.350517634 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.350606407 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.348670405 seconds)
  done (took 14.738264347 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.350247281 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.351550467 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.349987725 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.355308512 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.349778361 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.350248686 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.349164153 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.349783864 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.350691714 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.348182289 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.356296687 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.351092447 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.35099485 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.348630475 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.350672045 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.350432121 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.350866251 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.349813527 seconds)
  done (took 25.550429288 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.366124088 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.373108138 seconds)
  done (took 3.976742972 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.493904102 seconds)
    (2/7) benchmarking "second"...
    done (took 1.393768629 seconds)
    (3/7) benchmarking "month"...
    done (took 1.466133409 seconds)
    (4/7) benchmarking "year"...
    done (took 1.4537287 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.392137403 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.372218271 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.392398995 seconds)
  done (took 11.201050836 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.353425567 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.570724457 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.695274014 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.93292439 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.355147438 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.357553919 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.186322548 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.356033389 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.360255246 seconds)
  done (took 15.406214601 seconds)
done (took 82.093587669 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.342126834 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.366350806 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.348002281 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.363308467 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.69231532 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.355911381 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.344016792 seconds)
done (took 17.051812316 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.332586977 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.335825841 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.336623426 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.363362961 seconds)
  done (took 10.608963115 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.35079405 seconds)
    (2/2) benchmarking "read"...
    done (took 1.626781377 seconds)
  done (took 5.214550403 seconds)
done (took 17.064756312 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.354720985 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.353649043 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.353883579 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.353475308 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.352972491 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.352171767 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.352798645 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.35328343 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.35718129 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.352824834 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.353514146 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.354483794 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.35428923 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.356124765 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.352393111 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.354558968 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.356460303 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.355951899 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.354118056 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.354799416 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.356100411 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.354944082 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.354920813 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.355867963 seconds)
  done (took 33.746857736 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.355523935 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.356795533 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.35780742 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.355967538 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.35654802 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.356290965 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.35600815 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.357231851 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.357582843 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.355611864 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.35633961 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.357012283 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.357492445 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.357239754 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.358254939 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.356164134 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.35661538 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.356513274 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.357878191 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.355732198 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.356773928 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.355329478 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.357324559 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.358591361 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.357788346 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.35787031 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.360492333 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.357737026 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.359217705 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.357982258 seconds)
  done (took 41.955868814 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.364162189 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.367990752 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.362495123 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.360977093 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.360666962 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.361204819 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.361992782 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.363278022 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.36174144 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.363843694 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.362866905 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.360646941 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.362153066 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.363847825 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.363301818 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.362141501 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.362054391 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.359640686 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.361610968 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.361430246 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.360301127 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.361407502 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.361731063 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.363316894 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.363069016 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.362617868 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.363336968 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.362745551 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.361617506 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.363730579 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.363616783 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.361453363 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.361294538 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.363102754 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.36235205 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.363898796 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.367712152 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.369147319 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.363124885 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.361528897 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.363046716 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.362062714 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.362625512 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.363219129 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.364073627 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.365204893 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.364818637 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.362790415 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.363287362 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.365172215 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.363397712 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.366585053 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.364440094 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.364742211 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.364662034 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.362478006 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.365010002 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.365302435 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.366629917 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.36600693 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.366991229 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.364072315 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.364624615 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.363908617 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.364698568 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.365579185 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.365112267 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.36582652 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.364858785 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.3650535 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.364566632 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.365765492 seconds)
  done (took 99.422390481 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.36405364 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.362660915 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.361388391 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.360747322 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.362642216 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.363191005 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.360786821 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.364642092 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.362257279 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.363796839 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.365027464 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.363575047 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.362700707 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.3634284 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.364229415 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.364098947 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.362389274 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.363310678 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.363977296 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.36293498 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.364643366 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.361719101 seconds)
  done (took 31.236555203 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.364957996 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.366606703 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.362958077 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.365746688 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.36768844 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.365418858 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.364889165 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.365023241 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.363915388 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.362212753 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.362987316 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.363974229 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.364971838 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.362468576 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.364920239 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.366809349 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.363743781 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.36618993 seconds)
  done (took 25.813077054 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.365691496 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.363778158 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.36624891 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.365457969 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.363589496 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.368889499 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.36381956 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.365151838 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.365945948 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.363488316 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.36421404 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.365583969 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.368354021 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.364911414 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.367957968 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.363691555 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.368105624 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.363852816 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.365457142 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.366754962 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.366152756 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.36759353 seconds)
  done (took 31.295352266 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.367604902 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.36717556 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.365991684 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.36504386 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.363807899 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.367622069 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.367887132 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.366402377 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.36902113 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.367057886 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.363591576 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.364930923 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.368736557 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.368230454 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.366183091 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.367546135 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.366434516 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.365432114 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.367430676 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.364778974 seconds)
  done (took 28.581390842 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.370928089 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.370720885 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.369420106 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.36844149 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.368793696 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.367994826 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.370874986 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.371754541 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.371623225 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.368236854 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.37045509 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.372406399 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.371360464 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.371545971 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.370732042 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.372710789 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.370145678 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.369153506 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.372873233 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.371931013 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.370377522 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.371207716 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.373588498 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.370010045 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.37022254 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.369828124 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.370552139 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.370559651 seconds)
  done (took 39.630616871 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.37254092 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.370016953 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.365944759 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.3696023 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.369373124 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.36605041 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.369980871 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.368493701 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.372159778 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.369114941 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.369186489 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.368618901 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.372456919 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.370967849 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.368566237 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.369749498 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.37014221 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.372219624 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.369617372 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.370225053 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.371634005 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.36725016 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.370076913 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.368612958 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.368599045 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.372005549 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.372987176 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.369444404 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.373110091 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.370719716 seconds)
  done (took 42.352993904 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.392202893 seconds)
    (2/2) benchmarking "in"...
    done (took 1.393957542 seconds)
  done (took 4.041699331 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.370533941 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.370348389 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.372142436 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.371674932 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.37284086 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.372151617 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.373613173 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.371605194 seconds)
  done (took 12.226821396 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.368013646 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.374393758 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.372713527 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.37152769 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.373110981 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.364990971 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.373940637 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.377153338 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.367969492 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.368816106 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.370124299 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.37091533 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.371086019 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.369304926 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.370521404 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.373226252 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.374405028 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.374238731 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.373916787 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.375326956 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.373557723 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.367535746 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.370198686 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.375886003 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.367897737 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.378165703 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.375832674 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.378766468 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.371083727 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.372032261 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.369413424 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.371984598 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.375369356 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.375736835 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.374883806 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.37574418 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.375333589 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.373036568 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.375422835 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.37748334 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.374834939 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.372778972 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.3699046 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.373649779 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.37120209 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.37916721 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.378145327 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.373387069 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.370109254 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.372032119 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.378682648 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.370055593 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.374968283 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.37366142 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.372417238 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.378469294 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.381880834 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.372117249 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.375532291 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.379913436 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.3862988 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.381416716 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.375646635 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.37954239 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.381962303 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.387232927 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.381671664 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.378057261 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.376677537 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.377419549 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.377965009 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.384558045 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.382353836 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.380076054 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.377340191 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.375204157 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.372213936 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.379495582 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.379941447 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.379685777 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.378552638 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.377361541 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.380058941 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.388714795 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.372164469 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.377131014 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.375403334 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.378417642 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.373775581 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.381891918 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.381570455 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.378079095 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.372911963 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.373911274 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.374343319 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.377409358 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.371865944 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.374892343 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.378033534 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.379866633 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.378258054 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.378392408 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.378267229 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.382586814 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.379086184 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.382941188 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.380587701 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.373359045 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.380027102 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.382079491 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.381754384 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.376015391 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.377049551 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.380192625 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.375753436 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.379210479 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.378098488 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.37728679 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.382784174 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.380893512 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.382460564 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.391764453 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.384507143 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.382132608 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.379418024 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.388150556 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.382101186 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.378329404 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.384819137 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.379431849 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.379030777 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.376526289 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.381841444 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.377740046 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.383324432 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.376115975 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.380227514 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.382793155 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.381928475 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.376303458 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.378960249 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.376743128 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.376973503 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.380801915 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.38450353 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.378856533 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.386805492 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.379312048 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.37923343 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.380667736 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.384143231 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.382865118 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.376750686 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.385984682 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.376316327 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.384218291 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.376800619 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.382303343 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.384649288 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.384583062 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.383080578 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.376760715 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.380211064 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.384574062 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.383389208 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.37915667 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.383712497 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.382619241 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.383910248 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.377072219 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.382950331 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.376862269 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.381057825 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.389262419 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.383881571 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.383390084 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.381295338 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.385298474 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.38418055 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.38483427 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.379000646 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.382787155 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.385646272 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.384742111 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.386110653 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.385972674 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.384188738 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.379490821 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.378163346 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.386554496 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.382452909 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.387567086 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.390169996 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.391503873 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.38102674 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.388292318 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.378224196 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.387435558 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.381762679 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.38740698 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.385283801 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.386214664 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.379367627 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.385616876 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.379396306 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.387738289 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.378786606 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.387673511 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.385399163 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.385656779 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.384621012 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.378070231 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.380930381 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.385840303 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.386425378 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.386887579 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.382574545 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.384017357 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.379395355 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.380426952 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.387083772 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.387014576 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.38767153 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.385769057 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.383471268 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.38452313 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.382179612 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.381804424 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.385877431 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.383887846 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.382776219 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.390809482 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.386878863 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.384509391 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.39231815 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.386815932 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.382771884 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.386223619 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.390467541 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.386438671 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.384857615 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.393541465 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.391730223 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.389347329 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.387729224 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.382061237 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.386959262 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.388037068 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.389077824 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.382566683 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.389466088 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.383947524 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.388600086 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.384335317 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.385862915 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.385215114 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.387262411 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.389835169 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.389274944 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.385327368 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.389746894 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.389307041 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.388495135 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.38466783 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.394267931 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.387617579 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.386582578 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.38578222 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.38411359 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.393003611 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.384242469 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.388540978 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.384665806 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.396382303 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.400853796 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.39181421 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.387207394 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.389876917 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.391504589 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.389114381 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.388162927 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.385416998 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.386338125 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.386134476 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.386297414 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.388576663 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.386028202 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.3913187 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.3878464 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.388430819 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.394359792 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.391539702 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.384980858 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.392147785 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.389298872 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.391711516 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.385836899 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.389351888 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.388418819 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.387873698 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.386445431 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.386710097 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.39304612 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.3905951 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.390186175 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.387889272 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.389255173 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.386904181 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.388882036 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.393674176 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.389250477 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.397958437 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.389008396 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.393212256 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.387959618 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.396483737 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.395977495 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.389005162 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.397835991 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.390905365 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.387113585 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.386507861 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.395544112 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.392380905 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.396272424 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.388360994 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.393634697 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.391934945 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.392518533 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.392522268 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.389835112 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.390688703 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.39534468 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.396260597 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.390911489 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.389942746 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.390278889 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.391971911 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.392456629 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.39275711 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.386556554 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.393281347 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.395977663 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.388560456 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.389870904 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.389577231 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.392891291 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.397422796 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.393452471 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.394904017 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.395734543 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.396501648 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.390893861 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.396484481 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.396730328 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.398749487 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.398083541 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.395248244 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.398176088 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.389295002 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.395771521 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.391153431 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.39107748 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.391020714 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.394278243 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.395884649 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.389998968 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.402985035 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.39464877 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.394532617 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.393523784 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.399144589 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.391463002 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.402414157 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.412675703 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.390443383 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.396465853 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.395400269 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.390936095 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.397307551 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.396433058 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.389997416 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.393145674 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.398992152 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.402131672 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.392577623 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.39723053 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.390909769 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.397339124 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.394731474 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.398689984 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.39701182 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.396074701 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.392662658 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.399831847 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.396017582 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.396723022 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.393761221 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.394878386 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.394040276 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.401581511 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.400654392 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.394002079 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.402592471 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.39899057 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.395665384 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.393785584 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.400511637 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.394521576 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.399766571 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.39413955 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.397171057 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.396466021 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.397461517 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.395937374 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.399092839 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.394933129 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.396191575 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.399167957 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.39948309 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.399562285 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.395281805 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.400695731 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.393997723 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.394184586 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.400208644 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.393562736 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.400624199 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.397159051 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.399271644 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.394327529 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.399888022 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.399837671 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.401584941 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.395339872 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.394387428 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.402497123 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.399800586 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.403246879 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.398590238 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.405306742 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.395644428 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.398969956 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.400535634 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.396131891 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.399280525 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.402556753 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.396502972 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.395907372 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.3970584 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.401685759 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.401109834 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.398566388 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.395983988 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.404169438 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.402902113 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.405200183 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.398047611 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.399064523 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.397775373 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.400889836 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.402025196 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.395874933 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.40363989 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.399918388 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.402479781 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.399234638 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.39714102 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.398340122 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.407182933 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.403361683 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.39923132 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.403547269 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.398956602 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.405581366 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.402604775 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.400329782 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.397747797 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.397366611 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.400519078 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.402558416 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.403708439 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.40024192 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.398772044 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.400094383 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.405829864 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.404660035 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.403488198 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.402634299 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.399216985 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.405742869 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.399606542 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.40183057 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.399846287 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.398858419 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.406802614 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.404390266 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.401716912 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.406417021 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.406976364 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.403296185 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.398316355 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.401158582 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.403578409 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.406623724 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.40393136 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.402520408 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.400320486 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.406028144 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.405988603 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.405389635 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.400928381 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.411839389 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.410158774 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.401862568 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.40029332 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.40298131 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.406580294 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.405654386 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.406371906 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.401737177 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.404826121 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.409674926 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.405397333 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.406412806 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.404413245 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.403512945 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.410611129 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.403985885 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.404466086 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.40533055 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.407266522 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.406270272 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.40531179 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.415386278 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.412598604 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.410587508 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.424976236 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.404524748 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.404309182 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.409903868 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.398685657 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.409062542 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.403114176 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.408890931 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.408224869 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.407464593 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.408470274 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.402860587 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.406618188 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.406470069 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.41403488 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.406769195 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.402550649 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.405130032 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.408265966 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.410821545 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.411915968 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.408480626 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.407222028 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.407756375 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.402862206 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.416591054 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.415215274 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.411307916 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.409449868 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.408190814 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.405218703 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.408071208 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.410427544 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.415753732 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.408892823 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.409619198 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.404812674 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.412839195 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.410626986 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.40485871 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.405706364 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.406551734 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.410371502 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.416901346 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.423821554 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.410489611 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.405352491 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.412731839 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.409829005 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.40475771 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.412256685 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.410612772 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.406255904 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.407600687 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.413548031 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.410787877 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.410992387 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.408277336 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.416047508 seconds)
  done (took 830.170103943 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.411252554 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.410118354 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.40916034 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.412836274 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.409997354 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.410511082 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.409210556 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.409225654 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.410547452 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.411284023 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.410380986 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.411136936 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.409133187 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.409906179 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.410553684 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.409840299 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.411219764 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.409346645 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.412182673 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.412684509 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.410034124 seconds)
  done (took 30.907304559 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.412777636 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.410522581 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.411619571 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.413506056 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.412131964 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.412446092 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.412311706 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.412770648 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.414270986 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.410983984 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.4144037 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.412695248 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.41355786 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.41382484 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.414058289 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.413763437 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.41547309 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.412857368 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.414893723 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.414257275 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.415309201 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.413808575 seconds)
  done (took 32.379064695 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.414673081 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.415322807 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.406897158 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.414514113 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.413036366 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.414755501 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.41666101 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.415967468 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.417952442 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.410973351 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.409603079 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.411335313 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.413645906 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.419638234 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.411361581 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.41688526 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.415837677 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.414085751 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.416651908 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.415098405 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.416081671 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.418487813 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.415730194 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.407947729 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.417701275 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.413922489 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.413686244 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.414703149 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.410276002 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.416748925 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.41541176 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.409591485 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.413237974 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.414196761 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.413241683 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.419028993 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.417888453 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.415801332 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.415942534 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.421627633 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.430166912 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.417907524 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.418388034 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.420921279 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.416510783 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.415980636 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.422403999 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.416094138 seconds)
  done (took 69.234025616 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.420520554 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.415681006 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.416198015 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.418055191 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.417815314 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.418044326 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.418917281 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.420992114 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.415667625 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.415101709 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.41818853 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.415785864 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.418336091 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.418191845 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.418744145 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.417042196 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.416223439 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.417008677 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.417135944 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.41554026 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.418657876 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.418743755 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.419159781 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.415575036 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.420413744 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.417528437 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.419628176 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.41935665 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.416830724 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.417474519 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.418974745 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.419786863 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.418953057 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.419007972 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.418333691 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.421192845 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.422868485 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.418529027 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.421803629 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.42007567 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.42188042 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.421912287 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.419503343 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.418796666 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.418766871 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.419857371 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.419218281 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.418496278 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.416714282 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.419904931 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.419578428 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.417147309 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.419641664 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.416773834 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.42135183 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.420300684 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.421588078 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.417922295 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.421623801 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.417538928 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.418782954 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.419894646 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.419036384 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.419202756 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.420215013 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.418918207 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.419011526 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.419897334 seconds)
  done (took 97.768455717 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.421484383 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.421972002 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.421737359 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.423695112 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.420055647 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.422958023 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.420399695 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.420221538 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.422014976 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.421593565 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.42286937 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.423591072 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.423703289 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.425979741 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.422652573 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.423611306 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.425402505 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.424801668 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.424957623 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.423682195 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.425182601 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.425112682 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.42315881 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.424146041 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.424770937 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.424201752 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.42531148 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.425923748 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.423504491 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.424332938 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.424443457 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.424449089 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.423868455 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.424826902 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.425448712 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.426677633 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.423562214 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.424903123 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.42605473 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.423593328 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.42610592 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.425130429 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.426401988 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.425418995 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.425516538 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.427604709 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.424596422 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.426853795 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.425316198 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.426191251 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.426041333 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.426192862 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.426475896 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.427025311 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.426890263 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.425852156 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.426727139 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.426605838 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.426599502 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.426661269 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.427411093 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.424830861 seconds)
  done (took 89.621389218 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.427619349 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.427074482 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.425948168 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.423561635 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.425584773 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.424559683 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.426916419 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.426382374 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.426962342 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.426929442 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.427776674 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.423756739 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.425152199 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.425626694 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.425357119 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.425630146 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.42520328 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.424165944 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.428080503 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.425299319 seconds)
  done (took 29.817930974 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.427370529 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.427843761 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.427491228 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.42597002 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.426523199 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.428177352 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.425835598 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.428901272 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.426551608 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.428139342 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.428655147 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.429656581 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.425380157 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.425896145 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.429100883 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.428734584 seconds)
  done (took 24.14099498 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.427715137 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.429388259 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.429423622 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.42995454 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.428490483 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.427129153 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.428467362 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.427971099 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.42842643 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.429006707 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.427896137 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.427613701 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.430196425 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.429988254 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.427214722 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.430249467 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.427947455 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.429756689 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.428342971 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.43008303 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.430437702 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.427312818 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.429609055 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.431095695 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.428453029 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.428132911 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.429576671 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.428349694 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.43042025 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.430629554 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.432444267 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.430977214 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.427817579 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.42823138 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.430952005 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.429134632 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.429337234 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.432214419 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.430346035 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.432676525 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.432444105 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.429261237 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.431930701 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.430866862 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.431517922 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.431422454 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.431319369 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.432578816 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.430736953 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.432346424 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.432009017 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.434299932 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.433914709 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.432159612 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.43143544 seconds)
  done (took 79.95454173 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.433370109 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.43382612 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.43022266 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.432670994 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.433686591 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.432126178 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.43443608 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.433705227 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.431938546 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.433045964 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.432334861 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.434418877 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.433193264 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.434526015 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.433851142 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.432757581 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.43145109 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.430281364 seconds)
  done (took 27.096434258 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.43534444 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.431269735 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.435720479 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.432247314 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.434871416 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.43375896 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.433260207 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.433632366 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.434287677 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.432590005 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.434299145 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.435422263 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.435240578 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.433372855 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.433750376 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.433228742 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.433361596 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.433780785 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.433917901 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.43251967 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.435436527 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.432519188 seconds)
  done (took 32.849858369 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.430108133 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.428537258 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.428197202 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.445530307 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.442869045 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.425894032 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.427311397 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.429518762 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.450109786 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.471678936 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.466659388 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.442101566 seconds)
  done (took 18.594721226 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.435391976 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.436023517 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.434232126 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.437002619 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.435279475 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.434981771 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.43533614 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.436384527 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.436364384 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.436503935 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.435396192 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.437724933 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.436871851 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.434963373 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.43673794 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.437094802 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.436281599 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.436221875 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.436309972 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.437193999 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.435563185 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.436671475 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.435914211 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.434739408 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.436769285 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.436428975 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.437615354 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.436073847 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.437545375 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.438173727 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.437430334 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.436966414 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.436859346 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.436590408 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.439579543 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.437471744 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.436729369 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.43801087 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.438662771 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.437048448 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.440152539 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.440928928 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.440780818 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.436112577 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.440681932 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.437292989 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.437422022 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.438781786 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.438434923 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.440816834 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.437648933 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.439050753 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.439149911 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.440968814 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.438442696 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.438946579 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.437349041 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.435543761 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.438618925 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.438240134 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.440448867 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.438329157 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.438652927 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.43890528 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.441948557 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.439593184 seconds)
  done (took 96.18519996 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.4392135 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.437585789 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.439892211 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.439863823 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.439255536 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.439037194 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.440879145 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.439214553 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.437156239 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.440523807 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.440567099 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.438747285 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.440718872 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.439930239 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.438874812 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.439488749 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.440546264 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.440382153 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.438759639 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.442145826 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.440417025 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.441189034 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.439953176 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.440793245 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.439693758 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.442974295 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.441155408 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.442275346 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.440150929 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.440996028 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.44291836 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.440774498 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.439336144 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.440761542 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.441643335 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.443469581 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.442167825 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.440474308 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.440943538 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.441671753 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.438982438 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.442133364 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.440902742 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.44450657 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.442207816 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.440420028 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.441228019 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.441466136 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.442671615 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.441834409 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.441093497 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.442970183 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.440577054 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.44286889 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.442341103 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.443293895 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.443374416 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.442701235 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.443118923 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.444151671 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.442786091 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.442444212 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.44478515 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.444712507 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.442852751 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.442831054 seconds)
  done (took 96.433664396 seconds)
done (took 1946.697860608 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.606119058 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.56025576 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.436009093 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.454694717 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.437979363 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.46236747 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.447497506 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.434201979 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.43666689 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.436718802 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.436111076 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.628897253 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.491811342 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.435281902 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.438430239 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.534577288 seconds)
  done (took 28.990147465 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.469145163 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.44539045 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.562854466 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.441248883 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.46690755 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.638753427 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.502170397 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.443648319 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.62557269 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.462320967 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.445063386 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.461808296 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.44171311 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.448981611 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.461581494 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.639822486 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.705513741 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.449876668 seconds)
  done (took 31.425348714 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.919084133 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.454504405 seconds)
  done (took 5.689020896 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.462120418 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.445306174 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.443366964 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.441190017 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.443304152 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.432991343 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.443514937 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.446643524 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.43598365 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.576976808 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.446428929 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.455610713 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.442980556 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.442517096 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.447440573 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.486493733 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.588804137 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.446721074 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.446372946 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.447615104 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.443823118 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.540593418 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.48691192 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.44851476 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.574903258 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.44253951 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.446663887 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.448299326 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.587699951 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.447498422 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.443049946 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.440920145 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.444498879 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.435246773 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.932883645 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.435101159 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.448338578 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.47226092 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.449883792 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.588582277 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.444407785 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.448469898 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.450195292 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.930377521 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.569520815 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.571754695 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.440836603 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.457380042 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.446961514 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.515596022 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.445039909 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.445024006 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.504740957 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.295152957 seconds)
  done (took 91.471621726 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.478657055 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.436066464 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.606757157 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.460191307 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.436824481 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.43561609 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.438029202 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.747633888 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.48353541 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.44048298 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.758619685 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.977730719 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.447353437 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.458218816 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.969122828 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.509409708 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.439910637 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.437357178 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.452878915 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.439000458 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.965419943 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.443548099 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.436184983 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.480224735 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.477735163 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.921489381 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.433286994 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.445224924 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.440854964 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.435200771 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.936367802 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.445122769 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.441391705 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.436662637 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.726839522 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.82934756 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.805659102 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.44238302 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.439982571 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.439050871 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.455419767 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.922596866 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.804080119 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.43696018 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.438701089 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.927234199 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.437363901 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.438834014 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.448491684 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.663049572 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.438060762 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.4414832 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.440196975 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.451721833 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.439967345 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.472765799 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.53887445 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.956369685 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.43889903 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.437815704 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.458519273 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.440194366 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.439075701 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.445415286 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.444371745 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.817670151 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.633913049 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.447758114 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.815471186 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.930371693 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.446335113 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.000543062 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.441843234 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.454126737 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.648150779 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.440417288 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.440803173 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.945656227 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.469861852 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.440114531 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.798016385 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.441442548 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.752665631 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.458094367 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.440503303 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.986500858 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.442992762 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.478361365 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.444106499 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.44088302 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.455842039 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.444754461 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.734770905 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.474224675 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.442810812 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.441273538 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.467222816 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.442559272 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.445615155 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.450443111 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.007934392 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.446109976 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.444537499 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.445004395 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.457743117 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.445261572 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.443949953 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.44509057 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.684726773 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.442620348 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.464970049 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.444580842 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.44173462 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.449553833 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.499006332 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.446041811 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.773077634 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.44318336 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.455127408 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.451209596 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.445029029 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.492574581 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.443088859 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.443800781 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.352952174 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.673161576 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.465260611 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.44521576 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.445286876 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.447292682 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.443679167 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.442478175 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.455974709 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.446437158 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.215068734 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.450724962 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.453333512 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.445912648 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.453882089 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.447413806 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.464740603 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.447236544 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.749431929 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.73112596 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.624661531 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.446038541 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.449063259 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.191962997 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.484400983 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.593124748 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.465028997 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.447012189 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.652027563 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.655223254 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.447535498 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.444399961 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.44738028 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.682866706 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.444843932 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.784119371 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.967697127 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.447587816 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.452211776 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.216585925 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.171982385 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.447109605 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.454004528 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.749086143 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.46394388 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.445880866 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.447370263 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.450010449 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.446931476 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.450827481 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.44678581 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.450649923 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.449168 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.504756976 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.625992359 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.464311802 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.45567706 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.925984862 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.494302057 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.447264875 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.467669797 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.44844278 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.448411152 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.534177584 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.452126345 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.484130437 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.448049026 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.452056434 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.963554183 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.451516253 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.448211462 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.602308831 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.125719909 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.451801364 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.449566453 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.446504553 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.995578021 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.991907459 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.45233834 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.784325973 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.457240837 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.491896676 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.451266869 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.453359581 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.993095455 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.453516447 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.449033362 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.089586494 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.453905949 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.85906114 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.450973447 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.454163391 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.017357662 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.450184291 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.453456059 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.449782055 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.465985752 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.738326899 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.45019033 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.454503412 seconds)
  done (took 521.7178252 seconds)
done (took 680.608950134 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.453251981 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.453723788 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.439641505 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.452055319 seconds)
  done (took 11.130533189 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.472533156 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.458843647 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.467911791 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.458431711 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.467987682 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.458906893 seconds)
  done (took 10.114219316 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.452789234 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.45143794 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.454583452 seconds)
  done (took 8.691329672 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.688974036 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.468832443 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.835251786 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.460644108 seconds)
  done (took 9.784816601 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.467645735 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.466817837 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.468535968 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.468363941 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.475369378 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.476017672 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.468149144 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.468519428 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.4739283 seconds)
  done (took 14.564624174 seconds)
done (took 55.617047968 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.612368784 seconds)
    (2/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.44025098 seconds)
    (3/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.522932712 seconds)
    (4/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.438240323 seconds)
    (5/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.440116637 seconds)
    (6/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.476561999 seconds)
    (7/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.546713996 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.525723654 seconds)
    (9/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.579051013 seconds)
    (10/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.488281039 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.488613742 seconds)
    (12/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.683629162 seconds)
    (13/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.69405765 seconds)
    (14/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.694197939 seconds)
    (15/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.286608287 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.607937181 seconds)
    (17/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.439605554 seconds)
    (18/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.437899609 seconds)
    (19/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.429152422 seconds)
    (20/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.486437899 seconds)
    (21/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.583840594 seconds)
    (22/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.641521179 seconds)
    (23/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.433094857 seconds)
    (24/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.443194302 seconds)
    (25/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.594690131 seconds)
    (26/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.461364075 seconds)
    (27/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.525386484 seconds)
    (28/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.440931755 seconds)
    (29/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.157111895 seconds)
    (30/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.627536122 seconds)
    (31/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.441497911 seconds)
    (32/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.571752919 seconds)
    (33/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.622962976 seconds)
    (34/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.368755468 seconds)
    (35/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.693380017 seconds)
    (36/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.439933596 seconds)
    (37/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.565009466 seconds)
    (38/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.52826992 seconds)
    (39/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.631147484 seconds)
    (40/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.622950213 seconds)
    (41/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.49018861 seconds)
    (42/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.534453772 seconds)
    (43/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.440613252 seconds)
    (44/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.442817885 seconds)
    (45/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.565750876 seconds)
    (46/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.442645998 seconds)
    (47/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.709303139 seconds)
    (48/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.461552625 seconds)
    (49/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.523916142 seconds)
    (50/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.263033837 seconds)
    (51/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.541483566 seconds)
    (52/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.56506684 seconds)
    (53/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.28953022 seconds)
    (54/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.442481128 seconds)
    (55/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.663888656 seconds)
    (56/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.4468063 seconds)
    (57/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.44576342 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.693671799 seconds)
    (59/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.603166991 seconds)
    (60/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.496680656 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.569275738 seconds)
    (62/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.468372254 seconds)
    (63/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.456387819 seconds)
    (64/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.555330506 seconds)
    (65/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.536233351 seconds)
    (66/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.294571447 seconds)
    (67/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.534317918 seconds)
    (68/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.268400635 seconds)
    (69/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.44508579 seconds)
    (70/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.490877269 seconds)
    (71/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.641256316 seconds)
    (72/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.489024273 seconds)
    (73/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.609713829 seconds)
    (74/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.126146109 seconds)
    (75/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.320265798 seconds)
    (76/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.163750839 seconds)
    (77/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.559399559 seconds)
    (78/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.651820719 seconds)
    (79/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.580050556 seconds)
    (80/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.523901308 seconds)
    (81/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.733854764 seconds)
    (82/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.322880928 seconds)
    (83/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.551015492 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.633283807 seconds)
    (85/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.65391692 seconds)
    (86/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.216210332 seconds)
    (87/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.500492911 seconds)
    (88/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.544228077 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.577749022 seconds)
    (90/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.54920619 seconds)
    (91/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.240007555 seconds)
    (92/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.447658466 seconds)
    (93/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.621129611 seconds)
    (94/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.531890046 seconds)
    (95/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.449072453 seconds)
    (96/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.741569649 seconds)
    (97/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.451613179 seconds)
    (98/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.587711899 seconds)
    (99/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.491977446 seconds)
    (100/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.321351774 seconds)
    (101/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.180686836 seconds)
    (102/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.747718454 seconds)
    (103/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.493488226 seconds)
    (104/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.590666022 seconds)
    (105/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.533074885 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.700626675 seconds)
    (107/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.443617298 seconds)
    (108/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.217171845 seconds)
    (109/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.545841406 seconds)
    (110/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.448119452 seconds)
    (111/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.460807281 seconds)
    (112/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.585056637 seconds)
    (113/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.501669731 seconds)
    (114/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.479286724 seconds)
    (115/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.246294247 seconds)
    (116/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.611586902 seconds)
    (117/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.515505227 seconds)
    (118/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.588037965 seconds)
    (119/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.245179662 seconds)
    (120/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.459949372 seconds)
    (121/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.496352733 seconds)
    (122/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.499142443 seconds)
    (123/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.502221148 seconds)
    (124/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.601272367 seconds)
    (125/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.463903353 seconds)
    (126/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.691484231 seconds)
    (127/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.495692714 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.628022401 seconds)
    (129/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.585117344 seconds)
    (130/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.536141244 seconds)
    (131/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.734302438 seconds)
    (132/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.447720108 seconds)
    (133/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.510482675 seconds)
    (134/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.620406742 seconds)
    (135/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.595178734 seconds)
    (136/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.558472534 seconds)
    (137/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.44816113 seconds)
    (138/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.578115979 seconds)
    (139/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.587119284 seconds)
    (140/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.553301462 seconds)
    (141/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.472502372 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.522731337 seconds)
    (143/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.300268669 seconds)
    (144/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.595658857 seconds)
    (145/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.481776615 seconds)
    (146/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.672122292 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.573466337 seconds)
    (148/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.132060839 seconds)
    (149/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.561958855 seconds)
    (150/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.456498524 seconds)
    (151/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.446596971 seconds)
    (152/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.53459537 seconds)
    (153/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.578779027 seconds)
    (154/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.655116417 seconds)
    (155/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.660906854 seconds)
    (156/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.451695936 seconds)
    (157/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.494609354 seconds)
    (158/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.625727768 seconds)
    (159/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.33497934 seconds)
    (160/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.579992781 seconds)
    (161/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.489340275 seconds)
    (162/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.528272099 seconds)
    (163/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.602375758 seconds)
    (164/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.451614612 seconds)
    (165/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.447144574 seconds)
    (166/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.446687135 seconds)
    (167/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.601709775 seconds)
    (168/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.499650595 seconds)
    (169/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.451377159 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.575149302 seconds)
    (171/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.492085318 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.59174005 seconds)
    (173/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.561588638 seconds)
    (174/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.83274194 seconds)
    (175/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.473376185 seconds)
    (176/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.590633917 seconds)
    (177/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.461539274 seconds)
    (178/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.505262194 seconds)
    (179/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.58069034 seconds)
    (180/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.502979375 seconds)
    (181/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.666051864 seconds)
    (182/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.574425122 seconds)
    (183/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.664090804 seconds)
    (184/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.384384371 seconds)
    (185/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.531564945 seconds)
    (186/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.453066584 seconds)
    (187/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.70836407 seconds)
    (188/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.454234066 seconds)
    (189/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.594957946 seconds)
    (190/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.501935576 seconds)
    (191/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.453678968 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.627238901 seconds)
  done (took 365.728707028 seconds)
done (took 367.058519188 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.493028013 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.556387815 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.474290919 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.474550386 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.474972209 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.468020086 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.511293833 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.477611304 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.488045522 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.485197963 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.467136238 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.497233888 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.488207182 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.483812491 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.508917905 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.475885393 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.476878161 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.485145576 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.485946783 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.487536893 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.476770698 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.476908725 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.495641486 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.475019395 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.483437687 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.483377088 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.483532159 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.473817019 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.47710927 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.487795184 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.480793872 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.480557167 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.491301343 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.485612518 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.478533807 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.484002239 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.478493419 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.558573112 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.495743509 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.485101578 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.483975046 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.491743475 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.483119771 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.481265325 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.488569652 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.498746432 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.488527085 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.492586565 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.48550898 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.477553727 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.499072612 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.488533624 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.48234813 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.479091528 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.479485117 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.49059715 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.488052972 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.494951495 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.485219503 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.479039511 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.512778055 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.495818169 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.489268463 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.488245323 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.485562805 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.493034306 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.486398318 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.49067383 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.484867401 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.48053431 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.481400893 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.485062819 seconds)
done (took 116.449274486 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.608198913 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.479489213 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.619294678 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.487638786 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.643755571 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.612951097 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.48263392 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.48326485 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.484328402 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.318212424 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.485462147 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.487038091 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.482785756 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.485966957 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.611917694 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.487020648 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.485134372 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.20034975 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.488552184 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.627601135 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.478946202 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.486847484 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.488694557 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.309222842 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.482571502 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.477568931 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.626541168 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.488249101 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.206273831 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.477267845 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.482114393 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.205993712 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.627566112 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.505627332 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.497923689 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.49573299 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.648099251 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.491455541 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.609820851 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.611761443 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.622358042 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.527625238 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.475598808 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.484376412 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.493396238 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.490165834 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.488173722 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.516826481 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.480383935 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.489553786 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.202272722 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.500296613 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.496830929 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.48869924 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.489970608 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.510687151 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.490898721 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.491993868 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.631599135 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.490999659 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.612185034 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.31288812 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.320837723 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.491159647 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.482249115 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.491575644 seconds)
  done (took 118.6831328 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.550716429 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.558991927 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.60249623 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.487602942 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.536034448 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.604228207 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.486248024 seconds)
  done (took 12.179632366 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.491556757 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.49137389 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.532850739 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.535510768 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.491686648 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.642349828 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.491635568 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.496815469 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.489742599 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.537668017 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.493901019 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.494358507 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.500313028 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.485763814 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.534560487 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.498220399 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.601361944 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.489367526 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.493783926 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.639380679 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.490748845 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.49930878 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.536880903 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.499019371 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.493124647 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.494439803 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.261759575 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.493501244 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.48996774 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.495863609 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.491285667 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.540793533 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.493769477 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.486637548 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.493138693 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.605723997 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.494346258 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.493751597 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.49734759 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.490004217 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.496058458 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.494012128 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.495436325 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.493451679 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.496938983 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.512982734 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.494976248 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.495003296 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.494905502 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.50043769 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.537344984 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.498034613 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.493551101 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.493220252 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.545225891 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.503204946 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.49542529 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.493531924 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.499004525 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.493006579 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.642398315 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.538106239 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.497316503 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.536772087 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.494696306 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.495073929 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.497394055 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.495529249 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.543972051 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.494492632 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.538175486 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.494370048 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.671416435 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.513590336 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.498834169 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.492825836 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.492934987 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.496957107 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.488230974 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.49879401 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.497006961 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.492539933 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.496676421 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.496212769 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.495691547 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.64809601 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.600174612 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.493526319 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.504106197 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.497891826 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.497052819 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.545834825 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.497850777 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.494711623 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.543743308 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.605550191 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.543943228 seconds)
  done (took 153.028468616 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.502478185 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.502684908 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.492935249 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.518911132 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.492413593 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.490486288 seconds)
  done (took 10.358868578 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.493457652 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.499004551 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.496437809 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.498876232 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.496698108 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.498914687 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.503597607 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.495082114 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.500570434 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.502649591 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.500417027 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.503687353 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.504115511 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.498995522 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.500678369 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.501190845 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.504886278 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.49492311 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.500365743 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.499369894 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.491550327 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.500505058 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.499231088 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.495906596 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.504008991 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.503441034 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.519007273 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.501472644 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.497941257 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.500836796 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.502092098 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.500000764 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.495669703 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.498492258 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.508730119 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.494976642 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.502045891 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.509294661 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.499207531 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.500754097 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.505873949 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.500430703 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.504151508 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.508093676 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.49511314 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.50061039 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.509610584 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.520043086 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.506054094 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.508515229 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.511283428 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.501877055 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.501454874 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.507900185 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.498392555 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.498644858 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.511949943 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.507862857 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.501639609 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.496653817 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.503026838 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.502188306 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.498321576 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.508534136 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.499356128 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.512695785 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.497008046 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.505065036 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.502529505 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.501761985 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.508040284 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.502160772 seconds)
  done (took 110.517876417 seconds)
done (took 406.115604134 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.811836294 seconds)
  done (took 4.173920792 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.584872738 seconds)
  done (took 3.949709502 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.919958444 seconds)
  done (took 25.290083341 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.543962993 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.57367439 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.514912058 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.492247524 seconds)
  done (took 11.486647927 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.873892501 seconds)
  done (took 4.234962504 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.498284262 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.511900859 seconds)
  done (took 6.375620133 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.804693998 seconds)
  done (took 4.166996402 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.855740567 seconds)
  done (took 4.225415503 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.514637044 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.510047755 seconds)
  done (took 6.397940846 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.492155384 seconds)
  done (took 3.855241598 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.554872395 seconds)
  done (took 21.918961196 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.504575556 seconds)
  done (took 3.87222635 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.571095504 seconds)
  done (took 3.936992134 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.434111327 seconds)
  done (took 6.799764262 seconds)
done (took 112.045969793 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.491449088 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.48994241 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.491594443 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.489620511 seconds)
  done (took 11.325935118 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.562099009 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.55814717 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.566188988 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.558795877 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.558840319 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.560321647 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.532268486 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.535143405 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.558042009 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.557008444 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.565738578 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.560097853 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.560325263 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.532595995 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.560090896 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.565313609 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.559258062 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.56648021 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.533589729 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.561169525 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.50759242 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.560372502 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.559664138 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.508322485 seconds)
  done (took 38.611436978 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.0155575 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.568426551 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.65268789 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.551842139 seconds)
  done (took 8.154020943 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.588487291 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.590561012 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.607853896 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.64382231 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.671068815 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.61213059 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.534362404 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.530355248 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.519528532 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.59121121 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.639747522 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.578987699 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.695542645 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.510613507 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.725796386 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.509327118 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.509512467 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.591093255 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.640636259 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.658790285 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.509545554 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.588130475 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.595957827 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.575941548 seconds)
  done (took 39.58354571 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.516071688 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.526247218 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.507572215 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.523925547 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.50900838 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.507732617 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.507341096 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.515239109 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.509287655 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.509183296 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.507943859 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.522882993 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.508026076 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.50801863 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.5159824 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.509761796 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.510869034 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.515373954 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.517111494 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.51100513 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.508473243 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.51979027 seconds)
  done (took 34.654493806 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.497655646 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.498155186 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.848036125 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.752408631 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.498303523 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.497423928 seconds)
  done (took 14.959690348 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.578206984 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.727869436 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.501344521 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.895767729 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.984020768 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.504170153 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.504464475 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.769003275 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.109126633 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.111615165 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.563042345 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.570369801 seconds)
  done (took 22.189052338 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.512506449 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.500652046 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.506525721 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.513616931 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.563554973 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.503430416 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.509701751 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.497557844 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.565756274 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.568174173 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.50607459 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.566288874 seconds)
  done (took 23.681885082 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.594167367 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.507747534 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.517142339 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.552423852 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50844427 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.349898864 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.564558757 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.244104907 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.508163964 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.779406684 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50782339 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.597136263 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.761971801 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.509318032 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.522710041 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.486056502 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.756597608 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.07092087 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.511205452 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515615085 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.540357893 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.508615577 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.534217295 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.746672115 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.352916739 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.507273682 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.769706435 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.506730273 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.831133509 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.803872823 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.800285308 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.508961838 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.783767498 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.189134945 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.602314875 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.74573173 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.512515333 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.51039531 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.501252334 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.511951896 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.526359309 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.512403815 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.803977822 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.509105019 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.508721153 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.527826977 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254710347 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.511334653 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.508230048 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.509310498 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.805596934 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.603451123 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.515095417 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.509917474 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505471751 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512016047 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.516116957 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.637935906 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072912024 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511922536 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.547163671 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.509730874 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.530038879 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.513119715 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.245367099 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.515201951 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.514358375 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.517013429 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512462523 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.519775837 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.537503226 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512020632 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.525999653 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511359511 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360501941 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.509576019 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.515467022 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.13476018 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.513404074 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.512221472 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.7425809 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.51165652 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.514537058 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.512575905 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.513885375 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.332532584 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.517681998 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.487888264 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.551960866 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.254861492 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.743737022 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.532370652 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.542272823 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.735631145 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.488642921 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.513446447 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.513074823 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515270932 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.530988727 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.258228135 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508278623 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.515101873 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.769868115 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.723691027 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.528716088 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.491960882 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.030178312 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.511030438 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.536439602 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.528520384 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.749594523 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.220702047 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.813444934 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.51285155 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.546025567 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.512395902 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.395931681 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516903791 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.51871977 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.512392739 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.809938931 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.447772227 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.514847601 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.582990222 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.522331696 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.514305059 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.515894084 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.531768735 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.513750564 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.751035836 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.515912655 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.817257029 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.514803025 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516072034 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.51790243 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.520320111 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.518942135 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.739373941 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516310473 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.793726513 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517231961 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.513971869 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.514400196 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.73532072 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.514795803 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.518878031 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.779097285 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.521195867 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.520048628 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.815654653 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.54499868 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.625568637 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.546479205 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.518336552 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.789519056 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.519648332 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.5249891 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.519697192 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.536376975 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.517288634 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.527141075 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.53219135 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.232291109 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493874698 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.517726001 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.516867307 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.532459333 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.585909355 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.524183651 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.756750383 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.533491369 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.511857645 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.543810707 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.525363123 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.741747907 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.816914741 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.525957554 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.594287382 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.031837496 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.226390731 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.532002764 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.51693854 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.515649645 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.518697797 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.520020956 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.517630447 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.521439412 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.755399048 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.821740304 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.525441862 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.229030066 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.518433955 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.517917344 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.546591273 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.820596312 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.524345247 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.520213736 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.520525066 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.537108398 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.528401545 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.822544074 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.656678899 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.534964808 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.519066397 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.082558915 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.525131932 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.521113079 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.52069922 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.550611826 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.53819611 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402179301 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.78061489 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.541282738 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.822949891 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.519695444 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.537184379 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.520015393 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.520584818 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.527482451 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.541922028 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.524244569 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.758300712 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.519209762 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.540571068 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.075913012 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37145326 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.182853578 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.522266162 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.522293208 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.521403767 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.271864341 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515647967 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.523024349 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.781786317 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.270446675 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517836928 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.037684499 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.522249643 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.353382971 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.82677645 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.75137499 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.523557197 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.520848711 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.827088165 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.731472215 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.55409433 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.526633525 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.525645323 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.496461589 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.115699915 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.518295399 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.602634704 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.26968041 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.521486681 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.524051808 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.537166829 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.519199713 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946078654 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.518567448 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52421255 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.527401314 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.528208436 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408540267 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.523164488 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.524868535 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.238821345 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.528468928 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.045913961 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.522462955 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.762971895 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.823293773 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.817041043 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.533707741 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.539060889 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.778170577 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.826270654 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523067938 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.532629623 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.166077814 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.392179192 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.530331956 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.527107453 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.41279757 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.540422242 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.851865368 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.52477279 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.527007941 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.525831254 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.526439607 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.525399349 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.52502932 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.530898867 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501961493 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.090201027 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.523546354 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.535916349 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.529566196 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52975771 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.780344952 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.540124312 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.230640557 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.752789629 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.528477265 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.559780939 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.532552963 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.532799684 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.5087555 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.527575951 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.528136935 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.542273907 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.75093836 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.528232183 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.527486285 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.542083163 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.737055645 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.525750038 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.531069371 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.77880688 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.527257293 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.529399894 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376820391 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.556951313 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.53299421 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.533524269 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.524043298 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.572067085 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.597764642 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.766709349 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.828895112 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.825768222 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954791174 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.527962407 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.532207035 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.544675139 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.624364827 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.53044645 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.532466421 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.304895577 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.236314936 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393126521 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.235249545 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.82788142 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.527505607 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.536654845 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.529252704 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.663986174 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.528797901 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.803993587 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.529357056 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.520205556 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.550760521 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.53863319 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.536030636 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.73955172 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.806791965 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.528793944 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.545290947 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.533081935 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.53140775 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.831531828 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.738872236 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.096847268 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.175008601 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.534247866 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.534880532 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.284763023 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.801749387 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.532408698 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.532809512 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.533629756 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.535790218 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.529880029 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.549583009 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.544275139 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.668435313 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.832411673 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.213043779 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.826983141 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.566191223 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.051333383 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.532209872 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.787274295 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.297896233 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.770003795 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.252942807 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.377739631 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.798140469 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.60203478 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.77052967 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.531906154 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.671156409 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.536594658 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.534528485 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.53297985 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.533331342 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.529895202 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.832811303 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247448695 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.79903072 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.536938893 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.539240442 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.564677619 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.771350951 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.757432922 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.361378233 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.756352844 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.836457289 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.537690766 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.536253347 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.253535933 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.836208991 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.532647172 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.534556244 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.788476593 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.535721043 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.560331594 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.053784158 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.532986711 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.161713928 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.426877334 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.556464306 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.535431749 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.377841898 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.243155537 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.538114547 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.106512319 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.53597884 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.536957765 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.81148576 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.54323499 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.539605793 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.815262093 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.539948349 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.541458046 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.777031844 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.248233391 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.377415374 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.540739393 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.533859812 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.539583791 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.536164581 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.615529048 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.537109551 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.54055582 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.99210742 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.533753281 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.539077455 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.545909682 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.545896029 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.542703885 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.536379906 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.536008203 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.540403375 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.544968851 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.527524043 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.543759735 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.664004389 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.131508957 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.541901323 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.2167638 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.888414521 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.792134326 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.544954293 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.514905714 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.542759574 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.540207914 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.537147987 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.534822553 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.550498471 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.177176608 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.550099548 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.842494056 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.540358887 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.749943401 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.747374624 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.547274168 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.779957366 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.54871836 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.55704969 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.518237736 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.538631899 seconds)
  done (took 1057.361695878 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.537681036 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.560508934 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.569017836 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.545883996 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.552653517 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.573084002 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.568703445 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.651174162 seconds)
  done (took 21.958318664 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.532883526 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.541994509 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.551137792 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.544085453 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.534927301 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.060367309 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.543391502 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.537866665 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.554020095 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.536011267 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.544595683 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.294377863 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.564557239 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.5364083 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.529789495 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.545079982 seconds)
  done (took 35.353747101 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.89910781 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.814681065 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.052108054 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.60654379 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.545186381 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.536178794 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.910452052 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.548377617 seconds)
  done (took 29.311394073 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.549156885 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.548698618 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.548326004 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.549099369 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.550010309 seconds)
  done (took 9.14387712 seconds)
done (took 1347.651667248 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.546979832 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.544045052 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.545987317 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.548014157 seconds)
  done (took 7.581565504 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.520213651 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.516320194 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.517390717 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.526912828 seconds)
  done (took 10.478694869 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.341398491 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.228460238 seconds)
  done (took 5.966965246 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.056023168 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.050886267 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.044586473 seconds)
  done (took 7.551201504 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.821930672 seconds)
  done (took 3.223707046 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.471493168 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.536023413 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.230024794 seconds)
  done (took 8.640772822 seconds)
done (took 44.840687861 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.546088219 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.781804232 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.693687064 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.547936745 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.69340574 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.69023082 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.277884987 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.542476386 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.532324879 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.538284442 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.544855872 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.695857105 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.324158864 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.785450454 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.326775542 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.78723604 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.699855567 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.537171485 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.535441314 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.545714638 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.275887938 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.545166758 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.532902825 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.561202762 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.696787891 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.681651997 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.55194402 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.780749572 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.537822026 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.533292895 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.680788705 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.552067167 seconds)
  done (took 87.955505245 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.54785753 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.535241905 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.535707794 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.550843607 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.534293802 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.534299854 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.553017099 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.535210535 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.54347971 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.534959367 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.536070698 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.533978794 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.537087407 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.543299154 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.539494874 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.547888509 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.536124523 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.536881275 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.556062375 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.551485659 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.536783548 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.551596619 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.53510153 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.535673751 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.547621124 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.536771774 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.553149673 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.534252486 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.53640792 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.544642928 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.5384641 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.551937476 seconds)
  done (took 82.728030507 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.538716685 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.541322519 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.549120729 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.539918875 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.54769418 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.553763912 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.540061727 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.556311414 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.538002891 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.552700996 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.537980082 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.539730165 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.541137583 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.539642169 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.557034666 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.538822442 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.564187266 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.541334323 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.54260976 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.543672485 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.539631852 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.542976363 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.537213444 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.540060641 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.542129197 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.546474091 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.538551779 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.538263468 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.53893825 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.548590677 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.556758908 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.542483914 seconds)
  done (took 82.820211698 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.784445419 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.558423924 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.561110381 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.553246557 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.562110062 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.557820665 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.551991561 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.788318895 seconds)
  done (took 16.324304608 seconds)
done (took 271.226560921 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.554891998 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.102888256 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.575814552 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.554667423 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.567401541 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.576962163 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.790819308 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.573948369 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.794661931 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.577173279 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.5602018 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.567167062 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.437087304 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.706709305 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.481209506 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.554688127 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.538610511 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.55997003 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.173450992 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.85607257 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.573997234 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.544944517 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.469988889 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.553530536 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.531011534 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.642183703 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.652708259 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.781500866 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.719739825 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.63385062 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.109675331 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.570407125 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.568636819 seconds)
  done (took 70.863493671 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.553998793 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.561079483 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.562553636 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.562457171 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.55734813 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.560836826 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.550703521 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.560804914 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.561528392 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.55999951 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.561916323 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.560842822 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.562692471 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.557604629 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.557608708 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.541642263 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.552950559 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.559550021 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.554398187 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.5414086 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.557548862 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.56203897 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.561599005 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.560626033 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.563204475 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.562129854 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.559148091 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.560863443 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.561018794 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.560891723 seconds)
  done (took 48.160833965 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.562351757 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.187944435 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.349248641 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.563297261 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.555119331 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.561030106 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.884568868 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.564372907 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.559000388 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.559685842 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.088003141 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.564100282 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.589661457 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.356781683 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.55898339 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.561968856 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.563761392 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.55411643 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.198922565 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.565366624 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.881998553 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.565383261 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.885850632 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.566253321 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.558739063 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.558675106 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.560407567 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.463703435 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.583190436 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.091060423 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.467992793 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.880503733 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.36921799 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.408177264 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.458135385 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.567937599 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.564821672 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.096675182 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.560490791 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.556052838 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.883173377 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.558162019 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.359400597 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.266204165 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.570773505 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.565375476 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.467821485 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.117014113 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.836345907 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.563592257 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.395585867 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.565448907 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.568141607 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.560795622 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.834664023 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.561716901 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.557903732 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.482410881 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.584680415 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.884560377 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.570535889 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.561821497 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.195838538 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.56156636 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.193059117 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.560839541 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.566134469 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.561709964 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.364053716 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.564773729 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.276909703 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.572502041 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.567746086 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.086203385 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.194569508 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.54600356 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.562844355 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.201740231 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.41906528 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.902775372 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.567523364 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.434905276 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.907138341 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.566755797 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.571120206 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.570677516 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.569880248 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.631704149 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.882695423 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.206392024 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.271954252 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.498183115 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.910781575 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.573068839 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.562247934 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.483481575 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.586511508 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.569955952 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.362865602 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.280532136 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.579479366 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.568540181 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.268316415 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.576360285 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.888599721 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.570793658 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.407010745 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.565751016 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.634142799 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.571323676 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.570671466 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.566344922 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.887085339 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.568184537 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.572002249 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.289436988 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.117840599 seconds)
  done (took 217.430583203 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.56004919 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.553549333 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.558130036 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.553476508 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.55821137 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.566277458 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.557764077 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.557953074 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.563722205 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.558191689 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.559288843 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.565696919 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.565097968 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.560366205 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.560223647 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.556859066 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.560305536 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.576245168 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.556006235 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.558221571 seconds)
  done (took 48.625101457 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.575715451 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.209119466 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.167263892 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.574563139 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.569405519 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.56835024 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.626194808 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.566321333 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.569196841 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.909327228 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.763217911 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.577462752 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.570021268 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.568908935 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.170338096 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.554527306 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.912929022 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.206248197 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.575423664 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.210927064 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.555200524 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.574098635 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.563858955 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.212827431 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.922979016 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.89263427 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.63147466 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.213486442 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.571453306 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.569939379 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.209852137 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.57722503 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.565951632 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.20760541 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.57540863 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.588518369 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.571273367 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.633092985 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.634139933 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.910790783 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.217886368 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.903047798 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.589588442 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.760511447 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.575661449 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.553790769 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.221154825 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.577504342 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.555388459 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.571970608 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.578860103 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.182210434 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.569906863 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.182005571 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.575010133 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.577476021 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.214561492 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.182003361 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.172731832 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.762748557 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.569169589 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.895129431 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.574014276 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.223503603 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.579443563 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.579163711 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.581100796 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.766073219 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.215248666 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.897256233 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.917550489 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.916349308 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.579783191 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.64243586 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.572722037 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.916904566 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.639993512 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.013983122 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.916609477 seconds)
  done (took 142.570814929 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.856252966 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.693835078 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.984858091 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.209832541 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.127306421 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.722225321 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.689598362 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.825622292 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.573612678 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.65836495 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.308914358 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.678911363 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.344288423 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.670864476 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.68563029 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.703996024 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.020111425 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.568820253 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.265232403 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.278536172 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.573216667 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.67822055 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.110801636 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.775128549 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.583733958 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.16901577 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.599164325 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.145546434 seconds)
  done (took 58.927260553 seconds)
done (took 587.98328068 seconds)
SAVING RESULT...
DONE!
